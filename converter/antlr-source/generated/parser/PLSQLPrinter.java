// $ANTLR 3.5.2 PLSQLPrinter.g 2014-09-08 17:38:28

/**
 * Oracle(c) PL/SQL 11g Parser  
 *
 * Copyright (c) 2014 Bars Group
 */
package parser;


import org.antlr.runtime.*;
import org.antlr.runtime.tree.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

import org.antlr.stringtemplate.*;
import org.antlr.stringtemplate.language.*;
import java.util.HashMap;
/**
 * Oracle(c) PL/SQL 11g Parser  
 *
 * Copyright (c) 2014 Bars Group
 */
@SuppressWarnings("all")
public class PLSQLPrinter extends TreeParser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "A", "AMPERSAND", "APPROXIMATE_NUM_LIT", 
		"ASSIGN_OP", "ASTERISK", "AT_SIGN", "B", "BINDVAR", "BIT_STRING_LIT", 
		"C", "CARRET_OPERATOR_PART", "CHAR_STRING", "CHAR_STRING_PERL", "COLON", 
		"COMMA", "COMMENT", "CONCATENATION_OP", "D", "DELIMITED_ID", "DOUBLE_ASTERISK", 
		"DOUBLE_PERIOD", "E", "EQUALS_OP", "EXACT_NUM_LIT", "EXCLAMATION_OPERATOR_PART", 
		"F", "G", "GREATER_THAN_OP", "GREATER_THAN_OR_EQUALS_OP", "H", "HEX_STRING_LIT", 
		"I", "INTRODUCER", "J", "K", "L", "LEFT_BRACKET", "LEFT_PAREN", "LESS_THAN_OP", 
		"LESS_THAN_OR_EQUALS_OP", "M", "MINUS_SIGN", "N", "NATIONAL_CHAR_STRING_LIT", 
		"NEWLINE", "NOT_EQUAL_OP", "O", "P", "PERCENT", "PERIOD", "PLSQL_NON_RESERVED_CONNECT_BY_ROOT", 
		"PLSQL_NON_RESERVED_ELSIF", "PLSQL_NON_RESERVED_MODEL", "PLSQL_NON_RESERVED_PIVOT", 
		"PLSQL_NON_RESERVED_UNPIVOT", "PLSQL_NON_RESERVED_USING", "PLSQL_RESERVED_CLUSTERS", 
		"PLSQL_RESERVED_COLAUTH", "PLSQL_RESERVED_COMPRESS", "PLSQL_RESERVED_CRASH", 
		"PLSQL_RESERVED_EXCLUSIVE", "PLSQL_RESERVED_IDENTIFIED", "PLSQL_RESERVED_IF", 
		"PLSQL_RESERVED_INDEX", "PLSQL_RESERVED_INDEXES", "PLSQL_RESERVED_LOCK", 
		"PLSQL_RESERVED_MINUS", "PLSQL_RESERVED_MODE", "PLSQL_RESERVED_NOCOMPRESS", 
		"PLSQL_RESERVED_NOWAIT", "PLSQL_RESERVED_RESOURCE", "PLSQL_RESERVED_SHARE", 
		"PLSQL_RESERVED_START", "PLSQL_RESERVED_TABAUTH", "PLSQL_RESERVED_VIEWS", 
		"PLUS_SIGN", "PROMPT", "Q", "QS_ANGLE", "QS_BRACE", "QS_BRACK", "QS_OTHER", 
		"QS_OTHER_CH", "QS_PAREN", "QUESTION_MARK", "QUOTE", "R", "REGULAR_ID", 
		"RIGHT_BRACKET", "RIGHT_PAREN", "S", "SEMICOLON", "SEPARATOR", "SIMPLE_LETTER", 
		"SOLIDUS", "SPACE", "SQL92_RESERVED_ALL", "SQL92_RESERVED_ALTER", "SQL92_RESERVED_AND", 
		"SQL92_RESERVED_ANY", "SQL92_RESERVED_AS", "SQL92_RESERVED_ASC", "SQL92_RESERVED_BEGIN", 
		"SQL92_RESERVED_BETWEEN", "SQL92_RESERVED_BY", "SQL92_RESERVED_CASE", 
		"SQL92_RESERVED_CHECK", "SQL92_RESERVED_CONNECT", "SQL92_RESERVED_CREATE", 
		"SQL92_RESERVED_CURRENT", "SQL92_RESERVED_CURSOR", "SQL92_RESERVED_DATE", 
		"SQL92_RESERVED_DECLARE", "SQL92_RESERVED_DEFAULT", "SQL92_RESERVED_DELETE", 
		"SQL92_RESERVED_DESC", "SQL92_RESERVED_DISTINCT", "SQL92_RESERVED_DROP", 
		"SQL92_RESERVED_ELSE", "SQL92_RESERVED_END", "SQL92_RESERVED_EXCEPTION", 
		"SQL92_RESERVED_EXISTS", "SQL92_RESERVED_FALSE", "SQL92_RESERVED_FETCH", 
		"SQL92_RESERVED_FOR", "SQL92_RESERVED_FROM", "SQL92_RESERVED_GOTO", "SQL92_RESERVED_GRANT", 
		"SQL92_RESERVED_GROUP", "SQL92_RESERVED_HAVING", "SQL92_RESERVED_IN", 
		"SQL92_RESERVED_INSERT", "SQL92_RESERVED_INTERSECT", "SQL92_RESERVED_INTO", 
		"SQL92_RESERVED_IS", "SQL92_RESERVED_LIKE", "SQL92_RESERVED_NOT", "SQL92_RESERVED_NULL", 
		"SQL92_RESERVED_OF", "SQL92_RESERVED_ON", "SQL92_RESERVED_OPTION", "SQL92_RESERVED_OR", 
		"SQL92_RESERVED_ORDER", "SQL92_RESERVED_OVERLAPS", "SQL92_RESERVED_PRIOR", 
		"SQL92_RESERVED_PROCEDURE", "SQL92_RESERVED_PUBLIC", "SQL92_RESERVED_REVOKE", 
		"SQL92_RESERVED_SELECT", "SQL92_RESERVED_SIZE", "SQL92_RESERVED_TABLE", 
		"SQL92_RESERVED_THE", "SQL92_RESERVED_THEN", "SQL92_RESERVED_TO", "SQL92_RESERVED_TRUE", 
		"SQL92_RESERVED_UNION", "SQL92_RESERVED_UNIQUE", "SQL92_RESERVED_UPDATE", 
		"SQL92_RESERVED_VALUES", "SQL92_RESERVED_VIEW", "SQL92_RESERVED_WHEN", 
		"SQL92_RESERVED_WHERE", "SQL92_RESERVED_WITH", "T", "TILDE_OPERATOR_PART", 
		"U", "UNDERSCORE", "UNSIGNED_INTEGER", "V", "VERTICAL_BAR", "W", "X", 
		"Y", "Z", "ZV", "ADD_VK", "AFTER_EACH_ROW", "AFTER_STATEMENT", "AFTER_VK", 
		"AGENT_VK", "AGGREGATE_VK", "ALIAS", "ALTER_ATTRIBUTE", "ALTER_COLLECTION", 
		"ALTER_FUNCTION", "ALTER_METHOD", "ALTER_METHOD_ELEMENT", "ALTER_PACKAGE", 
		"ALTER_PROCEDURE", "ALTER_SEQUENCE", "ALTER_TRIGGER", "ALTER_TYPE", "ANALYZE_VK", 
		"ANY_ELEMENT", "ANY_MODE", "ARGUMENT", "ARGUMENTS", "ASSIGN", "ASSOCIATE_VK", 
		"ATTRIBUTE", "ATTRIBUTES", "ATTRIBUTE_NAME", "AT_VK", "AUDIT_VK", "AUTHID_VK", 
		"AUTOMATIC_VK", "AUTONOMOUS_TRANSACTION_VK", "AUTO_VK", "BATCH_VK", "BEFORE_EACH_ROW", 
		"BEFORE_STATEMENT", "BEFORE_VK", "BFILE_VK", "BINARY_DOUBLE_VK", "BINARY_FLOAT_VK", 
		"BINARY_INTEGER_VK", "BIT_VK", "BLOB_VK", "BLOCK", "BLOCK_VK", "BODY", 
		"BODY_MODE", "BODY_VK", "BOOLEAN_VK", "BOTH_VK", "BREADTH_VK", "BULK_VK", 
		"BYTE_VK", "CACHE_VK", "CALL_MODE", "CALL_VK", "CANONICAL_VK", "CASCADE_VK", 
		"CASCATED_ELEMENT", "CAST_VK", "CHARACTER_VK", "CHAR_CS_VK", "CHAR_SET_NAME", 
		"CHAR_VK", "CHR_VK", "CLOB_VK", "CLOSE_VK", "CLUSTER_VK", "COLLECTION_MODE", 
		"COLLECTION_NAME", "COLLECT_VK", "COLUMNS", "COLUMN_NAME", "COMMENT_VK", 
		"COMMITTED_VK", "COMMIT_VK", "COMPATIBILITY_VK", "COMPILATION_UNIT", "COMPILER_PARAMETER", 
		"COMPILE_VK", "COMPOUND_DML", "COMPOUND_VK", "CONDITIONAL_INSERT", "CONSTANT_VK", 
		"CONSTRAINT_NAME", "CONSTRUCTOR_SPEC", "CONSTRUCTOR_VK", "CONTENT_VK", 
		"CONTEXT_VK", "CONTINUE_VK", "CONVERT_VK", "CORRUPT_XID_ALL_VK", "CORRUPT_XID_VK", 
		"COST_CLASS_NAME", "COST_VK", "COUNT_VK", "CREATE_FUNCTION", "CREATE_PACKAGE_BODY", 
		"CREATE_PACKAGE_SPEC", "CREATE_PROCEDURE", "CREATE_SEQUENCE", "CREATE_TRIGGER", 
		"CREATE_TYPE_BODY", "CREATE_TYPE_SPEC", "CROSS_VK", "CUBE_VK", "CURRENT_USER_VK", 
		"CURRENT_VK", "CURSOR_BASED_FOR", "CURSOR_DECLARE", "CURSOR_NAME", "CUSTOMDATUM_VK", 
		"CUSTOM_TYPE", "CYCLE_VK", "C_VK", "DATABASE_VK", "DATETIME_OP", "DAY_VK", 
		"DBTIMEZONE_VK", "DB_ROLE_CHANGE_VK", "DDL_VK", "DEBUG_VK", "DECIMAL_VK", 
		"DECOMPOSE_VK", "DECREMENT_VK", "DEC_VK", "DEFAULTS_VK", "DEFAULT_VALUE", 
		"DEFERRED_VK", "DEFINER_VK", "DENSE_RANK_VK", "DEPENDENT_HANDLING", "DEPTH_VK", 
		"DETERMINISTIC_VK", "DIMENSION_VK", "DIRECT_MODE", "DISABLE_VK", "DISASSOCIATE_VK", 
		"DIV_VK", "DML_EVENT", "DML_EVENT_ELEMENT", "DOCUMENT_VK", "DOT_ASTERISK", 
		"DOUBLE_VK", "DROP_FUNCTION", "DROP_PACKAGE", "DROP_PROCEDURE", "DROP_SEQUENCE", 
		"DROP_TRIGGER", "DROP_TYPE", "DSINTERVAL_UNCONSTRAINED_VK", "DYNAMIC_RETURN", 
		"ELEMENT", "ELEMENTS_MODE", "ELEMENT_SPEC", "ENABLE_VK", "ENCODING_VK", 
		"ENTITYESCAPING_VK", "EVALNAME_VK", "EXCEPTIONS_VK", "EXCEPTION_DECLARE", 
		"EXCEPTION_INIT_VK", "EXCEPTION_NAME", "EXCLUDE_VK", "EXECUTE_VK", "EXIT_VK", 
		"EXPLAIN_STATEMENT", "EXPR", "EXPR_LIST", "EXTERNAL_MODE", "EXTERNAL_VK", 
		"EXTRACT_VK", "FACTORING", "FIELDS", "FIELD_SPEC", "FINAL_VK", "FIRST_VALUE_VK", 
		"FIRST_VK", "FLOAT_VK", "FOLLOWING_VK", "FOLLOWS_VK", "FORALL_VK", "FORCE_VK", 
		"FOR_EACH_ROW", "FOR_LOOP", "FOR_MULTI_COLUMN", "FOR_SINGLE_COLUMN", "FULL_VK", 
		"FUNCTION_ENABLING_OVER", "FUNCTION_ENABLING_USING", "FUNCTION_ENABLING_WITHIN_OR_OVER", 
		"FUNCTION_NAME", "FUNCTION_SPEC", "GROUPING_VK", "GROUPIN_SET", "GROUP_BY_ELEMENT", 
		"HASH_VK", "HIDE_VK", "HIERARCHICAL", "HOSTED_VARIABLE", "HOSTED_VARIABLE_NAME", 
		"HOSTED_VARIABLE_ROUTINE_CALL", "HOUR_VK", "ID", "IGNORE_VK", "IMMEDIATE_VK", 
		"IMPLEMENTATION_TYPE_NAME", "INCLUDE_VK", "INCLUDING_VK", "INCREMENT_VK", 
		"INDENT_VK", "INDEXED_BY", "INDEXED_FOR", "INDEX_NAME", "INDICES_BOUND", 
		"INLINE_VK", "INNER_VK", "INOUT_VK", "INSTANTIABLE_VK", "INSTEAD_VK", 
		"INTEGER_VK", "INTERVAL_DATATYPE", "INT_VK", "INVALIDATE_VK", "ISOLATION_VK", 
		"IS_A_SET", "IS_EMPTY", "IS_INFINITE", "IS_NAN", "IS_NOT_A_SET", "IS_NOT_EMPTY", 
		"IS_NOT_INFINITE", "IS_NOT_NAN", "IS_NOT_NULL", "IS_NOT_OF_TYPE", "IS_NOT_PRESENT", 
		"IS_NULL", "IS_OF_TYPE", "IS_PRESENT", "ITERATE_VK", "JAVA_VK", "JOIN_DEF", 
		"KEEP_VK", "LABEL_DECLARE", "LABEL_NAME", "LANGUAGE_VK", "LAST_VALUE_VK", 
		"LAST_VK", "LEADING_VK", "LEFT_VK", "LIBRARY_VK", "LIKE2_VK", "LIKE4_VK", 
		"LIKEC_VK", "LIMIT_VK", "LINK_NAME", "LOCAL_VK", "LOCK_TABLE_ELEMENT", 
		"LOGIC_EXPR", "LOGOFF_VK", "LOGON_VK", "LOG_VK", "LONG_VK", "LOOP_VK", 
		"MAIN_MODEL", "MAIN_MODEL_NAME", "MAP_VK", "MAXVALUE_VK", "MEASURES_VK", 
		"MEMBER_VK", "MERGE_INSERT", "MERGE_UPDATE", "MERGE_VK", "MINUTE_VK", 
		"MINVALUE_VK", "MLSLABEL_VK", "MODEL_COLUMN", "MODEL_COLUMNS", "MODEL_EXPRESSION", 
		"MODEL_RULE", "MODEL_RULES", "MODIFIER", "MODIFY_VK", "MOD_VK", "MONTH_VK", 
		"MULTI_TABLE_MODE", "NAME_VK", "NATIVE_DATATYPE", "NATURALN_VK", "NATURAL_VK", 
		"NAV_VK", "NCHAR_CS_VK", "NCHAR_VK", "NCLOB_VK", "NESTED_TABLE_TYPE_DEF", 
		"NESTED_VK", "NEW_VK", "NOAUDIT_VK", "NOCACHE_VK", "NOCOPY_VK", "NOCYCLE_VK", 
		"NOENTITYESCAPING_VK", "NOMAXVALUE_VK", "NOMINVALUE_VK", "NON_DML", "NOORDER_VK", 
		"NOSCHEMACHECK_VK", "NOT_BETWEEN", "NOT_IN", "NOT_LIKE", "NO_VK", "NULLS_VK", 
		"NUMBER_VK", "NUMERIC_VK", "NVARCHAR2_VK", "OBJECT_AS", "OBJECT_MEMBERS", 
		"OBJECT_TYPE_DEF", "OBJECT_VK", "OFF_VK", "OLD_VK", "ONLY_VK", "OPEN_VK", 
		"ORADATA_VK", "ORDER_BY_ELEMENT", "ORDER_BY_ELEMENTS", "ORDINALITY_VK", 
		"OUTER_JOIN_SIGN", "OUT_VK", "OVERRIDING_VK", "OVER_VK", "PACKAGE_NAME", 
		"PACKAGE_VK", "PARALLEL_ENABLE_VK", "PARAMETER", "PARAMETERS", "PARAMETERS_VK", 
		"PARAMETER_NAME", "PARENT_VK", "PARTITION_VK", "PASSING_VK", "PERCENT_FOUND_VK", 
		"PERCENT_ISOPEN_VK", "PERCENT_NOTFOUND_VK", "PERCENT_ROWCOUNT_VK", "PERCENT_ROWTYPE_VK", 
		"PERCENT_TYPE_VK", "PIPELINED_VK", "PIPE_ROW", "PIPE_VK", "PIVOT_ALIAS", 
		"PIVOT_ELEMENT", "PIVOT_IN_ELEMENT", "PIVOT_VK", "PLS_INTEGER_VK", "POSITIVEN_VK", 
		"POSITIVE_VK", "PRAGMA_DECLARE", "PRAGMA_VK", "PRECEDING_VK", "PRECISION", 
		"PRECISION_VK", "PREDICTION_FUNCTION", "PROCEDURE_NAME", "PROCEDURE_SPEC", 
		"QUERY_NAME", "RAISE_VK", "RANGE_VK", "RAW_VK", "READ_VK", "REAL_VK", 
		"RECORD_NAME", "RECORD_TYPE_DECLARE", "RECORD_VAR_DECLARE", "REFERENCE_MODEL_NAME", 
		"REFERENCE_VK", "REFERENCING_VK", "REF_VK", "REJECT_VK", "RELIES_ON_VK", 
		"RENAME_VK", "REPLACE_VK", "RESPECT_VK", "RESTRICT_REFERENCES_VK", "RESULT_CACHE_VK", 
		"RETURN_VK", "REUSE_VK", "REVERSE_VK", "RIGHT_VK", "ROLLBACK_SEGMENT_NAME", 
		"ROLLBACK_VK", "ROLLUP_VK", "ROUTINE_CALL", "ROUTINE_NAME", "ROWID_VK", 
		"ROWS_VK", "ROW_VK", "RULES_VK", "SAMPLE_VK", "SAVEPOINT_NAME", "SAVEPOINT_VK", 
		"SCHEMACHECK_VK", "SCHEMA_NAME", "SCHEMA_VK", "SCN_VK", "SEARCHED_CASE", 
		"SEARCH_VK", "SECOND_VK", "SEED_VK", "SELECTED_TABLEVIEW", "SELECT_BASED_FOR", 
		"SELECT_ITEM", "SELECT_LIST", "SELECT_MODE", "SELECT_STATEMENT", "SELF_VK", 
		"SEQUENCE_NAME", "SEQUENCE_VK", "SEQUENTIAL_VK", "SERIALIZABLE_VK", "SERIALLY_REUSABLE_VK", 
		"SERVERERROR_VK", "SESSIONTIMEZONE_VK", "SET_CONSTRAINT", "SET_SERVEROUTPUT", 
		"SET_TRANSACTION", "SET_VK", "SHOW_VK", "SHUTDOWN_VK", "SIBLINGS_VK", 
		"SIGNTYPE_VK", "SIMPLE_BOUND", "SIMPLE_CASE", "SIMPLE_DML", "SIMPLE_INTEGER_VK", 
		"SINGLE_TABLE_MODE", "SINGLE_VK", "SKIP_VK", "SMALLINT_VK", "SOME_VK", 
		"SPECIFICATION_VK", "SQLDATA_VK", "SQL_SCRIPT", "STANDALONE_VK", "STANDARD_FUNCTION", 
		"STARTUP_VK", "STATEMENTS", "STATIC_RETURNING", "STATIC_VK", "STATISTICS_VK", 
		"STREAMING_CLAUSE", "STRING_VK", "SUBMULTISET_VK", "SUBPARTITION_VK", 
		"SUBQUERY", "SUBTYPE_DECLARE", "SUSPEND_VK", "TABLEVIEW_NAME", "TABLE_ELEMENT", 
		"TABLE_EXPRESSION", "TABLE_REF", "TABLE_REF_ELEMENT", "TABLE_TYPE_DECLARE", 
		"TABLE_VAR_DECLARE", "TABLE_VAR_NAME", "THREE_DOTS", "TIMESTAMP_LTZ_UNCONSTRAINED_VK", 
		"TIMESTAMP_TZ_UNCONSTRAINED_VK", "TIMESTAMP_UNCONSTRAINED_VK", "TIMESTAMP_VK", 
		"TIMEZONE_ABBR_VK", "TIMEZONE_HOUR_VK", "TIMEZONE_MINUTE_VK", "TIMEZONE_REGION_VK", 
		"TIME_VK", "TRAILING_VK", "TRANSLATE_VK", "TREAT_VK", "TRIGGER_NAME", 
		"TRIM_VK", "TRUNCATE_VK", "TYPE_BODY_ELEMENTS", "TYPE_NAME", "TYPE_VK", 
		"UNARY_OPERATOR", "UNBOUNDED_VK", "UNDER_VK", "UNLIMITED_VK", "UNPIVOT_IN_ELEMENT", 
		"UNPIVOT_VK", "UNTIL_VK", "UPDATED_VK", "UPSERT_VK", "UROWID_VK", "USING_MODE", 
		"VALIDATE_VK", "VALUES_BOUND", "VALUE_VK", "VARCHAR2_VK", "VARCHAR_VK", 
		"VARIABLE_DECLARE", "VARIABLE_NAME", "VARR_ARRAY_DEF", "VECTOR_EXPR", 
		"VERSIONS_VK", "VERSION_VK", "WAIT_VK", "WELLFORMED_VK", "WHILE_LOOP", 
		"WITHIN_VK", "WORK_VK", "WRITE_VK", "XMLAGG_VK", "XMLATTRIBUTES_VK", "XMLCAST_VK", 
		"XMLCOLATTVAL_VK", "XMLELEMENT_VK", "XMLEXISTS_VK", "XMLFOREST_VK", "XMLNAMESPACES_VK", 
		"XMLPARSE_VK", "XMLPI_VK", "XMLQUERY_VK", "XMLROOT_VK", "XMLSERIALIZE_VK", 
		"XMLTABLE_VK", "XML_ALIAS", "XML_COLUMN", "XML_COLUMN_NAME", "XML_ELEMENT", 
		"XML_VK", "YEAR_VK", "YES_VK", "YMINTERVAL_UNCONSTRAINED_VK", "DATE_VK", 
		"ORDER_VK", "START_VK"
	};
	public static final int EOF=-1;
	public static final int A=4;
	public static final int AMPERSAND=5;
	public static final int APPROXIMATE_NUM_LIT=6;
	public static final int ASSIGN_OP=7;
	public static final int ASTERISK=8;
	public static final int AT_SIGN=9;
	public static final int B=10;
	public static final int BINDVAR=11;
	public static final int BIT_STRING_LIT=12;
	public static final int C=13;
	public static final int CARRET_OPERATOR_PART=14;
	public static final int CHAR_STRING=15;
	public static final int CHAR_STRING_PERL=16;
	public static final int COLON=17;
	public static final int COMMA=18;
	public static final int COMMENT=19;
	public static final int CONCATENATION_OP=20;
	public static final int D=21;
	public static final int DELIMITED_ID=22;
	public static final int DOUBLE_ASTERISK=23;
	public static final int DOUBLE_PERIOD=24;
	public static final int E=25;
	public static final int EQUALS_OP=26;
	public static final int EXACT_NUM_LIT=27;
	public static final int EXCLAMATION_OPERATOR_PART=28;
	public static final int F=29;
	public static final int G=30;
	public static final int GREATER_THAN_OP=31;
	public static final int GREATER_THAN_OR_EQUALS_OP=32;
	public static final int H=33;
	public static final int HEX_STRING_LIT=34;
	public static final int I=35;
	public static final int INTRODUCER=36;
	public static final int J=37;
	public static final int K=38;
	public static final int L=39;
	public static final int LEFT_BRACKET=40;
	public static final int LEFT_PAREN=41;
	public static final int LESS_THAN_OP=42;
	public static final int LESS_THAN_OR_EQUALS_OP=43;
	public static final int M=44;
	public static final int MINUS_SIGN=45;
	public static final int N=46;
	public static final int NATIONAL_CHAR_STRING_LIT=47;
	public static final int NEWLINE=48;
	public static final int NOT_EQUAL_OP=49;
	public static final int O=50;
	public static final int P=51;
	public static final int PERCENT=52;
	public static final int PERIOD=53;
	public static final int PLSQL_NON_RESERVED_CONNECT_BY_ROOT=54;
	public static final int PLSQL_NON_RESERVED_ELSIF=55;
	public static final int PLSQL_NON_RESERVED_MODEL=56;
	public static final int PLSQL_NON_RESERVED_PIVOT=57;
	public static final int PLSQL_NON_RESERVED_UNPIVOT=58;
	public static final int PLSQL_NON_RESERVED_USING=59;
	public static final int PLSQL_RESERVED_CLUSTERS=60;
	public static final int PLSQL_RESERVED_COLAUTH=61;
	public static final int PLSQL_RESERVED_COMPRESS=62;
	public static final int PLSQL_RESERVED_CRASH=63;
	public static final int PLSQL_RESERVED_EXCLUSIVE=64;
	public static final int PLSQL_RESERVED_IDENTIFIED=65;
	public static final int PLSQL_RESERVED_IF=66;
	public static final int PLSQL_RESERVED_INDEX=67;
	public static final int PLSQL_RESERVED_INDEXES=68;
	public static final int PLSQL_RESERVED_LOCK=69;
	public static final int PLSQL_RESERVED_MINUS=70;
	public static final int PLSQL_RESERVED_MODE=71;
	public static final int PLSQL_RESERVED_NOCOMPRESS=72;
	public static final int PLSQL_RESERVED_NOWAIT=73;
	public static final int PLSQL_RESERVED_RESOURCE=74;
	public static final int PLSQL_RESERVED_SHARE=75;
	public static final int PLSQL_RESERVED_START=76;
	public static final int PLSQL_RESERVED_TABAUTH=77;
	public static final int PLSQL_RESERVED_VIEWS=78;
	public static final int PLUS_SIGN=79;
	public static final int PROMPT=80;
	public static final int Q=81;
	public static final int QS_ANGLE=82;
	public static final int QS_BRACE=83;
	public static final int QS_BRACK=84;
	public static final int QS_OTHER=85;
	public static final int QS_OTHER_CH=86;
	public static final int QS_PAREN=87;
	public static final int QUESTION_MARK=88;
	public static final int QUOTE=89;
	public static final int R=90;
	public static final int REGULAR_ID=91;
	public static final int RIGHT_BRACKET=92;
	public static final int RIGHT_PAREN=93;
	public static final int S=94;
	public static final int SEMICOLON=95;
	public static final int SEPARATOR=96;
	public static final int SIMPLE_LETTER=97;
	public static final int SOLIDUS=98;
	public static final int SPACE=99;
	public static final int SQL92_RESERVED_ALL=100;
	public static final int SQL92_RESERVED_ALTER=101;
	public static final int SQL92_RESERVED_AND=102;
	public static final int SQL92_RESERVED_ANY=103;
	public static final int SQL92_RESERVED_AS=104;
	public static final int SQL92_RESERVED_ASC=105;
	public static final int SQL92_RESERVED_BEGIN=106;
	public static final int SQL92_RESERVED_BETWEEN=107;
	public static final int SQL92_RESERVED_BY=108;
	public static final int SQL92_RESERVED_CASE=109;
	public static final int SQL92_RESERVED_CHECK=110;
	public static final int SQL92_RESERVED_CONNECT=111;
	public static final int SQL92_RESERVED_CREATE=112;
	public static final int SQL92_RESERVED_CURRENT=113;
	public static final int SQL92_RESERVED_CURSOR=114;
	public static final int SQL92_RESERVED_DATE=115;
	public static final int SQL92_RESERVED_DECLARE=116;
	public static final int SQL92_RESERVED_DEFAULT=117;
	public static final int SQL92_RESERVED_DELETE=118;
	public static final int SQL92_RESERVED_DESC=119;
	public static final int SQL92_RESERVED_DISTINCT=120;
	public static final int SQL92_RESERVED_DROP=121;
	public static final int SQL92_RESERVED_ELSE=122;
	public static final int SQL92_RESERVED_END=123;
	public static final int SQL92_RESERVED_EXCEPTION=124;
	public static final int SQL92_RESERVED_EXISTS=125;
	public static final int SQL92_RESERVED_FALSE=126;
	public static final int SQL92_RESERVED_FETCH=127;
	public static final int SQL92_RESERVED_FOR=128;
	public static final int SQL92_RESERVED_FROM=129;
	public static final int SQL92_RESERVED_GOTO=130;
	public static final int SQL92_RESERVED_GRANT=131;
	public static final int SQL92_RESERVED_GROUP=132;
	public static final int SQL92_RESERVED_HAVING=133;
	public static final int SQL92_RESERVED_IN=134;
	public static final int SQL92_RESERVED_INSERT=135;
	public static final int SQL92_RESERVED_INTERSECT=136;
	public static final int SQL92_RESERVED_INTO=137;
	public static final int SQL92_RESERVED_IS=138;
	public static final int SQL92_RESERVED_LIKE=139;
	public static final int SQL92_RESERVED_NOT=140;
	public static final int SQL92_RESERVED_NULL=141;
	public static final int SQL92_RESERVED_OF=142;
	public static final int SQL92_RESERVED_ON=143;
	public static final int SQL92_RESERVED_OPTION=144;
	public static final int SQL92_RESERVED_OR=145;
	public static final int SQL92_RESERVED_ORDER=146;
	public static final int SQL92_RESERVED_OVERLAPS=147;
	public static final int SQL92_RESERVED_PRIOR=148;
	public static final int SQL92_RESERVED_PROCEDURE=149;
	public static final int SQL92_RESERVED_PUBLIC=150;
	public static final int SQL92_RESERVED_REVOKE=151;
	public static final int SQL92_RESERVED_SELECT=152;
	public static final int SQL92_RESERVED_SIZE=153;
	public static final int SQL92_RESERVED_TABLE=154;
	public static final int SQL92_RESERVED_THE=155;
	public static final int SQL92_RESERVED_THEN=156;
	public static final int SQL92_RESERVED_TO=157;
	public static final int SQL92_RESERVED_TRUE=158;
	public static final int SQL92_RESERVED_UNION=159;
	public static final int SQL92_RESERVED_UNIQUE=160;
	public static final int SQL92_RESERVED_UPDATE=161;
	public static final int SQL92_RESERVED_VALUES=162;
	public static final int SQL92_RESERVED_VIEW=163;
	public static final int SQL92_RESERVED_WHEN=164;
	public static final int SQL92_RESERVED_WHERE=165;
	public static final int SQL92_RESERVED_WITH=166;
	public static final int T=167;
	public static final int TILDE_OPERATOR_PART=168;
	public static final int U=169;
	public static final int UNDERSCORE=170;
	public static final int UNSIGNED_INTEGER=171;
	public static final int V=172;
	public static final int VERTICAL_BAR=173;
	public static final int W=174;
	public static final int X=175;
	public static final int Y=176;
	public static final int Z=177;
	public static final int ZV=178;
	public static final int ADD_VK=179;
	public static final int AFTER_EACH_ROW=180;
	public static final int AFTER_STATEMENT=181;
	public static final int AFTER_VK=182;
	public static final int AGENT_VK=183;
	public static final int AGGREGATE_VK=184;
	public static final int ALIAS=185;
	public static final int ALTER_ATTRIBUTE=186;
	public static final int ALTER_COLLECTION=187;
	public static final int ALTER_FUNCTION=188;
	public static final int ALTER_METHOD=189;
	public static final int ALTER_METHOD_ELEMENT=190;
	public static final int ALTER_PACKAGE=191;
	public static final int ALTER_PROCEDURE=192;
	public static final int ALTER_SEQUENCE=193;
	public static final int ALTER_TRIGGER=194;
	public static final int ALTER_TYPE=195;
	public static final int ANALYZE_VK=196;
	public static final int ANY_ELEMENT=197;
	public static final int ANY_MODE=198;
	public static final int ARGUMENT=200;
	public static final int ARGUMENTS=201;
	public static final int ASSIGN=202;
	public static final int ASSOCIATE_VK=203;
	public static final int ATTRIBUTE=205;
	public static final int ATTRIBUTES=206;
	public static final int ATTRIBUTE_NAME=207;
	public static final int AT_VK=209;
	public static final int AUDIT_VK=210;
	public static final int AUTHID_VK=211;
	public static final int AUTOMATIC_VK=212;
	public static final int AUTONOMOUS_TRANSACTION_VK=213;
	public static final int AUTO_VK=214;
	public static final int BATCH_VK=215;
	public static final int BEFORE_EACH_ROW=216;
	public static final int BEFORE_STATEMENT=217;
	public static final int BEFORE_VK=218;
	public static final int BFILE_VK=219;
	public static final int BINARY_DOUBLE_VK=220;
	public static final int BINARY_FLOAT_VK=221;
	public static final int BINARY_INTEGER_VK=222;
	public static final int BIT_VK=224;
	public static final int BLOB_VK=225;
	public static final int BLOCK=226;
	public static final int BLOCK_VK=227;
	public static final int BODY=228;
	public static final int BODY_MODE=229;
	public static final int BODY_VK=230;
	public static final int BOOLEAN_VK=231;
	public static final int BOTH_VK=232;
	public static final int BREADTH_VK=233;
	public static final int BULK_VK=234;
	public static final int BYTE_VK=235;
	public static final int CACHE_VK=236;
	public static final int CALL_MODE=237;
	public static final int CALL_VK=238;
	public static final int CANONICAL_VK=239;
	public static final int CASCADE_VK=241;
	public static final int CASCATED_ELEMENT=242;
	public static final int CAST_VK=243;
	public static final int CHARACTER_VK=244;
	public static final int CHAR_CS_VK=245;
	public static final int CHAR_SET_NAME=246;
	public static final int CHAR_VK=249;
	public static final int CHR_VK=250;
	public static final int CLOB_VK=251;
	public static final int CLOSE_VK=252;
	public static final int CLUSTER_VK=253;
	public static final int COLLECTION_MODE=254;
	public static final int COLLECTION_NAME=255;
	public static final int COLLECT_VK=256;
	public static final int COLUMNS=258;
	public static final int COLUMN_NAME=259;
	public static final int COMMENT_VK=261;
	public static final int COMMITTED_VK=262;
	public static final int COMMIT_VK=263;
	public static final int COMPATIBILITY_VK=264;
	public static final int COMPILATION_UNIT=265;
	public static final int COMPILER_PARAMETER=266;
	public static final int COMPILE_VK=267;
	public static final int COMPOUND_DML=268;
	public static final int COMPOUND_VK=269;
	public static final int CONDITIONAL_INSERT=271;
	public static final int CONSTANT_VK=272;
	public static final int CONSTRAINT_NAME=273;
	public static final int CONSTRUCTOR_SPEC=274;
	public static final int CONSTRUCTOR_VK=275;
	public static final int CONTENT_VK=276;
	public static final int CONTEXT_VK=277;
	public static final int CONTINUE_VK=278;
	public static final int CONVERT_VK=279;
	public static final int CORRUPT_XID_ALL_VK=280;
	public static final int CORRUPT_XID_VK=281;
	public static final int COST_CLASS_NAME=282;
	public static final int COST_VK=283;
	public static final int COUNT_VK=284;
	public static final int CREATE_FUNCTION=285;
	public static final int CREATE_PACKAGE_BODY=286;
	public static final int CREATE_PACKAGE_SPEC=287;
	public static final int CREATE_PROCEDURE=288;
	public static final int CREATE_SEQUENCE=289;
	public static final int CREATE_TRIGGER=290;
	public static final int CREATE_TYPE_BODY=291;
	public static final int CREATE_TYPE_SPEC=292;
	public static final int CROSS_VK=293;
	public static final int CUBE_VK=294;
	public static final int CURRENT_USER_VK=295;
	public static final int CURRENT_VK=296;
	public static final int CURSOR_BASED_FOR=297;
	public static final int CURSOR_DECLARE=298;
	public static final int CURSOR_NAME=299;
	public static final int CUSTOMDATUM_VK=300;
	public static final int CUSTOM_TYPE=301;
	public static final int CYCLE_VK=302;
	public static final int C_VK=303;
	public static final int DATABASE_VK=304;
	public static final int DATETIME_OP=305;
	public static final int DAY_VK=306;
	public static final int DBTIMEZONE_VK=307;
	public static final int DB_ROLE_CHANGE_VK=308;
	public static final int DDL_VK=309;
	public static final int DEBUG_VK=310;
	public static final int DECIMAL_VK=311;
	public static final int DECOMPOSE_VK=312;
	public static final int DECREMENT_VK=313;
	public static final int DEC_VK=314;
	public static final int DEFAULTS_VK=315;
	public static final int DEFAULT_VALUE=316;
	public static final int DEFERRED_VK=317;
	public static final int DEFINER_VK=318;
	public static final int DENSE_RANK_VK=320;
	public static final int DEPENDENT_HANDLING=321;
	public static final int DEPTH_VK=322;
	public static final int DETERMINISTIC_VK=323;
	public static final int DIMENSION_VK=324;
	public static final int DIRECT_MODE=325;
	public static final int DISABLE_VK=326;
	public static final int DISASSOCIATE_VK=327;
	public static final int DIV_VK=328;
	public static final int DML_EVENT=329;
	public static final int DML_EVENT_ELEMENT=330;
	public static final int DOCUMENT_VK=331;
	public static final int DOT_ASTERISK=332;
	public static final int DOUBLE_VK=333;
	public static final int DROP_FUNCTION=334;
	public static final int DROP_PACKAGE=335;
	public static final int DROP_PROCEDURE=336;
	public static final int DROP_SEQUENCE=337;
	public static final int DROP_TRIGGER=338;
	public static final int DROP_TYPE=339;
	public static final int DSINTERVAL_UNCONSTRAINED_VK=340;
	public static final int DYNAMIC_RETURN=341;
	public static final int ELEMENT=342;
	public static final int ELEMENTS_MODE=343;
	public static final int ELEMENT_SPEC=344;
	public static final int ENABLE_VK=345;
	public static final int ENCODING_VK=346;
	public static final int ENTITYESCAPING_VK=347;
	public static final int EVALNAME_VK=349;
	public static final int EXCEPTIONS_VK=351;
	public static final int EXCEPTION_DECLARE=352;
	public static final int EXCEPTION_INIT_VK=353;
	public static final int EXCEPTION_NAME=354;
	public static final int EXCLUDE_VK=356;
	public static final int EXECUTE_VK=357;
	public static final int EXIT_VK=358;
	public static final int EXPLAIN_STATEMENT=359;
	public static final int EXPR=360;
	public static final int EXPR_LIST=361;
	public static final int EXTERNAL_MODE=362;
	public static final int EXTERNAL_VK=363;
	public static final int EXTRACT_VK=364;
	public static final int FACTORING=365;
	public static final int FIELDS=366;
	public static final int FIELD_SPEC=367;
	public static final int FINAL_VK=368;
	public static final int FIRST_VALUE_VK=369;
	public static final int FIRST_VK=370;
	public static final int FLOAT_VK=371;
	public static final int FOLLOWING_VK=372;
	public static final int FOLLOWS_VK=373;
	public static final int FORALL_VK=374;
	public static final int FORCE_VK=375;
	public static final int FOR_EACH_ROW=376;
	public static final int FOR_LOOP=377;
	public static final int FOR_MULTI_COLUMN=378;
	public static final int FOR_SINGLE_COLUMN=379;
	public static final int FULL_VK=380;
	public static final int FUNCTION_ENABLING_OVER=381;
	public static final int FUNCTION_ENABLING_USING=382;
	public static final int FUNCTION_ENABLING_WITHIN_OR_OVER=383;
	public static final int FUNCTION_NAME=384;
	public static final int FUNCTION_SPEC=385;
	public static final int GROUPING_VK=388;
	public static final int GROUPIN_SET=389;
	public static final int GROUP_BY_ELEMENT=390;
	public static final int HASH_VK=391;
	public static final int HIDE_VK=392;
	public static final int HIERARCHICAL=393;
	public static final int HOSTED_VARIABLE=394;
	public static final int HOSTED_VARIABLE_NAME=395;
	public static final int HOSTED_VARIABLE_ROUTINE_CALL=396;
	public static final int HOUR_VK=397;
	public static final int ID=398;
	public static final int IGNORE_VK=399;
	public static final int IMMEDIATE_VK=400;
	public static final int IMPLEMENTATION_TYPE_NAME=401;
	public static final int INCLUDE_VK=402;
	public static final int INCLUDING_VK=403;
	public static final int INCREMENT_VK=404;
	public static final int INDENT_VK=405;
	public static final int INDEXED_BY=406;
	public static final int INDEXED_FOR=407;
	public static final int INDEX_NAME=408;
	public static final int INDICES_BOUND=409;
	public static final int INLINE_VK=410;
	public static final int INNER_VK=411;
	public static final int INOUT_VK=412;
	public static final int INSTANTIABLE_VK=413;
	public static final int INSTEAD_VK=414;
	public static final int INTEGER_VK=415;
	public static final int INTERVAL_DATATYPE=416;
	public static final int INT_VK=418;
	public static final int INVALIDATE_VK=419;
	public static final int ISOLATION_VK=420;
	public static final int IS_A_SET=421;
	public static final int IS_EMPTY=422;
	public static final int IS_INFINITE=423;
	public static final int IS_NAN=424;
	public static final int IS_NOT_A_SET=425;
	public static final int IS_NOT_EMPTY=426;
	public static final int IS_NOT_INFINITE=427;
	public static final int IS_NOT_NAN=428;
	public static final int IS_NOT_NULL=429;
	public static final int IS_NOT_OF_TYPE=430;
	public static final int IS_NOT_PRESENT=431;
	public static final int IS_NULL=432;
	public static final int IS_OF_TYPE=433;
	public static final int IS_PRESENT=434;
	public static final int ITERATE_VK=435;
	public static final int JAVA_VK=436;
	public static final int JOIN_DEF=437;
	public static final int KEEP_VK=438;
	public static final int LABEL_DECLARE=439;
	public static final int LABEL_NAME=440;
	public static final int LANGUAGE_VK=441;
	public static final int LAST_VALUE_VK=442;
	public static final int LAST_VK=443;
	public static final int LEADING_VK=444;
	public static final int LEFT_VK=447;
	public static final int LIBRARY_VK=450;
	public static final int LIKE2_VK=451;
	public static final int LIKE4_VK=452;
	public static final int LIKEC_VK=453;
	public static final int LIMIT_VK=454;
	public static final int LINK_NAME=455;
	public static final int LOCAL_VK=456;
	public static final int LOCK_TABLE_ELEMENT=457;
	public static final int LOGIC_EXPR=458;
	public static final int LOGOFF_VK=459;
	public static final int LOGON_VK=460;
	public static final int LOG_VK=461;
	public static final int LONG_VK=462;
	public static final int LOOP_VK=463;
	public static final int MAIN_MODEL=464;
	public static final int MAIN_MODEL_NAME=465;
	public static final int MAP_VK=466;
	public static final int MAXVALUE_VK=467;
	public static final int MEASURES_VK=468;
	public static final int MEMBER_VK=469;
	public static final int MERGE_INSERT=470;
	public static final int MERGE_UPDATE=471;
	public static final int MERGE_VK=472;
	public static final int MINUTE_VK=474;
	public static final int MINVALUE_VK=475;
	public static final int MLSLABEL_VK=476;
	public static final int MODEL_COLUMN=477;
	public static final int MODEL_COLUMNS=478;
	public static final int MODEL_EXPRESSION=479;
	public static final int MODEL_RULE=480;
	public static final int MODEL_RULES=481;
	public static final int MODIFIER=482;
	public static final int MODIFY_VK=483;
	public static final int MOD_VK=484;
	public static final int MONTH_VK=485;
	public static final int MULTI_TABLE_MODE=486;
	public static final int NAME_VK=487;
	public static final int NATIVE_DATATYPE=489;
	public static final int NATURALN_VK=490;
	public static final int NATURAL_VK=491;
	public static final int NAV_VK=492;
	public static final int NCHAR_CS_VK=493;
	public static final int NCHAR_VK=494;
	public static final int NCLOB_VK=495;
	public static final int NESTED_TABLE_TYPE_DEF=496;
	public static final int NESTED_VK=497;
	public static final int NEW_VK=498;
	public static final int NOAUDIT_VK=499;
	public static final int NOCACHE_VK=500;
	public static final int NOCOPY_VK=501;
	public static final int NOCYCLE_VK=502;
	public static final int NOENTITYESCAPING_VK=503;
	public static final int NOMAXVALUE_VK=504;
	public static final int NOMINVALUE_VK=505;
	public static final int NON_DML=506;
	public static final int NOORDER_VK=507;
	public static final int NOSCHEMACHECK_VK=508;
	public static final int NOT_BETWEEN=509;
	public static final int NOT_IN=511;
	public static final int NOT_LIKE=512;
	public static final int NO_VK=513;
	public static final int NULLS_VK=514;
	public static final int NUMBER_VK=515;
	public static final int NUMERIC_VK=516;
	public static final int NVARCHAR2_VK=517;
	public static final int OBJECT_AS=518;
	public static final int OBJECT_MEMBERS=519;
	public static final int OBJECT_TYPE_DEF=520;
	public static final int OBJECT_VK=521;
	public static final int OFF_VK=522;
	public static final int OLD_VK=523;
	public static final int ONLY_VK=524;
	public static final int OPEN_VK=525;
	public static final int ORADATA_VK=526;
	public static final int ORDER_BY_ELEMENT=527;
	public static final int ORDER_BY_ELEMENTS=528;
	public static final int ORDINALITY_VK=529;
	public static final int OUTER_JOIN_SIGN=530;
	public static final int OUT_VK=531;
	public static final int OVERRIDING_VK=532;
	public static final int OVER_VK=533;
	public static final int PACKAGE_NAME=534;
	public static final int PACKAGE_VK=535;
	public static final int PARALLEL_ENABLE_VK=536;
	public static final int PARAMETER=537;
	public static final int PARAMETERS=538;
	public static final int PARAMETERS_VK=539;
	public static final int PARAMETER_NAME=540;
	public static final int PARENT_VK=541;
	public static final int PARTITION_VK=542;
	public static final int PASSING_VK=543;
	public static final int PERCENT_FOUND_VK=545;
	public static final int PERCENT_ISOPEN_VK=546;
	public static final int PERCENT_NOTFOUND_VK=547;
	public static final int PERCENT_ROWCOUNT_VK=548;
	public static final int PERCENT_ROWTYPE_VK=549;
	public static final int PERCENT_TYPE_VK=550;
	public static final int PIPELINED_VK=552;
	public static final int PIPE_ROW=553;
	public static final int PIPE_VK=554;
	public static final int PIVOT_ALIAS=555;
	public static final int PIVOT_ELEMENT=556;
	public static final int PIVOT_IN_ELEMENT=557;
	public static final int PIVOT_VK=558;
	public static final int PLS_INTEGER_VK=573;
	public static final int POSITIVEN_VK=575;
	public static final int POSITIVE_VK=576;
	public static final int PRAGMA_DECLARE=577;
	public static final int PRAGMA_VK=578;
	public static final int PRECEDING_VK=579;
	public static final int PRECISION=580;
	public static final int PRECISION_VK=581;
	public static final int PREDICTION_FUNCTION=582;
	public static final int PROCEDURE_NAME=583;
	public static final int PROCEDURE_SPEC=584;
	public static final int QUERY_NAME=586;
	public static final int RAISE_VK=587;
	public static final int RANGE_VK=588;
	public static final int RAW_VK=589;
	public static final int READ_VK=590;
	public static final int REAL_VK=591;
	public static final int RECORD_NAME=592;
	public static final int RECORD_TYPE_DECLARE=593;
	public static final int RECORD_VAR_DECLARE=594;
	public static final int REFERENCE_MODEL_NAME=595;
	public static final int REFERENCE_VK=596;
	public static final int REFERENCING_VK=597;
	public static final int REF_VK=598;
	public static final int REJECT_VK=600;
	public static final int RELIES_ON_VK=601;
	public static final int RENAME_VK=602;
	public static final int REPLACE_VK=603;
	public static final int RESPECT_VK=604;
	public static final int RESTRICT_REFERENCES_VK=605;
	public static final int RESULT_CACHE_VK=606;
	public static final int RETURN_VK=607;
	public static final int REUSE_VK=608;
	public static final int REVERSE_VK=609;
	public static final int RIGHT_VK=612;
	public static final int ROLLBACK_SEGMENT_NAME=613;
	public static final int ROLLBACK_VK=614;
	public static final int ROLLUP_VK=615;
	public static final int ROUTINE_CALL=616;
	public static final int ROUTINE_NAME=617;
	public static final int ROWID_VK=618;
	public static final int ROWS_VK=619;
	public static final int ROW_VK=620;
	public static final int RULES_VK=621;
	public static final int SAMPLE_VK=622;
	public static final int SAVEPOINT_NAME=623;
	public static final int SAVEPOINT_VK=624;
	public static final int SCHEMACHECK_VK=625;
	public static final int SCHEMA_NAME=626;
	public static final int SCHEMA_VK=627;
	public static final int SCN_VK=628;
	public static final int SEARCHED_CASE=629;
	public static final int SEARCH_VK=630;
	public static final int SECOND_VK=631;
	public static final int SEED_VK=632;
	public static final int SELECTED_TABLEVIEW=633;
	public static final int SELECT_BASED_FOR=634;
	public static final int SELECT_ITEM=635;
	public static final int SELECT_LIST=636;
	public static final int SELECT_MODE=637;
	public static final int SELECT_STATEMENT=638;
	public static final int SELF_VK=639;
	public static final int SEQUENCE_NAME=641;
	public static final int SEQUENCE_VK=642;
	public static final int SEQUENTIAL_VK=643;
	public static final int SERIALIZABLE_VK=644;
	public static final int SERIALLY_REUSABLE_VK=645;
	public static final int SERVERERROR_VK=646;
	public static final int SESSIONTIMEZONE_VK=647;
	public static final int SET_CONSTRAINT=648;
	public static final int SET_SERVEROUTPUT=649;
	public static final int SET_TRANSACTION=650;
	public static final int SET_VK=651;
	public static final int SHOW_VK=652;
	public static final int SHUTDOWN_VK=653;
	public static final int SIBLINGS_VK=654;
	public static final int SIGNTYPE_VK=655;
	public static final int SIMPLE_BOUND=656;
	public static final int SIMPLE_CASE=657;
	public static final int SIMPLE_DML=658;
	public static final int SIMPLE_INTEGER_VK=659;
	public static final int SINGLE_TABLE_MODE=660;
	public static final int SINGLE_VK=661;
	public static final int SKIP_VK=662;
	public static final int SMALLINT_VK=663;
	public static final int SOME_VK=665;
	public static final int SPECIFICATION_VK=666;
	public static final int SQLDATA_VK=731;
	public static final int SQL_SCRIPT=732;
	public static final int STANDALONE_VK=733;
	public static final int STANDARD_FUNCTION=734;
	public static final int STARTUP_VK=735;
	public static final int STATEMENTS=736;
	public static final int STATIC_RETURNING=737;
	public static final int STATIC_VK=738;
	public static final int STATISTICS_VK=739;
	public static final int STREAMING_CLAUSE=740;
	public static final int STRING_VK=741;
	public static final int SUBMULTISET_VK=742;
	public static final int SUBPARTITION_VK=743;
	public static final int SUBQUERY=744;
	public static final int SUBTYPE_DECLARE=745;
	public static final int SUSPEND_VK=746;
	public static final int TABLEVIEW_NAME=747;
	public static final int TABLE_ELEMENT=748;
	public static final int TABLE_EXPRESSION=749;
	public static final int TABLE_REF=750;
	public static final int TABLE_REF_ELEMENT=751;
	public static final int TABLE_TYPE_DECLARE=752;
	public static final int TABLE_VAR_DECLARE=753;
	public static final int TABLE_VAR_NAME=754;
	public static final int THREE_DOTS=755;
	public static final int TIMESTAMP_LTZ_UNCONSTRAINED_VK=756;
	public static final int TIMESTAMP_TZ_UNCONSTRAINED_VK=757;
	public static final int TIMESTAMP_UNCONSTRAINED_VK=758;
	public static final int TIMESTAMP_VK=759;
	public static final int TIMEZONE_ABBR_VK=760;
	public static final int TIMEZONE_HOUR_VK=761;
	public static final int TIMEZONE_MINUTE_VK=762;
	public static final int TIMEZONE_REGION_VK=763;
	public static final int TIME_VK=764;
	public static final int TRAILING_VK=765;
	public static final int TRANSLATE_VK=766;
	public static final int TREAT_VK=767;
	public static final int TRIGGER_NAME=768;
	public static final int TRIM_VK=769;
	public static final int TRUNCATE_VK=770;
	public static final int TYPE_BODY_ELEMENTS=771;
	public static final int TYPE_NAME=772;
	public static final int TYPE_VK=773;
	public static final int UNARY_OPERATOR=774;
	public static final int UNBOUNDED_VK=775;
	public static final int UNDER_VK=776;
	public static final int UNLIMITED_VK=777;
	public static final int UNPIVOT_IN_ELEMENT=778;
	public static final int UNPIVOT_VK=779;
	public static final int UNTIL_VK=781;
	public static final int UPDATED_VK=782;
	public static final int UPSERT_VK=783;
	public static final int UROWID_VK=784;
	public static final int USING_MODE=785;
	public static final int VALIDATE_VK=786;
	public static final int VALUES_BOUND=787;
	public static final int VALUE_VK=788;
	public static final int VARCHAR2_VK=789;
	public static final int VARCHAR_VK=790;
	public static final int VARIABLE_DECLARE=791;
	public static final int VARIABLE_NAME=792;
	public static final int VARR_ARRAY_DEF=793;
	public static final int VECTOR_EXPR=794;
	public static final int VERSIONS_VK=795;
	public static final int VERSION_VK=796;
	public static final int WAIT_VK=798;
	public static final int WELLFORMED_VK=799;
	public static final int WHILE_LOOP=800;
	public static final int WITHIN_VK=801;
	public static final int WORK_VK=802;
	public static final int WRITE_VK=803;
	public static final int XMLAGG_VK=804;
	public static final int XMLATTRIBUTES_VK=805;
	public static final int XMLCAST_VK=806;
	public static final int XMLCOLATTVAL_VK=807;
	public static final int XMLELEMENT_VK=808;
	public static final int XMLEXISTS_VK=809;
	public static final int XMLFOREST_VK=810;
	public static final int XMLNAMESPACES_VK=811;
	public static final int XMLPARSE_VK=812;
	public static final int XMLPI_VK=813;
	public static final int XMLQUERY_VK=814;
	public static final int XMLROOT_VK=815;
	public static final int XMLSERIALIZE_VK=816;
	public static final int XMLTABLE_VK=817;
	public static final int XML_ALIAS=818;
	public static final int XML_COLUMN=819;
	public static final int XML_COLUMN_NAME=820;
	public static final int XML_ELEMENT=821;
	public static final int XML_VK=822;
	public static final int YEAR_VK=823;
	public static final int YES_VK=824;
	public static final int YMINTERVAL_UNCONSTRAINED_VK=825;
	public static final int DATE_VK=826;
	public static final int ORDER_VK=827;
	public static final int START_VK=828;

	// delegates
	public TreeParser[] getDelegates() {
		return new TreeParser[] {};
	}

	// delegators


	public PLSQLPrinter(TreeNodeStream input) {
		this(input, new RecognizerSharedState());
	}
	public PLSQLPrinter(TreeNodeStream input, RecognizerSharedState state) {
		super(input, state);
	}

	protected StringTemplateGroup templateLib =
	  new StringTemplateGroup("PLSQLPrinterTemplates", AngleBracketTemplateLexer.class);

	public void setTemplateLib(StringTemplateGroup templateLib) {
	  this.templateLib = templateLib;
	}
	public StringTemplateGroup getTemplateLib() {
	  return templateLib;
	}
	/** allows convenient multi-value initialization:
	 *  "new STAttrMap().put(...).put(...)"
	 */
	@SuppressWarnings("serial")
	public static class STAttrMap extends HashMap<String, Object> {
		public STAttrMap put(String attrName, Object value) {
			super.put(attrName, value);
			return this;
		}
	}
	@Override public String[] getTokenNames() { return PLSQLPrinter.tokenNames; }
	@Override public String getGrammarFileName() { return "PLSQLPrinter.g"; }



	  static String[] correctTokenNames = getCorrectTokenNames();

	  static String[] getCorrectTokenNames() {
	    // This is workaround for bug in antlr3 (at least in 3.5.2)
	    java.lang.reflect.Field[] fields = PLSQLPrinter.class.getDeclaredFields();
	    java.util.Map<Integer, String> tokenNamesMap = new java.util.HashMap<Integer, String>();
	    int maxTokenValue = 0;
	    for (java.lang.reflect.Field field: fields) {
	      int mod = field.getModifiers();
	      if (java.lang.reflect.Modifier.isStatic(mod) && java.lang.reflect.Modifier.isFinal(mod) && field.getType() == int.class) {
	        String name = field.getName();
	        int value;
	        try {
	          value = field.getInt(null);
	        } catch (Exception e) {
	          throw new RuntimeException(e);
	        }
	        tokenNamesMap.put(value, name);
	        maxTokenValue = Math.max(maxTokenValue, value);
	      }
	    }
	    String[] result = new String[maxTokenValue + 1];
	    for (int i = 0; i < maxTokenValue; ++i) {
	      if (tokenNamesMap.containsKey(i)) {
	        result[i] = tokenNamesMap.get(i);
	      } else {
	        result[i] = "<none>";
	      }
	    }
	    return result;
	  }
	  
	  
	  public void reportError(RecognitionException e) {
	    // if we've already reported an error and have not matched a token
	    // yet successfully, don't report any errors.
	    if ( state.errorRecovery ) {
	      //System.err.print("[SPURIOUS] ");
	      return;
	    }
	    state.syntaxErrors++; // don't count spurious
	    state.errorRecovery = true;

	    displayRecognitionError(correctTokenNames, e);
	  }



	public static class compilation_unit_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "compilation_unit"
	// PLSQLPrinter.g:74:1: compilation_unit : ^( COMPILATION_UNIT (u+= unit_statement )* ) -> template(statements=$u) <<\n--Compilation unit\n<statements:{v|<v>}; separator=\"\\n\\n\">\n>>;
	public final PLSQLPrinter.compilation_unit_return compilation_unit() throws RecognitionException {
		PLSQLPrinter.compilation_unit_return retval = new PLSQLPrinter.compilation_unit_return();
		retval.start = input.LT(1);

		List<Object> list_u=null;
		RuleReturnScope u = null;
		try {
			// PLSQLPrinter.g:75:5: ( ^( COMPILATION_UNIT (u+= unit_statement )* ) -> template(statements=$u) <<\n--Compilation unit\n<statements:{v|<v>}; separator=\"\\n\\n\">\n>>)
			// PLSQLPrinter.g:75:10: ^( COMPILATION_UNIT (u+= unit_statement )* )
			{
			match(input,COMPILATION_UNIT,FOLLOW_COMPILATION_UNIT_in_compilation_unit69); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:75:30: (u+= unit_statement )*
				loop1:
				while (true) {
					int alt1=2;
					int LA1_0 = input.LA(1);
					if ( (LA1_0==ALTER_FUNCTION||(LA1_0 >= ALTER_PACKAGE && LA1_0 <= ALTER_TYPE)||(LA1_0 >= CREATE_FUNCTION && LA1_0 <= CREATE_TYPE_SPEC)||(LA1_0 >= DROP_FUNCTION && LA1_0 <= DROP_TYPE)) ) {
						alt1=1;
					}

					switch (alt1) {
					case 1 :
						// PLSQLPrinter.g:75:30: u+= unit_statement
						{
						pushFollow(FOLLOW_unit_statement_in_compilation_unit73);
						u=unit_statement();
						state._fsp--;

						if (list_u==null) list_u=new ArrayList<Object>();
						list_u.add(u.getTemplate());
						}
						break;

					default :
						break loop1;
					}
				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 76:5: -> template(statements=$u) <<\n--Compilation unit\n<statements:{v|<v>}; separator=\"\\n\\n\">\n>>
			{
				retval.st = new StringTemplate(templateLib, "\n--Compilation unit\n<statements:{v|<v>}; separator=\"\\n\\n\">\n",new STAttrMap().put("statements", list_u));
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "compilation_unit"


	public static class sql_script_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "sql_script"
	// PLSQLPrinter.g:83:1: sql_script : ^( SQL_SCRIPT (u+= unit_statement )* ) -> template(statements=$u) <<\n--SQL script\n<statements:{v|--script\n<v>}; separator=\"\\n\\n\">\n>>;
	public final PLSQLPrinter.sql_script_return sql_script() throws RecognitionException {
		PLSQLPrinter.sql_script_return retval = new PLSQLPrinter.sql_script_return();
		retval.start = input.LT(1);

		List<Object> list_u=null;
		RuleReturnScope u = null;
		try {
			// PLSQLPrinter.g:84:5: ( ^( SQL_SCRIPT (u+= unit_statement )* ) -> template(statements=$u) <<\n--SQL script\n<statements:{v|--script\n<v>}; separator=\"\\n\\n\">\n>>)
			// PLSQLPrinter.g:84:10: ^( SQL_SCRIPT (u+= unit_statement )* )
			{
			match(input,SQL_SCRIPT,FOLLOW_SQL_SCRIPT_in_sql_script112); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:84:24: (u+= unit_statement )*
				loop2:
				while (true) {
					int alt2=2;
					int LA2_0 = input.LA(1);
					if ( (LA2_0==ALTER_FUNCTION||(LA2_0 >= ALTER_PACKAGE && LA2_0 <= ALTER_TYPE)||(LA2_0 >= CREATE_FUNCTION && LA2_0 <= CREATE_TYPE_SPEC)||(LA2_0 >= DROP_FUNCTION && LA2_0 <= DROP_TYPE)) ) {
						alt2=1;
					}

					switch (alt2) {
					case 1 :
						// PLSQLPrinter.g:84:24: u+= unit_statement
						{
						pushFollow(FOLLOW_unit_statement_in_sql_script116);
						u=unit_statement();
						state._fsp--;

						if (list_u==null) list_u=new ArrayList<Object>();
						list_u.add(u.getTemplate());
						}
						break;

					default :
						break loop2;
					}
				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 85:5: -> template(statements=$u) <<\n--SQL script\n<statements:{v|--script\n<v>}; separator=\"\\n\\n\">\n>>
			{
				retval.st = new StringTemplate(templateLib, "\n--SQL script\n<statements:{v|--script\n<v>}; separator=\"\\n\\n\">\n",new STAttrMap().put("statements", list_u));
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sql_script"


	public static class serveroutput_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "serveroutput_declaration"
	// PLSQLPrinter.g:93:1: serveroutput_declaration : ^( SET_SERVEROUTPUT ( SQL92_RESERVED_ON | OFF_VK ) ) -> template( \"not implemented: serveroutput_declaration\";
	public final PLSQLPrinter.serveroutput_declaration_return serveroutput_declaration() throws RecognitionException {
		PLSQLPrinter.serveroutput_declaration_return retval = new PLSQLPrinter.serveroutput_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:94:5: ( ^( SET_SERVEROUTPUT ( SQL92_RESERVED_ON | OFF_VK ) ) -> template( \"not implemented: serveroutput_declaration\")
			// PLSQLPrinter.g:94:10: ^( SET_SERVEROUTPUT ( SQL92_RESERVED_ON | OFF_VK ) )
			{
			match(input,SET_SERVEROUTPUT,FOLLOW_SET_SERVEROUTPUT_in_serveroutput_declaration155); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:94:29: ( SQL92_RESERVED_ON | OFF_VK )
			int alt3=2;
			int LA3_0 = input.LA(1);
			if ( (LA3_0==SQL92_RESERVED_ON) ) {
				alt3=1;
			}
			else if ( (LA3_0==OFF_VK) ) {
				alt3=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 3, 0, input);
				throw nvae;
			}

			switch (alt3) {
				case 1 :
					// PLSQLPrinter.g:94:30: SQL92_RESERVED_ON
					{
					match(input,SQL92_RESERVED_ON,FOLLOW_SQL92_RESERVED_ON_in_serveroutput_declaration158); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:94:48: OFF_VK
					{
					match(input,OFF_VK,FOLLOW_OFF_VK_in_serveroutput_declaration160); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 95:5: -> template( \"not implemented: serveroutput_declaration\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: serveroutput_declaration");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "serveroutput_declaration"


	public static class unit_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "unit_statement"
	// PLSQLPrinter.g:98:1: unit_statement : ( alter_function -> template( \"not implemented: unit_statement\"| alter_package -> template( \"not implemented: unit_statement\"| alter_procedure -> template( \"not implemented: unit_statement\"| alter_sequence -> template( \"not implemented: unit_statement\"| alter_trigger -> template( \"not implemented: unit_statement\"| alter_type -> template( \"not implemented: unit_statement\"| create_function_body -> { $create_function_body.st; }| create_procedure_body -> template( \"not implemented: unit_statement\"| create_package -> template( \"not implemented: unit_statement\"| create_sequence -> template( \"not implemented: unit_statement\"| create_trigger -> template( \"not implemented: unit_statement\"| create_type -> template( \"not implemented: unit_statement\"| drop_function -> template( \"not implemented: unit_statement\"| drop_package -> template( \"not implemented: unit_statement\"| drop_procedure -> template( \"not implemented: unit_statement\"| drop_sequence -> template( \"not implemented: unit_statement\"| drop_trigger -> template( \"not implemented: unit_statement\"| drop_type -> template( \"not implemented: unit_statement\");
	public final PLSQLPrinter.unit_statement_return unit_statement() throws RecognitionException {
		PLSQLPrinter.unit_statement_return retval = new PLSQLPrinter.unit_statement_return();
		retval.start = input.LT(1);

		TreeRuleReturnScope create_function_body1 =null;

		try {
			// PLSQLPrinter.g:99:5: ( alter_function -> template( \"not implemented: unit_statement\"| alter_package -> template( \"not implemented: unit_statement\"| alter_procedure -> template( \"not implemented: unit_statement\"| alter_sequence -> template( \"not implemented: unit_statement\"| alter_trigger -> template( \"not implemented: unit_statement\"| alter_type -> template( \"not implemented: unit_statement\"| create_function_body -> { $create_function_body.st; }| create_procedure_body -> template( \"not implemented: unit_statement\"| create_package -> template( \"not implemented: unit_statement\"| create_sequence -> template( \"not implemented: unit_statement\"| create_trigger -> template( \"not implemented: unit_statement\"| create_type -> template( \"not implemented: unit_statement\"| drop_function -> template( \"not implemented: unit_statement\"| drop_package -> template( \"not implemented: unit_statement\"| drop_procedure -> template( \"not implemented: unit_statement\"| drop_sequence -> template( \"not implemented: unit_statement\"| drop_trigger -> template( \"not implemented: unit_statement\"| drop_type -> template( \"not implemented: unit_statement\")
			int alt4=18;
			switch ( input.LA(1) ) {
			case ALTER_FUNCTION:
				{
				alt4=1;
				}
				break;
			case ALTER_PACKAGE:
				{
				alt4=2;
				}
				break;
			case ALTER_PROCEDURE:
				{
				alt4=3;
				}
				break;
			case ALTER_SEQUENCE:
				{
				alt4=4;
				}
				break;
			case ALTER_TRIGGER:
				{
				alt4=5;
				}
				break;
			case ALTER_TYPE:
				{
				alt4=6;
				}
				break;
			case CREATE_FUNCTION:
				{
				alt4=7;
				}
				break;
			case CREATE_PROCEDURE:
				{
				alt4=8;
				}
				break;
			case CREATE_PACKAGE_BODY:
			case CREATE_PACKAGE_SPEC:
				{
				alt4=9;
				}
				break;
			case CREATE_SEQUENCE:
				{
				alt4=10;
				}
				break;
			case CREATE_TRIGGER:
				{
				alt4=11;
				}
				break;
			case CREATE_TYPE_BODY:
			case CREATE_TYPE_SPEC:
				{
				alt4=12;
				}
				break;
			case DROP_FUNCTION:
				{
				alt4=13;
				}
				break;
			case DROP_PACKAGE:
				{
				alt4=14;
				}
				break;
			case DROP_PROCEDURE:
				{
				alt4=15;
				}
				break;
			case DROP_SEQUENCE:
				{
				alt4=16;
				}
				break;
			case DROP_TRIGGER:
				{
				alt4=17;
				}
				break;
			case DROP_TYPE:
				{
				alt4=18;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 4, 0, input);
				throw nvae;
			}
			switch (alt4) {
				case 1 :
					// PLSQLPrinter.g:99:10: alter_function
					{
					pushFollow(FOLLOW_alter_function_in_unit_statement196);
					alter_function();
					state._fsp--;

					// TEMPLATE REWRITE
					// 100:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:101:10: alter_package
					{
					pushFollow(FOLLOW_alter_package_in_unit_statement221);
					alter_package();
					state._fsp--;

					// TEMPLATE REWRITE
					// 102:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:103:10: alter_procedure
					{
					pushFollow(FOLLOW_alter_procedure_in_unit_statement246);
					alter_procedure();
					state._fsp--;

					// TEMPLATE REWRITE
					// 104:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:105:10: alter_sequence
					{
					pushFollow(FOLLOW_alter_sequence_in_unit_statement271);
					alter_sequence();
					state._fsp--;

					// TEMPLATE REWRITE
					// 106:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:107:10: alter_trigger
					{
					pushFollow(FOLLOW_alter_trigger_in_unit_statement296);
					alter_trigger();
					state._fsp--;

					// TEMPLATE REWRITE
					// 108:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:109:10: alter_type
					{
					pushFollow(FOLLOW_alter_type_in_unit_statement321);
					alter_type();
					state._fsp--;

					// TEMPLATE REWRITE
					// 110:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:111:10: create_function_body
					{
					pushFollow(FOLLOW_create_function_body_in_unit_statement346);
					create_function_body1=create_function_body();
					state._fsp--;

					// TEMPLATE REWRITE
					// 111:31: -> { $create_function_body.st; }
					{
						retval.st =  (create_function_body1!=null?((StringTemplate)create_function_body1.getTemplate()):null); ;
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:112:10: create_procedure_body
					{
					pushFollow(FOLLOW_create_procedure_body_in_unit_statement361);
					create_procedure_body();
					state._fsp--;

					// TEMPLATE REWRITE
					// 113:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:114:10: create_package
					{
					pushFollow(FOLLOW_create_package_in_unit_statement386);
					create_package();
					state._fsp--;

					// TEMPLATE REWRITE
					// 115:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:116:10: create_sequence
					{
					pushFollow(FOLLOW_create_sequence_in_unit_statement411);
					create_sequence();
					state._fsp--;

					// TEMPLATE REWRITE
					// 117:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:118:10: create_trigger
					{
					pushFollow(FOLLOW_create_trigger_in_unit_statement436);
					create_trigger();
					state._fsp--;

					// TEMPLATE REWRITE
					// 119:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:120:10: create_type
					{
					pushFollow(FOLLOW_create_type_in_unit_statement461);
					create_type();
					state._fsp--;

					// TEMPLATE REWRITE
					// 121:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 13 :
					// PLSQLPrinter.g:122:10: drop_function
					{
					pushFollow(FOLLOW_drop_function_in_unit_statement486);
					drop_function();
					state._fsp--;

					// TEMPLATE REWRITE
					// 123:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 14 :
					// PLSQLPrinter.g:124:10: drop_package
					{
					pushFollow(FOLLOW_drop_package_in_unit_statement511);
					drop_package();
					state._fsp--;

					// TEMPLATE REWRITE
					// 125:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 15 :
					// PLSQLPrinter.g:126:10: drop_procedure
					{
					pushFollow(FOLLOW_drop_procedure_in_unit_statement536);
					drop_procedure();
					state._fsp--;

					// TEMPLATE REWRITE
					// 127:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 16 :
					// PLSQLPrinter.g:128:10: drop_sequence
					{
					pushFollow(FOLLOW_drop_sequence_in_unit_statement561);
					drop_sequence();
					state._fsp--;

					// TEMPLATE REWRITE
					// 129:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 17 :
					// PLSQLPrinter.g:130:10: drop_trigger
					{
					pushFollow(FOLLOW_drop_trigger_in_unit_statement586);
					drop_trigger();
					state._fsp--;

					// TEMPLATE REWRITE
					// 131:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;
				case 18 :
					// PLSQLPrinter.g:132:10: drop_type
					{
					pushFollow(FOLLOW_drop_type_in_unit_statement611);
					drop_type();
					state._fsp--;

					// TEMPLATE REWRITE
					// 133:5: -> template( \"not implemented: unit_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: unit_statement");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "unit_statement"


	public static class drop_function_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "drop_function"
	// PLSQLPrinter.g:140:1: drop_function : ^( DROP_FUNCTION function_name ) -> template( \"not implemented: drop_function\";
	public final PLSQLPrinter.drop_function_return drop_function() throws RecognitionException {
		PLSQLPrinter.drop_function_return retval = new PLSQLPrinter.drop_function_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:141:5: ( ^( DROP_FUNCTION function_name ) -> template( \"not implemented: drop_function\")
			// PLSQLPrinter.g:141:10: ^( DROP_FUNCTION function_name )
			{
			match(input,DROP_FUNCTION,FOLLOW_DROP_FUNCTION_in_drop_function650); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_function_name_in_drop_function652);
			function_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 142:5: -> template( \"not implemented: drop_function\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: drop_function");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_function"


	public static class alter_function_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_function"
	// PLSQLPrinter.g:145:1: alter_function : ^( ALTER_FUNCTION function_name ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) -> template( \"not implemented: alter_function\";
	public final PLSQLPrinter.alter_function_return alter_function() throws RecognitionException {
		PLSQLPrinter.alter_function_return retval = new PLSQLPrinter.alter_function_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:146:5: ( ^( ALTER_FUNCTION function_name ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) -> template( \"not implemented: alter_function\")
			// PLSQLPrinter.g:146:10: ^( ALTER_FUNCTION function_name ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* )
			{
			match(input,ALTER_FUNCTION,FOLLOW_ALTER_FUNCTION_in_alter_function688); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_function_name_in_alter_function690);
			function_name();
			state._fsp--;

			// PLSQLPrinter.g:146:41: ( DEBUG_VK )?
			int alt5=2;
			int LA5_0 = input.LA(1);
			if ( (LA5_0==DEBUG_VK) ) {
				alt5=1;
			}
			switch (alt5) {
				case 1 :
					// PLSQLPrinter.g:146:41: DEBUG_VK
					{
					match(input,DEBUG_VK,FOLLOW_DEBUG_VK_in_alter_function692); 
					}
					break;

			}

			// PLSQLPrinter.g:146:51: ( REUSE_VK )?
			int alt6=2;
			int LA6_0 = input.LA(1);
			if ( (LA6_0==REUSE_VK) ) {
				alt6=1;
			}
			switch (alt6) {
				case 1 :
					// PLSQLPrinter.g:146:51: REUSE_VK
					{
					match(input,REUSE_VK,FOLLOW_REUSE_VK_in_alter_function695); 
					}
					break;

			}

			// PLSQLPrinter.g:146:61: ( compiler_parameters_clause )*
			loop7:
			while (true) {
				int alt7=2;
				int LA7_0 = input.LA(1);
				if ( (LA7_0==COMPILER_PARAMETER) ) {
					alt7=1;
				}

				switch (alt7) {
				case 1 :
					// PLSQLPrinter.g:146:61: compiler_parameters_clause
					{
					pushFollow(FOLLOW_compiler_parameters_clause_in_alter_function698);
					compiler_parameters_clause();
					state._fsp--;

					}
					break;

				default :
					break loop7;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 147:5: -> template( \"not implemented: alter_function\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: alter_function");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_function"


	public static class create_function_body_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "create_function_body"
	// PLSQLPrinter.g:150:1: create_function_body : ^( CREATE_FUNCTION ( REPLACE_VK )? ^( FUNCTION_NAME (name+= ID )+ ) ret= type_spec ^( PARAMETERS (args+= parameter )* ) (ac+= invoker_rights_clause )* (ac+= parallel_enable_clause )* (ac+= result_cache_clause )* ( DETERMINISTIC_VK )* ( PIPELINED_VK )? ( ^( USING_MODE ( AGGREGATE_VK )? implementation_type_name ) -> template( \"not implemented: create_function_body\"| ^( CALL_MODE call_spec ) -> template( \"not implemented: create_function_body\"| ^( BODY_MODE ( declare_spec )* body ) -> create_function_body(is_replace=$REPLACE_VK != nullname_parts=$namearguments=$argsreturn_type=$ret.stadd_clauses=$acis_pipelined=$PIPELINED_VK != nullbody=$body.st)) ) ;
	public final PLSQLPrinter.create_function_body_return create_function_body() throws RecognitionException {
		PLSQLPrinter.create_function_body_return retval = new PLSQLPrinter.create_function_body_return();
		retval.start = input.LT(1);

		CommonTree REPLACE_VK2=null;
		CommonTree PIPELINED_VK3=null;
		CommonTree name=null;
		List<Object> list_name=null;
		List<Object> list_args=null;
		List<Object> list_ac=null;
		TreeRuleReturnScope ret =null;
		TreeRuleReturnScope body4 =null;
		RuleReturnScope args = null;
		RuleReturnScope ac = null;
		try {
			// PLSQLPrinter.g:151:5: ( ^( CREATE_FUNCTION ( REPLACE_VK )? ^( FUNCTION_NAME (name+= ID )+ ) ret= type_spec ^( PARAMETERS (args+= parameter )* ) (ac+= invoker_rights_clause )* (ac+= parallel_enable_clause )* (ac+= result_cache_clause )* ( DETERMINISTIC_VK )* ( PIPELINED_VK )? ( ^( USING_MODE ( AGGREGATE_VK )? implementation_type_name ) -> template( \"not implemented: create_function_body\"| ^( CALL_MODE call_spec ) -> template( \"not implemented: create_function_body\"| ^( BODY_MODE ( declare_spec )* body ) -> create_function_body(is_replace=$REPLACE_VK != nullname_parts=$namearguments=$argsreturn_type=$ret.stadd_clauses=$acis_pipelined=$PIPELINED_VK != nullbody=$body.st)) ) )
			// PLSQLPrinter.g:151:10: ^( CREATE_FUNCTION ( REPLACE_VK )? ^( FUNCTION_NAME (name+= ID )+ ) ret= type_spec ^( PARAMETERS (args+= parameter )* ) (ac+= invoker_rights_clause )* (ac+= parallel_enable_clause )* (ac+= result_cache_clause )* ( DETERMINISTIC_VK )* ( PIPELINED_VK )? ( ^( USING_MODE ( AGGREGATE_VK )? implementation_type_name ) -> template( \"not implemented: create_function_body\"| ^( CALL_MODE call_spec ) -> template( \"not implemented: create_function_body\"| ^( BODY_MODE ( declare_spec )* body ) -> create_function_body(is_replace=$REPLACE_VK != nullname_parts=$namearguments=$argsreturn_type=$ret.stadd_clauses=$acis_pipelined=$PIPELINED_VK != nullbody=$body.st)) )
			{
			match(input,CREATE_FUNCTION,FOLLOW_CREATE_FUNCTION_in_create_function_body735); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:151:28: ( REPLACE_VK )?
			int alt8=2;
			int LA8_0 = input.LA(1);
			if ( (LA8_0==REPLACE_VK) ) {
				alt8=1;
			}
			switch (alt8) {
				case 1 :
					// PLSQLPrinter.g:151:28: REPLACE_VK
					{
					REPLACE_VK2=(CommonTree)match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_create_function_body737); 
					}
					break;

			}

			match(input,FUNCTION_NAME,FOLLOW_FUNCTION_NAME_in_create_function_body741); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:151:60: (name+= ID )+
			int cnt9=0;
			loop9:
			while (true) {
				int alt9=2;
				int LA9_0 = input.LA(1);
				if ( (LA9_0==ID) ) {
					alt9=1;
				}

				switch (alt9) {
				case 1 :
					// PLSQLPrinter.g:151:60: name+= ID
					{
					name=(CommonTree)match(input,ID,FOLLOW_ID_in_create_function_body745); 
					if (list_name==null) list_name=new ArrayList<Object>();
					list_name.add(name);
					}
					break;

				default :
					if ( cnt9 >= 1 ) break loop9;
					EarlyExitException eee = new EarlyExitException(9, input);
					throw eee;
				}
				cnt9++;
			}

			match(input, Token.UP, null); 

			pushFollow(FOLLOW_type_spec_in_create_function_body751);
			ret=type_spec();
			state._fsp--;

			match(input,PARAMETERS,FOLLOW_PARAMETERS_in_create_function_body754); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:151:98: (args+= parameter )*
				loop10:
				while (true) {
					int alt10=2;
					int LA10_0 = input.LA(1);
					if ( (LA10_0==PARAMETER) ) {
						alt10=1;
					}

					switch (alt10) {
					case 1 :
						// PLSQLPrinter.g:151:98: args+= parameter
						{
						pushFollow(FOLLOW_parameter_in_create_function_body758);
						args=parameter();
						state._fsp--;

						if (list_args==null) list_args=new ArrayList<Object>();
						list_args.add(args.getTemplate());
						}
						break;

					default :
						break loop10;
					}
				}

				match(input, Token.UP, null); 
			}

			// PLSQLPrinter.g:152:15: (ac+= invoker_rights_clause )*
			loop11:
			while (true) {
				int alt11=2;
				int LA11_0 = input.LA(1);
				if ( (LA11_0==AUTHID_VK) ) {
					alt11=1;
				}

				switch (alt11) {
				case 1 :
					// PLSQLPrinter.g:152:15: ac+= invoker_rights_clause
					{
					pushFollow(FOLLOW_invoker_rights_clause_in_create_function_body776);
					ac=invoker_rights_clause();
					state._fsp--;

					if (list_ac==null) list_ac=new ArrayList<Object>();
					list_ac.add(ac.getTemplate());
					}
					break;

				default :
					break loop11;
				}
			}

			// PLSQLPrinter.g:152:42: (ac+= parallel_enable_clause )*
			loop12:
			while (true) {
				int alt12=2;
				int LA12_0 = input.LA(1);
				if ( (LA12_0==PARALLEL_ENABLE_VK) ) {
					alt12=1;
				}

				switch (alt12) {
				case 1 :
					// PLSQLPrinter.g:152:42: ac+= parallel_enable_clause
					{
					pushFollow(FOLLOW_parallel_enable_clause_in_create_function_body781);
					ac=parallel_enable_clause();
					state._fsp--;

					if (list_ac==null) list_ac=new ArrayList<Object>();
					list_ac.add(ac.getTemplate());
					}
					break;

				default :
					break loop12;
				}
			}

			// PLSQLPrinter.g:152:70: (ac+= result_cache_clause )*
			loop13:
			while (true) {
				int alt13=2;
				int LA13_0 = input.LA(1);
				if ( (LA13_0==RESULT_CACHE_VK) ) {
					alt13=1;
				}

				switch (alt13) {
				case 1 :
					// PLSQLPrinter.g:152:70: ac+= result_cache_clause
					{
					pushFollow(FOLLOW_result_cache_clause_in_create_function_body786);
					ac=result_cache_clause();
					state._fsp--;

					if (list_ac==null) list_ac=new ArrayList<Object>();
					list_ac.add(ac.getTemplate());
					}
					break;

				default :
					break loop13;
				}
			}

			// PLSQLPrinter.g:152:93: ( DETERMINISTIC_VK )*
			loop14:
			while (true) {
				int alt14=2;
				int LA14_0 = input.LA(1);
				if ( (LA14_0==DETERMINISTIC_VK) ) {
					alt14=1;
				}

				switch (alt14) {
				case 1 :
					// PLSQLPrinter.g:152:93: DETERMINISTIC_VK
					{
					match(input,DETERMINISTIC_VK,FOLLOW_DETERMINISTIC_VK_in_create_function_body789); 
					}
					break;

				default :
					break loop14;
				}
			}

			// PLSQLPrinter.g:152:111: ( PIPELINED_VK )?
			int alt15=2;
			int LA15_0 = input.LA(1);
			if ( (LA15_0==PIPELINED_VK) ) {
				alt15=1;
			}
			switch (alt15) {
				case 1 :
					// PLSQLPrinter.g:152:111: PIPELINED_VK
					{
					PIPELINED_VK3=(CommonTree)match(input,PIPELINED_VK,FOLLOW_PIPELINED_VK_in_create_function_body792); 
					}
					break;

			}

			// PLSQLPrinter.g:153:13: ( ^( USING_MODE ( AGGREGATE_VK )? implementation_type_name ) -> template( \"not implemented: create_function_body\"| ^( CALL_MODE call_spec ) -> template( \"not implemented: create_function_body\"| ^( BODY_MODE ( declare_spec )* body ) -> create_function_body(is_replace=$REPLACE_VK != nullname_parts=$namearguments=$argsreturn_type=$ret.stadd_clauses=$acis_pipelined=$PIPELINED_VK != nullbody=$body.st))
			int alt18=3;
			switch ( input.LA(1) ) {
			case USING_MODE:
				{
				alt18=1;
				}
				break;
			case CALL_MODE:
				{
				alt18=2;
				}
				break;
			case BODY_MODE:
				{
				alt18=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 18, 0, input);
				throw nvae;
			}
			switch (alt18) {
				case 1 :
					// PLSQLPrinter.g:153:18: ^( USING_MODE ( AGGREGATE_VK )? implementation_type_name )
					{
					match(input,USING_MODE,FOLLOW_USING_MODE_in_create_function_body813); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:153:31: ( AGGREGATE_VK )?
					int alt16=2;
					int LA16_0 = input.LA(1);
					if ( (LA16_0==AGGREGATE_VK) ) {
						alt16=1;
					}
					switch (alt16) {
						case 1 :
							// PLSQLPrinter.g:153:31: AGGREGATE_VK
							{
							match(input,AGGREGATE_VK,FOLLOW_AGGREGATE_VK_in_create_function_body815); 
							}
							break;

					}

					pushFollow(FOLLOW_implementation_type_name_in_create_function_body818);
					implementation_type_name();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 154:5: -> template( \"not implemented: create_function_body\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: create_function_body");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:155:18: ^( CALL_MODE call_spec )
					{
					match(input,CALL_MODE,FOLLOW_CALL_MODE_in_create_function_body853); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_call_spec_in_create_function_body855);
					call_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 156:5: -> template( \"not implemented: create_function_body\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: create_function_body");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:157:18: ^( BODY_MODE ( declare_spec )* body )
					{
					match(input,BODY_MODE,FOLLOW_BODY_MODE_in_create_function_body890); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:157:30: ( declare_spec )*
					loop17:
					while (true) {
						int alt17=2;
						int LA17_0 = input.LA(1);
						if ( (LA17_0==CREATE_FUNCTION||LA17_0==CREATE_PROCEDURE||(LA17_0 >= CREATE_TYPE_BODY && LA17_0 <= CREATE_TYPE_SPEC)||LA17_0==CURSOR_DECLARE||LA17_0==EXCEPTION_DECLARE||LA17_0==PRAGMA_DECLARE||(LA17_0 >= RECORD_TYPE_DECLARE && LA17_0 <= RECORD_VAR_DECLARE)||LA17_0==SUBTYPE_DECLARE||(LA17_0 >= TABLE_TYPE_DECLARE && LA17_0 <= TABLE_VAR_DECLARE)||LA17_0==VARIABLE_DECLARE) ) {
							alt17=1;
						}

						switch (alt17) {
						case 1 :
							// PLSQLPrinter.g:157:30: declare_spec
							{
							pushFollow(FOLLOW_declare_spec_in_create_function_body892);
							declare_spec();
							state._fsp--;

							}
							break;

						default :
							break loop17;
						}
					}

					pushFollow(FOLLOW_body_in_create_function_body895);
					body4=body();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 158:18: -> create_function_body(is_replace=$REPLACE_VK != nullname_parts=$namearguments=$argsreturn_type=$ret.stadd_clauses=$acis_pipelined=$PIPELINED_VK != nullbody=$body.st)
					{
						retval.st = templateLib.getInstanceOf("create_function_body",new STAttrMap().put("is_replace", REPLACE_VK2 != null).put("name_parts", list_name).put("arguments", list_args).put("return_type", (ret!=null?((StringTemplate)ret.getTemplate()):null)).put("add_clauses", list_ac).put("is_pipelined", PIPELINED_VK3 != null).put("body", (body4!=null?((StringTemplate)body4.getTemplate()):null)));
					}



					}
					break;

			}

			match(input, Token.UP, null); 

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_function_body"


	public static class parallel_enable_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "parallel_enable_clause"
	// PLSQLPrinter.g:167:1: parallel_enable_clause : ^( PARALLEL_ENABLE_VK ( partition_by_clause )? ) -> template( \"not implemented: parallel_enable_clause\";
	public final PLSQLPrinter.parallel_enable_clause_return parallel_enable_clause() throws RecognitionException {
		PLSQLPrinter.parallel_enable_clause_return retval = new PLSQLPrinter.parallel_enable_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:168:5: ( ^( PARALLEL_ENABLE_VK ( partition_by_clause )? ) -> template( \"not implemented: parallel_enable_clause\")
			// PLSQLPrinter.g:168:10: ^( PARALLEL_ENABLE_VK ( partition_by_clause )? )
			{
			match(input,PARALLEL_ENABLE_VK,FOLLOW_PARALLEL_ENABLE_VK_in_parallel_enable_clause1061); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:168:31: ( partition_by_clause )?
				int alt19=2;
				int LA19_0 = input.LA(1);
				if ( (LA19_0==PARTITION_VK) ) {
					alt19=1;
				}
				switch (alt19) {
					case 1 :
						// PLSQLPrinter.g:168:31: partition_by_clause
						{
						pushFollow(FOLLOW_partition_by_clause_in_parallel_enable_clause1063);
						partition_by_clause();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 169:5: -> template( \"not implemented: parallel_enable_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: parallel_enable_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "parallel_enable_clause"


	public static class partition_by_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "partition_by_clause"
	// PLSQLPrinter.g:172:1: partition_by_clause : ^( PARTITION_VK expression ( SQL92_RESERVED_ANY | ^( HASH_VK ^( COLUMNS ( column_name )+ ) ) | ^( RANGE_VK ^( COLUMNS ( column_name )+ ) ) ) ( streaming_clause )? ) -> template( \"not implemented: partition_by_clause\";
	public final PLSQLPrinter.partition_by_clause_return partition_by_clause() throws RecognitionException {
		PLSQLPrinter.partition_by_clause_return retval = new PLSQLPrinter.partition_by_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:173:5: ( ^( PARTITION_VK expression ( SQL92_RESERVED_ANY | ^( HASH_VK ^( COLUMNS ( column_name )+ ) ) | ^( RANGE_VK ^( COLUMNS ( column_name )+ ) ) ) ( streaming_clause )? ) -> template( \"not implemented: partition_by_clause\")
			// PLSQLPrinter.g:173:10: ^( PARTITION_VK expression ( SQL92_RESERVED_ANY | ^( HASH_VK ^( COLUMNS ( column_name )+ ) ) | ^( RANGE_VK ^( COLUMNS ( column_name )+ ) ) ) ( streaming_clause )? )
			{
			match(input,PARTITION_VK,FOLLOW_PARTITION_VK_in_partition_by_clause1100); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_partition_by_clause1102);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:174:13: ( SQL92_RESERVED_ANY | ^( HASH_VK ^( COLUMNS ( column_name )+ ) ) | ^( RANGE_VK ^( COLUMNS ( column_name )+ ) ) )
			int alt22=3;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_ANY:
				{
				alt22=1;
				}
				break;
			case HASH_VK:
				{
				alt22=2;
				}
				break;
			case RANGE_VK:
				{
				alt22=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 22, 0, input);
				throw nvae;
			}
			switch (alt22) {
				case 1 :
					// PLSQLPrinter.g:174:18: SQL92_RESERVED_ANY
					{
					match(input,SQL92_RESERVED_ANY,FOLLOW_SQL92_RESERVED_ANY_in_partition_by_clause1122); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:175:18: ^( HASH_VK ^( COLUMNS ( column_name )+ ) )
					{
					match(input,HASH_VK,FOLLOW_HASH_VK_in_partition_by_clause1142); 
					match(input, Token.DOWN, null); 
					match(input,COLUMNS,FOLLOW_COLUMNS_in_partition_by_clause1145); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:175:38: ( column_name )+
					int cnt20=0;
					loop20:
					while (true) {
						int alt20=2;
						int LA20_0 = input.LA(1);
						if ( (LA20_0==COLUMN_NAME) ) {
							alt20=1;
						}

						switch (alt20) {
						case 1 :
							// PLSQLPrinter.g:175:38: column_name
							{
							pushFollow(FOLLOW_column_name_in_partition_by_clause1147);
							column_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt20 >= 1 ) break loop20;
							EarlyExitException eee = new EarlyExitException(20, input);
							throw eee;
						}
						cnt20++;
					}

					match(input, Token.UP, null); 

					match(input, Token.UP, null); 

					}
					break;
				case 3 :
					// PLSQLPrinter.g:176:18: ^( RANGE_VK ^( COLUMNS ( column_name )+ ) )
					{
					match(input,RANGE_VK,FOLLOW_RANGE_VK_in_partition_by_clause1170); 
					match(input, Token.DOWN, null); 
					match(input,COLUMNS,FOLLOW_COLUMNS_in_partition_by_clause1173); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:176:39: ( column_name )+
					int cnt21=0;
					loop21:
					while (true) {
						int alt21=2;
						int LA21_0 = input.LA(1);
						if ( (LA21_0==COLUMN_NAME) ) {
							alt21=1;
						}

						switch (alt21) {
						case 1 :
							// PLSQLPrinter.g:176:39: column_name
							{
							pushFollow(FOLLOW_column_name_in_partition_by_clause1175);
							column_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt21 >= 1 ) break loop21;
							EarlyExitException eee = new EarlyExitException(21, input);
							throw eee;
						}
						cnt21++;
					}

					match(input, Token.UP, null); 

					match(input, Token.UP, null); 

					}
					break;

			}

			// PLSQLPrinter.g:178:13: ( streaming_clause )?
			int alt23=2;
			int LA23_0 = input.LA(1);
			if ( (LA23_0==STREAMING_CLAUSE) ) {
				alt23=1;
			}
			switch (alt23) {
				case 1 :
					// PLSQLPrinter.g:178:13: streaming_clause
					{
					pushFollow(FOLLOW_streaming_clause_in_partition_by_clause1207);
					streaming_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 180:5: -> template( \"not implemented: partition_by_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: partition_by_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "partition_by_clause"


	public static class result_cache_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "result_cache_clause"
	// PLSQLPrinter.g:183:1: result_cache_clause : ^( RESULT_CACHE_VK ( relies_on_part )? ) -> template( \"not implemented: result_cache_clause\";
	public final PLSQLPrinter.result_cache_clause_return result_cache_clause() throws RecognitionException {
		PLSQLPrinter.result_cache_clause_return retval = new PLSQLPrinter.result_cache_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:184:5: ( ^( RESULT_CACHE_VK ( relies_on_part )? ) -> template( \"not implemented: result_cache_clause\")
			// PLSQLPrinter.g:184:10: ^( RESULT_CACHE_VK ( relies_on_part )? )
			{
			match(input,RESULT_CACHE_VK,FOLLOW_RESULT_CACHE_VK_in_result_cache_clause1253); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:184:28: ( relies_on_part )?
				int alt24=2;
				int LA24_0 = input.LA(1);
				if ( (LA24_0==RELIES_ON_VK) ) {
					alt24=1;
				}
				switch (alt24) {
					case 1 :
						// PLSQLPrinter.g:184:28: relies_on_part
						{
						pushFollow(FOLLOW_relies_on_part_in_result_cache_clause1255);
						relies_on_part();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 185:5: -> template( \"not implemented: result_cache_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: result_cache_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "result_cache_clause"


	public static class relies_on_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "relies_on_part"
	// PLSQLPrinter.g:188:1: relies_on_part : ^( RELIES_ON_VK ( tableview_name )+ ) -> template( \"not implemented: relies_on_part\";
	public final PLSQLPrinter.relies_on_part_return relies_on_part() throws RecognitionException {
		PLSQLPrinter.relies_on_part_return retval = new PLSQLPrinter.relies_on_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:189:5: ( ^( RELIES_ON_VK ( tableview_name )+ ) -> template( \"not implemented: relies_on_part\")
			// PLSQLPrinter.g:189:10: ^( RELIES_ON_VK ( tableview_name )+ )
			{
			match(input,RELIES_ON_VK,FOLLOW_RELIES_ON_VK_in_relies_on_part1292); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:189:25: ( tableview_name )+
			int cnt25=0;
			loop25:
			while (true) {
				int alt25=2;
				int LA25_0 = input.LA(1);
				if ( (LA25_0==TABLEVIEW_NAME) ) {
					alt25=1;
				}

				switch (alt25) {
				case 1 :
					// PLSQLPrinter.g:189:25: tableview_name
					{
					pushFollow(FOLLOW_tableview_name_in_relies_on_part1294);
					tableview_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt25 >= 1 ) break loop25;
					EarlyExitException eee = new EarlyExitException(25, input);
					throw eee;
				}
				cnt25++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 190:5: -> template( \"not implemented: relies_on_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: relies_on_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "relies_on_part"


	public static class streaming_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "streaming_clause"
	// PLSQLPrinter.g:193:1: streaming_clause : ^( STREAMING_CLAUSE ( SQL92_RESERVED_ORDER | CLUSTER_VK ) expression ^( COLUMNS ( column_name )+ ) ) -> template( \"not implemented: streaming_clause\";
	public final PLSQLPrinter.streaming_clause_return streaming_clause() throws RecognitionException {
		PLSQLPrinter.streaming_clause_return retval = new PLSQLPrinter.streaming_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:194:5: ( ^( STREAMING_CLAUSE ( SQL92_RESERVED_ORDER | CLUSTER_VK ) expression ^( COLUMNS ( column_name )+ ) ) -> template( \"not implemented: streaming_clause\")
			// PLSQLPrinter.g:194:10: ^( STREAMING_CLAUSE ( SQL92_RESERVED_ORDER | CLUSTER_VK ) expression ^( COLUMNS ( column_name )+ ) )
			{
			match(input,STREAMING_CLAUSE,FOLLOW_STREAMING_CLAUSE_in_streaming_clause1331); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:194:29: ( SQL92_RESERVED_ORDER | CLUSTER_VK )
			int alt26=2;
			int LA26_0 = input.LA(1);
			if ( (LA26_0==SQL92_RESERVED_ORDER) ) {
				alt26=1;
			}
			else if ( (LA26_0==CLUSTER_VK) ) {
				alt26=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 26, 0, input);
				throw nvae;
			}

			switch (alt26) {
				case 1 :
					// PLSQLPrinter.g:194:30: SQL92_RESERVED_ORDER
					{
					match(input,SQL92_RESERVED_ORDER,FOLLOW_SQL92_RESERVED_ORDER_in_streaming_clause1334); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:194:51: CLUSTER_VK
					{
					match(input,CLUSTER_VK,FOLLOW_CLUSTER_VK_in_streaming_clause1336); 
					}
					break;

			}

			pushFollow(FOLLOW_expression_in_streaming_clause1339);
			expression();
			state._fsp--;

			match(input,COLUMNS,FOLLOW_COLUMNS_in_streaming_clause1342); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:194:84: ( column_name )+
			int cnt27=0;
			loop27:
			while (true) {
				int alt27=2;
				int LA27_0 = input.LA(1);
				if ( (LA27_0==COLUMN_NAME) ) {
					alt27=1;
				}

				switch (alt27) {
				case 1 :
					// PLSQLPrinter.g:194:84: column_name
					{
					pushFollow(FOLLOW_column_name_in_streaming_clause1344);
					column_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt27 >= 1 ) break loop27;
					EarlyExitException eee = new EarlyExitException(27, input);
					throw eee;
				}
				cnt27++;
			}

			match(input, Token.UP, null); 

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 195:5: -> template( \"not implemented: streaming_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: streaming_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "streaming_clause"


	public static class drop_package_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "drop_package"
	// PLSQLPrinter.g:202:1: drop_package : ^( DROP_PACKAGE package_name ( BODY_VK )? ) -> template( \"not implemented: drop_package\";
	public final PLSQLPrinter.drop_package_return drop_package() throws RecognitionException {
		PLSQLPrinter.drop_package_return retval = new PLSQLPrinter.drop_package_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:203:5: ( ^( DROP_PACKAGE package_name ( BODY_VK )? ) -> template( \"not implemented: drop_package\")
			// PLSQLPrinter.g:203:10: ^( DROP_PACKAGE package_name ( BODY_VK )? )
			{
			match(input,DROP_PACKAGE,FOLLOW_DROP_PACKAGE_in_drop_package1387); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_package_name_in_drop_package1389);
			package_name();
			state._fsp--;

			// PLSQLPrinter.g:203:38: ( BODY_VK )?
			int alt28=2;
			int LA28_0 = input.LA(1);
			if ( (LA28_0==BODY_VK) ) {
				alt28=1;
			}
			switch (alt28) {
				case 1 :
					// PLSQLPrinter.g:203:38: BODY_VK
					{
					match(input,BODY_VK,FOLLOW_BODY_VK_in_drop_package1391); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 204:5: -> template( \"not implemented: drop_package\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: drop_package");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_package"


	public static class alter_package_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_package"
	// PLSQLPrinter.g:207:1: alter_package : ^( ALTER_PACKAGE package_name ( DEBUG_VK )? ( REUSE_VK )? ( PACKAGE_VK | BODY_VK | SPECIFICATION_VK )? ( compiler_parameters_clause )* ) -> template( \"not implemented: alter_package\";
	public final PLSQLPrinter.alter_package_return alter_package() throws RecognitionException {
		PLSQLPrinter.alter_package_return retval = new PLSQLPrinter.alter_package_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:208:5: ( ^( ALTER_PACKAGE package_name ( DEBUG_VK )? ( REUSE_VK )? ( PACKAGE_VK | BODY_VK | SPECIFICATION_VK )? ( compiler_parameters_clause )* ) -> template( \"not implemented: alter_package\")
			// PLSQLPrinter.g:208:10: ^( ALTER_PACKAGE package_name ( DEBUG_VK )? ( REUSE_VK )? ( PACKAGE_VK | BODY_VK | SPECIFICATION_VK )? ( compiler_parameters_clause )* )
			{
			match(input,ALTER_PACKAGE,FOLLOW_ALTER_PACKAGE_in_alter_package1428); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_package_name_in_alter_package1430);
			package_name();
			state._fsp--;

			// PLSQLPrinter.g:208:39: ( DEBUG_VK )?
			int alt29=2;
			int LA29_0 = input.LA(1);
			if ( (LA29_0==DEBUG_VK) ) {
				alt29=1;
			}
			switch (alt29) {
				case 1 :
					// PLSQLPrinter.g:208:39: DEBUG_VK
					{
					match(input,DEBUG_VK,FOLLOW_DEBUG_VK_in_alter_package1432); 
					}
					break;

			}

			// PLSQLPrinter.g:208:49: ( REUSE_VK )?
			int alt30=2;
			int LA30_0 = input.LA(1);
			if ( (LA30_0==REUSE_VK) ) {
				alt30=1;
			}
			switch (alt30) {
				case 1 :
					// PLSQLPrinter.g:208:49: REUSE_VK
					{
					match(input,REUSE_VK,FOLLOW_REUSE_VK_in_alter_package1435); 
					}
					break;

			}

			// PLSQLPrinter.g:209:17: ( PACKAGE_VK | BODY_VK | SPECIFICATION_VK )?
			int alt31=4;
			switch ( input.LA(1) ) {
				case PACKAGE_VK:
					{
					alt31=1;
					}
					break;
				case BODY_VK:
					{
					alt31=2;
					}
					break;
				case SPECIFICATION_VK:
					{
					alt31=3;
					}
					break;
			}
			switch (alt31) {
				case 1 :
					// PLSQLPrinter.g:209:18: PACKAGE_VK
					{
					match(input,PACKAGE_VK,FOLLOW_PACKAGE_VK_in_alter_package1456); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:209:29: BODY_VK
					{
					match(input,BODY_VK,FOLLOW_BODY_VK_in_alter_package1458); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:209:37: SPECIFICATION_VK
					{
					match(input,SPECIFICATION_VK,FOLLOW_SPECIFICATION_VK_in_alter_package1460); 
					}
					break;

			}

			// PLSQLPrinter.g:209:56: ( compiler_parameters_clause )*
			loop32:
			while (true) {
				int alt32=2;
				int LA32_0 = input.LA(1);
				if ( (LA32_0==COMPILER_PARAMETER) ) {
					alt32=1;
				}

				switch (alt32) {
				case 1 :
					// PLSQLPrinter.g:209:56: compiler_parameters_clause
					{
					pushFollow(FOLLOW_compiler_parameters_clause_in_alter_package1464);
					compiler_parameters_clause();
					state._fsp--;

					}
					break;

				default :
					break loop32;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 210:5: -> template( \"not implemented: alter_package\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: alter_package");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_package"


	public static class create_package_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "create_package"
	// PLSQLPrinter.g:213:1: create_package : ( ^( CREATE_PACKAGE_SPEC ( REPLACE_VK )? package_name ( invoker_rights_clause )? ( package_obj_spec )* ) -> template( \"not implemented: create_package\"| ^( CREATE_PACKAGE_BODY ( REPLACE_VK )? package_name ( package_obj_body )* ( seq_of_statements )? ) -> template( \"not implemented: create_package\");
	public final PLSQLPrinter.create_package_return create_package() throws RecognitionException {
		PLSQLPrinter.create_package_return retval = new PLSQLPrinter.create_package_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:214:5: ( ^( CREATE_PACKAGE_SPEC ( REPLACE_VK )? package_name ( invoker_rights_clause )? ( package_obj_spec )* ) -> template( \"not implemented: create_package\"| ^( CREATE_PACKAGE_BODY ( REPLACE_VK )? package_name ( package_obj_body )* ( seq_of_statements )? ) -> template( \"not implemented: create_package\")
			int alt39=2;
			int LA39_0 = input.LA(1);
			if ( (LA39_0==CREATE_PACKAGE_SPEC) ) {
				alt39=1;
			}
			else if ( (LA39_0==CREATE_PACKAGE_BODY) ) {
				alt39=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 39, 0, input);
				throw nvae;
			}

			switch (alt39) {
				case 1 :
					// PLSQLPrinter.g:214:10: ^( CREATE_PACKAGE_SPEC ( REPLACE_VK )? package_name ( invoker_rights_clause )? ( package_obj_spec )* )
					{
					match(input,CREATE_PACKAGE_SPEC,FOLLOW_CREATE_PACKAGE_SPEC_in_create_package1501); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:214:32: ( REPLACE_VK )?
					int alt33=2;
					int LA33_0 = input.LA(1);
					if ( (LA33_0==REPLACE_VK) ) {
						alt33=1;
					}
					switch (alt33) {
						case 1 :
							// PLSQLPrinter.g:214:32: REPLACE_VK
							{
							match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_create_package1503); 
							}
							break;

					}

					pushFollow(FOLLOW_package_name_in_create_package1506);
					package_name();
					state._fsp--;

					// PLSQLPrinter.g:214:57: ( invoker_rights_clause )?
					int alt34=2;
					int LA34_0 = input.LA(1);
					if ( (LA34_0==AUTHID_VK) ) {
						alt34=1;
					}
					switch (alt34) {
						case 1 :
							// PLSQLPrinter.g:214:57: invoker_rights_clause
							{
							pushFollow(FOLLOW_invoker_rights_clause_in_create_package1508);
							invoker_rights_clause();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:214:80: ( package_obj_spec )*
					loop35:
					while (true) {
						int alt35=2;
						int LA35_0 = input.LA(1);
						if ( (LA35_0==CURSOR_DECLARE||LA35_0==EXCEPTION_DECLARE||LA35_0==FUNCTION_SPEC||LA35_0==PRAGMA_DECLARE||LA35_0==PROCEDURE_SPEC||(LA35_0 >= RECORD_TYPE_DECLARE && LA35_0 <= RECORD_VAR_DECLARE)||LA35_0==SUBTYPE_DECLARE||(LA35_0 >= TABLE_TYPE_DECLARE && LA35_0 <= TABLE_VAR_DECLARE)||LA35_0==VARIABLE_DECLARE) ) {
							alt35=1;
						}

						switch (alt35) {
						case 1 :
							// PLSQLPrinter.g:214:80: package_obj_spec
							{
							pushFollow(FOLLOW_package_obj_spec_in_create_package1511);
							package_obj_spec();
							state._fsp--;

							}
							break;

						default :
							break loop35;
						}
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 215:5: -> template( \"not implemented: create_package\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: create_package");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:216:10: ^( CREATE_PACKAGE_BODY ( REPLACE_VK )? package_name ( package_obj_body )* ( seq_of_statements )? )
					{
					match(input,CREATE_PACKAGE_BODY,FOLLOW_CREATE_PACKAGE_BODY_in_create_package1540); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:216:32: ( REPLACE_VK )?
					int alt36=2;
					int LA36_0 = input.LA(1);
					if ( (LA36_0==REPLACE_VK) ) {
						alt36=1;
					}
					switch (alt36) {
						case 1 :
							// PLSQLPrinter.g:216:32: REPLACE_VK
							{
							match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_create_package1542); 
							}
							break;

					}

					pushFollow(FOLLOW_package_name_in_create_package1545);
					package_name();
					state._fsp--;

					// PLSQLPrinter.g:216:57: ( package_obj_body )*
					loop37:
					while (true) {
						int alt37=2;
						int LA37_0 = input.LA(1);
						if ( (LA37_0==CREATE_FUNCTION||LA37_0==CREATE_PROCEDURE||(LA37_0 >= CREATE_TYPE_BODY && LA37_0 <= CREATE_TYPE_SPEC)||LA37_0==CURSOR_DECLARE||LA37_0==EXCEPTION_DECLARE||(LA37_0 >= RECORD_TYPE_DECLARE && LA37_0 <= RECORD_VAR_DECLARE)||LA37_0==SUBTYPE_DECLARE||(LA37_0 >= TABLE_TYPE_DECLARE && LA37_0 <= TABLE_VAR_DECLARE)||LA37_0==VARIABLE_DECLARE) ) {
							alt37=1;
						}

						switch (alt37) {
						case 1 :
							// PLSQLPrinter.g:216:57: package_obj_body
							{
							pushFollow(FOLLOW_package_obj_body_in_create_package1547);
							package_obj_body();
							state._fsp--;

							}
							break;

						default :
							break loop37;
						}
					}

					// PLSQLPrinter.g:216:75: ( seq_of_statements )?
					int alt38=2;
					int LA38_0 = input.LA(1);
					if ( (LA38_0==STATEMENTS) ) {
						alt38=1;
					}
					switch (alt38) {
						case 1 :
							// PLSQLPrinter.g:216:75: seq_of_statements
							{
							pushFollow(FOLLOW_seq_of_statements_in_create_package1550);
							seq_of_statements();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 217:5: -> template( \"not implemented: create_package\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: create_package");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_package"


	public static class package_obj_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "package_obj_spec"
	// PLSQLPrinter.g:222:1: package_obj_spec : ( variable_declaration -> template( \"not implemented: package_obj_spec\"| subtype_declaration -> template( \"not implemented: package_obj_spec\"| cursor_declaration -> template( \"not implemented: package_obj_spec\"| exception_declaration -> template( \"not implemented: package_obj_spec\"| record_declaration -> template( \"not implemented: package_obj_spec\"| table_declaration -> template( \"not implemented: package_obj_spec\"| procedure_spec -> template( \"not implemented: package_obj_spec\"| function_spec -> template( \"not implemented: package_obj_spec\"| pragma_declaration -> template( \"not implemented: package_obj_spec\");
	public final PLSQLPrinter.package_obj_spec_return package_obj_spec() throws RecognitionException {
		PLSQLPrinter.package_obj_spec_return retval = new PLSQLPrinter.package_obj_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:223:5: ( variable_declaration -> template( \"not implemented: package_obj_spec\"| subtype_declaration -> template( \"not implemented: package_obj_spec\"| cursor_declaration -> template( \"not implemented: package_obj_spec\"| exception_declaration -> template( \"not implemented: package_obj_spec\"| record_declaration -> template( \"not implemented: package_obj_spec\"| table_declaration -> template( \"not implemented: package_obj_spec\"| procedure_spec -> template( \"not implemented: package_obj_spec\"| function_spec -> template( \"not implemented: package_obj_spec\"| pragma_declaration -> template( \"not implemented: package_obj_spec\")
			int alt40=9;
			switch ( input.LA(1) ) {
			case VARIABLE_DECLARE:
				{
				alt40=1;
				}
				break;
			case SUBTYPE_DECLARE:
				{
				alt40=2;
				}
				break;
			case CURSOR_DECLARE:
				{
				alt40=3;
				}
				break;
			case EXCEPTION_DECLARE:
				{
				alt40=4;
				}
				break;
			case RECORD_TYPE_DECLARE:
			case RECORD_VAR_DECLARE:
				{
				alt40=5;
				}
				break;
			case TABLE_TYPE_DECLARE:
			case TABLE_VAR_DECLARE:
				{
				alt40=6;
				}
				break;
			case PROCEDURE_SPEC:
				{
				alt40=7;
				}
				break;
			case FUNCTION_SPEC:
				{
				alt40=8;
				}
				break;
			case PRAGMA_DECLARE:
				{
				alt40=9;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 40, 0, input);
				throw nvae;
			}
			switch (alt40) {
				case 1 :
					// PLSQLPrinter.g:223:10: variable_declaration
					{
					pushFollow(FOLLOW_variable_declaration_in_package_obj_spec1588);
					variable_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 224:5: -> template( \"not implemented: package_obj_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_spec");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:225:11: subtype_declaration
					{
					pushFollow(FOLLOW_subtype_declaration_in_package_obj_spec1614);
					subtype_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 226:5: -> template( \"not implemented: package_obj_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_spec");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:227:11: cursor_declaration
					{
					pushFollow(FOLLOW_cursor_declaration_in_package_obj_spec1640);
					cursor_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 228:5: -> template( \"not implemented: package_obj_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_spec");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:229:11: exception_declaration
					{
					pushFollow(FOLLOW_exception_declaration_in_package_obj_spec1666);
					exception_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 230:5: -> template( \"not implemented: package_obj_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_spec");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:231:11: record_declaration
					{
					pushFollow(FOLLOW_record_declaration_in_package_obj_spec1692);
					record_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 232:5: -> template( \"not implemented: package_obj_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_spec");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:233:11: table_declaration
					{
					pushFollow(FOLLOW_table_declaration_in_package_obj_spec1718);
					table_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 234:5: -> template( \"not implemented: package_obj_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_spec");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:235:11: procedure_spec
					{
					pushFollow(FOLLOW_procedure_spec_in_package_obj_spec1744);
					procedure_spec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 236:5: -> template( \"not implemented: package_obj_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_spec");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:237:11: function_spec
					{
					pushFollow(FOLLOW_function_spec_in_package_obj_spec1770);
					function_spec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 238:5: -> template( \"not implemented: package_obj_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_spec");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:239:11: pragma_declaration
					{
					pushFollow(FOLLOW_pragma_declaration_in_package_obj_spec1796);
					pragma_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 240:5: -> template( \"not implemented: package_obj_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_spec");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "package_obj_spec"


	public static class procedure_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "procedure_spec"
	// PLSQLPrinter.g:243:1: procedure_spec : ^( PROCEDURE_SPEC procedure_name ^( PARAMETERS ( parameter )* ) ( ^( CALL_MODE call_spec ) )? ) -> template( \"not implemented: procedure_spec\";
	public final PLSQLPrinter.procedure_spec_return procedure_spec() throws RecognitionException {
		PLSQLPrinter.procedure_spec_return retval = new PLSQLPrinter.procedure_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:244:5: ( ^( PROCEDURE_SPEC procedure_name ^( PARAMETERS ( parameter )* ) ( ^( CALL_MODE call_spec ) )? ) -> template( \"not implemented: procedure_spec\")
			// PLSQLPrinter.g:244:11: ^( PROCEDURE_SPEC procedure_name ^( PARAMETERS ( parameter )* ) ( ^( CALL_MODE call_spec ) )? )
			{
			match(input,PROCEDURE_SPEC,FOLLOW_PROCEDURE_SPEC_in_procedure_spec1832); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_procedure_name_in_procedure_spec1834);
			procedure_name();
			state._fsp--;

			match(input,PARAMETERS,FOLLOW_PARAMETERS_in_procedure_spec1837); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:244:56: ( parameter )*
				loop41:
				while (true) {
					int alt41=2;
					int LA41_0 = input.LA(1);
					if ( (LA41_0==PARAMETER) ) {
						alt41=1;
					}

					switch (alt41) {
					case 1 :
						// PLSQLPrinter.g:244:56: parameter
						{
						pushFollow(FOLLOW_parameter_in_procedure_spec1839);
						parameter();
						state._fsp--;

						}
						break;

					default :
						break loop41;
					}
				}

				match(input, Token.UP, null); 
			}

			// PLSQLPrinter.g:245:13: ( ^( CALL_MODE call_spec ) )?
			int alt42=2;
			int LA42_0 = input.LA(1);
			if ( (LA42_0==CALL_MODE) ) {
				alt42=1;
			}
			switch (alt42) {
				case 1 :
					// PLSQLPrinter.g:245:14: ^( CALL_MODE call_spec )
					{
					match(input,CALL_MODE,FOLLOW_CALL_MODE_in_procedure_spec1857); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_call_spec_in_procedure_spec1859);
					call_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 247:5: -> template( \"not implemented: procedure_spec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: procedure_spec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "procedure_spec"


	public static class function_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "function_spec"
	// PLSQLPrinter.g:250:1: function_spec : ^( FUNCTION_SPEC function_name ( type_spec | SELF_VK ) ^( PARAMETERS ( parameter )* ) ( invoker_rights_clause )* ( parallel_enable_clause )* ( result_cache_clause )* ( DETERMINISTIC_VK )* ( PIPELINED_VK )? ( ^( CALL_MODE call_spec ) | ^( USING_MODE ( AGGREGATE_VK )? implementation_type_name ) | ^( EXTERNAL_VK expression ) )? ) -> template( \"not implemented: function_spec\";
	public final PLSQLPrinter.function_spec_return function_spec() throws RecognitionException {
		PLSQLPrinter.function_spec_return retval = new PLSQLPrinter.function_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:251:5: ( ^( FUNCTION_SPEC function_name ( type_spec | SELF_VK ) ^( PARAMETERS ( parameter )* ) ( invoker_rights_clause )* ( parallel_enable_clause )* ( result_cache_clause )* ( DETERMINISTIC_VK )* ( PIPELINED_VK )? ( ^( CALL_MODE call_spec ) | ^( USING_MODE ( AGGREGATE_VK )? implementation_type_name ) | ^( EXTERNAL_VK expression ) )? ) -> template( \"not implemented: function_spec\")
			// PLSQLPrinter.g:251:10: ^( FUNCTION_SPEC function_name ( type_spec | SELF_VK ) ^( PARAMETERS ( parameter )* ) ( invoker_rights_clause )* ( parallel_enable_clause )* ( result_cache_clause )* ( DETERMINISTIC_VK )* ( PIPELINED_VK )? ( ^( CALL_MODE call_spec ) | ^( USING_MODE ( AGGREGATE_VK )? implementation_type_name ) | ^( EXTERNAL_VK expression ) )? )
			{
			match(input,FUNCTION_SPEC,FOLLOW_FUNCTION_SPEC_in_function_spec1904); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_function_name_in_function_spec1906);
			function_name();
			state._fsp--;

			// PLSQLPrinter.g:251:40: ( type_spec | SELF_VK )
			int alt43=2;
			int LA43_0 = input.LA(1);
			if ( (LA43_0==CUSTOM_TYPE||LA43_0==INTERVAL_DATATYPE||LA43_0==NATIVE_DATATYPE) ) {
				alt43=1;
			}
			else if ( (LA43_0==SELF_VK) ) {
				alt43=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 43, 0, input);
				throw nvae;
			}

			switch (alt43) {
				case 1 :
					// PLSQLPrinter.g:251:41: type_spec
					{
					pushFollow(FOLLOW_type_spec_in_function_spec1909);
					type_spec();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:251:51: SELF_VK
					{
					match(input,SELF_VK,FOLLOW_SELF_VK_in_function_spec1911); 
					}
					break;

			}

			match(input,PARAMETERS,FOLLOW_PARAMETERS_in_function_spec1915); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:251:73: ( parameter )*
				loop44:
				while (true) {
					int alt44=2;
					int LA44_0 = input.LA(1);
					if ( (LA44_0==PARAMETER) ) {
						alt44=1;
					}

					switch (alt44) {
					case 1 :
						// PLSQLPrinter.g:251:73: parameter
						{
						pushFollow(FOLLOW_parameter_in_function_spec1917);
						parameter();
						state._fsp--;

						}
						break;

					default :
						break loop44;
					}
				}

				match(input, Token.UP, null); 
			}

			// PLSQLPrinter.g:252:13: ( invoker_rights_clause )*
			loop45:
			while (true) {
				int alt45=2;
				int LA45_0 = input.LA(1);
				if ( (LA45_0==AUTHID_VK) ) {
					alt45=1;
				}

				switch (alt45) {
				case 1 :
					// PLSQLPrinter.g:252:13: invoker_rights_clause
					{
					pushFollow(FOLLOW_invoker_rights_clause_in_function_spec1933);
					invoker_rights_clause();
					state._fsp--;

					}
					break;

				default :
					break loop45;
				}
			}

			// PLSQLPrinter.g:252:36: ( parallel_enable_clause )*
			loop46:
			while (true) {
				int alt46=2;
				int LA46_0 = input.LA(1);
				if ( (LA46_0==PARALLEL_ENABLE_VK) ) {
					alt46=1;
				}

				switch (alt46) {
				case 1 :
					// PLSQLPrinter.g:252:36: parallel_enable_clause
					{
					pushFollow(FOLLOW_parallel_enable_clause_in_function_spec1936);
					parallel_enable_clause();
					state._fsp--;

					}
					break;

				default :
					break loop46;
				}
			}

			// PLSQLPrinter.g:252:60: ( result_cache_clause )*
			loop47:
			while (true) {
				int alt47=2;
				int LA47_0 = input.LA(1);
				if ( (LA47_0==RESULT_CACHE_VK) ) {
					alt47=1;
				}

				switch (alt47) {
				case 1 :
					// PLSQLPrinter.g:252:60: result_cache_clause
					{
					pushFollow(FOLLOW_result_cache_clause_in_function_spec1939);
					result_cache_clause();
					state._fsp--;

					}
					break;

				default :
					break loop47;
				}
			}

			// PLSQLPrinter.g:252:81: ( DETERMINISTIC_VK )*
			loop48:
			while (true) {
				int alt48=2;
				int LA48_0 = input.LA(1);
				if ( (LA48_0==DETERMINISTIC_VK) ) {
					alt48=1;
				}

				switch (alt48) {
				case 1 :
					// PLSQLPrinter.g:252:81: DETERMINISTIC_VK
					{
					match(input,DETERMINISTIC_VK,FOLLOW_DETERMINISTIC_VK_in_function_spec1942); 
					}
					break;

				default :
					break loop48;
				}
			}

			// PLSQLPrinter.g:252:99: ( PIPELINED_VK )?
			int alt49=2;
			int LA49_0 = input.LA(1);
			if ( (LA49_0==PIPELINED_VK) ) {
				alt49=1;
			}
			switch (alt49) {
				case 1 :
					// PLSQLPrinter.g:252:99: PIPELINED_VK
					{
					match(input,PIPELINED_VK,FOLLOW_PIPELINED_VK_in_function_spec1945); 
					}
					break;

			}

			// PLSQLPrinter.g:253:13: ( ^( CALL_MODE call_spec ) | ^( USING_MODE ( AGGREGATE_VK )? implementation_type_name ) | ^( EXTERNAL_VK expression ) )?
			int alt51=4;
			switch ( input.LA(1) ) {
				case CALL_MODE:
					{
					alt51=1;
					}
					break;
				case USING_MODE:
					{
					alt51=2;
					}
					break;
				case EXTERNAL_VK:
					{
					alt51=3;
					}
					break;
			}
			switch (alt51) {
				case 1 :
					// PLSQLPrinter.g:253:18: ^( CALL_MODE call_spec )
					{
					match(input,CALL_MODE,FOLLOW_CALL_MODE_in_function_spec1966); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_call_spec_in_function_spec1968);
					call_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:254:18: ^( USING_MODE ( AGGREGATE_VK )? implementation_type_name )
					{
					match(input,USING_MODE,FOLLOW_USING_MODE_in_function_spec1989); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:254:31: ( AGGREGATE_VK )?
					int alt50=2;
					int LA50_0 = input.LA(1);
					if ( (LA50_0==AGGREGATE_VK) ) {
						alt50=1;
					}
					switch (alt50) {
						case 1 :
							// PLSQLPrinter.g:254:31: AGGREGATE_VK
							{
							match(input,AGGREGATE_VK,FOLLOW_AGGREGATE_VK_in_function_spec1991); 
							}
							break;

					}

					pushFollow(FOLLOW_implementation_type_name_in_function_spec1994);
					implementation_type_name();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 3 :
					// PLSQLPrinter.g:255:18: ^( EXTERNAL_VK expression )
					{
					match(input,EXTERNAL_VK,FOLLOW_EXTERNAL_VK_in_function_spec2015); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_function_spec2017);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 258:5: -> template( \"not implemented: function_spec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: function_spec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "function_spec"


	public static class package_obj_body_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "package_obj_body"
	// PLSQLPrinter.g:261:1: package_obj_body : ( variable_declaration -> template( \"not implemented: package_obj_body\"| subtype_declaration -> template( \"not implemented: package_obj_body\"| cursor_declaration -> template( \"not implemented: package_obj_body\"| exception_declaration -> template( \"not implemented: package_obj_body\"| record_declaration -> template( \"not implemented: package_obj_body\"| table_declaration -> template( \"not implemented: package_obj_body\"| create_procedure_body -> template( \"not implemented: package_obj_body\"| create_function_body -> template( \"not implemented: package_obj_body\"| create_type -> template( \"not implemented: package_obj_body\");
	public final PLSQLPrinter.package_obj_body_return package_obj_body() throws RecognitionException {
		PLSQLPrinter.package_obj_body_return retval = new PLSQLPrinter.package_obj_body_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:262:5: ( variable_declaration -> template( \"not implemented: package_obj_body\"| subtype_declaration -> template( \"not implemented: package_obj_body\"| cursor_declaration -> template( \"not implemented: package_obj_body\"| exception_declaration -> template( \"not implemented: package_obj_body\"| record_declaration -> template( \"not implemented: package_obj_body\"| table_declaration -> template( \"not implemented: package_obj_body\"| create_procedure_body -> template( \"not implemented: package_obj_body\"| create_function_body -> template( \"not implemented: package_obj_body\"| create_type -> template( \"not implemented: package_obj_body\")
			int alt52=9;
			switch ( input.LA(1) ) {
			case VARIABLE_DECLARE:
				{
				alt52=1;
				}
				break;
			case SUBTYPE_DECLARE:
				{
				alt52=2;
				}
				break;
			case CURSOR_DECLARE:
				{
				alt52=3;
				}
				break;
			case EXCEPTION_DECLARE:
				{
				alt52=4;
				}
				break;
			case RECORD_TYPE_DECLARE:
			case RECORD_VAR_DECLARE:
				{
				alt52=5;
				}
				break;
			case TABLE_TYPE_DECLARE:
			case TABLE_VAR_DECLARE:
				{
				alt52=6;
				}
				break;
			case CREATE_PROCEDURE:
				{
				alt52=7;
				}
				break;
			case CREATE_FUNCTION:
				{
				alt52=8;
				}
				break;
			case CREATE_TYPE_BODY:
			case CREATE_TYPE_SPEC:
				{
				alt52=9;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 52, 0, input);
				throw nvae;
			}
			switch (alt52) {
				case 1 :
					// PLSQLPrinter.g:262:11: variable_declaration
					{
					pushFollow(FOLLOW_variable_declaration_in_package_obj_body2078);
					variable_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 263:5: -> template( \"not implemented: package_obj_body\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_body");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:264:11: subtype_declaration
					{
					pushFollow(FOLLOW_subtype_declaration_in_package_obj_body2105);
					subtype_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 265:5: -> template( \"not implemented: package_obj_body\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_body");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:266:11: cursor_declaration
					{
					pushFollow(FOLLOW_cursor_declaration_in_package_obj_body2132);
					cursor_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 267:5: -> template( \"not implemented: package_obj_body\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_body");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:268:11: exception_declaration
					{
					pushFollow(FOLLOW_exception_declaration_in_package_obj_body2159);
					exception_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 269:5: -> template( \"not implemented: package_obj_body\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_body");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:270:11: record_declaration
					{
					pushFollow(FOLLOW_record_declaration_in_package_obj_body2186);
					record_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 271:5: -> template( \"not implemented: package_obj_body\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_body");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:272:11: table_declaration
					{
					pushFollow(FOLLOW_table_declaration_in_package_obj_body2212);
					table_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 273:5: -> template( \"not implemented: package_obj_body\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_body");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:274:11: create_procedure_body
					{
					pushFollow(FOLLOW_create_procedure_body_in_package_obj_body2238);
					create_procedure_body();
					state._fsp--;

					// TEMPLATE REWRITE
					// 275:5: -> template( \"not implemented: package_obj_body\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_body");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:276:11: create_function_body
					{
					pushFollow(FOLLOW_create_function_body_in_package_obj_body2264);
					create_function_body();
					state._fsp--;

					// TEMPLATE REWRITE
					// 277:5: -> template( \"not implemented: package_obj_body\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_body");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:278:11: create_type
					{
					pushFollow(FOLLOW_create_type_in_package_obj_body2290);
					create_type();
					state._fsp--;

					// TEMPLATE REWRITE
					// 279:5: -> template( \"not implemented: package_obj_body\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: package_obj_body");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "package_obj_body"


	public static class drop_procedure_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "drop_procedure"
	// PLSQLPrinter.g:288:1: drop_procedure : ^( DROP_PROCEDURE procedure_name ) -> template( \"not implemented: drop_procedure\";
	public final PLSQLPrinter.drop_procedure_return drop_procedure() throws RecognitionException {
		PLSQLPrinter.drop_procedure_return retval = new PLSQLPrinter.drop_procedure_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:289:5: ( ^( DROP_PROCEDURE procedure_name ) -> template( \"not implemented: drop_procedure\")
			// PLSQLPrinter.g:289:10: ^( DROP_PROCEDURE procedure_name )
			{
			match(input,DROP_PROCEDURE,FOLLOW_DROP_PROCEDURE_in_drop_procedure2331); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_procedure_name_in_drop_procedure2333);
			procedure_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 290:5: -> template( \"not implemented: drop_procedure\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: drop_procedure");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_procedure"


	public static class alter_procedure_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_procedure"
	// PLSQLPrinter.g:293:1: alter_procedure : ^( ALTER_PROCEDURE procedure_name ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) -> template( \"not implemented: alter_procedure\";
	public final PLSQLPrinter.alter_procedure_return alter_procedure() throws RecognitionException {
		PLSQLPrinter.alter_procedure_return retval = new PLSQLPrinter.alter_procedure_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:294:5: ( ^( ALTER_PROCEDURE procedure_name ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) -> template( \"not implemented: alter_procedure\")
			// PLSQLPrinter.g:294:10: ^( ALTER_PROCEDURE procedure_name ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* )
			{
			match(input,ALTER_PROCEDURE,FOLLOW_ALTER_PROCEDURE_in_alter_procedure2369); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_procedure_name_in_alter_procedure2371);
			procedure_name();
			state._fsp--;

			// PLSQLPrinter.g:294:43: ( DEBUG_VK )?
			int alt53=2;
			int LA53_0 = input.LA(1);
			if ( (LA53_0==DEBUG_VK) ) {
				alt53=1;
			}
			switch (alt53) {
				case 1 :
					// PLSQLPrinter.g:294:43: DEBUG_VK
					{
					match(input,DEBUG_VK,FOLLOW_DEBUG_VK_in_alter_procedure2373); 
					}
					break;

			}

			// PLSQLPrinter.g:294:53: ( REUSE_VK )?
			int alt54=2;
			int LA54_0 = input.LA(1);
			if ( (LA54_0==REUSE_VK) ) {
				alt54=1;
			}
			switch (alt54) {
				case 1 :
					// PLSQLPrinter.g:294:53: REUSE_VK
					{
					match(input,REUSE_VK,FOLLOW_REUSE_VK_in_alter_procedure2376); 
					}
					break;

			}

			// PLSQLPrinter.g:294:63: ( compiler_parameters_clause )*
			loop55:
			while (true) {
				int alt55=2;
				int LA55_0 = input.LA(1);
				if ( (LA55_0==COMPILER_PARAMETER) ) {
					alt55=1;
				}

				switch (alt55) {
				case 1 :
					// PLSQLPrinter.g:294:63: compiler_parameters_clause
					{
					pushFollow(FOLLOW_compiler_parameters_clause_in_alter_procedure2379);
					compiler_parameters_clause();
					state._fsp--;

					}
					break;

				default :
					break loop55;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 295:5: -> template( \"not implemented: alter_procedure\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: alter_procedure");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_procedure"


	public static class create_procedure_body_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "create_procedure_body"
	// PLSQLPrinter.g:298:1: create_procedure_body : ^( CREATE_PROCEDURE ( REPLACE_VK )? procedure_name ^( PARAMETERS ( parameter )* ) ( invoker_rights_clause )? ( EXTERNAL_VK | ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) ) ) -> template( \"not implemented: create_procedure_body\";
	public final PLSQLPrinter.create_procedure_body_return create_procedure_body() throws RecognitionException {
		PLSQLPrinter.create_procedure_body_return retval = new PLSQLPrinter.create_procedure_body_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:299:5: ( ^( CREATE_PROCEDURE ( REPLACE_VK )? procedure_name ^( PARAMETERS ( parameter )* ) ( invoker_rights_clause )? ( EXTERNAL_VK | ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) ) ) -> template( \"not implemented: create_procedure_body\")
			// PLSQLPrinter.g:299:10: ^( CREATE_PROCEDURE ( REPLACE_VK )? procedure_name ^( PARAMETERS ( parameter )* ) ( invoker_rights_clause )? ( EXTERNAL_VK | ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) ) )
			{
			match(input,CREATE_PROCEDURE,FOLLOW_CREATE_PROCEDURE_in_create_procedure_body2416); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:299:29: ( REPLACE_VK )?
			int alt56=2;
			int LA56_0 = input.LA(1);
			if ( (LA56_0==REPLACE_VK) ) {
				alt56=1;
			}
			switch (alt56) {
				case 1 :
					// PLSQLPrinter.g:299:29: REPLACE_VK
					{
					match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_create_procedure_body2418); 
					}
					break;

			}

			pushFollow(FOLLOW_procedure_name_in_create_procedure_body2421);
			procedure_name();
			state._fsp--;

			match(input,PARAMETERS,FOLLOW_PARAMETERS_in_create_procedure_body2424); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:299:69: ( parameter )*
				loop57:
				while (true) {
					int alt57=2;
					int LA57_0 = input.LA(1);
					if ( (LA57_0==PARAMETER) ) {
						alt57=1;
					}

					switch (alt57) {
					case 1 :
						// PLSQLPrinter.g:299:69: parameter
						{
						pushFollow(FOLLOW_parameter_in_create_procedure_body2426);
						parameter();
						state._fsp--;

						}
						break;

					default :
						break loop57;
					}
				}

				match(input, Token.UP, null); 
			}

			// PLSQLPrinter.g:299:81: ( invoker_rights_clause )?
			int alt58=2;
			int LA58_0 = input.LA(1);
			if ( (LA58_0==AUTHID_VK) ) {
				alt58=1;
			}
			switch (alt58) {
				case 1 :
					// PLSQLPrinter.g:299:81: invoker_rights_clause
					{
					pushFollow(FOLLOW_invoker_rights_clause_in_create_procedure_body2430);
					invoker_rights_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:300:13: ( EXTERNAL_VK | ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) )
			int alt60=3;
			switch ( input.LA(1) ) {
			case EXTERNAL_VK:
				{
				alt60=1;
				}
				break;
			case CALL_MODE:
				{
				alt60=2;
				}
				break;
			case BODY_MODE:
				{
				alt60=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 60, 0, input);
				throw nvae;
			}
			switch (alt60) {
				case 1 :
					// PLSQLPrinter.g:300:18: EXTERNAL_VK
					{
					match(input,EXTERNAL_VK,FOLLOW_EXTERNAL_VK_in_create_procedure_body2450); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:301:18: ^( CALL_MODE call_spec )
					{
					match(input,CALL_MODE,FOLLOW_CALL_MODE_in_create_procedure_body2470); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_call_spec_in_create_procedure_body2472);
					call_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 3 :
					// PLSQLPrinter.g:302:18: ^( BODY_MODE ( declare_spec )* body )
					{
					match(input,BODY_MODE,FOLLOW_BODY_MODE_in_create_procedure_body2493); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:302:30: ( declare_spec )*
					loop59:
					while (true) {
						int alt59=2;
						int LA59_0 = input.LA(1);
						if ( (LA59_0==CREATE_FUNCTION||LA59_0==CREATE_PROCEDURE||(LA59_0 >= CREATE_TYPE_BODY && LA59_0 <= CREATE_TYPE_SPEC)||LA59_0==CURSOR_DECLARE||LA59_0==EXCEPTION_DECLARE||LA59_0==PRAGMA_DECLARE||(LA59_0 >= RECORD_TYPE_DECLARE && LA59_0 <= RECORD_VAR_DECLARE)||LA59_0==SUBTYPE_DECLARE||(LA59_0 >= TABLE_TYPE_DECLARE && LA59_0 <= TABLE_VAR_DECLARE)||LA59_0==VARIABLE_DECLARE) ) {
							alt59=1;
						}

						switch (alt59) {
						case 1 :
							// PLSQLPrinter.g:302:30: declare_spec
							{
							pushFollow(FOLLOW_declare_spec_in_create_procedure_body2495);
							declare_spec();
							state._fsp--;

							}
							break;

						default :
							break loop59;
						}
					}

					pushFollow(FOLLOW_body_in_create_procedure_body2498);
					body();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 305:5: -> template( \"not implemented: create_procedure_body\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: create_procedure_body");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_procedure_body"


	public static class drop_trigger_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "drop_trigger"
	// PLSQLPrinter.g:312:1: drop_trigger : ^( DROP_TRIGGER trigger_name ) -> template( \"not implemented: drop_trigger\";
	public final PLSQLPrinter.drop_trigger_return drop_trigger() throws RecognitionException {
		PLSQLPrinter.drop_trigger_return retval = new PLSQLPrinter.drop_trigger_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:313:5: ( ^( DROP_TRIGGER trigger_name ) -> template( \"not implemented: drop_trigger\")
			// PLSQLPrinter.g:313:10: ^( DROP_TRIGGER trigger_name )
			{
			match(input,DROP_TRIGGER,FOLLOW_DROP_TRIGGER_in_drop_trigger2562); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_trigger_name_in_drop_trigger2564);
			trigger_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 314:5: -> template( \"not implemented: drop_trigger\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: drop_trigger");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_trigger"


	public static class alter_trigger_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_trigger"
	// PLSQLPrinter.g:317:1: alter_trigger : ^( ALTER_TRIGGER trigger_name ( ( ENABLE_VK | DISABLE_VK ) | ^( RENAME_VK trigger_name ) | ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) ) -> template( \"not implemented: alter_trigger\";
	public final PLSQLPrinter.alter_trigger_return alter_trigger() throws RecognitionException {
		PLSQLPrinter.alter_trigger_return retval = new PLSQLPrinter.alter_trigger_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:318:5: ( ^( ALTER_TRIGGER trigger_name ( ( ENABLE_VK | DISABLE_VK ) | ^( RENAME_VK trigger_name ) | ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) ) -> template( \"not implemented: alter_trigger\")
			// PLSQLPrinter.g:318:10: ^( ALTER_TRIGGER trigger_name ( ( ENABLE_VK | DISABLE_VK ) | ^( RENAME_VK trigger_name ) | ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) )
			{
			match(input,ALTER_TRIGGER,FOLLOW_ALTER_TRIGGER_in_alter_trigger2600); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_trigger_name_in_alter_trigger2602);
			trigger_name();
			state._fsp--;

			// PLSQLPrinter.g:319:13: ( ( ENABLE_VK | DISABLE_VK ) | ^( RENAME_VK trigger_name ) | ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* )
			int alt65=3;
			switch ( input.LA(1) ) {
			case DISABLE_VK:
			case ENABLE_VK:
				{
				alt65=1;
				}
				break;
			case RENAME_VK:
				{
				alt65=2;
				}
				break;
			case UP:
			case COMPILER_PARAMETER:
			case DEBUG_VK:
			case REUSE_VK:
				{
				alt65=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 65, 0, input);
				throw nvae;
			}
			switch (alt65) {
				case 1 :
					// PLSQLPrinter.g:319:18: ( ENABLE_VK | DISABLE_VK )
					{
					// PLSQLPrinter.g:319:18: ( ENABLE_VK | DISABLE_VK )
					int alt61=2;
					int LA61_0 = input.LA(1);
					if ( (LA61_0==ENABLE_VK) ) {
						alt61=1;
					}
					else if ( (LA61_0==DISABLE_VK) ) {
						alt61=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 61, 0, input);
						throw nvae;
					}

					switch (alt61) {
						case 1 :
							// PLSQLPrinter.g:319:19: ENABLE_VK
							{
							match(input,ENABLE_VK,FOLLOW_ENABLE_VK_in_alter_trigger2623); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:319:29: DISABLE_VK
							{
							match(input,DISABLE_VK,FOLLOW_DISABLE_VK_in_alter_trigger2625); 
							}
							break;

					}

					}
					break;
				case 2 :
					// PLSQLPrinter.g:320:18: ^( RENAME_VK trigger_name )
					{
					match(input,RENAME_VK,FOLLOW_RENAME_VK_in_alter_trigger2646); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_trigger_name_in_alter_trigger2648);
					trigger_name();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 3 :
					// PLSQLPrinter.g:321:18: ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )*
					{
					// PLSQLPrinter.g:321:18: ( DEBUG_VK )?
					int alt62=2;
					int LA62_0 = input.LA(1);
					if ( (LA62_0==DEBUG_VK) ) {
						alt62=1;
					}
					switch (alt62) {
						case 1 :
							// PLSQLPrinter.g:321:18: DEBUG_VK
							{
							match(input,DEBUG_VK,FOLLOW_DEBUG_VK_in_alter_trigger2668); 
							}
							break;

					}

					// PLSQLPrinter.g:321:28: ( REUSE_VK )?
					int alt63=2;
					int LA63_0 = input.LA(1);
					if ( (LA63_0==REUSE_VK) ) {
						alt63=1;
					}
					switch (alt63) {
						case 1 :
							// PLSQLPrinter.g:321:28: REUSE_VK
							{
							match(input,REUSE_VK,FOLLOW_REUSE_VK_in_alter_trigger2671); 
							}
							break;

					}

					// PLSQLPrinter.g:321:38: ( compiler_parameters_clause )*
					loop64:
					while (true) {
						int alt64=2;
						int LA64_0 = input.LA(1);
						if ( (LA64_0==COMPILER_PARAMETER) ) {
							alt64=1;
						}

						switch (alt64) {
						case 1 :
							// PLSQLPrinter.g:321:38: compiler_parameters_clause
							{
							pushFollow(FOLLOW_compiler_parameters_clause_in_alter_trigger2674);
							compiler_parameters_clause();
							state._fsp--;

							}
							break;

						default :
							break loop64;
						}
					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 324:5: -> template( \"not implemented: alter_trigger\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: alter_trigger");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_trigger"


	public static class create_trigger_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "create_trigger"
	// PLSQLPrinter.g:327:1: create_trigger : ^( CREATE_TRIGGER ( REPLACE_VK )? trigger_name ( simple_dml_trigger )? ( compound_dml_trigger )? ( non_dml_trigger )? ( trigger_follows_clause )? ( ENABLE_VK | DISABLE_VK )? ( trigger_when_clause )? trigger_body ) -> template( \"not implemented: create_trigger\";
	public final PLSQLPrinter.create_trigger_return create_trigger() throws RecognitionException {
		PLSQLPrinter.create_trigger_return retval = new PLSQLPrinter.create_trigger_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:328:5: ( ^( CREATE_TRIGGER ( REPLACE_VK )? trigger_name ( simple_dml_trigger )? ( compound_dml_trigger )? ( non_dml_trigger )? ( trigger_follows_clause )? ( ENABLE_VK | DISABLE_VK )? ( trigger_when_clause )? trigger_body ) -> template( \"not implemented: create_trigger\")
			// PLSQLPrinter.g:328:10: ^( CREATE_TRIGGER ( REPLACE_VK )? trigger_name ( simple_dml_trigger )? ( compound_dml_trigger )? ( non_dml_trigger )? ( trigger_follows_clause )? ( ENABLE_VK | DISABLE_VK )? ( trigger_when_clause )? trigger_body )
			{
			match(input,CREATE_TRIGGER,FOLLOW_CREATE_TRIGGER_in_create_trigger2734); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:328:27: ( REPLACE_VK )?
			int alt66=2;
			int LA66_0 = input.LA(1);
			if ( (LA66_0==REPLACE_VK) ) {
				alt66=1;
			}
			switch (alt66) {
				case 1 :
					// PLSQLPrinter.g:328:27: REPLACE_VK
					{
					match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_create_trigger2736); 
					}
					break;

			}

			pushFollow(FOLLOW_trigger_name_in_create_trigger2739);
			trigger_name();
			state._fsp--;

			// PLSQLPrinter.g:329:13: ( simple_dml_trigger )?
			int alt67=2;
			int LA67_0 = input.LA(1);
			if ( (LA67_0==SIMPLE_DML) ) {
				alt67=1;
			}
			switch (alt67) {
				case 1 :
					// PLSQLPrinter.g:329:13: simple_dml_trigger
					{
					pushFollow(FOLLOW_simple_dml_trigger_in_create_trigger2755);
					simple_dml_trigger();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:329:33: ( compound_dml_trigger )?
			int alt68=2;
			int LA68_0 = input.LA(1);
			if ( (LA68_0==COMPOUND_DML) ) {
				alt68=1;
			}
			switch (alt68) {
				case 1 :
					// PLSQLPrinter.g:329:33: compound_dml_trigger
					{
					pushFollow(FOLLOW_compound_dml_trigger_in_create_trigger2758);
					compound_dml_trigger();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:329:55: ( non_dml_trigger )?
			int alt69=2;
			int LA69_0 = input.LA(1);
			if ( (LA69_0==NON_DML) ) {
				alt69=1;
			}
			switch (alt69) {
				case 1 :
					// PLSQLPrinter.g:329:55: non_dml_trigger
					{
					pushFollow(FOLLOW_non_dml_trigger_in_create_trigger2761);
					non_dml_trigger();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:330:13: ( trigger_follows_clause )?
			int alt70=2;
			int LA70_0 = input.LA(1);
			if ( (LA70_0==FOLLOWS_VK) ) {
				alt70=1;
			}
			switch (alt70) {
				case 1 :
					// PLSQLPrinter.g:330:13: trigger_follows_clause
					{
					pushFollow(FOLLOW_trigger_follows_clause_in_create_trigger2776);
					trigger_follows_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:330:37: ( ENABLE_VK | DISABLE_VK )?
			int alt71=3;
			int LA71_0 = input.LA(1);
			if ( (LA71_0==ENABLE_VK) ) {
				alt71=1;
			}
			else if ( (LA71_0==DISABLE_VK) ) {
				alt71=2;
			}
			switch (alt71) {
				case 1 :
					// PLSQLPrinter.g:330:38: ENABLE_VK
					{
					match(input,ENABLE_VK,FOLLOW_ENABLE_VK_in_create_trigger2780); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:330:48: DISABLE_VK
					{
					match(input,DISABLE_VK,FOLLOW_DISABLE_VK_in_create_trigger2782); 
					}
					break;

			}

			// PLSQLPrinter.g:330:61: ( trigger_when_clause )?
			int alt72=2;
			int LA72_0 = input.LA(1);
			if ( (LA72_0==SQL92_RESERVED_WHEN) ) {
				alt72=1;
			}
			switch (alt72) {
				case 1 :
					// PLSQLPrinter.g:330:61: trigger_when_clause
					{
					pushFollow(FOLLOW_trigger_when_clause_in_create_trigger2786);
					trigger_when_clause();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_trigger_body_in_create_trigger2789);
			trigger_body();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 331:5: -> template( \"not implemented: create_trigger\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: create_trigger");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_trigger"


	public static class trigger_follows_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "trigger_follows_clause"
	// PLSQLPrinter.g:334:1: trigger_follows_clause : ^( FOLLOWS_VK ( trigger_name )+ ) -> template( \"not implemented: trigger_follows_clause\";
	public final PLSQLPrinter.trigger_follows_clause_return trigger_follows_clause() throws RecognitionException {
		PLSQLPrinter.trigger_follows_clause_return retval = new PLSQLPrinter.trigger_follows_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:335:5: ( ^( FOLLOWS_VK ( trigger_name )+ ) -> template( \"not implemented: trigger_follows_clause\")
			// PLSQLPrinter.g:335:10: ^( FOLLOWS_VK ( trigger_name )+ )
			{
			match(input,FOLLOWS_VK,FOLLOW_FOLLOWS_VK_in_trigger_follows_clause2825); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:335:23: ( trigger_name )+
			int cnt73=0;
			loop73:
			while (true) {
				int alt73=2;
				int LA73_0 = input.LA(1);
				if ( (LA73_0==TRIGGER_NAME) ) {
					alt73=1;
				}

				switch (alt73) {
				case 1 :
					// PLSQLPrinter.g:335:23: trigger_name
					{
					pushFollow(FOLLOW_trigger_name_in_trigger_follows_clause2827);
					trigger_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt73 >= 1 ) break loop73;
					EarlyExitException eee = new EarlyExitException(73, input);
					throw eee;
				}
				cnt73++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 336:5: -> template( \"not implemented: trigger_follows_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: trigger_follows_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "trigger_follows_clause"


	public static class trigger_when_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "trigger_when_clause"
	// PLSQLPrinter.g:339:1: trigger_when_clause : ^( SQL92_RESERVED_WHEN expression ) -> template( \"not implemented: trigger_when_clause\";
	public final PLSQLPrinter.trigger_when_clause_return trigger_when_clause() throws RecognitionException {
		PLSQLPrinter.trigger_when_clause_return retval = new PLSQLPrinter.trigger_when_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:340:5: ( ^( SQL92_RESERVED_WHEN expression ) -> template( \"not implemented: trigger_when_clause\")
			// PLSQLPrinter.g:340:10: ^( SQL92_RESERVED_WHEN expression )
			{
			match(input,SQL92_RESERVED_WHEN,FOLLOW_SQL92_RESERVED_WHEN_in_trigger_when_clause2864); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_trigger_when_clause2866);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 341:5: -> template( \"not implemented: trigger_when_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: trigger_when_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "trigger_when_clause"


	public static class simple_dml_trigger_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "simple_dml_trigger"
	// PLSQLPrinter.g:345:1: simple_dml_trigger : ^( SIMPLE_DML ( BEFORE_VK | AFTER_VK | INSTEAD_VK ) ( FOR_EACH_ROW )? ( referencing_clause )? dml_event_clause ) -> template( \"not implemented: simple_dml_trigger\";
	public final PLSQLPrinter.simple_dml_trigger_return simple_dml_trigger() throws RecognitionException {
		PLSQLPrinter.simple_dml_trigger_return retval = new PLSQLPrinter.simple_dml_trigger_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:346:5: ( ^( SIMPLE_DML ( BEFORE_VK | AFTER_VK | INSTEAD_VK ) ( FOR_EACH_ROW )? ( referencing_clause )? dml_event_clause ) -> template( \"not implemented: simple_dml_trigger\")
			// PLSQLPrinter.g:346:10: ^( SIMPLE_DML ( BEFORE_VK | AFTER_VK | INSTEAD_VK ) ( FOR_EACH_ROW )? ( referencing_clause )? dml_event_clause )
			{
			match(input,SIMPLE_DML,FOLLOW_SIMPLE_DML_in_simple_dml_trigger2903); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:346:23: ( BEFORE_VK | AFTER_VK | INSTEAD_VK )
			int alt74=3;
			switch ( input.LA(1) ) {
			case BEFORE_VK:
				{
				alt74=1;
				}
				break;
			case AFTER_VK:
				{
				alt74=2;
				}
				break;
			case INSTEAD_VK:
				{
				alt74=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 74, 0, input);
				throw nvae;
			}
			switch (alt74) {
				case 1 :
					// PLSQLPrinter.g:346:24: BEFORE_VK
					{
					match(input,BEFORE_VK,FOLLOW_BEFORE_VK_in_simple_dml_trigger2906); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:346:34: AFTER_VK
					{
					match(input,AFTER_VK,FOLLOW_AFTER_VK_in_simple_dml_trigger2908); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:346:43: INSTEAD_VK
					{
					match(input,INSTEAD_VK,FOLLOW_INSTEAD_VK_in_simple_dml_trigger2910); 
					}
					break;

			}

			// PLSQLPrinter.g:346:55: ( FOR_EACH_ROW )?
			int alt75=2;
			int LA75_0 = input.LA(1);
			if ( (LA75_0==FOR_EACH_ROW) ) {
				alt75=1;
			}
			switch (alt75) {
				case 1 :
					// PLSQLPrinter.g:346:55: FOR_EACH_ROW
					{
					match(input,FOR_EACH_ROW,FOLLOW_FOR_EACH_ROW_in_simple_dml_trigger2913); 
					}
					break;

			}

			// PLSQLPrinter.g:346:69: ( referencing_clause )?
			int alt76=2;
			int LA76_0 = input.LA(1);
			if ( (LA76_0==REFERENCING_VK) ) {
				alt76=1;
			}
			switch (alt76) {
				case 1 :
					// PLSQLPrinter.g:346:69: referencing_clause
					{
					pushFollow(FOLLOW_referencing_clause_in_simple_dml_trigger2916);
					referencing_clause();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_dml_event_clause_in_simple_dml_trigger2919);
			dml_event_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 347:5: -> template( \"not implemented: simple_dml_trigger\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: simple_dml_trigger");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "simple_dml_trigger"


	public static class compound_dml_trigger_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "compound_dml_trigger"
	// PLSQLPrinter.g:350:1: compound_dml_trigger : ^( COMPOUND_DML ( referencing_clause )? dml_event_clause ) -> template( \"not implemented: compound_dml_trigger\";
	public final PLSQLPrinter.compound_dml_trigger_return compound_dml_trigger() throws RecognitionException {
		PLSQLPrinter.compound_dml_trigger_return retval = new PLSQLPrinter.compound_dml_trigger_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:351:5: ( ^( COMPOUND_DML ( referencing_clause )? dml_event_clause ) -> template( \"not implemented: compound_dml_trigger\")
			// PLSQLPrinter.g:351:10: ^( COMPOUND_DML ( referencing_clause )? dml_event_clause )
			{
			match(input,COMPOUND_DML,FOLLOW_COMPOUND_DML_in_compound_dml_trigger2955); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:351:25: ( referencing_clause )?
			int alt77=2;
			int LA77_0 = input.LA(1);
			if ( (LA77_0==REFERENCING_VK) ) {
				alt77=1;
			}
			switch (alt77) {
				case 1 :
					// PLSQLPrinter.g:351:25: referencing_clause
					{
					pushFollow(FOLLOW_referencing_clause_in_compound_dml_trigger2957);
					referencing_clause();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_dml_event_clause_in_compound_dml_trigger2960);
			dml_event_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 352:5: -> template( \"not implemented: compound_dml_trigger\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: compound_dml_trigger");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "compound_dml_trigger"


	public static class non_dml_trigger_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "non_dml_trigger"
	// PLSQLPrinter.g:355:1: non_dml_trigger : ^( NON_DML ( BEFORE_VK | AFTER_VK ) ( non_dml_event )+ ( DATABASE_VK | ( schema_name )? SCHEMA_VK ) ) -> template( \"not implemented: non_dml_trigger\";
	public final PLSQLPrinter.non_dml_trigger_return non_dml_trigger() throws RecognitionException {
		PLSQLPrinter.non_dml_trigger_return retval = new PLSQLPrinter.non_dml_trigger_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:356:5: ( ^( NON_DML ( BEFORE_VK | AFTER_VK ) ( non_dml_event )+ ( DATABASE_VK | ( schema_name )? SCHEMA_VK ) ) -> template( \"not implemented: non_dml_trigger\")
			// PLSQLPrinter.g:356:10: ^( NON_DML ( BEFORE_VK | AFTER_VK ) ( non_dml_event )+ ( DATABASE_VK | ( schema_name )? SCHEMA_VK ) )
			{
			match(input,NON_DML,FOLLOW_NON_DML_in_non_dml_trigger2996); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:356:20: ( BEFORE_VK | AFTER_VK )
			int alt78=2;
			int LA78_0 = input.LA(1);
			if ( (LA78_0==BEFORE_VK) ) {
				alt78=1;
			}
			else if ( (LA78_0==AFTER_VK) ) {
				alt78=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 78, 0, input);
				throw nvae;
			}

			switch (alt78) {
				case 1 :
					// PLSQLPrinter.g:356:21: BEFORE_VK
					{
					match(input,BEFORE_VK,FOLLOW_BEFORE_VK_in_non_dml_trigger2999); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:356:31: AFTER_VK
					{
					match(input,AFTER_VK,FOLLOW_AFTER_VK_in_non_dml_trigger3001); 
					}
					break;

			}

			// PLSQLPrinter.g:356:41: ( non_dml_event )+
			int cnt79=0;
			loop79:
			while (true) {
				int alt79=2;
				switch ( input.LA(1) ) {
				case DATABASE_VK:
					{
					int LA79_1 = input.LA(2);
					if ( (LA79_1==SQL92_RESERVED_ALTER||LA79_1==SQL92_RESERVED_CREATE||LA79_1==SQL92_RESERVED_DROP||LA79_1==SQL92_RESERVED_GRANT||LA79_1==SQL92_RESERVED_REVOKE||LA79_1==ANALYZE_VK||LA79_1==ASSOCIATE_VK||LA79_1==AUDIT_VK||LA79_1==COMMENT_VK||LA79_1==DATABASE_VK||(LA79_1 >= DB_ROLE_CHANGE_VK && LA79_1 <= DDL_VK)||LA79_1==DISASSOCIATE_VK||LA79_1==FOLLOWS_VK||(LA79_1 >= LOGOFF_VK && LA79_1 <= LOGON_VK)||LA79_1==NOAUDIT_VK||LA79_1==RENAME_VK||(LA79_1 >= SCHEMA_NAME && LA79_1 <= SCHEMA_VK)||LA79_1==SERVERERROR_VK||LA79_1==SHUTDOWN_VK||LA79_1==STARTUP_VK||LA79_1==SUSPEND_VK||LA79_1==TRUNCATE_VK) ) {
						alt79=1;
					}

					}
					break;
				case SCHEMA_VK:
					{
					int LA79_3 = input.LA(2);
					if ( (LA79_3==SQL92_RESERVED_ALTER||LA79_3==SQL92_RESERVED_CREATE||LA79_3==SQL92_RESERVED_DROP||LA79_3==SQL92_RESERVED_GRANT||LA79_3==SQL92_RESERVED_REVOKE||LA79_3==ANALYZE_VK||LA79_3==ASSOCIATE_VK||LA79_3==AUDIT_VK||LA79_3==COMMENT_VK||LA79_3==DATABASE_VK||(LA79_3 >= DB_ROLE_CHANGE_VK && LA79_3 <= DDL_VK)||LA79_3==DISASSOCIATE_VK||LA79_3==FOLLOWS_VK||(LA79_3 >= LOGOFF_VK && LA79_3 <= LOGON_VK)||LA79_3==NOAUDIT_VK||LA79_3==RENAME_VK||(LA79_3 >= SCHEMA_NAME && LA79_3 <= SCHEMA_VK)||LA79_3==SERVERERROR_VK||LA79_3==SHUTDOWN_VK||LA79_3==STARTUP_VK||LA79_3==SUSPEND_VK||LA79_3==TRUNCATE_VK) ) {
						alt79=1;
					}

					}
					break;
				case SQL92_RESERVED_ALTER:
				case SQL92_RESERVED_CREATE:
				case SQL92_RESERVED_DROP:
				case SQL92_RESERVED_GRANT:
				case SQL92_RESERVED_REVOKE:
				case ANALYZE_VK:
				case ASSOCIATE_VK:
				case AUDIT_VK:
				case COMMENT_VK:
				case DB_ROLE_CHANGE_VK:
				case DDL_VK:
				case DISASSOCIATE_VK:
				case FOLLOWS_VK:
				case LOGOFF_VK:
				case LOGON_VK:
				case NOAUDIT_VK:
				case RENAME_VK:
				case SERVERERROR_VK:
				case SHUTDOWN_VK:
				case STARTUP_VK:
				case SUSPEND_VK:
				case TRUNCATE_VK:
					{
					alt79=1;
					}
					break;
				}
				switch (alt79) {
				case 1 :
					// PLSQLPrinter.g:356:41: non_dml_event
					{
					pushFollow(FOLLOW_non_dml_event_in_non_dml_trigger3004);
					non_dml_event();
					state._fsp--;

					}
					break;

				default :
					if ( cnt79 >= 1 ) break loop79;
					EarlyExitException eee = new EarlyExitException(79, input);
					throw eee;
				}
				cnt79++;
			}

			// PLSQLPrinter.g:356:56: ( DATABASE_VK | ( schema_name )? SCHEMA_VK )
			int alt81=2;
			int LA81_0 = input.LA(1);
			if ( (LA81_0==DATABASE_VK) ) {
				alt81=1;
			}
			else if ( ((LA81_0 >= SCHEMA_NAME && LA81_0 <= SCHEMA_VK)) ) {
				alt81=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 81, 0, input);
				throw nvae;
			}

			switch (alt81) {
				case 1 :
					// PLSQLPrinter.g:356:57: DATABASE_VK
					{
					match(input,DATABASE_VK,FOLLOW_DATABASE_VK_in_non_dml_trigger3008); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:356:69: ( schema_name )? SCHEMA_VK
					{
					// PLSQLPrinter.g:356:69: ( schema_name )?
					int alt80=2;
					int LA80_0 = input.LA(1);
					if ( (LA80_0==SCHEMA_NAME) ) {
						alt80=1;
					}
					switch (alt80) {
						case 1 :
							// PLSQLPrinter.g:356:69: schema_name
							{
							pushFollow(FOLLOW_schema_name_in_non_dml_trigger3010);
							schema_name();
							state._fsp--;

							}
							break;

					}

					match(input,SCHEMA_VK,FOLLOW_SCHEMA_VK_in_non_dml_trigger3013); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 357:5: -> template( \"not implemented: non_dml_trigger\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: non_dml_trigger");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "non_dml_trigger"


	public static class trigger_body_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "trigger_body"
	// PLSQLPrinter.g:360:1: trigger_body : ( ^( COMPOUND_VK trigger_name ( declare_spec )* ( timing_point_section )+ ) -> template( \"not implemented: trigger_body\"| ^( CALL_VK routine_name ( function_argument )? ) -> template( \"not implemented: trigger_body\"| ^( BODY_MODE block ) -> template( \"not implemented: trigger_body\");
	public final PLSQLPrinter.trigger_body_return trigger_body() throws RecognitionException {
		PLSQLPrinter.trigger_body_return retval = new PLSQLPrinter.trigger_body_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:361:5: ( ^( COMPOUND_VK trigger_name ( declare_spec )* ( timing_point_section )+ ) -> template( \"not implemented: trigger_body\"| ^( CALL_VK routine_name ( function_argument )? ) -> template( \"not implemented: trigger_body\"| ^( BODY_MODE block ) -> template( \"not implemented: trigger_body\")
			int alt85=3;
			switch ( input.LA(1) ) {
			case COMPOUND_VK:
				{
				alt85=1;
				}
				break;
			case CALL_VK:
				{
				alt85=2;
				}
				break;
			case BODY_MODE:
				{
				alt85=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 85, 0, input);
				throw nvae;
			}
			switch (alt85) {
				case 1 :
					// PLSQLPrinter.g:361:10: ^( COMPOUND_VK trigger_name ( declare_spec )* ( timing_point_section )+ )
					{
					match(input,COMPOUND_VK,FOLLOW_COMPOUND_VK_in_trigger_body3050); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_trigger_name_in_trigger_body3052);
					trigger_name();
					state._fsp--;

					// PLSQLPrinter.g:361:37: ( declare_spec )*
					loop82:
					while (true) {
						int alt82=2;
						int LA82_0 = input.LA(1);
						if ( (LA82_0==CREATE_FUNCTION||LA82_0==CREATE_PROCEDURE||(LA82_0 >= CREATE_TYPE_BODY && LA82_0 <= CREATE_TYPE_SPEC)||LA82_0==CURSOR_DECLARE||LA82_0==EXCEPTION_DECLARE||LA82_0==PRAGMA_DECLARE||(LA82_0 >= RECORD_TYPE_DECLARE && LA82_0 <= RECORD_VAR_DECLARE)||LA82_0==SUBTYPE_DECLARE||(LA82_0 >= TABLE_TYPE_DECLARE && LA82_0 <= TABLE_VAR_DECLARE)||LA82_0==VARIABLE_DECLARE) ) {
							alt82=1;
						}

						switch (alt82) {
						case 1 :
							// PLSQLPrinter.g:361:37: declare_spec
							{
							pushFollow(FOLLOW_declare_spec_in_trigger_body3054);
							declare_spec();
							state._fsp--;

							}
							break;

						default :
							break loop82;
						}
					}

					// PLSQLPrinter.g:361:51: ( timing_point_section )+
					int cnt83=0;
					loop83:
					while (true) {
						int alt83=2;
						int LA83_0 = input.LA(1);
						if ( ((LA83_0 >= AFTER_EACH_ROW && LA83_0 <= AFTER_STATEMENT)||(LA83_0 >= BEFORE_EACH_ROW && LA83_0 <= BEFORE_STATEMENT)) ) {
							alt83=1;
						}

						switch (alt83) {
						case 1 :
							// PLSQLPrinter.g:361:51: timing_point_section
							{
							pushFollow(FOLLOW_timing_point_section_in_trigger_body3057);
							timing_point_section();
							state._fsp--;

							}
							break;

						default :
							if ( cnt83 >= 1 ) break loop83;
							EarlyExitException eee = new EarlyExitException(83, input);
							throw eee;
						}
						cnt83++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 362:5: -> template( \"not implemented: trigger_body\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: trigger_body");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:363:10: ^( CALL_VK routine_name ( function_argument )? )
					{
					match(input,CALL_VK,FOLLOW_CALL_VK_in_trigger_body3085); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_routine_name_in_trigger_body3087);
					routine_name();
					state._fsp--;

					// PLSQLPrinter.g:363:33: ( function_argument )?
					int alt84=2;
					int LA84_0 = input.LA(1);
					if ( (LA84_0==ARGUMENTS) ) {
						alt84=1;
					}
					switch (alt84) {
						case 1 :
							// PLSQLPrinter.g:363:33: function_argument
							{
							pushFollow(FOLLOW_function_argument_in_trigger_body3089);
							function_argument();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 364:5: -> template( \"not implemented: trigger_body\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: trigger_body");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:365:10: ^( BODY_MODE block )
					{
					match(input,BODY_MODE,FOLLOW_BODY_MODE_in_trigger_body3118); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_block_in_trigger_body3120);
					block();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 366:5: -> template( \"not implemented: trigger_body\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: trigger_body");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "trigger_body"


	public static class timing_point_section_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "timing_point_section"
	// PLSQLPrinter.g:369:1: timing_point_section : ( ^( BEFORE_STATEMENT block ) -> template( \"not implemented: timing_point_section\"| ^( BEFORE_EACH_ROW block ) -> template( \"not implemented: timing_point_section\"| ^( AFTER_STATEMENT block ) -> template( \"not implemented: timing_point_section\"| ^( AFTER_EACH_ROW block ) -> template( \"not implemented: timing_point_section\");
	public final PLSQLPrinter.timing_point_section_return timing_point_section() throws RecognitionException {
		PLSQLPrinter.timing_point_section_return retval = new PLSQLPrinter.timing_point_section_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:370:5: ( ^( BEFORE_STATEMENT block ) -> template( \"not implemented: timing_point_section\"| ^( BEFORE_EACH_ROW block ) -> template( \"not implemented: timing_point_section\"| ^( AFTER_STATEMENT block ) -> template( \"not implemented: timing_point_section\"| ^( AFTER_EACH_ROW block ) -> template( \"not implemented: timing_point_section\")
			int alt86=4;
			switch ( input.LA(1) ) {
			case BEFORE_STATEMENT:
				{
				alt86=1;
				}
				break;
			case BEFORE_EACH_ROW:
				{
				alt86=2;
				}
				break;
			case AFTER_STATEMENT:
				{
				alt86=3;
				}
				break;
			case AFTER_EACH_ROW:
				{
				alt86=4;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 86, 0, input);
				throw nvae;
			}
			switch (alt86) {
				case 1 :
					// PLSQLPrinter.g:370:10: ^( BEFORE_STATEMENT block )
					{
					match(input,BEFORE_STATEMENT,FOLLOW_BEFORE_STATEMENT_in_timing_point_section3156); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_block_in_timing_point_section3158);
					block();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 371:5: -> template( \"not implemented: timing_point_section\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: timing_point_section");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:372:10: ^( BEFORE_EACH_ROW block )
					{
					match(input,BEFORE_EACH_ROW,FOLLOW_BEFORE_EACH_ROW_in_timing_point_section3185); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_block_in_timing_point_section3187);
					block();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 373:5: -> template( \"not implemented: timing_point_section\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: timing_point_section");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:374:10: ^( AFTER_STATEMENT block )
					{
					match(input,AFTER_STATEMENT,FOLLOW_AFTER_STATEMENT_in_timing_point_section3214); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_block_in_timing_point_section3216);
					block();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 375:5: -> template( \"not implemented: timing_point_section\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: timing_point_section");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:376:10: ^( AFTER_EACH_ROW block )
					{
					match(input,AFTER_EACH_ROW,FOLLOW_AFTER_EACH_ROW_in_timing_point_section3243); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_block_in_timing_point_section3245);
					block();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 377:5: -> template( \"not implemented: timing_point_section\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: timing_point_section");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "timing_point_section"


	public static class non_dml_event_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "non_dml_event"
	// PLSQLPrinter.g:380:1: non_dml_event : ( SQL92_RESERVED_ALTER -> template( \"not implemented: non_dml_event\"| ANALYZE_VK -> template( \"not implemented: non_dml_event\"| ASSOCIATE_VK STATISTICS_VK -> template( \"not implemented: non_dml_event\"| AUDIT_VK -> template( \"not implemented: non_dml_event\"| COMMENT_VK -> template( \"not implemented: non_dml_event\"| SQL92_RESERVED_CREATE -> template( \"not implemented: non_dml_event\"| DISASSOCIATE_VK STATISTICS_VK -> template( \"not implemented: non_dml_event\"| SQL92_RESERVED_DROP -> template( \"not implemented: non_dml_event\"| SQL92_RESERVED_GRANT -> template( \"not implemented: non_dml_event\"| NOAUDIT_VK -> template( \"not implemented: non_dml_event\"| RENAME_VK -> template( \"not implemented: non_dml_event\"| SQL92_RESERVED_REVOKE -> template( \"not implemented: non_dml_event\"| TRUNCATE_VK -> template( \"not implemented: non_dml_event\"| DDL_VK -> template( \"not implemented: non_dml_event\"| STARTUP_VK -> template( \"not implemented: non_dml_event\"| SHUTDOWN_VK -> template( \"not implemented: non_dml_event\"| DB_ROLE_CHANGE_VK -> template( \"not implemented: non_dml_event\"| LOGON_VK -> template( \"not implemented: non_dml_event\"| LOGOFF_VK -> template( \"not implemented: non_dml_event\"| SERVERERROR_VK -> template( \"not implemented: non_dml_event\"| SUSPEND_VK -> template( \"not implemented: non_dml_event\"| DATABASE_VK -> template( \"not implemented: non_dml_event\"| SCHEMA_VK -> template( \"not implemented: non_dml_event\"| FOLLOWS_VK -> template( \"not implemented: non_dml_event\");
	public final PLSQLPrinter.non_dml_event_return non_dml_event() throws RecognitionException {
		PLSQLPrinter.non_dml_event_return retval = new PLSQLPrinter.non_dml_event_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:381:5: ( SQL92_RESERVED_ALTER -> template( \"not implemented: non_dml_event\"| ANALYZE_VK -> template( \"not implemented: non_dml_event\"| ASSOCIATE_VK STATISTICS_VK -> template( \"not implemented: non_dml_event\"| AUDIT_VK -> template( \"not implemented: non_dml_event\"| COMMENT_VK -> template( \"not implemented: non_dml_event\"| SQL92_RESERVED_CREATE -> template( \"not implemented: non_dml_event\"| DISASSOCIATE_VK STATISTICS_VK -> template( \"not implemented: non_dml_event\"| SQL92_RESERVED_DROP -> template( \"not implemented: non_dml_event\"| SQL92_RESERVED_GRANT -> template( \"not implemented: non_dml_event\"| NOAUDIT_VK -> template( \"not implemented: non_dml_event\"| RENAME_VK -> template( \"not implemented: non_dml_event\"| SQL92_RESERVED_REVOKE -> template( \"not implemented: non_dml_event\"| TRUNCATE_VK -> template( \"not implemented: non_dml_event\"| DDL_VK -> template( \"not implemented: non_dml_event\"| STARTUP_VK -> template( \"not implemented: non_dml_event\"| SHUTDOWN_VK -> template( \"not implemented: non_dml_event\"| DB_ROLE_CHANGE_VK -> template( \"not implemented: non_dml_event\"| LOGON_VK -> template( \"not implemented: non_dml_event\"| LOGOFF_VK -> template( \"not implemented: non_dml_event\"| SERVERERROR_VK -> template( \"not implemented: non_dml_event\"| SUSPEND_VK -> template( \"not implemented: non_dml_event\"| DATABASE_VK -> template( \"not implemented: non_dml_event\"| SCHEMA_VK -> template( \"not implemented: non_dml_event\"| FOLLOWS_VK -> template( \"not implemented: non_dml_event\")
			int alt87=24;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_ALTER:
				{
				alt87=1;
				}
				break;
			case ANALYZE_VK:
				{
				alt87=2;
				}
				break;
			case ASSOCIATE_VK:
				{
				alt87=3;
				}
				break;
			case AUDIT_VK:
				{
				alt87=4;
				}
				break;
			case COMMENT_VK:
				{
				alt87=5;
				}
				break;
			case SQL92_RESERVED_CREATE:
				{
				alt87=6;
				}
				break;
			case DISASSOCIATE_VK:
				{
				alt87=7;
				}
				break;
			case SQL92_RESERVED_DROP:
				{
				alt87=8;
				}
				break;
			case SQL92_RESERVED_GRANT:
				{
				alt87=9;
				}
				break;
			case NOAUDIT_VK:
				{
				alt87=10;
				}
				break;
			case RENAME_VK:
				{
				alt87=11;
				}
				break;
			case SQL92_RESERVED_REVOKE:
				{
				alt87=12;
				}
				break;
			case TRUNCATE_VK:
				{
				alt87=13;
				}
				break;
			case DDL_VK:
				{
				alt87=14;
				}
				break;
			case STARTUP_VK:
				{
				alt87=15;
				}
				break;
			case SHUTDOWN_VK:
				{
				alt87=16;
				}
				break;
			case DB_ROLE_CHANGE_VK:
				{
				alt87=17;
				}
				break;
			case LOGON_VK:
				{
				alt87=18;
				}
				break;
			case LOGOFF_VK:
				{
				alt87=19;
				}
				break;
			case SERVERERROR_VK:
				{
				alt87=20;
				}
				break;
			case SUSPEND_VK:
				{
				alt87=21;
				}
				break;
			case DATABASE_VK:
				{
				alt87=22;
				}
				break;
			case SCHEMA_VK:
				{
				alt87=23;
				}
				break;
			case FOLLOWS_VK:
				{
				alt87=24;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 87, 0, input);
				throw nvae;
			}
			switch (alt87) {
				case 1 :
					// PLSQLPrinter.g:381:10: SQL92_RESERVED_ALTER
					{
					match(input,SQL92_RESERVED_ALTER,FOLLOW_SQL92_RESERVED_ALTER_in_non_dml_event3280); 
					// TEMPLATE REWRITE
					// 382:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:383:10: ANALYZE_VK
					{
					match(input,ANALYZE_VK,FOLLOW_ANALYZE_VK_in_non_dml_event3305); 
					// TEMPLATE REWRITE
					// 384:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:385:10: ASSOCIATE_VK STATISTICS_VK
					{
					match(input,ASSOCIATE_VK,FOLLOW_ASSOCIATE_VK_in_non_dml_event3330); 
					match(input,STATISTICS_VK,FOLLOW_STATISTICS_VK_in_non_dml_event3332); 
					// TEMPLATE REWRITE
					// 386:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:387:10: AUDIT_VK
					{
					match(input,AUDIT_VK,FOLLOW_AUDIT_VK_in_non_dml_event3357); 
					// TEMPLATE REWRITE
					// 388:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:389:10: COMMENT_VK
					{
					match(input,COMMENT_VK,FOLLOW_COMMENT_VK_in_non_dml_event3382); 
					// TEMPLATE REWRITE
					// 390:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:391:10: SQL92_RESERVED_CREATE
					{
					match(input,SQL92_RESERVED_CREATE,FOLLOW_SQL92_RESERVED_CREATE_in_non_dml_event3407); 
					// TEMPLATE REWRITE
					// 392:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:393:10: DISASSOCIATE_VK STATISTICS_VK
					{
					match(input,DISASSOCIATE_VK,FOLLOW_DISASSOCIATE_VK_in_non_dml_event3432); 
					match(input,STATISTICS_VK,FOLLOW_STATISTICS_VK_in_non_dml_event3434); 
					// TEMPLATE REWRITE
					// 394:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:395:10: SQL92_RESERVED_DROP
					{
					match(input,SQL92_RESERVED_DROP,FOLLOW_SQL92_RESERVED_DROP_in_non_dml_event3459); 
					// TEMPLATE REWRITE
					// 396:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:397:10: SQL92_RESERVED_GRANT
					{
					match(input,SQL92_RESERVED_GRANT,FOLLOW_SQL92_RESERVED_GRANT_in_non_dml_event3484); 
					// TEMPLATE REWRITE
					// 398:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:399:10: NOAUDIT_VK
					{
					match(input,NOAUDIT_VK,FOLLOW_NOAUDIT_VK_in_non_dml_event3509); 
					// TEMPLATE REWRITE
					// 400:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:401:10: RENAME_VK
					{
					match(input,RENAME_VK,FOLLOW_RENAME_VK_in_non_dml_event3534); 
					// TEMPLATE REWRITE
					// 402:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:403:10: SQL92_RESERVED_REVOKE
					{
					match(input,SQL92_RESERVED_REVOKE,FOLLOW_SQL92_RESERVED_REVOKE_in_non_dml_event3559); 
					// TEMPLATE REWRITE
					// 404:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 13 :
					// PLSQLPrinter.g:405:10: TRUNCATE_VK
					{
					match(input,TRUNCATE_VK,FOLLOW_TRUNCATE_VK_in_non_dml_event3584); 
					// TEMPLATE REWRITE
					// 406:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 14 :
					// PLSQLPrinter.g:407:10: DDL_VK
					{
					match(input,DDL_VK,FOLLOW_DDL_VK_in_non_dml_event3609); 
					// TEMPLATE REWRITE
					// 408:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 15 :
					// PLSQLPrinter.g:409:10: STARTUP_VK
					{
					match(input,STARTUP_VK,FOLLOW_STARTUP_VK_in_non_dml_event3634); 
					// TEMPLATE REWRITE
					// 410:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 16 :
					// PLSQLPrinter.g:411:10: SHUTDOWN_VK
					{
					match(input,SHUTDOWN_VK,FOLLOW_SHUTDOWN_VK_in_non_dml_event3659); 
					// TEMPLATE REWRITE
					// 412:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 17 :
					// PLSQLPrinter.g:413:10: DB_ROLE_CHANGE_VK
					{
					match(input,DB_ROLE_CHANGE_VK,FOLLOW_DB_ROLE_CHANGE_VK_in_non_dml_event3684); 
					// TEMPLATE REWRITE
					// 414:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 18 :
					// PLSQLPrinter.g:415:10: LOGON_VK
					{
					match(input,LOGON_VK,FOLLOW_LOGON_VK_in_non_dml_event3709); 
					// TEMPLATE REWRITE
					// 416:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 19 :
					// PLSQLPrinter.g:417:10: LOGOFF_VK
					{
					match(input,LOGOFF_VK,FOLLOW_LOGOFF_VK_in_non_dml_event3734); 
					// TEMPLATE REWRITE
					// 418:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 20 :
					// PLSQLPrinter.g:419:10: SERVERERROR_VK
					{
					match(input,SERVERERROR_VK,FOLLOW_SERVERERROR_VK_in_non_dml_event3759); 
					// TEMPLATE REWRITE
					// 420:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 21 :
					// PLSQLPrinter.g:421:10: SUSPEND_VK
					{
					match(input,SUSPEND_VK,FOLLOW_SUSPEND_VK_in_non_dml_event3784); 
					// TEMPLATE REWRITE
					// 422:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 22 :
					// PLSQLPrinter.g:423:10: DATABASE_VK
					{
					match(input,DATABASE_VK,FOLLOW_DATABASE_VK_in_non_dml_event3809); 
					// TEMPLATE REWRITE
					// 424:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 23 :
					// PLSQLPrinter.g:425:10: SCHEMA_VK
					{
					match(input,SCHEMA_VK,FOLLOW_SCHEMA_VK_in_non_dml_event3834); 
					// TEMPLATE REWRITE
					// 426:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;
				case 24 :
					// PLSQLPrinter.g:427:10: FOLLOWS_VK
					{
					match(input,FOLLOWS_VK,FOLLOW_FOLLOWS_VK_in_non_dml_event3859); 
					// TEMPLATE REWRITE
					// 428:5: -> template( \"not implemented: non_dml_event\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: non_dml_event");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "non_dml_event"


	public static class dml_event_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "dml_event_clause"
	// PLSQLPrinter.g:431:1: dml_event_clause : ^( DML_EVENT ( dml_event_element )+ ^( SQL92_RESERVED_ON tableview_name ( dml_event_nested_clause )? ) ) -> template( \"not implemented: dml_event_clause\";
	public final PLSQLPrinter.dml_event_clause_return dml_event_clause() throws RecognitionException {
		PLSQLPrinter.dml_event_clause_return retval = new PLSQLPrinter.dml_event_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:432:5: ( ^( DML_EVENT ( dml_event_element )+ ^( SQL92_RESERVED_ON tableview_name ( dml_event_nested_clause )? ) ) -> template( \"not implemented: dml_event_clause\")
			// PLSQLPrinter.g:432:10: ^( DML_EVENT ( dml_event_element )+ ^( SQL92_RESERVED_ON tableview_name ( dml_event_nested_clause )? ) )
			{
			match(input,DML_EVENT,FOLLOW_DML_EVENT_in_dml_event_clause3894); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:432:22: ( dml_event_element )+
			int cnt88=0;
			loop88:
			while (true) {
				int alt88=2;
				int LA88_0 = input.LA(1);
				if ( (LA88_0==DML_EVENT_ELEMENT) ) {
					alt88=1;
				}

				switch (alt88) {
				case 1 :
					// PLSQLPrinter.g:432:22: dml_event_element
					{
					pushFollow(FOLLOW_dml_event_element_in_dml_event_clause3896);
					dml_event_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt88 >= 1 ) break loop88;
					EarlyExitException eee = new EarlyExitException(88, input);
					throw eee;
				}
				cnt88++;
			}

			match(input,SQL92_RESERVED_ON,FOLLOW_SQL92_RESERVED_ON_in_dml_event_clause3900); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_tableview_name_in_dml_event_clause3902);
			tableview_name();
			state._fsp--;

			// PLSQLPrinter.g:432:76: ( dml_event_nested_clause )?
			int alt89=2;
			int LA89_0 = input.LA(1);
			if ( (LA89_0==NESTED_VK) ) {
				alt89=1;
			}
			switch (alt89) {
				case 1 :
					// PLSQLPrinter.g:432:76: dml_event_nested_clause
					{
					pushFollow(FOLLOW_dml_event_nested_clause_in_dml_event_clause3904);
					dml_event_nested_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 433:5: -> template( \"not implemented: dml_event_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: dml_event_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dml_event_clause"


	public static class dml_event_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "dml_event_element"
	// PLSQLPrinter.g:436:1: dml_event_element : ^( DML_EVENT_ELEMENT ( SQL92_RESERVED_DELETE | SQL92_RESERVED_INSERT | SQL92_RESERVED_UPDATE ) ^( COLUMNS ( column_name )* ) ) -> template( \"not implemented: dml_event_element\";
	public final PLSQLPrinter.dml_event_element_return dml_event_element() throws RecognitionException {
		PLSQLPrinter.dml_event_element_return retval = new PLSQLPrinter.dml_event_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:437:5: ( ^( DML_EVENT_ELEMENT ( SQL92_RESERVED_DELETE | SQL92_RESERVED_INSERT | SQL92_RESERVED_UPDATE ) ^( COLUMNS ( column_name )* ) ) -> template( \"not implemented: dml_event_element\")
			// PLSQLPrinter.g:437:10: ^( DML_EVENT_ELEMENT ( SQL92_RESERVED_DELETE | SQL92_RESERVED_INSERT | SQL92_RESERVED_UPDATE ) ^( COLUMNS ( column_name )* ) )
			{
			match(input,DML_EVENT_ELEMENT,FOLLOW_DML_EVENT_ELEMENT_in_dml_event_element3944); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:437:30: ( SQL92_RESERVED_DELETE | SQL92_RESERVED_INSERT | SQL92_RESERVED_UPDATE )
			int alt90=3;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_DELETE:
				{
				alt90=1;
				}
				break;
			case SQL92_RESERVED_INSERT:
				{
				alt90=2;
				}
				break;
			case SQL92_RESERVED_UPDATE:
				{
				alt90=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 90, 0, input);
				throw nvae;
			}
			switch (alt90) {
				case 1 :
					// PLSQLPrinter.g:437:31: SQL92_RESERVED_DELETE
					{
					match(input,SQL92_RESERVED_DELETE,FOLLOW_SQL92_RESERVED_DELETE_in_dml_event_element3947); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:437:53: SQL92_RESERVED_INSERT
					{
					match(input,SQL92_RESERVED_INSERT,FOLLOW_SQL92_RESERVED_INSERT_in_dml_event_element3949); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:437:75: SQL92_RESERVED_UPDATE
					{
					match(input,SQL92_RESERVED_UPDATE,FOLLOW_SQL92_RESERVED_UPDATE_in_dml_event_element3951); 
					}
					break;

			}

			match(input,COLUMNS,FOLLOW_COLUMNS_in_dml_event_element3955); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:437:108: ( column_name )*
				loop91:
				while (true) {
					int alt91=2;
					int LA91_0 = input.LA(1);
					if ( (LA91_0==COLUMN_NAME) ) {
						alt91=1;
					}

					switch (alt91) {
					case 1 :
						// PLSQLPrinter.g:437:108: column_name
						{
						pushFollow(FOLLOW_column_name_in_dml_event_element3957);
						column_name();
						state._fsp--;

						}
						break;

					default :
						break loop91;
					}
				}

				match(input, Token.UP, null); 
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 438:5: -> template( \"not implemented: dml_event_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: dml_event_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dml_event_element"


	public static class dml_event_nested_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "dml_event_nested_clause"
	// PLSQLPrinter.g:441:1: dml_event_nested_clause : ^( NESTED_VK tableview_name ) -> template( \"not implemented: dml_event_nested_clause\";
	public final PLSQLPrinter.dml_event_nested_clause_return dml_event_nested_clause() throws RecognitionException {
		PLSQLPrinter.dml_event_nested_clause_return retval = new PLSQLPrinter.dml_event_nested_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:442:5: ( ^( NESTED_VK tableview_name ) -> template( \"not implemented: dml_event_nested_clause\")
			// PLSQLPrinter.g:442:10: ^( NESTED_VK tableview_name )
			{
			match(input,NESTED_VK,FOLLOW_NESTED_VK_in_dml_event_nested_clause3995); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_tableview_name_in_dml_event_nested_clause3997);
			tableview_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 443:5: -> template( \"not implemented: dml_event_nested_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: dml_event_nested_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dml_event_nested_clause"


	public static class referencing_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "referencing_clause"
	// PLSQLPrinter.g:446:1: referencing_clause : ^( REFERENCING_VK ( referencing_element )+ ) -> template( \"not implemented: referencing_clause\";
	public final PLSQLPrinter.referencing_clause_return referencing_clause() throws RecognitionException {
		PLSQLPrinter.referencing_clause_return retval = new PLSQLPrinter.referencing_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:447:5: ( ^( REFERENCING_VK ( referencing_element )+ ) -> template( \"not implemented: referencing_clause\")
			// PLSQLPrinter.g:447:10: ^( REFERENCING_VK ( referencing_element )+ )
			{
			match(input,REFERENCING_VK,FOLLOW_REFERENCING_VK_in_referencing_clause4033); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:447:27: ( referencing_element )+
			int cnt92=0;
			loop92:
			while (true) {
				int alt92=2;
				int LA92_0 = input.LA(1);
				if ( (LA92_0==NEW_VK||LA92_0==OLD_VK||LA92_0==PARENT_VK) ) {
					alt92=1;
				}

				switch (alt92) {
				case 1 :
					// PLSQLPrinter.g:447:27: referencing_element
					{
					pushFollow(FOLLOW_referencing_element_in_referencing_clause4035);
					referencing_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt92 >= 1 ) break loop92;
					EarlyExitException eee = new EarlyExitException(92, input);
					throw eee;
				}
				cnt92++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 448:5: -> template( \"not implemented: referencing_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: referencing_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "referencing_clause"


	public static class referencing_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "referencing_element"
	// PLSQLPrinter.g:451:1: referencing_element : ^( ( NEW_VK | OLD_VK | PARENT_VK ) alias ) -> template( \"not implemented: referencing_element\";
	public final PLSQLPrinter.referencing_element_return referencing_element() throws RecognitionException {
		PLSQLPrinter.referencing_element_return retval = new PLSQLPrinter.referencing_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:452:5: ( ^( ( NEW_VK | OLD_VK | PARENT_VK ) alias ) -> template( \"not implemented: referencing_element\")
			// PLSQLPrinter.g:452:10: ^( ( NEW_VK | OLD_VK | PARENT_VK ) alias )
			{
			// PLSQLPrinter.g:452:12: ( NEW_VK | OLD_VK | PARENT_VK )
			int alt93=3;
			switch ( input.LA(1) ) {
			case NEW_VK:
				{
				alt93=1;
				}
				break;
			case OLD_VK:
				{
				alt93=2;
				}
				break;
			case PARENT_VK:
				{
				alt93=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 93, 0, input);
				throw nvae;
			}
			switch (alt93) {
				case 1 :
					// PLSQLPrinter.g:452:13: NEW_VK
					{
					match(input,NEW_VK,FOLLOW_NEW_VK_in_referencing_element4073); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:452:20: OLD_VK
					{
					match(input,OLD_VK,FOLLOW_OLD_VK_in_referencing_element4075); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:452:27: PARENT_VK
					{
					match(input,PARENT_VK,FOLLOW_PARENT_VK_in_referencing_element4077); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_alias_in_referencing_element4080);
			alias();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 453:5: -> template( \"not implemented: referencing_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: referencing_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "referencing_element"


	public static class drop_type_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "drop_type"
	// PLSQLPrinter.g:461:1: drop_type : ^( DROP_TYPE type_name ( BODY_VK )? ( FORCE_VK )? ( VALIDATE_VK )? ) -> template( \"not implemented: drop_type\";
	public final PLSQLPrinter.drop_type_return drop_type() throws RecognitionException {
		PLSQLPrinter.drop_type_return retval = new PLSQLPrinter.drop_type_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:462:5: ( ^( DROP_TYPE type_name ( BODY_VK )? ( FORCE_VK )? ( VALIDATE_VK )? ) -> template( \"not implemented: drop_type\")
			// PLSQLPrinter.g:462:10: ^( DROP_TYPE type_name ( BODY_VK )? ( FORCE_VK )? ( VALIDATE_VK )? )
			{
			match(input,DROP_TYPE,FOLLOW_DROP_TYPE_in_drop_type4121); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_name_in_drop_type4123);
			type_name();
			state._fsp--;

			// PLSQLPrinter.g:462:32: ( BODY_VK )?
			int alt94=2;
			int LA94_0 = input.LA(1);
			if ( (LA94_0==BODY_VK) ) {
				alt94=1;
			}
			switch (alt94) {
				case 1 :
					// PLSQLPrinter.g:462:32: BODY_VK
					{
					match(input,BODY_VK,FOLLOW_BODY_VK_in_drop_type4125); 
					}
					break;

			}

			// PLSQLPrinter.g:462:41: ( FORCE_VK )?
			int alt95=2;
			int LA95_0 = input.LA(1);
			if ( (LA95_0==FORCE_VK) ) {
				alt95=1;
			}
			switch (alt95) {
				case 1 :
					// PLSQLPrinter.g:462:41: FORCE_VK
					{
					match(input,FORCE_VK,FOLLOW_FORCE_VK_in_drop_type4128); 
					}
					break;

			}

			// PLSQLPrinter.g:462:51: ( VALIDATE_VK )?
			int alt96=2;
			int LA96_0 = input.LA(1);
			if ( (LA96_0==VALIDATE_VK) ) {
				alt96=1;
			}
			switch (alt96) {
				case 1 :
					// PLSQLPrinter.g:462:51: VALIDATE_VK
					{
					match(input,VALIDATE_VK,FOLLOW_VALIDATE_VK_in_drop_type4131); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 463:5: -> template( \"not implemented: drop_type\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: drop_type");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_type"


	public static class alter_type_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_type"
	// PLSQLPrinter.g:466:1: alter_type : ^( ALTER_TYPE type_name ( ^( REPLACE_VK ^( OBJECT_MEMBERS ( element_spec )+ ) ( invoker_rights_clause )? ) | ^( ALTER_ATTRIBUTE ( ADD_VK | MODIFY_VK | SQL92_RESERVED_DROP ) ^( ATTRIBUTES ( attribute_definition )+ ) ) | ^( ALTER_METHOD ( alter_method_element )+ ) | alter_collection_clauses | modifier_clause | ^( COMPILE_VK ( SPECIFICATION_VK | BODY_VK )? ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) ) ( dependent_handling_clause )? ) -> template( \"not implemented: alter_type\";
	public final PLSQLPrinter.alter_type_return alter_type() throws RecognitionException {
		PLSQLPrinter.alter_type_return retval = new PLSQLPrinter.alter_type_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:467:5: ( ^( ALTER_TYPE type_name ( ^( REPLACE_VK ^( OBJECT_MEMBERS ( element_spec )+ ) ( invoker_rights_clause )? ) | ^( ALTER_ATTRIBUTE ( ADD_VK | MODIFY_VK | SQL92_RESERVED_DROP ) ^( ATTRIBUTES ( attribute_definition )+ ) ) | ^( ALTER_METHOD ( alter_method_element )+ ) | alter_collection_clauses | modifier_clause | ^( COMPILE_VK ( SPECIFICATION_VK | BODY_VK )? ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) ) ( dependent_handling_clause )? ) -> template( \"not implemented: alter_type\")
			// PLSQLPrinter.g:467:10: ^( ALTER_TYPE type_name ( ^( REPLACE_VK ^( OBJECT_MEMBERS ( element_spec )+ ) ( invoker_rights_clause )? ) | ^( ALTER_ATTRIBUTE ( ADD_VK | MODIFY_VK | SQL92_RESERVED_DROP ) ^( ATTRIBUTES ( attribute_definition )+ ) ) | ^( ALTER_METHOD ( alter_method_element )+ ) | alter_collection_clauses | modifier_clause | ^( COMPILE_VK ( SPECIFICATION_VK | BODY_VK )? ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) ) ( dependent_handling_clause )? )
			{
			match(input,ALTER_TYPE,FOLLOW_ALTER_TYPE_in_alter_type4168); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_name_in_alter_type4170);
			type_name();
			state._fsp--;

			// PLSQLPrinter.g:468:13: ( ^( REPLACE_VK ^( OBJECT_MEMBERS ( element_spec )+ ) ( invoker_rights_clause )? ) | ^( ALTER_ATTRIBUTE ( ADD_VK | MODIFY_VK | SQL92_RESERVED_DROP ) ^( ATTRIBUTES ( attribute_definition )+ ) ) | ^( ALTER_METHOD ( alter_method_element )+ ) | alter_collection_clauses | modifier_clause | ^( COMPILE_VK ( SPECIFICATION_VK | BODY_VK )? ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) )
			int alt106=6;
			switch ( input.LA(1) ) {
			case REPLACE_VK:
				{
				alt106=1;
				}
				break;
			case ALTER_ATTRIBUTE:
				{
				alt106=2;
				}
				break;
			case ALTER_METHOD:
				{
				alt106=3;
				}
				break;
			case ALTER_COLLECTION:
				{
				alt106=4;
				}
				break;
			case MODIFIER:
				{
				alt106=5;
				}
				break;
			case COMPILE_VK:
				{
				alt106=6;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 106, 0, input);
				throw nvae;
			}
			switch (alt106) {
				case 1 :
					// PLSQLPrinter.g:468:18: ^( REPLACE_VK ^( OBJECT_MEMBERS ( element_spec )+ ) ( invoker_rights_clause )? )
					{
					match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_alter_type4191); 
					match(input, Token.DOWN, null); 
					match(input,OBJECT_MEMBERS,FOLLOW_OBJECT_MEMBERS_in_alter_type4194); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:468:48: ( element_spec )+
					int cnt97=0;
					loop97:
					while (true) {
						int alt97=2;
						int LA97_0 = input.LA(1);
						if ( (LA97_0==ELEMENT_SPEC) ) {
							alt97=1;
						}

						switch (alt97) {
						case 1 :
							// PLSQLPrinter.g:468:48: element_spec
							{
							pushFollow(FOLLOW_element_spec_in_alter_type4196);
							element_spec();
							state._fsp--;

							}
							break;

						default :
							if ( cnt97 >= 1 ) break loop97;
							EarlyExitException eee = new EarlyExitException(97, input);
							throw eee;
						}
						cnt97++;
					}

					match(input, Token.UP, null); 

					// PLSQLPrinter.g:468:63: ( invoker_rights_clause )?
					int alt98=2;
					int LA98_0 = input.LA(1);
					if ( (LA98_0==AUTHID_VK) ) {
						alt98=1;
					}
					switch (alt98) {
						case 1 :
							// PLSQLPrinter.g:468:63: invoker_rights_clause
							{
							pushFollow(FOLLOW_invoker_rights_clause_in_alter_type4200);
							invoker_rights_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:469:18: ^( ALTER_ATTRIBUTE ( ADD_VK | MODIFY_VK | SQL92_RESERVED_DROP ) ^( ATTRIBUTES ( attribute_definition )+ ) )
					{
					match(input,ALTER_ATTRIBUTE,FOLLOW_ALTER_ATTRIBUTE_in_alter_type4222); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:469:36: ( ADD_VK | MODIFY_VK | SQL92_RESERVED_DROP )
					int alt99=3;
					switch ( input.LA(1) ) {
					case ADD_VK:
						{
						alt99=1;
						}
						break;
					case MODIFY_VK:
						{
						alt99=2;
						}
						break;
					case SQL92_RESERVED_DROP:
						{
						alt99=3;
						}
						break;
					default:
						NoViableAltException nvae =
							new NoViableAltException("", 99, 0, input);
						throw nvae;
					}
					switch (alt99) {
						case 1 :
							// PLSQLPrinter.g:469:37: ADD_VK
							{
							match(input,ADD_VK,FOLLOW_ADD_VK_in_alter_type4225); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:469:44: MODIFY_VK
							{
							match(input,MODIFY_VK,FOLLOW_MODIFY_VK_in_alter_type4227); 
							}
							break;
						case 3 :
							// PLSQLPrinter.g:469:54: SQL92_RESERVED_DROP
							{
							match(input,SQL92_RESERVED_DROP,FOLLOW_SQL92_RESERVED_DROP_in_alter_type4229); 
							}
							break;

					}

					match(input,ATTRIBUTES,FOLLOW_ATTRIBUTES_in_alter_type4233); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:469:88: ( attribute_definition )+
					int cnt100=0;
					loop100:
					while (true) {
						int alt100=2;
						int LA100_0 = input.LA(1);
						if ( (LA100_0==ATTRIBUTE) ) {
							alt100=1;
						}

						switch (alt100) {
						case 1 :
							// PLSQLPrinter.g:469:88: attribute_definition
							{
							pushFollow(FOLLOW_attribute_definition_in_alter_type4235);
							attribute_definition();
							state._fsp--;

							}
							break;

						default :
							if ( cnt100 >= 1 ) break loop100;
							EarlyExitException eee = new EarlyExitException(100, input);
							throw eee;
						}
						cnt100++;
					}

					match(input, Token.UP, null); 

					match(input, Token.UP, null); 

					}
					break;
				case 3 :
					// PLSQLPrinter.g:470:18: ^( ALTER_METHOD ( alter_method_element )+ )
					{
					match(input,ALTER_METHOD,FOLLOW_ALTER_METHOD_in_alter_type4258); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:470:33: ( alter_method_element )+
					int cnt101=0;
					loop101:
					while (true) {
						int alt101=2;
						int LA101_0 = input.LA(1);
						if ( (LA101_0==ALTER_METHOD_ELEMENT) ) {
							alt101=1;
						}

						switch (alt101) {
						case 1 :
							// PLSQLPrinter.g:470:33: alter_method_element
							{
							pushFollow(FOLLOW_alter_method_element_in_alter_type4260);
							alter_method_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt101 >= 1 ) break loop101;
							EarlyExitException eee = new EarlyExitException(101, input);
							throw eee;
						}
						cnt101++;
					}

					match(input, Token.UP, null); 

					}
					break;
				case 4 :
					// PLSQLPrinter.g:471:18: alter_collection_clauses
					{
					pushFollow(FOLLOW_alter_collection_clauses_in_alter_type4281);
					alter_collection_clauses();
					state._fsp--;

					}
					break;
				case 5 :
					// PLSQLPrinter.g:472:18: modifier_clause
					{
					pushFollow(FOLLOW_modifier_clause_in_alter_type4300);
					modifier_clause();
					state._fsp--;

					}
					break;
				case 6 :
					// PLSQLPrinter.g:473:18: ^( COMPILE_VK ( SPECIFICATION_VK | BODY_VK )? ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* )
					{
					match(input,COMPILE_VK,FOLLOW_COMPILE_VK_in_alter_type4320); 
					if ( input.LA(1)==Token.DOWN ) {
						match(input, Token.DOWN, null); 
						// PLSQLPrinter.g:473:31: ( SPECIFICATION_VK | BODY_VK )?
						int alt102=3;
						int LA102_0 = input.LA(1);
						if ( (LA102_0==SPECIFICATION_VK) ) {
							alt102=1;
						}
						else if ( (LA102_0==BODY_VK) ) {
							alt102=2;
						}
						switch (alt102) {
							case 1 :
								// PLSQLPrinter.g:473:32: SPECIFICATION_VK
								{
								match(input,SPECIFICATION_VK,FOLLOW_SPECIFICATION_VK_in_alter_type4323); 
								}
								break;
							case 2 :
								// PLSQLPrinter.g:473:49: BODY_VK
								{
								match(input,BODY_VK,FOLLOW_BODY_VK_in_alter_type4325); 
								}
								break;

						}

						// PLSQLPrinter.g:473:59: ( DEBUG_VK )?
						int alt103=2;
						int LA103_0 = input.LA(1);
						if ( (LA103_0==DEBUG_VK) ) {
							alt103=1;
						}
						switch (alt103) {
							case 1 :
								// PLSQLPrinter.g:473:59: DEBUG_VK
								{
								match(input,DEBUG_VK,FOLLOW_DEBUG_VK_in_alter_type4329); 
								}
								break;

						}

						// PLSQLPrinter.g:473:69: ( REUSE_VK )?
						int alt104=2;
						int LA104_0 = input.LA(1);
						if ( (LA104_0==REUSE_VK) ) {
							alt104=1;
						}
						switch (alt104) {
							case 1 :
								// PLSQLPrinter.g:473:69: REUSE_VK
								{
								match(input,REUSE_VK,FOLLOW_REUSE_VK_in_alter_type4332); 
								}
								break;

						}

						// PLSQLPrinter.g:473:79: ( compiler_parameters_clause )*
						loop105:
						while (true) {
							int alt105=2;
							int LA105_0 = input.LA(1);
							if ( (LA105_0==COMPILER_PARAMETER) ) {
								alt105=1;
							}

							switch (alt105) {
							case 1 :
								// PLSQLPrinter.g:473:79: compiler_parameters_clause
								{
								pushFollow(FOLLOW_compiler_parameters_clause_in_alter_type4335);
								compiler_parameters_clause();
								state._fsp--;

								}
								break;

							default :
								break loop105;
							}
						}

						match(input, Token.UP, null); 
					}

					}
					break;

			}

			// PLSQLPrinter.g:475:13: ( dependent_handling_clause )?
			int alt107=2;
			int LA107_0 = input.LA(1);
			if ( (LA107_0==DEPENDENT_HANDLING) ) {
				alt107=1;
			}
			switch (alt107) {
				case 1 :
					// PLSQLPrinter.g:475:13: dependent_handling_clause
					{
					pushFollow(FOLLOW_dependent_handling_clause_in_alter_type4366);
					dependent_handling_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 477:5: -> template( \"not implemented: alter_type\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: alter_type");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_type"


	public static class alter_method_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_method_element"
	// PLSQLPrinter.g:482:1: alter_method_element : ^( ALTER_METHOD_ELEMENT ( ADD_VK | SQL92_RESERVED_DROP ) ( map_order_function_spec )? ( subprogram_spec )? ) -> template( \"not implemented: alter_method_element\";
	public final PLSQLPrinter.alter_method_element_return alter_method_element() throws RecognitionException {
		PLSQLPrinter.alter_method_element_return retval = new PLSQLPrinter.alter_method_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:483:5: ( ^( ALTER_METHOD_ELEMENT ( ADD_VK | SQL92_RESERVED_DROP ) ( map_order_function_spec )? ( subprogram_spec )? ) -> template( \"not implemented: alter_method_element\")
			// PLSQLPrinter.g:483:10: ^( ALTER_METHOD_ELEMENT ( ADD_VK | SQL92_RESERVED_DROP ) ( map_order_function_spec )? ( subprogram_spec )? )
			{
			match(input,ALTER_METHOD_ELEMENT,FOLLOW_ALTER_METHOD_ELEMENT_in_alter_method_element4414); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:483:33: ( ADD_VK | SQL92_RESERVED_DROP )
			int alt108=2;
			int LA108_0 = input.LA(1);
			if ( (LA108_0==ADD_VK) ) {
				alt108=1;
			}
			else if ( (LA108_0==SQL92_RESERVED_DROP) ) {
				alt108=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 108, 0, input);
				throw nvae;
			}

			switch (alt108) {
				case 1 :
					// PLSQLPrinter.g:483:34: ADD_VK
					{
					match(input,ADD_VK,FOLLOW_ADD_VK_in_alter_method_element4417); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:483:41: SQL92_RESERVED_DROP
					{
					match(input,SQL92_RESERVED_DROP,FOLLOW_SQL92_RESERVED_DROP_in_alter_method_element4419); 
					}
					break;

			}

			// PLSQLPrinter.g:483:62: ( map_order_function_spec )?
			int alt109=2;
			int LA109_0 = input.LA(1);
			if ( (LA109_0==SQL92_RESERVED_ORDER||LA109_0==MAP_VK) ) {
				alt109=1;
			}
			switch (alt109) {
				case 1 :
					// PLSQLPrinter.g:483:62: map_order_function_spec
					{
					pushFollow(FOLLOW_map_order_function_spec_in_alter_method_element4422);
					map_order_function_spec();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:483:87: ( subprogram_spec )?
			int alt110=2;
			int LA110_0 = input.LA(1);
			if ( (LA110_0==MEMBER_VK||LA110_0==STATIC_VK) ) {
				alt110=1;
			}
			switch (alt110) {
				case 1 :
					// PLSQLPrinter.g:483:87: subprogram_spec
					{
					pushFollow(FOLLOW_subprogram_spec_in_alter_method_element4425);
					subprogram_spec();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 484:5: -> template( \"not implemented: alter_method_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: alter_method_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_method_element"


	public static class attribute_definition_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "attribute_definition"
	// PLSQLPrinter.g:487:1: attribute_definition : ^( ATTRIBUTE attribute_name ( type_spec )? ) -> template( \"not implemented: attribute_definition\";
	public final PLSQLPrinter.attribute_definition_return attribute_definition() throws RecognitionException {
		PLSQLPrinter.attribute_definition_return retval = new PLSQLPrinter.attribute_definition_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:488:5: ( ^( ATTRIBUTE attribute_name ( type_spec )? ) -> template( \"not implemented: attribute_definition\")
			// PLSQLPrinter.g:488:10: ^( ATTRIBUTE attribute_name ( type_spec )? )
			{
			match(input,ATTRIBUTE,FOLLOW_ATTRIBUTE_in_attribute_definition4462); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_attribute_name_in_attribute_definition4464);
			attribute_name();
			state._fsp--;

			// PLSQLPrinter.g:488:37: ( type_spec )?
			int alt111=2;
			int LA111_0 = input.LA(1);
			if ( (LA111_0==CUSTOM_TYPE||LA111_0==INTERVAL_DATATYPE||LA111_0==NATIVE_DATATYPE) ) {
				alt111=1;
			}
			switch (alt111) {
				case 1 :
					// PLSQLPrinter.g:488:37: type_spec
					{
					pushFollow(FOLLOW_type_spec_in_attribute_definition4466);
					type_spec();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 489:5: -> template( \"not implemented: attribute_definition\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: attribute_definition");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "attribute_definition"


	public static class alter_collection_clauses_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_collection_clauses"
	// PLSQLPrinter.g:492:1: alter_collection_clauses : ^( ALTER_COLLECTION ( ^( TYPE_VK type_spec ) | ^( LIMIT_VK expression ) ) ) -> template( \"not implemented: alter_collection_clauses\";
	public final PLSQLPrinter.alter_collection_clauses_return alter_collection_clauses() throws RecognitionException {
		PLSQLPrinter.alter_collection_clauses_return retval = new PLSQLPrinter.alter_collection_clauses_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:493:5: ( ^( ALTER_COLLECTION ( ^( TYPE_VK type_spec ) | ^( LIMIT_VK expression ) ) ) -> template( \"not implemented: alter_collection_clauses\")
			// PLSQLPrinter.g:493:10: ^( ALTER_COLLECTION ( ^( TYPE_VK type_spec ) | ^( LIMIT_VK expression ) ) )
			{
			match(input,ALTER_COLLECTION,FOLLOW_ALTER_COLLECTION_in_alter_collection_clauses4503); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:494:13: ( ^( TYPE_VK type_spec ) | ^( LIMIT_VK expression ) )
			int alt112=2;
			int LA112_0 = input.LA(1);
			if ( (LA112_0==TYPE_VK) ) {
				alt112=1;
			}
			else if ( (LA112_0==LIMIT_VK) ) {
				alt112=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 112, 0, input);
				throw nvae;
			}

			switch (alt112) {
				case 1 :
					// PLSQLPrinter.g:494:18: ^( TYPE_VK type_spec )
					{
					match(input,TYPE_VK,FOLLOW_TYPE_VK_in_alter_collection_clauses4524); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_type_spec_in_alter_collection_clauses4526);
					type_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:495:18: ^( LIMIT_VK expression )
					{
					match(input,LIMIT_VK,FOLLOW_LIMIT_VK_in_alter_collection_clauses4547); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_alter_collection_clauses4549);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 498:5: -> template( \"not implemented: alter_collection_clauses\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: alter_collection_clauses");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_collection_clauses"


	public static class dependent_handling_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "dependent_handling_clause"
	// PLSQLPrinter.g:501:1: dependent_handling_clause : ^( DEPENDENT_HANDLING ( INVALIDATE_VK | ^( CASCADE_VK ( CONVERT_VK | ( SQL92_RESERVED_NOT )? INCLUDING_VK )? ) ) ) -> template( \"not implemented: dependent_handling_clause\";
	public final PLSQLPrinter.dependent_handling_clause_return dependent_handling_clause() throws RecognitionException {
		PLSQLPrinter.dependent_handling_clause_return retval = new PLSQLPrinter.dependent_handling_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:502:5: ( ^( DEPENDENT_HANDLING ( INVALIDATE_VK | ^( CASCADE_VK ( CONVERT_VK | ( SQL92_RESERVED_NOT )? INCLUDING_VK )? ) ) ) -> template( \"not implemented: dependent_handling_clause\")
			// PLSQLPrinter.g:502:10: ^( DEPENDENT_HANDLING ( INVALIDATE_VK | ^( CASCADE_VK ( CONVERT_VK | ( SQL92_RESERVED_NOT )? INCLUDING_VK )? ) ) )
			{
			match(input,DEPENDENT_HANDLING,FOLLOW_DEPENDENT_HANDLING_in_dependent_handling_clause4610); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:503:13: ( INVALIDATE_VK | ^( CASCADE_VK ( CONVERT_VK | ( SQL92_RESERVED_NOT )? INCLUDING_VK )? ) )
			int alt115=2;
			int LA115_0 = input.LA(1);
			if ( (LA115_0==INVALIDATE_VK) ) {
				alt115=1;
			}
			else if ( (LA115_0==CASCADE_VK) ) {
				alt115=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 115, 0, input);
				throw nvae;
			}

			switch (alt115) {
				case 1 :
					// PLSQLPrinter.g:503:18: INVALIDATE_VK
					{
					match(input,INVALIDATE_VK,FOLLOW_INVALIDATE_VK_in_dependent_handling_clause4630); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:504:18: ^( CASCADE_VK ( CONVERT_VK | ( SQL92_RESERVED_NOT )? INCLUDING_VK )? )
					{
					match(input,CASCADE_VK,FOLLOW_CASCADE_VK_in_dependent_handling_clause4650); 
					if ( input.LA(1)==Token.DOWN ) {
						match(input, Token.DOWN, null); 
						// PLSQLPrinter.g:505:21: ( CONVERT_VK | ( SQL92_RESERVED_NOT )? INCLUDING_VK )?
						int alt114=3;
						int LA114_0 = input.LA(1);
						if ( (LA114_0==CONVERT_VK) ) {
							alt114=1;
						}
						else if ( (LA114_0==SQL92_RESERVED_NOT||LA114_0==INCLUDING_VK) ) {
							alt114=2;
						}
						switch (alt114) {
							case 1 :
								// PLSQLPrinter.g:505:26: CONVERT_VK
								{
								match(input,CONVERT_VK,FOLLOW_CONVERT_VK_in_dependent_handling_clause4678); 
								}
								break;
							case 2 :
								// PLSQLPrinter.g:506:26: ( SQL92_RESERVED_NOT )? INCLUDING_VK
								{
								// PLSQLPrinter.g:506:26: ( SQL92_RESERVED_NOT )?
								int alt113=2;
								int LA113_0 = input.LA(1);
								if ( (LA113_0==SQL92_RESERVED_NOT) ) {
									alt113=1;
								}
								switch (alt113) {
									case 1 :
										// PLSQLPrinter.g:506:26: SQL92_RESERVED_NOT
										{
										match(input,SQL92_RESERVED_NOT,FOLLOW_SQL92_RESERVED_NOT_in_dependent_handling_clause4705); 
										}
										break;

								}

								match(input,INCLUDING_VK,FOLLOW_INCLUDING_VK_in_dependent_handling_clause4708); 
								}
								break;

						}

						match(input, Token.UP, null); 
					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 511:5: -> template( \"not implemented: dependent_handling_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: dependent_handling_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dependent_handling_clause"


	public static class dependent_exceptions_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "dependent_exceptions_part"
	// PLSQLPrinter.g:514:1: dependent_exceptions_part : ^( EXCEPTIONS_VK ( FORCE_VK )? tableview_name ) -> template( \"not implemented: dependent_exceptions_part\";
	public final PLSQLPrinter.dependent_exceptions_part_return dependent_exceptions_part() throws RecognitionException {
		PLSQLPrinter.dependent_exceptions_part_return retval = new PLSQLPrinter.dependent_exceptions_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:515:5: ( ^( EXCEPTIONS_VK ( FORCE_VK )? tableview_name ) -> template( \"not implemented: dependent_exceptions_part\")
			// PLSQLPrinter.g:515:10: ^( EXCEPTIONS_VK ( FORCE_VK )? tableview_name )
			{
			match(input,EXCEPTIONS_VK,FOLLOW_EXCEPTIONS_VK_in_dependent_exceptions_part4808); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:515:26: ( FORCE_VK )?
			int alt116=2;
			int LA116_0 = input.LA(1);
			if ( (LA116_0==FORCE_VK) ) {
				alt116=1;
			}
			switch (alt116) {
				case 1 :
					// PLSQLPrinter.g:515:26: FORCE_VK
					{
					match(input,FORCE_VK,FOLLOW_FORCE_VK_in_dependent_exceptions_part4810); 
					}
					break;

			}

			pushFollow(FOLLOW_tableview_name_in_dependent_exceptions_part4813);
			tableview_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 516:5: -> template( \"not implemented: dependent_exceptions_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: dependent_exceptions_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dependent_exceptions_part"


	public static class create_type_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "create_type"
	// PLSQLPrinter.g:521:1: create_type : ( ^( CREATE_TYPE_BODY ( REPLACE_VK )? type_name ^( TYPE_BODY_ELEMENTS ( type_body_elements )+ ) ) -> template( \"not implemented: create_type\"| ^( CREATE_TYPE_SPEC ( REPLACE_VK )? type_name ( CHAR_STRING )? ( object_type_def )? ) -> template( \"not implemented: create_type\");
	public final PLSQLPrinter.create_type_return create_type() throws RecognitionException {
		PLSQLPrinter.create_type_return retval = new PLSQLPrinter.create_type_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:522:5: ( ^( CREATE_TYPE_BODY ( REPLACE_VK )? type_name ^( TYPE_BODY_ELEMENTS ( type_body_elements )+ ) ) -> template( \"not implemented: create_type\"| ^( CREATE_TYPE_SPEC ( REPLACE_VK )? type_name ( CHAR_STRING )? ( object_type_def )? ) -> template( \"not implemented: create_type\")
			int alt122=2;
			int LA122_0 = input.LA(1);
			if ( (LA122_0==CREATE_TYPE_BODY) ) {
				alt122=1;
			}
			else if ( (LA122_0==CREATE_TYPE_SPEC) ) {
				alt122=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 122, 0, input);
				throw nvae;
			}

			switch (alt122) {
				case 1 :
					// PLSQLPrinter.g:522:10: ^( CREATE_TYPE_BODY ( REPLACE_VK )? type_name ^( TYPE_BODY_ELEMENTS ( type_body_elements )+ ) )
					{
					match(input,CREATE_TYPE_BODY,FOLLOW_CREATE_TYPE_BODY_in_create_type4851); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:522:29: ( REPLACE_VK )?
					int alt117=2;
					int LA117_0 = input.LA(1);
					if ( (LA117_0==REPLACE_VK) ) {
						alt117=1;
					}
					switch (alt117) {
						case 1 :
							// PLSQLPrinter.g:522:29: REPLACE_VK
							{
							match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_create_type4853); 
							}
							break;

					}

					pushFollow(FOLLOW_type_name_in_create_type4856);
					type_name();
					state._fsp--;

					match(input,TYPE_BODY_ELEMENTS,FOLLOW_TYPE_BODY_ELEMENTS_in_create_type4859); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:522:72: ( type_body_elements )+
					int cnt118=0;
					loop118:
					while (true) {
						int alt118=2;
						int LA118_0 = input.LA(1);
						if ( (LA118_0==SQL92_RESERVED_ORDER||LA118_0==MAP_VK||LA118_0==MEMBER_VK||LA118_0==STATIC_VK) ) {
							alt118=1;
						}

						switch (alt118) {
						case 1 :
							// PLSQLPrinter.g:522:72: type_body_elements
							{
							pushFollow(FOLLOW_type_body_elements_in_create_type4861);
							type_body_elements();
							state._fsp--;

							}
							break;

						default :
							if ( cnt118 >= 1 ) break loop118;
							EarlyExitException eee = new EarlyExitException(118, input);
							throw eee;
						}
						cnt118++;
					}

					match(input, Token.UP, null); 

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 523:5: -> template( \"not implemented: create_type\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: create_type");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:524:10: ^( CREATE_TYPE_SPEC ( REPLACE_VK )? type_name ( CHAR_STRING )? ( object_type_def )? )
					{
					match(input,CREATE_TYPE_SPEC,FOLLOW_CREATE_TYPE_SPEC_in_create_type4890); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:524:29: ( REPLACE_VK )?
					int alt119=2;
					int LA119_0 = input.LA(1);
					if ( (LA119_0==REPLACE_VK) ) {
						alt119=1;
					}
					switch (alt119) {
						case 1 :
							// PLSQLPrinter.g:524:29: REPLACE_VK
							{
							match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_create_type4892); 
							}
							break;

					}

					pushFollow(FOLLOW_type_name_in_create_type4895);
					type_name();
					state._fsp--;

					// PLSQLPrinter.g:524:51: ( CHAR_STRING )?
					int alt120=2;
					int LA120_0 = input.LA(1);
					if ( (LA120_0==CHAR_STRING) ) {
						alt120=1;
					}
					switch (alt120) {
						case 1 :
							// PLSQLPrinter.g:524:51: CHAR_STRING
							{
							match(input,CHAR_STRING,FOLLOW_CHAR_STRING_in_create_type4897); 
							}
							break;

					}

					// PLSQLPrinter.g:524:64: ( object_type_def )?
					int alt121=2;
					int LA121_0 = input.LA(1);
					if ( (LA121_0==OBJECT_TYPE_DEF) ) {
						alt121=1;
					}
					switch (alt121) {
						case 1 :
							// PLSQLPrinter.g:524:64: object_type_def
							{
							pushFollow(FOLLOW_object_type_def_in_create_type4900);
							object_type_def();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 525:5: -> template( \"not implemented: create_type\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: create_type");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_type"


	public static class object_type_def_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "object_type_def"
	// PLSQLPrinter.g:528:1: object_type_def : ^( OBJECT_TYPE_DEF ( object_as_part | object_under_part ) ( invoker_rights_clause )? ( sqlj_object_type )? ( modifier_clause )* ^( OBJECT_MEMBERS ( element_spec )* ) ) -> template( \"not implemented: object_type_def\";
	public final PLSQLPrinter.object_type_def_return object_type_def() throws RecognitionException {
		PLSQLPrinter.object_type_def_return retval = new PLSQLPrinter.object_type_def_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:529:5: ( ^( OBJECT_TYPE_DEF ( object_as_part | object_under_part ) ( invoker_rights_clause )? ( sqlj_object_type )? ( modifier_clause )* ^( OBJECT_MEMBERS ( element_spec )* ) ) -> template( \"not implemented: object_type_def\")
			// PLSQLPrinter.g:529:10: ^( OBJECT_TYPE_DEF ( object_as_part | object_under_part ) ( invoker_rights_clause )? ( sqlj_object_type )? ( modifier_clause )* ^( OBJECT_MEMBERS ( element_spec )* ) )
			{
			match(input,OBJECT_TYPE_DEF,FOLLOW_OBJECT_TYPE_DEF_in_object_type_def4937); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:529:28: ( object_as_part | object_under_part )
			int alt123=2;
			int LA123_0 = input.LA(1);
			if ( (LA123_0==OBJECT_AS) ) {
				alt123=1;
			}
			else if ( (LA123_0==UNDER_VK) ) {
				alt123=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 123, 0, input);
				throw nvae;
			}

			switch (alt123) {
				case 1 :
					// PLSQLPrinter.g:529:29: object_as_part
					{
					pushFollow(FOLLOW_object_as_part_in_object_type_def4940);
					object_as_part();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:529:44: object_under_part
					{
					pushFollow(FOLLOW_object_under_part_in_object_type_def4942);
					object_under_part();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:529:63: ( invoker_rights_clause )?
			int alt124=2;
			int LA124_0 = input.LA(1);
			if ( (LA124_0==AUTHID_VK) ) {
				alt124=1;
			}
			switch (alt124) {
				case 1 :
					// PLSQLPrinter.g:529:63: invoker_rights_clause
					{
					pushFollow(FOLLOW_invoker_rights_clause_in_object_type_def4945);
					invoker_rights_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:530:14: ( sqlj_object_type )?
			int alt125=2;
			int LA125_0 = input.LA(1);
			if ( (LA125_0==JAVA_VK) ) {
				alt125=1;
			}
			switch (alt125) {
				case 1 :
					// PLSQLPrinter.g:530:14: sqlj_object_type
					{
					pushFollow(FOLLOW_sqlj_object_type_in_object_type_def4961);
					sqlj_object_type();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:530:32: ( modifier_clause )*
			loop126:
			while (true) {
				int alt126=2;
				int LA126_0 = input.LA(1);
				if ( (LA126_0==MODIFIER) ) {
					alt126=1;
				}

				switch (alt126) {
				case 1 :
					// PLSQLPrinter.g:530:32: modifier_clause
					{
					pushFollow(FOLLOW_modifier_clause_in_object_type_def4964);
					modifier_clause();
					state._fsp--;

					}
					break;

				default :
					break loop126;
				}
			}

			match(input,OBJECT_MEMBERS,FOLLOW_OBJECT_MEMBERS_in_object_type_def4968); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:530:66: ( element_spec )*
				loop127:
				while (true) {
					int alt127=2;
					int LA127_0 = input.LA(1);
					if ( (LA127_0==ELEMENT_SPEC) ) {
						alt127=1;
					}

					switch (alt127) {
					case 1 :
						// PLSQLPrinter.g:530:66: element_spec
						{
						pushFollow(FOLLOW_element_spec_in_object_type_def4970);
						element_spec();
						state._fsp--;

						}
						break;

					default :
						break loop127;
					}
				}

				match(input, Token.UP, null); 
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 531:5: -> template( \"not implemented: object_type_def\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: object_type_def");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "object_type_def"


	public static class object_as_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "object_as_part"
	// PLSQLPrinter.g:534:1: object_as_part : ^( OBJECT_AS ( OBJECT_VK | varray_type_def | nested_table_type_def ) ) -> template( \"not implemented: object_as_part\";
	public final PLSQLPrinter.object_as_part_return object_as_part() throws RecognitionException {
		PLSQLPrinter.object_as_part_return retval = new PLSQLPrinter.object_as_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:535:5: ( ^( OBJECT_AS ( OBJECT_VK | varray_type_def | nested_table_type_def ) ) -> template( \"not implemented: object_as_part\")
			// PLSQLPrinter.g:535:10: ^( OBJECT_AS ( OBJECT_VK | varray_type_def | nested_table_type_def ) )
			{
			match(input,OBJECT_AS,FOLLOW_OBJECT_AS_in_object_as_part5010); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:535:22: ( OBJECT_VK | varray_type_def | nested_table_type_def )
			int alt128=3;
			switch ( input.LA(1) ) {
			case OBJECT_VK:
				{
				alt128=1;
				}
				break;
			case SQL92_RESERVED_NULL:
			case VARR_ARRAY_DEF:
				{
				alt128=2;
				}
				break;
			case NESTED_TABLE_TYPE_DEF:
				{
				alt128=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 128, 0, input);
				throw nvae;
			}
			switch (alt128) {
				case 1 :
					// PLSQLPrinter.g:535:23: OBJECT_VK
					{
					match(input,OBJECT_VK,FOLLOW_OBJECT_VK_in_object_as_part5013); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:535:33: varray_type_def
					{
					pushFollow(FOLLOW_varray_type_def_in_object_as_part5015);
					varray_type_def();
					state._fsp--;

					}
					break;
				case 3 :
					// PLSQLPrinter.g:535:49: nested_table_type_def
					{
					pushFollow(FOLLOW_nested_table_type_def_in_object_as_part5017);
					nested_table_type_def();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 536:5: -> template( \"not implemented: object_as_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: object_as_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "object_as_part"


	public static class object_under_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "object_under_part"
	// PLSQLPrinter.g:539:1: object_under_part : ^( UNDER_VK type_spec ) -> template( \"not implemented: object_under_part\";
	public final PLSQLPrinter.object_under_part_return object_under_part() throws RecognitionException {
		PLSQLPrinter.object_under_part_return retval = new PLSQLPrinter.object_under_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:540:5: ( ^( UNDER_VK type_spec ) -> template( \"not implemented: object_under_part\")
			// PLSQLPrinter.g:540:10: ^( UNDER_VK type_spec )
			{
			match(input,UNDER_VK,FOLLOW_UNDER_VK_in_object_under_part5054); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_spec_in_object_under_part5056);
			type_spec();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 541:5: -> template( \"not implemented: object_under_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: object_under_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "object_under_part"


	public static class nested_table_type_def_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "nested_table_type_def"
	// PLSQLPrinter.g:544:1: nested_table_type_def : ^( NESTED_TABLE_TYPE_DEF type_spec ( SQL92_RESERVED_NULL )? ( table_indexed_by_part )? ) -> template( \"not implemented: nested_table_type_def\";
	public final PLSQLPrinter.nested_table_type_def_return nested_table_type_def() throws RecognitionException {
		PLSQLPrinter.nested_table_type_def_return retval = new PLSQLPrinter.nested_table_type_def_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:545:5: ( ^( NESTED_TABLE_TYPE_DEF type_spec ( SQL92_RESERVED_NULL )? ( table_indexed_by_part )? ) -> template( \"not implemented: nested_table_type_def\")
			// PLSQLPrinter.g:545:10: ^( NESTED_TABLE_TYPE_DEF type_spec ( SQL92_RESERVED_NULL )? ( table_indexed_by_part )? )
			{
			match(input,NESTED_TABLE_TYPE_DEF,FOLLOW_NESTED_TABLE_TYPE_DEF_in_nested_table_type_def5092); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_spec_in_nested_table_type_def5094);
			type_spec();
			state._fsp--;

			// PLSQLPrinter.g:545:44: ( SQL92_RESERVED_NULL )?
			int alt129=2;
			int LA129_0 = input.LA(1);
			if ( (LA129_0==SQL92_RESERVED_NULL) ) {
				alt129=1;
			}
			switch (alt129) {
				case 1 :
					// PLSQLPrinter.g:545:44: SQL92_RESERVED_NULL
					{
					match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_nested_table_type_def5096); 
					}
					break;

			}

			// PLSQLPrinter.g:545:65: ( table_indexed_by_part )?
			int alt130=2;
			int LA130_0 = input.LA(1);
			if ( (LA130_0==INDEXED_BY) ) {
				alt130=1;
			}
			switch (alt130) {
				case 1 :
					// PLSQLPrinter.g:545:65: table_indexed_by_part
					{
					pushFollow(FOLLOW_table_indexed_by_part_in_nested_table_type_def5099);
					table_indexed_by_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 546:5: -> template( \"not implemented: nested_table_type_def\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: nested_table_type_def");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "nested_table_type_def"


	public static class sqlj_object_type_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "sqlj_object_type"
	// PLSQLPrinter.g:549:1: sqlj_object_type : ^( JAVA_VK expression ( SQLDATA_VK | CUSTOMDATUM_VK | ORADATA_VK ) ) -> template( \"not implemented: sqlj_object_type\";
	public final PLSQLPrinter.sqlj_object_type_return sqlj_object_type() throws RecognitionException {
		PLSQLPrinter.sqlj_object_type_return retval = new PLSQLPrinter.sqlj_object_type_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:550:5: ( ^( JAVA_VK expression ( SQLDATA_VK | CUSTOMDATUM_VK | ORADATA_VK ) ) -> template( \"not implemented: sqlj_object_type\")
			// PLSQLPrinter.g:550:10: ^( JAVA_VK expression ( SQLDATA_VK | CUSTOMDATUM_VK | ORADATA_VK ) )
			{
			match(input,JAVA_VK,FOLLOW_JAVA_VK_in_sqlj_object_type5136); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_sqlj_object_type5138);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:550:31: ( SQLDATA_VK | CUSTOMDATUM_VK | ORADATA_VK )
			int alt131=3;
			switch ( input.LA(1) ) {
			case SQLDATA_VK:
				{
				alt131=1;
				}
				break;
			case CUSTOMDATUM_VK:
				{
				alt131=2;
				}
				break;
			case ORADATA_VK:
				{
				alt131=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 131, 0, input);
				throw nvae;
			}
			switch (alt131) {
				case 1 :
					// PLSQLPrinter.g:550:32: SQLDATA_VK
					{
					match(input,SQLDATA_VK,FOLLOW_SQLDATA_VK_in_sqlj_object_type5141); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:550:43: CUSTOMDATUM_VK
					{
					match(input,CUSTOMDATUM_VK,FOLLOW_CUSTOMDATUM_VK_in_sqlj_object_type5143); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:550:58: ORADATA_VK
					{
					match(input,ORADATA_VK,FOLLOW_ORADATA_VK_in_sqlj_object_type5145); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 551:5: -> template( \"not implemented: sqlj_object_type\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: sqlj_object_type");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sqlj_object_type"


	public static class type_body_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "type_body_elements"
	// PLSQLPrinter.g:554:1: type_body_elements : ( map_order_func_declaration -> template( \"not implemented: type_body_elements\"| subprog_decl_in_type -> template( \"not implemented: type_body_elements\");
	public final PLSQLPrinter.type_body_elements_return type_body_elements() throws RecognitionException {
		PLSQLPrinter.type_body_elements_return retval = new PLSQLPrinter.type_body_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:555:5: ( map_order_func_declaration -> template( \"not implemented: type_body_elements\"| subprog_decl_in_type -> template( \"not implemented: type_body_elements\")
			int alt132=2;
			int LA132_0 = input.LA(1);
			if ( (LA132_0==SQL92_RESERVED_ORDER||LA132_0==MAP_VK) ) {
				alt132=1;
			}
			else if ( (LA132_0==MEMBER_VK||LA132_0==STATIC_VK) ) {
				alt132=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 132, 0, input);
				throw nvae;
			}

			switch (alt132) {
				case 1 :
					// PLSQLPrinter.g:555:10: map_order_func_declaration
					{
					pushFollow(FOLLOW_map_order_func_declaration_in_type_body_elements5181);
					map_order_func_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 556:5: -> template( \"not implemented: type_body_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: type_body_elements");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:557:10: subprog_decl_in_type
					{
					pushFollow(FOLLOW_subprog_decl_in_type_in_type_body_elements5206);
					subprog_decl_in_type();
					state._fsp--;

					// TEMPLATE REWRITE
					// 558:5: -> template( \"not implemented: type_body_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: type_body_elements");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "type_body_elements"


	public static class map_order_func_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "map_order_func_declaration"
	// PLSQLPrinter.g:561:1: map_order_func_declaration : ^( ( MAP_VK | SQL92_RESERVED_ORDER ) create_function_body ) -> template( \"not implemented: map_order_func_declaration\";
	public final PLSQLPrinter.map_order_func_declaration_return map_order_func_declaration() throws RecognitionException {
		PLSQLPrinter.map_order_func_declaration_return retval = new PLSQLPrinter.map_order_func_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:562:5: ( ^( ( MAP_VK | SQL92_RESERVED_ORDER ) create_function_body ) -> template( \"not implemented: map_order_func_declaration\")
			// PLSQLPrinter.g:562:10: ^( ( MAP_VK | SQL92_RESERVED_ORDER ) create_function_body )
			{
			// PLSQLPrinter.g:562:12: ( MAP_VK | SQL92_RESERVED_ORDER )
			int alt133=2;
			int LA133_0 = input.LA(1);
			if ( (LA133_0==MAP_VK) ) {
				alt133=1;
			}
			else if ( (LA133_0==SQL92_RESERVED_ORDER) ) {
				alt133=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 133, 0, input);
				throw nvae;
			}

			switch (alt133) {
				case 1 :
					// PLSQLPrinter.g:562:13: MAP_VK
					{
					match(input,MAP_VK,FOLLOW_MAP_VK_in_map_order_func_declaration5242); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:562:20: SQL92_RESERVED_ORDER
					{
					match(input,SQL92_RESERVED_ORDER,FOLLOW_SQL92_RESERVED_ORDER_in_map_order_func_declaration5244); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_create_function_body_in_map_order_func_declaration5247);
			create_function_body();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 563:5: -> template( \"not implemented: map_order_func_declaration\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: map_order_func_declaration");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "map_order_func_declaration"


	public static class subprog_decl_in_type_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subprog_decl_in_type"
	// PLSQLPrinter.g:566:1: subprog_decl_in_type : ^( ( MEMBER_VK | STATIC_VK ) ( create_procedure_body | create_function_body | constructor_declaration ) ) -> template( \"not implemented: subprog_decl_in_type\";
	public final PLSQLPrinter.subprog_decl_in_type_return subprog_decl_in_type() throws RecognitionException {
		PLSQLPrinter.subprog_decl_in_type_return retval = new PLSQLPrinter.subprog_decl_in_type_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:567:5: ( ^( ( MEMBER_VK | STATIC_VK ) ( create_procedure_body | create_function_body | constructor_declaration ) ) -> template( \"not implemented: subprog_decl_in_type\")
			// PLSQLPrinter.g:567:10: ^( ( MEMBER_VK | STATIC_VK ) ( create_procedure_body | create_function_body | constructor_declaration ) )
			{
			// PLSQLPrinter.g:567:12: ( MEMBER_VK | STATIC_VK )
			int alt134=2;
			int LA134_0 = input.LA(1);
			if ( (LA134_0==MEMBER_VK) ) {
				alt134=1;
			}
			else if ( (LA134_0==STATIC_VK) ) {
				alt134=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 134, 0, input);
				throw nvae;
			}

			switch (alt134) {
				case 1 :
					// PLSQLPrinter.g:567:13: MEMBER_VK
					{
					match(input,MEMBER_VK,FOLLOW_MEMBER_VK_in_subprog_decl_in_type5284); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:567:23: STATIC_VK
					{
					match(input,STATIC_VK,FOLLOW_STATIC_VK_in_subprog_decl_in_type5286); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:568:13: ( create_procedure_body | create_function_body | constructor_declaration )
			int alt135=3;
			switch ( input.LA(1) ) {
			case CREATE_PROCEDURE:
				{
				alt135=1;
				}
				break;
			case CREATE_FUNCTION:
				{
				alt135=2;
				}
				break;
			case CONSTRUCTOR_VK:
				{
				alt135=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 135, 0, input);
				throw nvae;
			}
			switch (alt135) {
				case 1 :
					// PLSQLPrinter.g:568:18: create_procedure_body
					{
					pushFollow(FOLLOW_create_procedure_body_in_subprog_decl_in_type5306);
					create_procedure_body();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:569:18: create_function_body
					{
					pushFollow(FOLLOW_create_function_body_in_subprog_decl_in_type5325);
					create_function_body();
					state._fsp--;

					}
					break;
				case 3 :
					// PLSQLPrinter.g:570:18: constructor_declaration
					{
					pushFollow(FOLLOW_constructor_declaration_in_subprog_decl_in_type5344);
					constructor_declaration();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 573:5: -> template( \"not implemented: subprog_decl_in_type\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: subprog_decl_in_type");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subprog_decl_in_type"


	public static class constructor_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "constructor_declaration"
	// PLSQLPrinter.g:576:1: constructor_declaration : ^( CONSTRUCTOR_VK type_spec ( FINAL_VK )? ( INSTANTIABLE_VK )? ^( PARAMETERS ( type_elements_parameter )* ) ( ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) ) ) -> template( \"not implemented: constructor_declaration\";
	public final PLSQLPrinter.constructor_declaration_return constructor_declaration() throws RecognitionException {
		PLSQLPrinter.constructor_declaration_return retval = new PLSQLPrinter.constructor_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:577:5: ( ^( CONSTRUCTOR_VK type_spec ( FINAL_VK )? ( INSTANTIABLE_VK )? ^( PARAMETERS ( type_elements_parameter )* ) ( ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) ) ) -> template( \"not implemented: constructor_declaration\")
			// PLSQLPrinter.g:577:10: ^( CONSTRUCTOR_VK type_spec ( FINAL_VK )? ( INSTANTIABLE_VK )? ^( PARAMETERS ( type_elements_parameter )* ) ( ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) ) )
			{
			match(input,CONSTRUCTOR_VK,FOLLOW_CONSTRUCTOR_VK_in_constructor_declaration5403); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_spec_in_constructor_declaration5405);
			type_spec();
			state._fsp--;

			// PLSQLPrinter.g:577:37: ( FINAL_VK )?
			int alt136=2;
			int LA136_0 = input.LA(1);
			if ( (LA136_0==FINAL_VK) ) {
				alt136=1;
			}
			switch (alt136) {
				case 1 :
					// PLSQLPrinter.g:577:37: FINAL_VK
					{
					match(input,FINAL_VK,FOLLOW_FINAL_VK_in_constructor_declaration5407); 
					}
					break;

			}

			// PLSQLPrinter.g:577:47: ( INSTANTIABLE_VK )?
			int alt137=2;
			int LA137_0 = input.LA(1);
			if ( (LA137_0==INSTANTIABLE_VK) ) {
				alt137=1;
			}
			switch (alt137) {
				case 1 :
					// PLSQLPrinter.g:577:47: INSTANTIABLE_VK
					{
					match(input,INSTANTIABLE_VK,FOLLOW_INSTANTIABLE_VK_in_constructor_declaration5410); 
					}
					break;

			}

			match(input,PARAMETERS,FOLLOW_PARAMETERS_in_constructor_declaration5414); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:577:77: ( type_elements_parameter )*
				loop138:
				while (true) {
					int alt138=2;
					int LA138_0 = input.LA(1);
					if ( (LA138_0==PARAMETER) ) {
						alt138=1;
					}

					switch (alt138) {
					case 1 :
						// PLSQLPrinter.g:577:77: type_elements_parameter
						{
						pushFollow(FOLLOW_type_elements_parameter_in_constructor_declaration5416);
						type_elements_parameter();
						state._fsp--;

						}
						break;

					default :
						break loop138;
					}
				}

				match(input, Token.UP, null); 
			}

			// PLSQLPrinter.g:578:13: ( ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) )
			int alt140=2;
			int LA140_0 = input.LA(1);
			if ( (LA140_0==CALL_MODE) ) {
				alt140=1;
			}
			else if ( (LA140_0==BODY_MODE) ) {
				alt140=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 140, 0, input);
				throw nvae;
			}

			switch (alt140) {
				case 1 :
					// PLSQLPrinter.g:578:18: ^( CALL_MODE call_spec )
					{
					match(input,CALL_MODE,FOLLOW_CALL_MODE_in_constructor_declaration5439); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_call_spec_in_constructor_declaration5441);
					call_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:579:18: ^( BODY_MODE ( declare_spec )* body )
					{
					match(input,BODY_MODE,FOLLOW_BODY_MODE_in_constructor_declaration5462); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:579:30: ( declare_spec )*
					loop139:
					while (true) {
						int alt139=2;
						int LA139_0 = input.LA(1);
						if ( (LA139_0==CREATE_FUNCTION||LA139_0==CREATE_PROCEDURE||(LA139_0 >= CREATE_TYPE_BODY && LA139_0 <= CREATE_TYPE_SPEC)||LA139_0==CURSOR_DECLARE||LA139_0==EXCEPTION_DECLARE||LA139_0==PRAGMA_DECLARE||(LA139_0 >= RECORD_TYPE_DECLARE && LA139_0 <= RECORD_VAR_DECLARE)||LA139_0==SUBTYPE_DECLARE||(LA139_0 >= TABLE_TYPE_DECLARE && LA139_0 <= TABLE_VAR_DECLARE)||LA139_0==VARIABLE_DECLARE) ) {
							alt139=1;
						}

						switch (alt139) {
						case 1 :
							// PLSQLPrinter.g:579:30: declare_spec
							{
							pushFollow(FOLLOW_declare_spec_in_constructor_declaration5464);
							declare_spec();
							state._fsp--;

							}
							break;

						default :
							break loop139;
						}
					}

					pushFollow(FOLLOW_body_in_constructor_declaration5467);
					body();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 582:5: -> template( \"not implemented: constructor_declaration\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: constructor_declaration");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "constructor_declaration"


	public static class modifier_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "modifier_clause"
	// PLSQLPrinter.g:589:1: modifier_clause : ^( MODIFIER ( SQL92_RESERVED_NOT )? ( INSTANTIABLE_VK | FINAL_VK | OVERRIDING_VK ) ) -> template( \"not implemented: modifier_clause\";
	public final PLSQLPrinter.modifier_clause_return modifier_clause() throws RecognitionException {
		PLSQLPrinter.modifier_clause_return retval = new PLSQLPrinter.modifier_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:590:5: ( ^( MODIFIER ( SQL92_RESERVED_NOT )? ( INSTANTIABLE_VK | FINAL_VK | OVERRIDING_VK ) ) -> template( \"not implemented: modifier_clause\")
			// PLSQLPrinter.g:590:10: ^( MODIFIER ( SQL92_RESERVED_NOT )? ( INSTANTIABLE_VK | FINAL_VK | OVERRIDING_VK ) )
			{
			match(input,MODIFIER,FOLLOW_MODIFIER_in_modifier_clause5531); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:590:21: ( SQL92_RESERVED_NOT )?
			int alt141=2;
			int LA141_0 = input.LA(1);
			if ( (LA141_0==SQL92_RESERVED_NOT) ) {
				alt141=1;
			}
			switch (alt141) {
				case 1 :
					// PLSQLPrinter.g:590:21: SQL92_RESERVED_NOT
					{
					match(input,SQL92_RESERVED_NOT,FOLLOW_SQL92_RESERVED_NOT_in_modifier_clause5533); 
					}
					break;

			}

			// PLSQLPrinter.g:590:41: ( INSTANTIABLE_VK | FINAL_VK | OVERRIDING_VK )
			int alt142=3;
			switch ( input.LA(1) ) {
			case INSTANTIABLE_VK:
				{
				alt142=1;
				}
				break;
			case FINAL_VK:
				{
				alt142=2;
				}
				break;
			case OVERRIDING_VK:
				{
				alt142=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 142, 0, input);
				throw nvae;
			}
			switch (alt142) {
				case 1 :
					// PLSQLPrinter.g:590:42: INSTANTIABLE_VK
					{
					match(input,INSTANTIABLE_VK,FOLLOW_INSTANTIABLE_VK_in_modifier_clause5537); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:590:58: FINAL_VK
					{
					match(input,FINAL_VK,FOLLOW_FINAL_VK_in_modifier_clause5539); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:590:67: OVERRIDING_VK
					{
					match(input,OVERRIDING_VK,FOLLOW_OVERRIDING_VK_in_modifier_clause5541); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 591:5: -> template( \"not implemented: modifier_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: modifier_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "modifier_clause"


	public static class sqlj_object_type_attr_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "sqlj_object_type_attr"
	// PLSQLPrinter.g:594:1: sqlj_object_type_attr : ^( EXTERNAL_VK expression ) -> template( \"not implemented: sqlj_object_type_attr\";
	public final PLSQLPrinter.sqlj_object_type_attr_return sqlj_object_type_attr() throws RecognitionException {
		PLSQLPrinter.sqlj_object_type_attr_return retval = new PLSQLPrinter.sqlj_object_type_attr_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:595:5: ( ^( EXTERNAL_VK expression ) -> template( \"not implemented: sqlj_object_type_attr\")
			// PLSQLPrinter.g:595:10: ^( EXTERNAL_VK expression )
			{
			match(input,EXTERNAL_VK,FOLLOW_EXTERNAL_VK_in_sqlj_object_type_attr5578); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_sqlj_object_type_attr5580);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 596:5: -> template( \"not implemented: sqlj_object_type_attr\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: sqlj_object_type_attr");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sqlj_object_type_attr"


	public static class element_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "element_spec"
	// PLSQLPrinter.g:599:1: element_spec : ^( ELEMENT_SPEC ( element_spec_options )+ ( modifier_clause )? ( pragma_clause )? ) -> template( \"not implemented: element_spec\";
	public final PLSQLPrinter.element_spec_return element_spec() throws RecognitionException {
		PLSQLPrinter.element_spec_return retval = new PLSQLPrinter.element_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:600:5: ( ^( ELEMENT_SPEC ( element_spec_options )+ ( modifier_clause )? ( pragma_clause )? ) -> template( \"not implemented: element_spec\")
			// PLSQLPrinter.g:600:10: ^( ELEMENT_SPEC ( element_spec_options )+ ( modifier_clause )? ( pragma_clause )? )
			{
			match(input,ELEMENT_SPEC,FOLLOW_ELEMENT_SPEC_in_element_spec5616); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:600:25: ( element_spec_options )+
			int cnt143=0;
			loop143:
			while (true) {
				int alt143=2;
				int LA143_0 = input.LA(1);
				if ( (LA143_0==SQL92_RESERVED_ORDER||LA143_0==CONSTRUCTOR_SPEC||LA143_0==FIELD_SPEC||LA143_0==MAP_VK||LA143_0==MEMBER_VK||LA143_0==STATIC_VK) ) {
					alt143=1;
				}

				switch (alt143) {
				case 1 :
					// PLSQLPrinter.g:600:25: element_spec_options
					{
					pushFollow(FOLLOW_element_spec_options_in_element_spec5618);
					element_spec_options();
					state._fsp--;

					}
					break;

				default :
					if ( cnt143 >= 1 ) break loop143;
					EarlyExitException eee = new EarlyExitException(143, input);
					throw eee;
				}
				cnt143++;
			}

			// PLSQLPrinter.g:600:47: ( modifier_clause )?
			int alt144=2;
			int LA144_0 = input.LA(1);
			if ( (LA144_0==MODIFIER) ) {
				alt144=1;
			}
			switch (alt144) {
				case 1 :
					// PLSQLPrinter.g:600:47: modifier_clause
					{
					pushFollow(FOLLOW_modifier_clause_in_element_spec5621);
					modifier_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:600:64: ( pragma_clause )?
			int alt145=2;
			int LA145_0 = input.LA(1);
			if ( (LA145_0==PRAGMA_VK) ) {
				alt145=1;
			}
			switch (alt145) {
				case 1 :
					// PLSQLPrinter.g:600:64: pragma_clause
					{
					pushFollow(FOLLOW_pragma_clause_in_element_spec5624);
					pragma_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 601:5: -> template( \"not implemented: element_spec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: element_spec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "element_spec"


	public static class element_spec_options_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "element_spec_options"
	// PLSQLPrinter.g:604:1: element_spec_options : ( subprogram_spec -> template( \"not implemented: element_spec_options\"| constructor_spec -> template( \"not implemented: element_spec_options\"| map_order_function_spec -> template( \"not implemented: element_spec_options\"| ^( FIELD_SPEC id type_spec ( sqlj_object_type_attr )? ) -> template( \"not implemented: element_spec_options\");
	public final PLSQLPrinter.element_spec_options_return element_spec_options() throws RecognitionException {
		PLSQLPrinter.element_spec_options_return retval = new PLSQLPrinter.element_spec_options_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:605:5: ( subprogram_spec -> template( \"not implemented: element_spec_options\"| constructor_spec -> template( \"not implemented: element_spec_options\"| map_order_function_spec -> template( \"not implemented: element_spec_options\"| ^( FIELD_SPEC id type_spec ( sqlj_object_type_attr )? ) -> template( \"not implemented: element_spec_options\")
			int alt147=4;
			switch ( input.LA(1) ) {
			case MEMBER_VK:
			case STATIC_VK:
				{
				alt147=1;
				}
				break;
			case CONSTRUCTOR_SPEC:
				{
				alt147=2;
				}
				break;
			case SQL92_RESERVED_ORDER:
			case MAP_VK:
				{
				alt147=3;
				}
				break;
			case FIELD_SPEC:
				{
				alt147=4;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 147, 0, input);
				throw nvae;
			}
			switch (alt147) {
				case 1 :
					// PLSQLPrinter.g:605:10: subprogram_spec
					{
					pushFollow(FOLLOW_subprogram_spec_in_element_spec_options5660);
					subprogram_spec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 606:5: -> template( \"not implemented: element_spec_options\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: element_spec_options");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:607:10: constructor_spec
					{
					pushFollow(FOLLOW_constructor_spec_in_element_spec_options5685);
					constructor_spec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 608:5: -> template( \"not implemented: element_spec_options\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: element_spec_options");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:609:10: map_order_function_spec
					{
					pushFollow(FOLLOW_map_order_function_spec_in_element_spec_options5710);
					map_order_function_spec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 610:5: -> template( \"not implemented: element_spec_options\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: element_spec_options");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:611:10: ^( FIELD_SPEC id type_spec ( sqlj_object_type_attr )? )
					{
					match(input,FIELD_SPEC,FOLLOW_FIELD_SPEC_in_element_spec_options5736); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_id_in_element_spec_options5738);
					id();
					state._fsp--;

					pushFollow(FOLLOW_type_spec_in_element_spec_options5740);
					type_spec();
					state._fsp--;

					// PLSQLPrinter.g:611:36: ( sqlj_object_type_attr )?
					int alt146=2;
					int LA146_0 = input.LA(1);
					if ( (LA146_0==EXTERNAL_VK) ) {
						alt146=1;
					}
					switch (alt146) {
						case 1 :
							// PLSQLPrinter.g:611:36: sqlj_object_type_attr
							{
							pushFollow(FOLLOW_sqlj_object_type_attr_in_element_spec_options5742);
							sqlj_object_type_attr();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 612:5: -> template( \"not implemented: element_spec_options\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: element_spec_options");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "element_spec_options"


	public static class subprogram_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subprogram_spec"
	// PLSQLPrinter.g:615:1: subprogram_spec : ^( ( MEMBER_VK | STATIC_VK ) ( procedure_spec | function_spec ) ) -> template( \"not implemented: subprogram_spec\";
	public final PLSQLPrinter.subprogram_spec_return subprogram_spec() throws RecognitionException {
		PLSQLPrinter.subprogram_spec_return retval = new PLSQLPrinter.subprogram_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:616:5: ( ^( ( MEMBER_VK | STATIC_VK ) ( procedure_spec | function_spec ) ) -> template( \"not implemented: subprogram_spec\")
			// PLSQLPrinter.g:616:10: ^( ( MEMBER_VK | STATIC_VK ) ( procedure_spec | function_spec ) )
			{
			// PLSQLPrinter.g:616:12: ( MEMBER_VK | STATIC_VK )
			int alt148=2;
			int LA148_0 = input.LA(1);
			if ( (LA148_0==MEMBER_VK) ) {
				alt148=1;
			}
			else if ( (LA148_0==STATIC_VK) ) {
				alt148=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 148, 0, input);
				throw nvae;
			}

			switch (alt148) {
				case 1 :
					// PLSQLPrinter.g:616:13: MEMBER_VK
					{
					match(input,MEMBER_VK,FOLLOW_MEMBER_VK_in_subprogram_spec5780); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:616:23: STATIC_VK
					{
					match(input,STATIC_VK,FOLLOW_STATIC_VK_in_subprogram_spec5782); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:617:13: ( procedure_spec | function_spec )
			int alt149=2;
			int LA149_0 = input.LA(1);
			if ( (LA149_0==PROCEDURE_SPEC) ) {
				alt149=1;
			}
			else if ( (LA149_0==FUNCTION_SPEC) ) {
				alt149=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 149, 0, input);
				throw nvae;
			}

			switch (alt149) {
				case 1 :
					// PLSQLPrinter.g:617:18: procedure_spec
					{
					pushFollow(FOLLOW_procedure_spec_in_subprogram_spec5802);
					procedure_spec();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:618:18: function_spec
					{
					pushFollow(FOLLOW_function_spec_in_subprogram_spec5821);
					function_spec();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 621:5: -> template( \"not implemented: subprogram_spec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: subprogram_spec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subprogram_spec"


	public static class constructor_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "constructor_spec"
	// PLSQLPrinter.g:624:1: constructor_spec : ^( CONSTRUCTOR_SPEC type_spec ( FINAL_VK )? ( INSTANTIABLE_VK )? ^( PARAMETERS ( type_elements_parameter )* ) ( constructor_call_mode )? ) -> template( \"not implemented: constructor_spec\";
	public final PLSQLPrinter.constructor_spec_return constructor_spec() throws RecognitionException {
		PLSQLPrinter.constructor_spec_return retval = new PLSQLPrinter.constructor_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:625:5: ( ^( CONSTRUCTOR_SPEC type_spec ( FINAL_VK )? ( INSTANTIABLE_VK )? ^( PARAMETERS ( type_elements_parameter )* ) ( constructor_call_mode )? ) -> template( \"not implemented: constructor_spec\")
			// PLSQLPrinter.g:625:10: ^( CONSTRUCTOR_SPEC type_spec ( FINAL_VK )? ( INSTANTIABLE_VK )? ^( PARAMETERS ( type_elements_parameter )* ) ( constructor_call_mode )? )
			{
			match(input,CONSTRUCTOR_SPEC,FOLLOW_CONSTRUCTOR_SPEC_in_constructor_spec5880); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_spec_in_constructor_spec5882);
			type_spec();
			state._fsp--;

			// PLSQLPrinter.g:625:39: ( FINAL_VK )?
			int alt150=2;
			int LA150_0 = input.LA(1);
			if ( (LA150_0==FINAL_VK) ) {
				alt150=1;
			}
			switch (alt150) {
				case 1 :
					// PLSQLPrinter.g:625:39: FINAL_VK
					{
					match(input,FINAL_VK,FOLLOW_FINAL_VK_in_constructor_spec5884); 
					}
					break;

			}

			// PLSQLPrinter.g:625:49: ( INSTANTIABLE_VK )?
			int alt151=2;
			int LA151_0 = input.LA(1);
			if ( (LA151_0==INSTANTIABLE_VK) ) {
				alt151=1;
			}
			switch (alt151) {
				case 1 :
					// PLSQLPrinter.g:625:49: INSTANTIABLE_VK
					{
					match(input,INSTANTIABLE_VK,FOLLOW_INSTANTIABLE_VK_in_constructor_spec5887); 
					}
					break;

			}

			match(input,PARAMETERS,FOLLOW_PARAMETERS_in_constructor_spec5891); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:625:79: ( type_elements_parameter )*
				loop152:
				while (true) {
					int alt152=2;
					int LA152_0 = input.LA(1);
					if ( (LA152_0==PARAMETER) ) {
						alt152=1;
					}

					switch (alt152) {
					case 1 :
						// PLSQLPrinter.g:625:79: type_elements_parameter
						{
						pushFollow(FOLLOW_type_elements_parameter_in_constructor_spec5893);
						type_elements_parameter();
						state._fsp--;

						}
						break;

					default :
						break loop152;
					}
				}

				match(input, Token.UP, null); 
			}

			// PLSQLPrinter.g:625:105: ( constructor_call_mode )?
			int alt153=2;
			int LA153_0 = input.LA(1);
			if ( (LA153_0==CALL_MODE) ) {
				alt153=1;
			}
			switch (alt153) {
				case 1 :
					// PLSQLPrinter.g:625:105: constructor_call_mode
					{
					pushFollow(FOLLOW_constructor_call_mode_in_constructor_spec5897);
					constructor_call_mode();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 626:5: -> template( \"not implemented: constructor_spec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: constructor_spec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "constructor_spec"


	public static class constructor_call_mode_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "constructor_call_mode"
	// PLSQLPrinter.g:629:1: constructor_call_mode : ^( CALL_MODE call_spec ) -> template( \"not implemented: constructor_call_mode\";
	public final PLSQLPrinter.constructor_call_mode_return constructor_call_mode() throws RecognitionException {
		PLSQLPrinter.constructor_call_mode_return retval = new PLSQLPrinter.constructor_call_mode_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:630:5: ( ^( CALL_MODE call_spec ) -> template( \"not implemented: constructor_call_mode\")
			// PLSQLPrinter.g:630:10: ^( CALL_MODE call_spec )
			{
			match(input,CALL_MODE,FOLLOW_CALL_MODE_in_constructor_call_mode5934); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_call_spec_in_constructor_call_mode5936);
			call_spec();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 631:5: -> template( \"not implemented: constructor_call_mode\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: constructor_call_mode");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "constructor_call_mode"


	public static class map_order_function_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "map_order_function_spec"
	// PLSQLPrinter.g:634:1: map_order_function_spec : ^( ( MAP_VK | SQL92_RESERVED_ORDER ) function_spec ) -> template( \"not implemented: map_order_function_spec\";
	public final PLSQLPrinter.map_order_function_spec_return map_order_function_spec() throws RecognitionException {
		PLSQLPrinter.map_order_function_spec_return retval = new PLSQLPrinter.map_order_function_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:635:5: ( ^( ( MAP_VK | SQL92_RESERVED_ORDER ) function_spec ) -> template( \"not implemented: map_order_function_spec\")
			// PLSQLPrinter.g:635:10: ^( ( MAP_VK | SQL92_RESERVED_ORDER ) function_spec )
			{
			// PLSQLPrinter.g:635:12: ( MAP_VK | SQL92_RESERVED_ORDER )
			int alt154=2;
			int LA154_0 = input.LA(1);
			if ( (LA154_0==MAP_VK) ) {
				alt154=1;
			}
			else if ( (LA154_0==SQL92_RESERVED_ORDER) ) {
				alt154=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 154, 0, input);
				throw nvae;
			}

			switch (alt154) {
				case 1 :
					// PLSQLPrinter.g:635:13: MAP_VK
					{
					match(input,MAP_VK,FOLLOW_MAP_VK_in_map_order_function_spec5973); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:635:20: SQL92_RESERVED_ORDER
					{
					match(input,SQL92_RESERVED_ORDER,FOLLOW_SQL92_RESERVED_ORDER_in_map_order_function_spec5975); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_function_spec_in_map_order_function_spec5978);
			function_spec();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 636:5: -> template( \"not implemented: map_order_function_spec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: map_order_function_spec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "map_order_function_spec"


	public static class pragma_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pragma_clause"
	// PLSQLPrinter.g:639:1: pragma_clause : ^( PRAGMA_VK ( pragma_elements )+ ) -> template( \"not implemented: pragma_clause\";
	public final PLSQLPrinter.pragma_clause_return pragma_clause() throws RecognitionException {
		PLSQLPrinter.pragma_clause_return retval = new PLSQLPrinter.pragma_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:640:5: ( ^( PRAGMA_VK ( pragma_elements )+ ) -> template( \"not implemented: pragma_clause\")
			// PLSQLPrinter.g:640:10: ^( PRAGMA_VK ( pragma_elements )+ )
			{
			match(input,PRAGMA_VK,FOLLOW_PRAGMA_VK_in_pragma_clause6014); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:640:22: ( pragma_elements )+
			int cnt155=0;
			loop155:
			while (true) {
				int alt155=2;
				int LA155_0 = input.LA(1);
				if ( (LA155_0==SQL92_RESERVED_DEFAULT||LA155_0==CHAR_SET_NAME||LA155_0==ID) ) {
					alt155=1;
				}

				switch (alt155) {
				case 1 :
					// PLSQLPrinter.g:640:22: pragma_elements
					{
					pushFollow(FOLLOW_pragma_elements_in_pragma_clause6016);
					pragma_elements();
					state._fsp--;

					}
					break;

				default :
					if ( cnt155 >= 1 ) break loop155;
					EarlyExitException eee = new EarlyExitException(155, input);
					throw eee;
				}
				cnt155++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 641:5: -> template( \"not implemented: pragma_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: pragma_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pragma_clause"


	public static class pragma_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pragma_elements"
	// PLSQLPrinter.g:644:1: pragma_elements : ( id -> template( \"not implemented: pragma_elements\"| SQL92_RESERVED_DEFAULT -> template( \"not implemented: pragma_elements\");
	public final PLSQLPrinter.pragma_elements_return pragma_elements() throws RecognitionException {
		PLSQLPrinter.pragma_elements_return retval = new PLSQLPrinter.pragma_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:645:5: ( id -> template( \"not implemented: pragma_elements\"| SQL92_RESERVED_DEFAULT -> template( \"not implemented: pragma_elements\")
			int alt156=2;
			int LA156_0 = input.LA(1);
			if ( (LA156_0==CHAR_SET_NAME||LA156_0==ID) ) {
				alt156=1;
			}
			else if ( (LA156_0==SQL92_RESERVED_DEFAULT) ) {
				alt156=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 156, 0, input);
				throw nvae;
			}

			switch (alt156) {
				case 1 :
					// PLSQLPrinter.g:645:10: id
					{
					pushFollow(FOLLOW_id_in_pragma_elements6052);
					id();
					state._fsp--;

					// TEMPLATE REWRITE
					// 646:5: -> template( \"not implemented: pragma_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: pragma_elements");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:647:10: SQL92_RESERVED_DEFAULT
					{
					match(input,SQL92_RESERVED_DEFAULT,FOLLOW_SQL92_RESERVED_DEFAULT_in_pragma_elements6077); 
					// TEMPLATE REWRITE
					// 648:5: -> template( \"not implemented: pragma_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: pragma_elements");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pragma_elements"


	public static class type_elements_parameter_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "type_elements_parameter"
	// PLSQLPrinter.g:651:1: type_elements_parameter : ^( PARAMETER parameter_name type_spec ) -> template( \"not implemented: type_elements_parameter\";
	public final PLSQLPrinter.type_elements_parameter_return type_elements_parameter() throws RecognitionException {
		PLSQLPrinter.type_elements_parameter_return retval = new PLSQLPrinter.type_elements_parameter_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:652:5: ( ^( PARAMETER parameter_name type_spec ) -> template( \"not implemented: type_elements_parameter\")
			// PLSQLPrinter.g:652:10: ^( PARAMETER parameter_name type_spec )
			{
			match(input,PARAMETER,FOLLOW_PARAMETER_in_type_elements_parameter6112); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_parameter_name_in_type_elements_parameter6114);
			parameter_name();
			state._fsp--;

			pushFollow(FOLLOW_type_spec_in_type_elements_parameter6116);
			type_spec();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 653:5: -> template( \"not implemented: type_elements_parameter\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: type_elements_parameter");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "type_elements_parameter"


	public static class drop_sequence_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "drop_sequence"
	// PLSQLPrinter.g:662:1: drop_sequence : ^( DROP_SEQUENCE sequence_name ) -> template( \"not implemented: drop_sequence\";
	public final PLSQLPrinter.drop_sequence_return drop_sequence() throws RecognitionException {
		PLSQLPrinter.drop_sequence_return retval = new PLSQLPrinter.drop_sequence_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:663:5: ( ^( DROP_SEQUENCE sequence_name ) -> template( \"not implemented: drop_sequence\")
			// PLSQLPrinter.g:663:9: ^( DROP_SEQUENCE sequence_name )
			{
			match(input,DROP_SEQUENCE,FOLLOW_DROP_SEQUENCE_in_drop_sequence6157); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_sequence_name_in_drop_sequence6159);
			sequence_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 664:5: -> template( \"not implemented: drop_sequence\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: drop_sequence");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_sequence"


	public static class alter_sequence_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_sequence"
	// PLSQLPrinter.g:667:1: alter_sequence : ^( ALTER_SEQUENCE sequence_name ( sequence_spec )+ ) -> template( \"not implemented: alter_sequence\";
	public final PLSQLPrinter.alter_sequence_return alter_sequence() throws RecognitionException {
		PLSQLPrinter.alter_sequence_return retval = new PLSQLPrinter.alter_sequence_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:668:5: ( ^( ALTER_SEQUENCE sequence_name ( sequence_spec )+ ) -> template( \"not implemented: alter_sequence\")
			// PLSQLPrinter.g:668:10: ^( ALTER_SEQUENCE sequence_name ( sequence_spec )+ )
			{
			match(input,ALTER_SEQUENCE,FOLLOW_ALTER_SEQUENCE_in_alter_sequence6195); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_sequence_name_in_alter_sequence6197);
			sequence_name();
			state._fsp--;

			// PLSQLPrinter.g:668:41: ( sequence_spec )+
			int cnt157=0;
			loop157:
			while (true) {
				int alt157=2;
				int LA157_0 = input.LA(1);
				if ( (LA157_0==CACHE_VK||LA157_0==CYCLE_VK||LA157_0==INCREMENT_VK||LA157_0==MAXVALUE_VK||LA157_0==MINVALUE_VK||LA157_0==NOCACHE_VK||LA157_0==NOCYCLE_VK||(LA157_0 >= NOMAXVALUE_VK && LA157_0 <= NOMINVALUE_VK)||LA157_0==NOORDER_VK||(LA157_0 >= ORDER_VK && LA157_0 <= START_VK)) ) {
					alt157=1;
				}

				switch (alt157) {
				case 1 :
					// PLSQLPrinter.g:668:41: sequence_spec
					{
					pushFollow(FOLLOW_sequence_spec_in_alter_sequence6199);
					sequence_spec();
					state._fsp--;

					}
					break;

				default :
					if ( cnt157 >= 1 ) break loop157;
					EarlyExitException eee = new EarlyExitException(157, input);
					throw eee;
				}
				cnt157++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 669:5: -> template( \"not implemented: alter_sequence\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: alter_sequence");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_sequence"


	public static class create_sequence_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "create_sequence"
	// PLSQLPrinter.g:672:1: create_sequence : ^( CREATE_SEQUENCE sequence_name ( sequence_spec )* ) -> template( \"not implemented: create_sequence\";
	public final PLSQLPrinter.create_sequence_return create_sequence() throws RecognitionException {
		PLSQLPrinter.create_sequence_return retval = new PLSQLPrinter.create_sequence_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:673:5: ( ^( CREATE_SEQUENCE sequence_name ( sequence_spec )* ) -> template( \"not implemented: create_sequence\")
			// PLSQLPrinter.g:673:10: ^( CREATE_SEQUENCE sequence_name ( sequence_spec )* )
			{
			match(input,CREATE_SEQUENCE,FOLLOW_CREATE_SEQUENCE_in_create_sequence6236); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_sequence_name_in_create_sequence6238);
			sequence_name();
			state._fsp--;

			// PLSQLPrinter.g:673:42: ( sequence_spec )*
			loop158:
			while (true) {
				int alt158=2;
				int LA158_0 = input.LA(1);
				if ( (LA158_0==CACHE_VK||LA158_0==CYCLE_VK||LA158_0==INCREMENT_VK||LA158_0==MAXVALUE_VK||LA158_0==MINVALUE_VK||LA158_0==NOCACHE_VK||LA158_0==NOCYCLE_VK||(LA158_0 >= NOMAXVALUE_VK && LA158_0 <= NOMINVALUE_VK)||LA158_0==NOORDER_VK||(LA158_0 >= ORDER_VK && LA158_0 <= START_VK)) ) {
					alt158=1;
				}

				switch (alt158) {
				case 1 :
					// PLSQLPrinter.g:673:42: sequence_spec
					{
					pushFollow(FOLLOW_sequence_spec_in_create_sequence6240);
					sequence_spec();
					state._fsp--;

					}
					break;

				default :
					break loop158;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 674:5: -> template( \"not implemented: create_sequence\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: create_sequence");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_sequence"


	public static class sequence_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "sequence_spec"
	// PLSQLPrinter.g:679:1: sequence_spec : ( ^( START_VK UNSIGNED_INTEGER ) -> template( \"not implemented: sequence_spec\"| ^( INCREMENT_VK UNSIGNED_INTEGER ) -> template( \"not implemented: sequence_spec\"| ^( MAXVALUE_VK UNSIGNED_INTEGER ) -> template( \"not implemented: sequence_spec\"| ^( MINVALUE_VK UNSIGNED_INTEGER ) -> template( \"not implemented: sequence_spec\"| ^( CACHE_VK UNSIGNED_INTEGER ) -> template( \"not implemented: sequence_spec\"| NOMAXVALUE_VK -> template( \"not implemented: sequence_spec\"| NOMINVALUE_VK -> template( \"not implemented: sequence_spec\"| CYCLE_VK -> template( \"not implemented: sequence_spec\"| NOCYCLE_VK -> template( \"not implemented: sequence_spec\"| NOCACHE_VK -> template( \"not implemented: sequence_spec\"| ORDER_VK -> template( \"not implemented: sequence_spec\"| NOORDER_VK -> template( \"not implemented: sequence_spec\");
	public final PLSQLPrinter.sequence_spec_return sequence_spec() throws RecognitionException {
		PLSQLPrinter.sequence_spec_return retval = new PLSQLPrinter.sequence_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:680:5: ( ^( START_VK UNSIGNED_INTEGER ) -> template( \"not implemented: sequence_spec\"| ^( INCREMENT_VK UNSIGNED_INTEGER ) -> template( \"not implemented: sequence_spec\"| ^( MAXVALUE_VK UNSIGNED_INTEGER ) -> template( \"not implemented: sequence_spec\"| ^( MINVALUE_VK UNSIGNED_INTEGER ) -> template( \"not implemented: sequence_spec\"| ^( CACHE_VK UNSIGNED_INTEGER ) -> template( \"not implemented: sequence_spec\"| NOMAXVALUE_VK -> template( \"not implemented: sequence_spec\"| NOMINVALUE_VK -> template( \"not implemented: sequence_spec\"| CYCLE_VK -> template( \"not implemented: sequence_spec\"| NOCYCLE_VK -> template( \"not implemented: sequence_spec\"| NOCACHE_VK -> template( \"not implemented: sequence_spec\"| ORDER_VK -> template( \"not implemented: sequence_spec\"| NOORDER_VK -> template( \"not implemented: sequence_spec\")
			int alt159=12;
			switch ( input.LA(1) ) {
			case START_VK:
				{
				alt159=1;
				}
				break;
			case INCREMENT_VK:
				{
				alt159=2;
				}
				break;
			case MAXVALUE_VK:
				{
				alt159=3;
				}
				break;
			case MINVALUE_VK:
				{
				alt159=4;
				}
				break;
			case CACHE_VK:
				{
				alt159=5;
				}
				break;
			case NOMAXVALUE_VK:
				{
				alt159=6;
				}
				break;
			case NOMINVALUE_VK:
				{
				alt159=7;
				}
				break;
			case CYCLE_VK:
				{
				alt159=8;
				}
				break;
			case NOCYCLE_VK:
				{
				alt159=9;
				}
				break;
			case NOCACHE_VK:
				{
				alt159=10;
				}
				break;
			case ORDER_VK:
				{
				alt159=11;
				}
				break;
			case NOORDER_VK:
				{
				alt159=12;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 159, 0, input);
				throw nvae;
			}
			switch (alt159) {
				case 1 :
					// PLSQLPrinter.g:680:10: ^( START_VK UNSIGNED_INTEGER )
					{
					match(input,START_VK,FOLLOW_START_VK_in_sequence_spec6279); 
					match(input, Token.DOWN, null); 
					match(input,UNSIGNED_INTEGER,FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6281); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 681:5: -> template( \"not implemented: sequence_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sequence_spec");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:682:10: ^( INCREMENT_VK UNSIGNED_INTEGER )
					{
					match(input,INCREMENT_VK,FOLLOW_INCREMENT_VK_in_sequence_spec6308); 
					match(input, Token.DOWN, null); 
					match(input,UNSIGNED_INTEGER,FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6310); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 683:5: -> template( \"not implemented: sequence_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sequence_spec");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:684:10: ^( MAXVALUE_VK UNSIGNED_INTEGER )
					{
					match(input,MAXVALUE_VK,FOLLOW_MAXVALUE_VK_in_sequence_spec6337); 
					match(input, Token.DOWN, null); 
					match(input,UNSIGNED_INTEGER,FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6339); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 685:5: -> template( \"not implemented: sequence_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sequence_spec");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:686:10: ^( MINVALUE_VK UNSIGNED_INTEGER )
					{
					match(input,MINVALUE_VK,FOLLOW_MINVALUE_VK_in_sequence_spec6366); 
					match(input, Token.DOWN, null); 
					match(input,UNSIGNED_INTEGER,FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6368); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 687:5: -> template( \"not implemented: sequence_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sequence_spec");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:688:10: ^( CACHE_VK UNSIGNED_INTEGER )
					{
					match(input,CACHE_VK,FOLLOW_CACHE_VK_in_sequence_spec6395); 
					match(input, Token.DOWN, null); 
					match(input,UNSIGNED_INTEGER,FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6397); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 689:5: -> template( \"not implemented: sequence_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sequence_spec");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:690:10: NOMAXVALUE_VK
					{
					match(input,NOMAXVALUE_VK,FOLLOW_NOMAXVALUE_VK_in_sequence_spec6423); 
					// TEMPLATE REWRITE
					// 691:5: -> template( \"not implemented: sequence_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sequence_spec");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:692:10: NOMINVALUE_VK
					{
					match(input,NOMINVALUE_VK,FOLLOW_NOMINVALUE_VK_in_sequence_spec6448); 
					// TEMPLATE REWRITE
					// 693:5: -> template( \"not implemented: sequence_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sequence_spec");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:694:10: CYCLE_VK
					{
					match(input,CYCLE_VK,FOLLOW_CYCLE_VK_in_sequence_spec6473); 
					// TEMPLATE REWRITE
					// 695:5: -> template( \"not implemented: sequence_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sequence_spec");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:696:10: NOCYCLE_VK
					{
					match(input,NOCYCLE_VK,FOLLOW_NOCYCLE_VK_in_sequence_spec6498); 
					// TEMPLATE REWRITE
					// 697:5: -> template( \"not implemented: sequence_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sequence_spec");
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:698:10: NOCACHE_VK
					{
					match(input,NOCACHE_VK,FOLLOW_NOCACHE_VK_in_sequence_spec6523); 
					// TEMPLATE REWRITE
					// 699:5: -> template( \"not implemented: sequence_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sequence_spec");
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:700:10: ORDER_VK
					{
					match(input,ORDER_VK,FOLLOW_ORDER_VK_in_sequence_spec6548); 
					// TEMPLATE REWRITE
					// 701:5: -> template( \"not implemented: sequence_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sequence_spec");
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:702:10: NOORDER_VK
					{
					match(input,NOORDER_VK,FOLLOW_NOORDER_VK_in_sequence_spec6573); 
					// TEMPLATE REWRITE
					// 703:5: -> template( \"not implemented: sequence_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sequence_spec");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sequence_spec"


	public static class invoker_rights_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "invoker_rights_clause"
	// PLSQLPrinter.g:712:1: invoker_rights_clause : ^( AUTHID_VK ( CURRENT_USER_VK | DEFINER_VK ) ) -> template( \"not implemented: invoker_rights_clause\";
	public final PLSQLPrinter.invoker_rights_clause_return invoker_rights_clause() throws RecognitionException {
		PLSQLPrinter.invoker_rights_clause_return retval = new PLSQLPrinter.invoker_rights_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:713:5: ( ^( AUTHID_VK ( CURRENT_USER_VK | DEFINER_VK ) ) -> template( \"not implemented: invoker_rights_clause\")
			// PLSQLPrinter.g:713:10: ^( AUTHID_VK ( CURRENT_USER_VK | DEFINER_VK ) )
			{
			match(input,AUTHID_VK,FOLLOW_AUTHID_VK_in_invoker_rights_clause6614); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:713:22: ( CURRENT_USER_VK | DEFINER_VK )
			int alt160=2;
			int LA160_0 = input.LA(1);
			if ( (LA160_0==CURRENT_USER_VK) ) {
				alt160=1;
			}
			else if ( (LA160_0==DEFINER_VK) ) {
				alt160=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 160, 0, input);
				throw nvae;
			}

			switch (alt160) {
				case 1 :
					// PLSQLPrinter.g:713:23: CURRENT_USER_VK
					{
					match(input,CURRENT_USER_VK,FOLLOW_CURRENT_USER_VK_in_invoker_rights_clause6617); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:713:39: DEFINER_VK
					{
					match(input,DEFINER_VK,FOLLOW_DEFINER_VK_in_invoker_rights_clause6619); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 714:5: -> template( \"not implemented: invoker_rights_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: invoker_rights_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "invoker_rights_clause"


	public static class compiler_parameters_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "compiler_parameters_clause"
	// PLSQLPrinter.g:717:1: compiler_parameters_clause : ^( COMPILER_PARAMETER ^( ASSIGN id expression ) ) -> template( \"not implemented: compiler_parameters_clause\";
	public final PLSQLPrinter.compiler_parameters_clause_return compiler_parameters_clause() throws RecognitionException {
		PLSQLPrinter.compiler_parameters_clause_return retval = new PLSQLPrinter.compiler_parameters_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:718:5: ( ^( COMPILER_PARAMETER ^( ASSIGN id expression ) ) -> template( \"not implemented: compiler_parameters_clause\")
			// PLSQLPrinter.g:718:10: ^( COMPILER_PARAMETER ^( ASSIGN id expression ) )
			{
			match(input,COMPILER_PARAMETER,FOLLOW_COMPILER_PARAMETER_in_compiler_parameters_clause6656); 
			match(input, Token.DOWN, null); 
			match(input,ASSIGN,FOLLOW_ASSIGN_in_compiler_parameters_clause6659); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_id_in_compiler_parameters_clause6661);
			id();
			state._fsp--;

			pushFollow(FOLLOW_expression_in_compiler_parameters_clause6663);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 719:5: -> template( \"not implemented: compiler_parameters_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: compiler_parameters_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "compiler_parameters_clause"


	public static class call_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "call_spec"
	// PLSQLPrinter.g:722:1: call_spec : ^( LANGUAGE_VK ( java_spec | c_spec ) ) -> template( \"not implemented: call_spec\";
	public final PLSQLPrinter.call_spec_return call_spec() throws RecognitionException {
		PLSQLPrinter.call_spec_return retval = new PLSQLPrinter.call_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:723:5: ( ^( LANGUAGE_VK ( java_spec | c_spec ) ) -> template( \"not implemented: call_spec\")
			// PLSQLPrinter.g:723:10: ^( LANGUAGE_VK ( java_spec | c_spec ) )
			{
			match(input,LANGUAGE_VK,FOLLOW_LANGUAGE_VK_in_call_spec6700); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:723:24: ( java_spec | c_spec )
			int alt161=2;
			int LA161_0 = input.LA(1);
			if ( (LA161_0==JAVA_VK) ) {
				alt161=1;
			}
			else if ( (LA161_0==C_VK) ) {
				alt161=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 161, 0, input);
				throw nvae;
			}

			switch (alt161) {
				case 1 :
					// PLSQLPrinter.g:723:26: java_spec
					{
					pushFollow(FOLLOW_java_spec_in_call_spec6704);
					java_spec();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:723:38: c_spec
					{
					pushFollow(FOLLOW_c_spec_in_call_spec6708);
					c_spec();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 724:5: -> template( \"not implemented: call_spec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: call_spec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "call_spec"


	public static class java_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "java_spec"
	// PLSQLPrinter.g:729:1: java_spec : ^( JAVA_VK CHAR_STRING ) -> template( \"not implemented: java_spec\";
	public final PLSQLPrinter.java_spec_return java_spec() throws RecognitionException {
		PLSQLPrinter.java_spec_return retval = new PLSQLPrinter.java_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:730:5: ( ^( JAVA_VK CHAR_STRING ) -> template( \"not implemented: java_spec\")
			// PLSQLPrinter.g:730:10: ^( JAVA_VK CHAR_STRING )
			{
			match(input,JAVA_VK,FOLLOW_JAVA_VK_in_java_spec6748); 
			match(input, Token.DOWN, null); 
			match(input,CHAR_STRING,FOLLOW_CHAR_STRING_in_java_spec6750); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 731:5: -> template( \"not implemented: java_spec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: java_spec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "java_spec"


	public static class c_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "c_spec"
	// PLSQLPrinter.g:734:1: c_spec : ^( C_VK ( CHAR_STRING )? ( CONTEXT_VK )? ^( LIBRARY_VK id ) ( c_agent_in_clause )? ( c_parameters_clause )? ) -> template( \"not implemented: c_spec\";
	public final PLSQLPrinter.c_spec_return c_spec() throws RecognitionException {
		PLSQLPrinter.c_spec_return retval = new PLSQLPrinter.c_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:735:5: ( ^( C_VK ( CHAR_STRING )? ( CONTEXT_VK )? ^( LIBRARY_VK id ) ( c_agent_in_clause )? ( c_parameters_clause )? ) -> template( \"not implemented: c_spec\")
			// PLSQLPrinter.g:735:10: ^( C_VK ( CHAR_STRING )? ( CONTEXT_VK )? ^( LIBRARY_VK id ) ( c_agent_in_clause )? ( c_parameters_clause )? )
			{
			match(input,C_VK,FOLLOW_C_VK_in_c_spec6786); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:735:17: ( CHAR_STRING )?
			int alt162=2;
			int LA162_0 = input.LA(1);
			if ( (LA162_0==CHAR_STRING) ) {
				alt162=1;
			}
			switch (alt162) {
				case 1 :
					// PLSQLPrinter.g:735:17: CHAR_STRING
					{
					match(input,CHAR_STRING,FOLLOW_CHAR_STRING_in_c_spec6788); 
					}
					break;

			}

			// PLSQLPrinter.g:735:30: ( CONTEXT_VK )?
			int alt163=2;
			int LA163_0 = input.LA(1);
			if ( (LA163_0==CONTEXT_VK) ) {
				alt163=1;
			}
			switch (alt163) {
				case 1 :
					// PLSQLPrinter.g:735:30: CONTEXT_VK
					{
					match(input,CONTEXT_VK,FOLLOW_CONTEXT_VK_in_c_spec6791); 
					}
					break;

			}

			match(input,LIBRARY_VK,FOLLOW_LIBRARY_VK_in_c_spec6795); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_id_in_c_spec6797);
			id();
			state._fsp--;

			match(input, Token.UP, null); 

			// PLSQLPrinter.g:735:59: ( c_agent_in_clause )?
			int alt164=2;
			int LA164_0 = input.LA(1);
			if ( (LA164_0==AGENT_VK) ) {
				alt164=1;
			}
			switch (alt164) {
				case 1 :
					// PLSQLPrinter.g:735:59: c_agent_in_clause
					{
					pushFollow(FOLLOW_c_agent_in_clause_in_c_spec6800);
					c_agent_in_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:735:78: ( c_parameters_clause )?
			int alt165=2;
			int LA165_0 = input.LA(1);
			if ( (LA165_0==PARAMETERS_VK) ) {
				alt165=1;
			}
			switch (alt165) {
				case 1 :
					// PLSQLPrinter.g:735:78: c_parameters_clause
					{
					pushFollow(FOLLOW_c_parameters_clause_in_c_spec6803);
					c_parameters_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 736:5: -> template( \"not implemented: c_spec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: c_spec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "c_spec"


	public static class c_agent_in_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "c_agent_in_clause"
	// PLSQLPrinter.g:739:1: c_agent_in_clause : ^( AGENT_VK ( expression )+ ) -> template( \"not implemented: c_agent_in_clause\";
	public final PLSQLPrinter.c_agent_in_clause_return c_agent_in_clause() throws RecognitionException {
		PLSQLPrinter.c_agent_in_clause_return retval = new PLSQLPrinter.c_agent_in_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:740:5: ( ^( AGENT_VK ( expression )+ ) -> template( \"not implemented: c_agent_in_clause\")
			// PLSQLPrinter.g:740:10: ^( AGENT_VK ( expression )+ )
			{
			match(input,AGENT_VK,FOLLOW_AGENT_VK_in_c_agent_in_clause6840); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:740:21: ( expression )+
			int cnt166=0;
			loop166:
			while (true) {
				int alt166=2;
				int LA166_0 = input.LA(1);
				if ( (LA166_0==EXPR||LA166_0==LOGIC_EXPR) ) {
					alt166=1;
				}

				switch (alt166) {
				case 1 :
					// PLSQLPrinter.g:740:21: expression
					{
					pushFollow(FOLLOW_expression_in_c_agent_in_clause6842);
					expression();
					state._fsp--;

					}
					break;

				default :
					if ( cnt166 >= 1 ) break loop166;
					EarlyExitException eee = new EarlyExitException(166, input);
					throw eee;
				}
				cnt166++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 741:5: -> template( \"not implemented: c_agent_in_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: c_agent_in_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "c_agent_in_clause"


	public static class c_parameters_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "c_parameters_clause"
	// PLSQLPrinter.g:744:1: c_parameters_clause : ^( PARAMETERS_VK ( THREE_DOTS | ( expression )+ ) ) -> template( \"not implemented: c_parameters_clause\";
	public final PLSQLPrinter.c_parameters_clause_return c_parameters_clause() throws RecognitionException {
		PLSQLPrinter.c_parameters_clause_return retval = new PLSQLPrinter.c_parameters_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:745:5: ( ^( PARAMETERS_VK ( THREE_DOTS | ( expression )+ ) ) -> template( \"not implemented: c_parameters_clause\")
			// PLSQLPrinter.g:745:10: ^( PARAMETERS_VK ( THREE_DOTS | ( expression )+ ) )
			{
			match(input,PARAMETERS_VK,FOLLOW_PARAMETERS_VK_in_c_parameters_clause6879); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:745:26: ( THREE_DOTS | ( expression )+ )
			int alt168=2;
			int LA168_0 = input.LA(1);
			if ( (LA168_0==THREE_DOTS) ) {
				alt168=1;
			}
			else if ( (LA168_0==EXPR||LA168_0==LOGIC_EXPR) ) {
				alt168=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 168, 0, input);
				throw nvae;
			}

			switch (alt168) {
				case 1 :
					// PLSQLPrinter.g:745:27: THREE_DOTS
					{
					match(input,THREE_DOTS,FOLLOW_THREE_DOTS_in_c_parameters_clause6882); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:745:38: ( expression )+
					{
					// PLSQLPrinter.g:745:38: ( expression )+
					int cnt167=0;
					loop167:
					while (true) {
						int alt167=2;
						int LA167_0 = input.LA(1);
						if ( (LA167_0==EXPR||LA167_0==LOGIC_EXPR) ) {
							alt167=1;
						}

						switch (alt167) {
						case 1 :
							// PLSQLPrinter.g:745:38: expression
							{
							pushFollow(FOLLOW_expression_in_c_parameters_clause6884);
							expression();
							state._fsp--;

							}
							break;

						default :
							if ( cnt167 >= 1 ) break loop167;
							EarlyExitException eee = new EarlyExitException(167, input);
							throw eee;
						}
						cnt167++;
					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 746:5: -> template( \"not implemented: c_parameters_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: c_parameters_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "c_parameters_clause"


	public static class parameter_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "parameter"
	// PLSQLPrinter.g:751:1: parameter : ^( PARAMETER parameter_name ( SQL92_RESERVED_IN | OUT_VK | INOUT_VK )* ( type_spec )? ( default_value_part )? ) -> parameter(name=$parameter_name.stis_in=$SQL92_RESERVED_IN != nullis_out=$OUT_VK != nullis_inout=$INOUT_VK != nullis_nocopy=falsetype=$type_spec.st);
	public final PLSQLPrinter.parameter_return parameter() throws RecognitionException {
		PLSQLPrinter.parameter_return retval = new PLSQLPrinter.parameter_return();
		retval.start = input.LT(1);

		CommonTree SQL92_RESERVED_IN6=null;
		CommonTree OUT_VK7=null;
		CommonTree INOUT_VK8=null;
		TreeRuleReturnScope parameter_name5 =null;
		TreeRuleReturnScope type_spec9 =null;

		try {
			// PLSQLPrinter.g:752:5: ( ^( PARAMETER parameter_name ( SQL92_RESERVED_IN | OUT_VK | INOUT_VK )* ( type_spec )? ( default_value_part )? ) -> parameter(name=$parameter_name.stis_in=$SQL92_RESERVED_IN != nullis_out=$OUT_VK != nullis_inout=$INOUT_VK != nullis_nocopy=falsetype=$type_spec.st))
			// PLSQLPrinter.g:752:10: ^( PARAMETER parameter_name ( SQL92_RESERVED_IN | OUT_VK | INOUT_VK )* ( type_spec )? ( default_value_part )? )
			{
			match(input,PARAMETER,FOLLOW_PARAMETER_in_parameter6924); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_parameter_name_in_parameter6926);
			parameter_name5=parameter_name();
			state._fsp--;

			// PLSQLPrinter.g:752:37: ( SQL92_RESERVED_IN | OUT_VK | INOUT_VK )*
			loop169:
			while (true) {
				int alt169=4;
				switch ( input.LA(1) ) {
				case SQL92_RESERVED_IN:
					{
					alt169=1;
					}
					break;
				case OUT_VK:
					{
					alt169=2;
					}
					break;
				case INOUT_VK:
					{
					alt169=3;
					}
					break;
				}
				switch (alt169) {
				case 1 :
					// PLSQLPrinter.g:752:38: SQL92_RESERVED_IN
					{
					SQL92_RESERVED_IN6=(CommonTree)match(input,SQL92_RESERVED_IN,FOLLOW_SQL92_RESERVED_IN_in_parameter6929); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:752:56: OUT_VK
					{
					OUT_VK7=(CommonTree)match(input,OUT_VK,FOLLOW_OUT_VK_in_parameter6931); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:752:63: INOUT_VK
					{
					INOUT_VK8=(CommonTree)match(input,INOUT_VK,FOLLOW_INOUT_VK_in_parameter6933); 
					}
					break;

				default :
					break loop169;
				}
			}

			// PLSQLPrinter.g:752:74: ( type_spec )?
			int alt170=2;
			int LA170_0 = input.LA(1);
			if ( (LA170_0==CUSTOM_TYPE||LA170_0==INTERVAL_DATATYPE||LA170_0==NATIVE_DATATYPE) ) {
				alt170=1;
			}
			switch (alt170) {
				case 1 :
					// PLSQLPrinter.g:752:74: type_spec
					{
					pushFollow(FOLLOW_type_spec_in_parameter6937);
					type_spec9=type_spec();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:752:85: ( default_value_part )?
			int alt171=2;
			int LA171_0 = input.LA(1);
			if ( (LA171_0==DEFAULT_VALUE) ) {
				alt171=1;
			}
			switch (alt171) {
				case 1 :
					// PLSQLPrinter.g:752:85: default_value_part
					{
					pushFollow(FOLLOW_default_value_part_in_parameter6940);
					default_value_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 753:5: -> parameter(name=$parameter_name.stis_in=$SQL92_RESERVED_IN != nullis_out=$OUT_VK != nullis_inout=$INOUT_VK != nullis_nocopy=falsetype=$type_spec.st)
			{
				retval.st = templateLib.getInstanceOf("parameter",new STAttrMap().put("name", (parameter_name5!=null?((StringTemplate)parameter_name5.getTemplate()):null)).put("is_in", SQL92_RESERVED_IN6 != null).put("is_out", OUT_VK7 != null).put("is_inout", INOUT_VK8 != null).put("is_nocopy", false).put("type", (type_spec9!=null?((StringTemplate)type_spec9.getTemplate()):null)));
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "parameter"


	public static class default_value_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "default_value_part"
	// PLSQLPrinter.g:759:1: default_value_part : ^( DEFAULT_VALUE expression ) -> template( \"not implemented: default_value_part\";
	public final PLSQLPrinter.default_value_part_return default_value_part() throws RecognitionException {
		PLSQLPrinter.default_value_part_return retval = new PLSQLPrinter.default_value_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:760:5: ( ^( DEFAULT_VALUE expression ) -> template( \"not implemented: default_value_part\")
			// PLSQLPrinter.g:760:10: ^( DEFAULT_VALUE expression )
			{
			match(input,DEFAULT_VALUE,FOLLOW_DEFAULT_VALUE_in_default_value_part7038); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_default_value_part7040);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 761:5: -> template( \"not implemented: default_value_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: default_value_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "default_value_part"


	public static class declare_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "declare_spec"
	// PLSQLPrinter.g:770:1: declare_spec : ( variable_declaration -> template( \"not implemented: declare_spec\"| subtype_declaration -> template( \"not implemented: declare_spec\"| cursor_declaration -> template( \"not implemented: declare_spec\"| exception_declaration -> template( \"not implemented: declare_spec\"| pragma_declaration -> template( \"not implemented: declare_spec\"| record_declaration -> template( \"not implemented: declare_spec\"| table_declaration -> template( \"not implemented: declare_spec\"| create_procedure_body -> template( \"not implemented: declare_spec\"| create_function_body -> template( \"not implemented: declare_spec\"| create_type -> template( \"not implemented: declare_spec\");
	public final PLSQLPrinter.declare_spec_return declare_spec() throws RecognitionException {
		PLSQLPrinter.declare_spec_return retval = new PLSQLPrinter.declare_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:771:5: ( variable_declaration -> template( \"not implemented: declare_spec\"| subtype_declaration -> template( \"not implemented: declare_spec\"| cursor_declaration -> template( \"not implemented: declare_spec\"| exception_declaration -> template( \"not implemented: declare_spec\"| pragma_declaration -> template( \"not implemented: declare_spec\"| record_declaration -> template( \"not implemented: declare_spec\"| table_declaration -> template( \"not implemented: declare_spec\"| create_procedure_body -> template( \"not implemented: declare_spec\"| create_function_body -> template( \"not implemented: declare_spec\"| create_type -> template( \"not implemented: declare_spec\")
			int alt172=10;
			switch ( input.LA(1) ) {
			case VARIABLE_DECLARE:
				{
				alt172=1;
				}
				break;
			case SUBTYPE_DECLARE:
				{
				alt172=2;
				}
				break;
			case CURSOR_DECLARE:
				{
				alt172=3;
				}
				break;
			case EXCEPTION_DECLARE:
				{
				alt172=4;
				}
				break;
			case PRAGMA_DECLARE:
				{
				alt172=5;
				}
				break;
			case RECORD_TYPE_DECLARE:
			case RECORD_VAR_DECLARE:
				{
				alt172=6;
				}
				break;
			case TABLE_TYPE_DECLARE:
			case TABLE_VAR_DECLARE:
				{
				alt172=7;
				}
				break;
			case CREATE_PROCEDURE:
				{
				alt172=8;
				}
				break;
			case CREATE_FUNCTION:
				{
				alt172=9;
				}
				break;
			case CREATE_TYPE_BODY:
			case CREATE_TYPE_SPEC:
				{
				alt172=10;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 172, 0, input);
				throw nvae;
			}
			switch (alt172) {
				case 1 :
					// PLSQLPrinter.g:771:10: variable_declaration
					{
					pushFollow(FOLLOW_variable_declaration_in_declare_spec7081);
					variable_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 772:5: -> template( \"not implemented: declare_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: declare_spec");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:773:11: subtype_declaration
					{
					pushFollow(FOLLOW_subtype_declaration_in_declare_spec7107);
					subtype_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 774:5: -> template( \"not implemented: declare_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: declare_spec");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:775:11: cursor_declaration
					{
					pushFollow(FOLLOW_cursor_declaration_in_declare_spec7133);
					cursor_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 776:5: -> template( \"not implemented: declare_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: declare_spec");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:777:11: exception_declaration
					{
					pushFollow(FOLLOW_exception_declaration_in_declare_spec7159);
					exception_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 778:5: -> template( \"not implemented: declare_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: declare_spec");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:779:11: pragma_declaration
					{
					pushFollow(FOLLOW_pragma_declaration_in_declare_spec7185);
					pragma_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 780:5: -> template( \"not implemented: declare_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: declare_spec");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:781:11: record_declaration
					{
					pushFollow(FOLLOW_record_declaration_in_declare_spec7211);
					record_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 782:5: -> template( \"not implemented: declare_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: declare_spec");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:783:11: table_declaration
					{
					pushFollow(FOLLOW_table_declaration_in_declare_spec7237);
					table_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 784:5: -> template( \"not implemented: declare_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: declare_spec");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:785:11: create_procedure_body
					{
					pushFollow(FOLLOW_create_procedure_body_in_declare_spec7263);
					create_procedure_body();
					state._fsp--;

					// TEMPLATE REWRITE
					// 786:5: -> template( \"not implemented: declare_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: declare_spec");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:787:11: create_function_body
					{
					pushFollow(FOLLOW_create_function_body_in_declare_spec7289);
					create_function_body();
					state._fsp--;

					// TEMPLATE REWRITE
					// 788:5: -> template( \"not implemented: declare_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: declare_spec");
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:789:11: create_type
					{
					pushFollow(FOLLOW_create_type_in_declare_spec7315);
					create_type();
					state._fsp--;

					// TEMPLATE REWRITE
					// 790:5: -> template( \"not implemented: declare_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: declare_spec");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "declare_spec"


	public static class variable_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "variable_declaration"
	// PLSQLPrinter.g:794:1: variable_declaration : ^( VARIABLE_DECLARE variable_name type_spec ( CONSTANT_VK )? ( SQL92_RESERVED_NULL )? ( default_value_part )? ) -> template( \"not implemented: variable_declaration\";
	public final PLSQLPrinter.variable_declaration_return variable_declaration() throws RecognitionException {
		PLSQLPrinter.variable_declaration_return retval = new PLSQLPrinter.variable_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:795:5: ( ^( VARIABLE_DECLARE variable_name type_spec ( CONSTANT_VK )? ( SQL92_RESERVED_NULL )? ( default_value_part )? ) -> template( \"not implemented: variable_declaration\")
			// PLSQLPrinter.g:795:10: ^( VARIABLE_DECLARE variable_name type_spec ( CONSTANT_VK )? ( SQL92_RESERVED_NULL )? ( default_value_part )? )
			{
			match(input,VARIABLE_DECLARE,FOLLOW_VARIABLE_DECLARE_in_variable_declaration7351); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_variable_name_in_variable_declaration7353);
			variable_name();
			state._fsp--;

			pushFollow(FOLLOW_type_spec_in_variable_declaration7355);
			type_spec();
			state._fsp--;

			// PLSQLPrinter.g:795:53: ( CONSTANT_VK )?
			int alt173=2;
			int LA173_0 = input.LA(1);
			if ( (LA173_0==CONSTANT_VK) ) {
				alt173=1;
			}
			switch (alt173) {
				case 1 :
					// PLSQLPrinter.g:795:53: CONSTANT_VK
					{
					match(input,CONSTANT_VK,FOLLOW_CONSTANT_VK_in_variable_declaration7357); 
					}
					break;

			}

			// PLSQLPrinter.g:795:66: ( SQL92_RESERVED_NULL )?
			int alt174=2;
			int LA174_0 = input.LA(1);
			if ( (LA174_0==SQL92_RESERVED_NULL) ) {
				alt174=1;
			}
			switch (alt174) {
				case 1 :
					// PLSQLPrinter.g:795:66: SQL92_RESERVED_NULL
					{
					match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_variable_declaration7360); 
					}
					break;

			}

			// PLSQLPrinter.g:795:87: ( default_value_part )?
			int alt175=2;
			int LA175_0 = input.LA(1);
			if ( (LA175_0==DEFAULT_VALUE) ) {
				alt175=1;
			}
			switch (alt175) {
				case 1 :
					// PLSQLPrinter.g:795:87: default_value_part
					{
					pushFollow(FOLLOW_default_value_part_in_variable_declaration7363);
					default_value_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 796:5: -> template( \"not implemented: variable_declaration\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: variable_declaration");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "variable_declaration"


	public static class subtype_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subtype_declaration"
	// PLSQLPrinter.g:799:1: subtype_declaration : ^( SUBTYPE_DECLARE type_name type_spec ( SQL92_RESERVED_NULL )? ( subtype_range )? ) -> template( \"not implemented: subtype_declaration\";
	public final PLSQLPrinter.subtype_declaration_return subtype_declaration() throws RecognitionException {
		PLSQLPrinter.subtype_declaration_return retval = new PLSQLPrinter.subtype_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:800:7: ( ^( SUBTYPE_DECLARE type_name type_spec ( SQL92_RESERVED_NULL )? ( subtype_range )? ) -> template( \"not implemented: subtype_declaration\")
			// PLSQLPrinter.g:800:12: ^( SUBTYPE_DECLARE type_name type_spec ( SQL92_RESERVED_NULL )? ( subtype_range )? )
			{
			match(input,SUBTYPE_DECLARE,FOLLOW_SUBTYPE_DECLARE_in_subtype_declaration7406); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_name_in_subtype_declaration7408);
			type_name();
			state._fsp--;

			pushFollow(FOLLOW_type_spec_in_subtype_declaration7410);
			type_spec();
			state._fsp--;

			// PLSQLPrinter.g:800:50: ( SQL92_RESERVED_NULL )?
			int alt176=2;
			int LA176_0 = input.LA(1);
			if ( (LA176_0==SQL92_RESERVED_NULL) ) {
				alt176=1;
			}
			switch (alt176) {
				case 1 :
					// PLSQLPrinter.g:800:50: SQL92_RESERVED_NULL
					{
					match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_subtype_declaration7412); 
					}
					break;

			}

			// PLSQLPrinter.g:800:71: ( subtype_range )?
			int alt177=2;
			int LA177_0 = input.LA(1);
			if ( (LA177_0==RANGE_VK) ) {
				alt177=1;
			}
			switch (alt177) {
				case 1 :
					// PLSQLPrinter.g:800:71: subtype_range
					{
					pushFollow(FOLLOW_subtype_range_in_subtype_declaration7415);
					subtype_range();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 801:5: -> template( \"not implemented: subtype_declaration\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: subtype_declaration");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subtype_declaration"


	public static class subtype_range_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subtype_range"
	// PLSQLPrinter.g:804:1: subtype_range : ^( RANGE_VK ( expression )+ ) -> template( \"not implemented: subtype_range\";
	public final PLSQLPrinter.subtype_range_return subtype_range() throws RecognitionException {
		PLSQLPrinter.subtype_range_return retval = new PLSQLPrinter.subtype_range_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:805:5: ( ^( RANGE_VK ( expression )+ ) -> template( \"not implemented: subtype_range\")
			// PLSQLPrinter.g:805:10: ^( RANGE_VK ( expression )+ )
			{
			match(input,RANGE_VK,FOLLOW_RANGE_VK_in_subtype_range7454); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:805:21: ( expression )+
			int cnt178=0;
			loop178:
			while (true) {
				int alt178=2;
				int LA178_0 = input.LA(1);
				if ( (LA178_0==EXPR||LA178_0==LOGIC_EXPR) ) {
					alt178=1;
				}

				switch (alt178) {
				case 1 :
					// PLSQLPrinter.g:805:21: expression
					{
					pushFollow(FOLLOW_expression_in_subtype_range7456);
					expression();
					state._fsp--;

					}
					break;

				default :
					if ( cnt178 >= 1 ) break loop178;
					EarlyExitException eee = new EarlyExitException(178, input);
					throw eee;
				}
				cnt178++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 806:5: -> template( \"not implemented: subtype_range\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: subtype_range");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subtype_range"


	public static class cursor_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "cursor_declaration"
	// PLSQLPrinter.g:810:1: cursor_declaration : ^( CURSOR_DECLARE cursor_name ( type_spec )? ( select_statement )? ^( PARAMETERS ( parameter_spec )* ) ) -> template( \"not implemented: cursor_declaration\";
	public final PLSQLPrinter.cursor_declaration_return cursor_declaration() throws RecognitionException {
		PLSQLPrinter.cursor_declaration_return retval = new PLSQLPrinter.cursor_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:811:5: ( ^( CURSOR_DECLARE cursor_name ( type_spec )? ( select_statement )? ^( PARAMETERS ( parameter_spec )* ) ) -> template( \"not implemented: cursor_declaration\")
			// PLSQLPrinter.g:811:10: ^( CURSOR_DECLARE cursor_name ( type_spec )? ( select_statement )? ^( PARAMETERS ( parameter_spec )* ) )
			{
			match(input,CURSOR_DECLARE,FOLLOW_CURSOR_DECLARE_in_cursor_declaration7494); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_cursor_name_in_cursor_declaration7496);
			cursor_name();
			state._fsp--;

			// PLSQLPrinter.g:811:39: ( type_spec )?
			int alt179=2;
			int LA179_0 = input.LA(1);
			if ( (LA179_0==CUSTOM_TYPE||LA179_0==INTERVAL_DATATYPE||LA179_0==NATIVE_DATATYPE) ) {
				alt179=1;
			}
			switch (alt179) {
				case 1 :
					// PLSQLPrinter.g:811:39: type_spec
					{
					pushFollow(FOLLOW_type_spec_in_cursor_declaration7498);
					type_spec();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:811:50: ( select_statement )?
			int alt180=2;
			int LA180_0 = input.LA(1);
			if ( (LA180_0==SELECT_STATEMENT) ) {
				alt180=1;
			}
			switch (alt180) {
				case 1 :
					// PLSQLPrinter.g:811:50: select_statement
					{
					pushFollow(FOLLOW_select_statement_in_cursor_declaration7501);
					select_statement();
					state._fsp--;

					}
					break;

			}

			match(input,PARAMETERS,FOLLOW_PARAMETERS_in_cursor_declaration7505); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:811:81: ( parameter_spec )*
				loop181:
				while (true) {
					int alt181=2;
					int LA181_0 = input.LA(1);
					if ( (LA181_0==PARAMETER) ) {
						alt181=1;
					}

					switch (alt181) {
					case 1 :
						// PLSQLPrinter.g:811:81: parameter_spec
						{
						pushFollow(FOLLOW_parameter_spec_in_cursor_declaration7507);
						parameter_spec();
						state._fsp--;

						}
						break;

					default :
						break loop181;
					}
				}

				match(input, Token.UP, null); 
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 812:5: -> template( \"not implemented: cursor_declaration\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: cursor_declaration");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cursor_declaration"


	public static class parameter_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "parameter_spec"
	// PLSQLPrinter.g:815:1: parameter_spec : ^( PARAMETER parameter_name ( type_spec )? ( default_value_part )? ) -> template( \"not implemented: parameter_spec\";
	public final PLSQLPrinter.parameter_spec_return parameter_spec() throws RecognitionException {
		PLSQLPrinter.parameter_spec_return retval = new PLSQLPrinter.parameter_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:816:5: ( ^( PARAMETER parameter_name ( type_spec )? ( default_value_part )? ) -> template( \"not implemented: parameter_spec\")
			// PLSQLPrinter.g:816:10: ^( PARAMETER parameter_name ( type_spec )? ( default_value_part )? )
			{
			match(input,PARAMETER,FOLLOW_PARAMETER_in_parameter_spec7546); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_parameter_name_in_parameter_spec7548);
			parameter_name();
			state._fsp--;

			// PLSQLPrinter.g:816:37: ( type_spec )?
			int alt182=2;
			int LA182_0 = input.LA(1);
			if ( (LA182_0==CUSTOM_TYPE||LA182_0==INTERVAL_DATATYPE||LA182_0==NATIVE_DATATYPE) ) {
				alt182=1;
			}
			switch (alt182) {
				case 1 :
					// PLSQLPrinter.g:816:37: type_spec
					{
					pushFollow(FOLLOW_type_spec_in_parameter_spec7550);
					type_spec();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:816:48: ( default_value_part )?
			int alt183=2;
			int LA183_0 = input.LA(1);
			if ( (LA183_0==DEFAULT_VALUE) ) {
				alt183=1;
			}
			switch (alt183) {
				case 1 :
					// PLSQLPrinter.g:816:48: default_value_part
					{
					pushFollow(FOLLOW_default_value_part_in_parameter_spec7553);
					default_value_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 817:5: -> template( \"not implemented: parameter_spec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: parameter_spec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "parameter_spec"


	public static class exception_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "exception_declaration"
	// PLSQLPrinter.g:820:1: exception_declaration : ^( EXCEPTION_DECLARE exception_name ) -> template( \"not implemented: exception_declaration\";
	public final PLSQLPrinter.exception_declaration_return exception_declaration() throws RecognitionException {
		PLSQLPrinter.exception_declaration_return retval = new PLSQLPrinter.exception_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:821:5: ( ^( EXCEPTION_DECLARE exception_name ) -> template( \"not implemented: exception_declaration\")
			// PLSQLPrinter.g:821:10: ^( EXCEPTION_DECLARE exception_name )
			{
			match(input,EXCEPTION_DECLARE,FOLLOW_EXCEPTION_DECLARE_in_exception_declaration7591); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_exception_name_in_exception_declaration7593);
			exception_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 822:5: -> template( \"not implemented: exception_declaration\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: exception_declaration");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exception_declaration"


	public static class pragma_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pragma_declaration"
	// PLSQLPrinter.g:825:1: pragma_declaration : ^( PRAGMA_DECLARE ( SERIALLY_REUSABLE_VK | AUTONOMOUS_TRANSACTION_VK | ^( EXCEPTION_INIT_VK exception_name constant ) | ^( INLINE_VK id expression ) | ^( RESTRICT_REFERENCES_VK ( SQL92_RESERVED_DEFAULT )? ( id )* ) ) ) -> template( \"not implemented: pragma_declaration\";
	public final PLSQLPrinter.pragma_declaration_return pragma_declaration() throws RecognitionException {
		PLSQLPrinter.pragma_declaration_return retval = new PLSQLPrinter.pragma_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:826:5: ( ^( PRAGMA_DECLARE ( SERIALLY_REUSABLE_VK | AUTONOMOUS_TRANSACTION_VK | ^( EXCEPTION_INIT_VK exception_name constant ) | ^( INLINE_VK id expression ) | ^( RESTRICT_REFERENCES_VK ( SQL92_RESERVED_DEFAULT )? ( id )* ) ) ) -> template( \"not implemented: pragma_declaration\")
			// PLSQLPrinter.g:826:10: ^( PRAGMA_DECLARE ( SERIALLY_REUSABLE_VK | AUTONOMOUS_TRANSACTION_VK | ^( EXCEPTION_INIT_VK exception_name constant ) | ^( INLINE_VK id expression ) | ^( RESTRICT_REFERENCES_VK ( SQL92_RESERVED_DEFAULT )? ( id )* ) ) )
			{
			match(input,PRAGMA_DECLARE,FOLLOW_PRAGMA_DECLARE_in_pragma_declaration7642); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:827:13: ( SERIALLY_REUSABLE_VK | AUTONOMOUS_TRANSACTION_VK | ^( EXCEPTION_INIT_VK exception_name constant ) | ^( INLINE_VK id expression ) | ^( RESTRICT_REFERENCES_VK ( SQL92_RESERVED_DEFAULT )? ( id )* ) )
			int alt186=5;
			switch ( input.LA(1) ) {
			case SERIALLY_REUSABLE_VK:
				{
				alt186=1;
				}
				break;
			case AUTONOMOUS_TRANSACTION_VK:
				{
				alt186=2;
				}
				break;
			case EXCEPTION_INIT_VK:
				{
				alt186=3;
				}
				break;
			case INLINE_VK:
				{
				alt186=4;
				}
				break;
			case RESTRICT_REFERENCES_VK:
				{
				alt186=5;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 186, 0, input);
				throw nvae;
			}
			switch (alt186) {
				case 1 :
					// PLSQLPrinter.g:827:18: SERIALLY_REUSABLE_VK
					{
					match(input,SERIALLY_REUSABLE_VK,FOLLOW_SERIALLY_REUSABLE_VK_in_pragma_declaration7662); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:828:19: AUTONOMOUS_TRANSACTION_VK
					{
					match(input,AUTONOMOUS_TRANSACTION_VK,FOLLOW_AUTONOMOUS_TRANSACTION_VK_in_pragma_declaration7682); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:829:18: ^( EXCEPTION_INIT_VK exception_name constant )
					{
					match(input,EXCEPTION_INIT_VK,FOLLOW_EXCEPTION_INIT_VK_in_pragma_declaration7702); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_exception_name_in_pragma_declaration7704);
					exception_name();
					state._fsp--;

					pushFollow(FOLLOW_constant_in_pragma_declaration7706);
					constant();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 4 :
					// PLSQLPrinter.g:830:18: ^( INLINE_VK id expression )
					{
					match(input,INLINE_VK,FOLLOW_INLINE_VK_in_pragma_declaration7727); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_id_in_pragma_declaration7729);
					id();
					state._fsp--;

					pushFollow(FOLLOW_expression_in_pragma_declaration7731);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 5 :
					// PLSQLPrinter.g:831:18: ^( RESTRICT_REFERENCES_VK ( SQL92_RESERVED_DEFAULT )? ( id )* )
					{
					match(input,RESTRICT_REFERENCES_VK,FOLLOW_RESTRICT_REFERENCES_VK_in_pragma_declaration7752); 
					if ( input.LA(1)==Token.DOWN ) {
						match(input, Token.DOWN, null); 
						// PLSQLPrinter.g:831:43: ( SQL92_RESERVED_DEFAULT )?
						int alt184=2;
						int LA184_0 = input.LA(1);
						if ( (LA184_0==SQL92_RESERVED_DEFAULT) ) {
							alt184=1;
						}
						switch (alt184) {
							case 1 :
								// PLSQLPrinter.g:831:43: SQL92_RESERVED_DEFAULT
								{
								match(input,SQL92_RESERVED_DEFAULT,FOLLOW_SQL92_RESERVED_DEFAULT_in_pragma_declaration7754); 
								}
								break;

						}

						// PLSQLPrinter.g:831:67: ( id )*
						loop185:
						while (true) {
							int alt185=2;
							int LA185_0 = input.LA(1);
							if ( (LA185_0==CHAR_SET_NAME||LA185_0==ID) ) {
								alt185=1;
							}

							switch (alt185) {
							case 1 :
								// PLSQLPrinter.g:831:67: id
								{
								pushFollow(FOLLOW_id_in_pragma_declaration7757);
								id();
								state._fsp--;

								}
								break;

							default :
								break loop185;
							}
						}

						match(input, Token.UP, null); 
					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 834:5: -> template( \"not implemented: pragma_declaration\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: pragma_declaration");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pragma_declaration"


	public static class record_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "record_declaration"
	// PLSQLPrinter.g:837:1: record_declaration : ( record_type_dec -> template( \"not implemented: record_declaration\"| record_var_dec -> template( \"not implemented: record_declaration\");
	public final PLSQLPrinter.record_declaration_return record_declaration() throws RecognitionException {
		PLSQLPrinter.record_declaration_return retval = new PLSQLPrinter.record_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:838:5: ( record_type_dec -> template( \"not implemented: record_declaration\"| record_var_dec -> template( \"not implemented: record_declaration\")
			int alt187=2;
			int LA187_0 = input.LA(1);
			if ( (LA187_0==RECORD_TYPE_DECLARE) ) {
				alt187=1;
			}
			else if ( (LA187_0==RECORD_VAR_DECLARE) ) {
				alt187=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 187, 0, input);
				throw nvae;
			}

			switch (alt187) {
				case 1 :
					// PLSQLPrinter.g:838:10: record_type_dec
					{
					pushFollow(FOLLOW_record_type_dec_in_record_declaration7817);
					record_type_dec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 839:5: -> template( \"not implemented: record_declaration\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: record_declaration");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:840:10: record_var_dec
					{
					pushFollow(FOLLOW_record_var_dec_in_record_declaration7842);
					record_var_dec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 841:5: -> template( \"not implemented: record_declaration\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: record_declaration");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "record_declaration"


	public static class record_type_dec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "record_type_dec"
	// PLSQLPrinter.g:847:1: record_type_dec : ^( RECORD_TYPE_DECLARE type_name ( REF_VK )? ( type_spec )? ^( FIELDS ( field_spec )* ) ) -> template( \"not implemented: record_type_dec\";
	public final PLSQLPrinter.record_type_dec_return record_type_dec() throws RecognitionException {
		PLSQLPrinter.record_type_dec_return retval = new PLSQLPrinter.record_type_dec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:848:5: ( ^( RECORD_TYPE_DECLARE type_name ( REF_VK )? ( type_spec )? ^( FIELDS ( field_spec )* ) ) -> template( \"not implemented: record_type_dec\")
			// PLSQLPrinter.g:848:10: ^( RECORD_TYPE_DECLARE type_name ( REF_VK )? ( type_spec )? ^( FIELDS ( field_spec )* ) )
			{
			match(input,RECORD_TYPE_DECLARE,FOLLOW_RECORD_TYPE_DECLARE_in_record_type_dec7880); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_name_in_record_type_dec7882);
			type_name();
			state._fsp--;

			// PLSQLPrinter.g:848:42: ( REF_VK )?
			int alt188=2;
			int LA188_0 = input.LA(1);
			if ( (LA188_0==REF_VK) ) {
				alt188=1;
			}
			switch (alt188) {
				case 1 :
					// PLSQLPrinter.g:848:42: REF_VK
					{
					match(input,REF_VK,FOLLOW_REF_VK_in_record_type_dec7884); 
					}
					break;

			}

			// PLSQLPrinter.g:848:50: ( type_spec )?
			int alt189=2;
			int LA189_0 = input.LA(1);
			if ( (LA189_0==CUSTOM_TYPE||LA189_0==INTERVAL_DATATYPE||LA189_0==NATIVE_DATATYPE) ) {
				alt189=1;
			}
			switch (alt189) {
				case 1 :
					// PLSQLPrinter.g:848:50: type_spec
					{
					pushFollow(FOLLOW_type_spec_in_record_type_dec7887);
					type_spec();
					state._fsp--;

					}
					break;

			}

			match(input,FIELDS,FOLLOW_FIELDS_in_record_type_dec7891); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:848:70: ( field_spec )*
				loop190:
				while (true) {
					int alt190=2;
					int LA190_0 = input.LA(1);
					if ( (LA190_0==FIELD_SPEC) ) {
						alt190=1;
					}

					switch (alt190) {
					case 1 :
						// PLSQLPrinter.g:848:70: field_spec
						{
						pushFollow(FOLLOW_field_spec_in_record_type_dec7893);
						field_spec();
						state._fsp--;

						}
						break;

					default :
						break loop190;
					}
				}

				match(input, Token.UP, null); 
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 849:5: -> template( \"not implemented: record_type_dec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: record_type_dec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "record_type_dec"


	public static class field_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "field_spec"
	// PLSQLPrinter.g:852:1: field_spec : ^( FIELD_SPEC column_name ( type_spec )? ( SQL92_RESERVED_NULL )? ( default_value_part )? ) -> template( \"not implemented: field_spec\";
	public final PLSQLPrinter.field_spec_return field_spec() throws RecognitionException {
		PLSQLPrinter.field_spec_return retval = new PLSQLPrinter.field_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:853:5: ( ^( FIELD_SPEC column_name ( type_spec )? ( SQL92_RESERVED_NULL )? ( default_value_part )? ) -> template( \"not implemented: field_spec\")
			// PLSQLPrinter.g:853:10: ^( FIELD_SPEC column_name ( type_spec )? ( SQL92_RESERVED_NULL )? ( default_value_part )? )
			{
			match(input,FIELD_SPEC,FOLLOW_FIELD_SPEC_in_field_spec7931); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_column_name_in_field_spec7933);
			column_name();
			state._fsp--;

			// PLSQLPrinter.g:853:35: ( type_spec )?
			int alt191=2;
			int LA191_0 = input.LA(1);
			if ( (LA191_0==CUSTOM_TYPE||LA191_0==INTERVAL_DATATYPE||LA191_0==NATIVE_DATATYPE) ) {
				alt191=1;
			}
			switch (alt191) {
				case 1 :
					// PLSQLPrinter.g:853:35: type_spec
					{
					pushFollow(FOLLOW_type_spec_in_field_spec7935);
					type_spec();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:853:46: ( SQL92_RESERVED_NULL )?
			int alt192=2;
			int LA192_0 = input.LA(1);
			if ( (LA192_0==SQL92_RESERVED_NULL) ) {
				alt192=1;
			}
			switch (alt192) {
				case 1 :
					// PLSQLPrinter.g:853:46: SQL92_RESERVED_NULL
					{
					match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_field_spec7938); 
					}
					break;

			}

			// PLSQLPrinter.g:853:67: ( default_value_part )?
			int alt193=2;
			int LA193_0 = input.LA(1);
			if ( (LA193_0==DEFAULT_VALUE) ) {
				alt193=1;
			}
			switch (alt193) {
				case 1 :
					// PLSQLPrinter.g:853:67: default_value_part
					{
					pushFollow(FOLLOW_default_value_part_in_field_spec7941);
					default_value_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 854:5: -> template( \"not implemented: field_spec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: field_spec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "field_spec"


	public static class record_var_dec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "record_var_dec"
	// PLSQLPrinter.g:857:1: record_var_dec : ^( RECORD_VAR_DECLARE record_name type_name ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK ) ) -> template( \"not implemented: record_var_dec\";
	public final PLSQLPrinter.record_var_dec_return record_var_dec() throws RecognitionException {
		PLSQLPrinter.record_var_dec_return retval = new PLSQLPrinter.record_var_dec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:858:5: ( ^( RECORD_VAR_DECLARE record_name type_name ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK ) ) -> template( \"not implemented: record_var_dec\")
			// PLSQLPrinter.g:858:10: ^( RECORD_VAR_DECLARE record_name type_name ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK ) )
			{
			match(input,RECORD_VAR_DECLARE,FOLLOW_RECORD_VAR_DECLARE_in_record_var_dec7978); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_record_name_in_record_var_dec7980);
			record_name();
			state._fsp--;

			pushFollow(FOLLOW_type_name_in_record_var_dec7982);
			type_name();
			state._fsp--;

			// PLSQLPrinter.g:858:53: ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK )
			int alt194=2;
			int LA194_0 = input.LA(1);
			if ( (LA194_0==PERCENT_ROWTYPE_VK) ) {
				alt194=1;
			}
			else if ( (LA194_0==PERCENT_TYPE_VK) ) {
				alt194=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 194, 0, input);
				throw nvae;
			}

			switch (alt194) {
				case 1 :
					// PLSQLPrinter.g:858:54: PERCENT_ROWTYPE_VK
					{
					match(input,PERCENT_ROWTYPE_VK,FOLLOW_PERCENT_ROWTYPE_VK_in_record_var_dec7985); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:858:73: PERCENT_TYPE_VK
					{
					match(input,PERCENT_TYPE_VK,FOLLOW_PERCENT_TYPE_VK_in_record_var_dec7987); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 859:5: -> template( \"not implemented: record_var_dec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: record_var_dec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "record_var_dec"


	public static class table_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "table_declaration"
	// PLSQLPrinter.g:864:1: table_declaration : ( table_type_dec -> template( \"not implemented: table_declaration\"| table_var_dec -> template( \"not implemented: table_declaration\");
	public final PLSQLPrinter.table_declaration_return table_declaration() throws RecognitionException {
		PLSQLPrinter.table_declaration_return retval = new PLSQLPrinter.table_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:865:5: ( table_type_dec -> template( \"not implemented: table_declaration\"| table_var_dec -> template( \"not implemented: table_declaration\")
			int alt195=2;
			int LA195_0 = input.LA(1);
			if ( (LA195_0==TABLE_TYPE_DECLARE) ) {
				alt195=1;
			}
			else if ( (LA195_0==TABLE_VAR_DECLARE) ) {
				alt195=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 195, 0, input);
				throw nvae;
			}

			switch (alt195) {
				case 1 :
					// PLSQLPrinter.g:865:10: table_type_dec
					{
					pushFollow(FOLLOW_table_type_dec_in_table_declaration8025);
					table_type_dec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 866:5: -> template( \"not implemented: table_declaration\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: table_declaration");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:867:10: table_var_dec
					{
					pushFollow(FOLLOW_table_var_dec_in_table_declaration8050);
					table_var_dec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 868:5: -> template( \"not implemented: table_declaration\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: table_declaration");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_declaration"


	public static class table_type_dec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "table_type_dec"
	// PLSQLPrinter.g:871:1: table_type_dec : ^( TABLE_TYPE_DECLARE type_name ( varray_type_def | ( SQL92_RESERVED_NULL )? ^( SQL92_RESERVED_TABLE type_spec ( table_indexed_by_part )? ) ) ) -> template( \"not implemented: table_type_dec\";
	public final PLSQLPrinter.table_type_dec_return table_type_dec() throws RecognitionException {
		PLSQLPrinter.table_type_dec_return retval = new PLSQLPrinter.table_type_dec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:872:5: ( ^( TABLE_TYPE_DECLARE type_name ( varray_type_def | ( SQL92_RESERVED_NULL )? ^( SQL92_RESERVED_TABLE type_spec ( table_indexed_by_part )? ) ) ) -> template( \"not implemented: table_type_dec\")
			// PLSQLPrinter.g:872:10: ^( TABLE_TYPE_DECLARE type_name ( varray_type_def | ( SQL92_RESERVED_NULL )? ^( SQL92_RESERVED_TABLE type_spec ( table_indexed_by_part )? ) ) )
			{
			match(input,TABLE_TYPE_DECLARE,FOLLOW_TABLE_TYPE_DECLARE_in_table_type_dec8085); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_name_in_table_type_dec8087);
			type_name();
			state._fsp--;

			// PLSQLPrinter.g:873:13: ( varray_type_def | ( SQL92_RESERVED_NULL )? ^( SQL92_RESERVED_TABLE type_spec ( table_indexed_by_part )? ) )
			int alt198=2;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_NULL:
				{
				int LA198_1 = input.LA(2);
				if ( (LA198_1==VARR_ARRAY_DEF) ) {
					alt198=1;
				}
				else if ( (LA198_1==SQL92_RESERVED_TABLE) ) {
					alt198=2;
				}

				else {
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 198, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case VARR_ARRAY_DEF:
				{
				alt198=1;
				}
				break;
			case SQL92_RESERVED_TABLE:
				{
				alt198=2;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 198, 0, input);
				throw nvae;
			}
			switch (alt198) {
				case 1 :
					// PLSQLPrinter.g:873:18: varray_type_def
					{
					pushFollow(FOLLOW_varray_type_def_in_table_type_dec8107);
					varray_type_def();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:874:18: ( SQL92_RESERVED_NULL )? ^( SQL92_RESERVED_TABLE type_spec ( table_indexed_by_part )? )
					{
					// PLSQLPrinter.g:874:18: ( SQL92_RESERVED_NULL )?
					int alt196=2;
					int LA196_0 = input.LA(1);
					if ( (LA196_0==SQL92_RESERVED_NULL) ) {
						alt196=1;
					}
					switch (alt196) {
						case 1 :
							// PLSQLPrinter.g:874:18: SQL92_RESERVED_NULL
							{
							match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_table_type_dec8126); 
							}
							break;

					}

					match(input,SQL92_RESERVED_TABLE,FOLLOW_SQL92_RESERVED_TABLE_in_table_type_dec8130); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_type_spec_in_table_type_dec8132);
					type_spec();
					state._fsp--;

					// PLSQLPrinter.g:874:72: ( table_indexed_by_part )?
					int alt197=2;
					int LA197_0 = input.LA(1);
					if ( (LA197_0==INDEXED_BY) ) {
						alt197=1;
					}
					switch (alt197) {
						case 1 :
							// PLSQLPrinter.g:874:72: table_indexed_by_part
							{
							pushFollow(FOLLOW_table_indexed_by_part_in_table_type_dec8134);
							table_indexed_by_part();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 877:5: -> template( \"not implemented: table_type_dec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: table_type_dec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_type_dec"


	public static class table_indexed_by_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "table_indexed_by_part"
	// PLSQLPrinter.g:880:1: table_indexed_by_part : ^( INDEXED_BY type_spec ) -> template( \"not implemented: table_indexed_by_part\";
	public final PLSQLPrinter.table_indexed_by_part_return table_indexed_by_part() throws RecognitionException {
		PLSQLPrinter.table_indexed_by_part_return retval = new PLSQLPrinter.table_indexed_by_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:881:5: ( ^( INDEXED_BY type_spec ) -> template( \"not implemented: table_indexed_by_part\")
			// PLSQLPrinter.g:881:10: ^( INDEXED_BY type_spec )
			{
			match(input,INDEXED_BY,FOLLOW_INDEXED_BY_in_table_indexed_by_part8195); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_spec_in_table_indexed_by_part8197);
			type_spec();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 882:5: -> template( \"not implemented: table_indexed_by_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: table_indexed_by_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_indexed_by_part"


	public static class varray_type_def_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "varray_type_def"
	// PLSQLPrinter.g:885:1: varray_type_def : ( SQL92_RESERVED_NULL )? ^( VARR_ARRAY_DEF expression type_spec ) -> template( \"not implemented: varray_type_def\";
	public final PLSQLPrinter.varray_type_def_return varray_type_def() throws RecognitionException {
		PLSQLPrinter.varray_type_def_return retval = new PLSQLPrinter.varray_type_def_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:886:5: ( ( SQL92_RESERVED_NULL )? ^( VARR_ARRAY_DEF expression type_spec ) -> template( \"not implemented: varray_type_def\")
			// PLSQLPrinter.g:886:10: ( SQL92_RESERVED_NULL )? ^( VARR_ARRAY_DEF expression type_spec )
			{
			// PLSQLPrinter.g:886:10: ( SQL92_RESERVED_NULL )?
			int alt199=2;
			int LA199_0 = input.LA(1);
			if ( (LA199_0==SQL92_RESERVED_NULL) ) {
				alt199=1;
			}
			switch (alt199) {
				case 1 :
					// PLSQLPrinter.g:886:10: SQL92_RESERVED_NULL
					{
					match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_varray_type_def8232); 
					}
					break;

			}

			match(input,VARR_ARRAY_DEF,FOLLOW_VARR_ARRAY_DEF_in_varray_type_def8236); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_varray_type_def8238);
			expression();
			state._fsp--;

			pushFollow(FOLLOW_type_spec_in_varray_type_def8240);
			type_spec();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 887:5: -> template( \"not implemented: varray_type_def\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: varray_type_def");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "varray_type_def"


	public static class table_var_dec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "table_var_dec"
	// PLSQLPrinter.g:890:1: table_var_dec : ^( TABLE_VAR_DECLARE table_var_name type_spec ) -> template( \"not implemented: table_var_dec\";
	public final PLSQLPrinter.table_var_dec_return table_var_dec() throws RecognitionException {
		PLSQLPrinter.table_var_dec_return retval = new PLSQLPrinter.table_var_dec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:891:5: ( ^( TABLE_VAR_DECLARE table_var_name type_spec ) -> template( \"not implemented: table_var_dec\")
			// PLSQLPrinter.g:891:10: ^( TABLE_VAR_DECLARE table_var_name type_spec )
			{
			match(input,TABLE_VAR_DECLARE,FOLLOW_TABLE_VAR_DECLARE_in_table_var_dec8276); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_table_var_name_in_table_var_dec8278);
			table_var_name();
			state._fsp--;

			pushFollow(FOLLOW_type_spec_in_table_var_dec8280);
			type_spec();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 892:5: -> template( \"not implemented: table_var_dec\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: table_var_dec");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_var_dec"


	public static class seq_of_statements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "seq_of_statements"
	// PLSQLPrinter.g:899:1: seq_of_statements : ^( STATEMENTS (statements+= statement )+ ) -> seq_of_statements(statements=$statements);
	public final PLSQLPrinter.seq_of_statements_return seq_of_statements() throws RecognitionException {
		PLSQLPrinter.seq_of_statements_return retval = new PLSQLPrinter.seq_of_statements_return();
		retval.start = input.LT(1);

		List<Object> list_statements=null;
		RuleReturnScope statements = null;
		try {
			// PLSQLPrinter.g:900:5: ( ^( STATEMENTS (statements+= statement )+ ) -> seq_of_statements(statements=$statements))
			// PLSQLPrinter.g:900:11: ^( STATEMENTS (statements+= statement )+ )
			{
			match(input,STATEMENTS,FOLLOW_STATEMENTS_in_seq_of_statements8321); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:900:34: (statements+= statement )+
			int cnt200=0;
			loop200:
			while (true) {
				int alt200=2;
				int LA200_0 = input.LA(1);
				if ( (LA200_0==PLSQL_RESERVED_IF||LA200_0==PLSQL_RESERVED_LOCK||LA200_0==SQL92_RESERVED_DELETE||LA200_0==SQL92_RESERVED_FETCH||LA200_0==SQL92_RESERVED_GOTO||LA200_0==SQL92_RESERVED_INSERT||LA200_0==SQL92_RESERVED_NULL||LA200_0==SQL92_RESERVED_UPDATE||LA200_0==ASSIGN||LA200_0==BLOCK||LA200_0==BODY||LA200_0==CASCATED_ELEMENT||LA200_0==CLOSE_VK||LA200_0==COMMIT_VK||LA200_0==CONTINUE_VK||(LA200_0 >= EXECUTE_VK && LA200_0 <= EXIT_VK)||LA200_0==FORALL_VK||LA200_0==FOR_LOOP||LA200_0==LABEL_DECLARE||LA200_0==LOOP_VK||LA200_0==MERGE_VK||LA200_0==OPEN_VK||LA200_0==PIPE_ROW||LA200_0==RAISE_VK||LA200_0==RETURN_VK||LA200_0==ROLLBACK_VK||LA200_0==SAVEPOINT_VK||LA200_0==SEARCHED_CASE||LA200_0==SELECT_STATEMENT||LA200_0==SET_CONSTRAINT||LA200_0==SET_TRANSACTION||LA200_0==SIMPLE_CASE||LA200_0==WHILE_LOOP) ) {
					alt200=1;
				}

				switch (alt200) {
				case 1 :
					// PLSQLPrinter.g:900:34: statements+= statement
					{
					pushFollow(FOLLOW_statement_in_seq_of_statements8325);
					statements=statement();
					state._fsp--;

					if (list_statements==null) list_statements=new ArrayList<Object>();
					list_statements.add(statements.getTemplate());
					}
					break;

				default :
					if ( cnt200 >= 1 ) break loop200;
					EarlyExitException eee = new EarlyExitException(200, input);
					throw eee;
				}
				cnt200++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 901:5: -> seq_of_statements(statements=$statements)
			{
				retval.st = templateLib.getInstanceOf("seq_of_statements",new STAttrMap().put("statements", list_statements));
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "seq_of_statements"


	public static class statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "statement"
	// PLSQLPrinter.g:904:1: statement : ( label_declaration -> { $label_declaration.st }| assignment_statement -> { $assignment_statement.st }| continue_statement -> { $continue_statement.st }| exit_statement -> { $exit_statement.st }| goto_statement -> { $goto_statement.st }| if_statement -> { $if_statement.st }| loop_statement -> { $loop_statement.st }| forall_statement -> { $forall_statement.st }| null_statement -> { $null_statement.st }| raise_statement -> { $raise_statement.st }| return_statement -> { $return_statement.st }| pipe_row_statement -> { $pipe_row_statement.st }| case_statement -> { $case_statement.st }| sql_statement -> { $sql_statement.st }| general_element -> { $general_element.st }| body -> { $body.st }| block -> { $block.st });
	public final PLSQLPrinter.statement_return statement() throws RecognitionException {
		PLSQLPrinter.statement_return retval = new PLSQLPrinter.statement_return();
		retval.start = input.LT(1);

		TreeRuleReturnScope label_declaration10 =null;
		TreeRuleReturnScope assignment_statement11 =null;
		TreeRuleReturnScope continue_statement12 =null;
		TreeRuleReturnScope exit_statement13 =null;
		TreeRuleReturnScope goto_statement14 =null;
		TreeRuleReturnScope if_statement15 =null;
		TreeRuleReturnScope loop_statement16 =null;
		TreeRuleReturnScope forall_statement17 =null;
		TreeRuleReturnScope null_statement18 =null;
		TreeRuleReturnScope raise_statement19 =null;
		TreeRuleReturnScope return_statement20 =null;
		TreeRuleReturnScope pipe_row_statement21 =null;
		TreeRuleReturnScope case_statement22 =null;
		TreeRuleReturnScope sql_statement23 =null;
		TreeRuleReturnScope general_element24 =null;
		TreeRuleReturnScope body25 =null;
		TreeRuleReturnScope block26 =null;

		try {
			// PLSQLPrinter.g:905:5: ( label_declaration -> { $label_declaration.st }| assignment_statement -> { $assignment_statement.st }| continue_statement -> { $continue_statement.st }| exit_statement -> { $exit_statement.st }| goto_statement -> { $goto_statement.st }| if_statement -> { $if_statement.st }| loop_statement -> { $loop_statement.st }| forall_statement -> { $forall_statement.st }| null_statement -> { $null_statement.st }| raise_statement -> { $raise_statement.st }| return_statement -> { $return_statement.st }| pipe_row_statement -> { $pipe_row_statement.st }| case_statement -> { $case_statement.st }| sql_statement -> { $sql_statement.st }| general_element -> { $general_element.st }| body -> { $body.st }| block -> { $block.st })
			int alt201=17;
			switch ( input.LA(1) ) {
			case LABEL_DECLARE:
				{
				alt201=1;
				}
				break;
			case ASSIGN:
				{
				alt201=2;
				}
				break;
			case CONTINUE_VK:
				{
				alt201=3;
				}
				break;
			case EXIT_VK:
				{
				alt201=4;
				}
				break;
			case SQL92_RESERVED_GOTO:
				{
				alt201=5;
				}
				break;
			case PLSQL_RESERVED_IF:
				{
				alt201=6;
				}
				break;
			case FOR_LOOP:
			case LOOP_VK:
			case WHILE_LOOP:
				{
				alt201=7;
				}
				break;
			case FORALL_VK:
				{
				alt201=8;
				}
				break;
			case SQL92_RESERVED_NULL:
				{
				alt201=9;
				}
				break;
			case RAISE_VK:
				{
				alt201=10;
				}
				break;
			case RETURN_VK:
				{
				alt201=11;
				}
				break;
			case PIPE_ROW:
				{
				alt201=12;
				}
				break;
			case SEARCHED_CASE:
			case SIMPLE_CASE:
				{
				alt201=13;
				}
				break;
			case PLSQL_RESERVED_LOCK:
			case SQL92_RESERVED_DELETE:
			case SQL92_RESERVED_FETCH:
			case SQL92_RESERVED_INSERT:
			case SQL92_RESERVED_UPDATE:
			case CLOSE_VK:
			case COMMIT_VK:
			case EXECUTE_VK:
			case MERGE_VK:
			case OPEN_VK:
			case ROLLBACK_VK:
			case SAVEPOINT_VK:
			case SELECT_STATEMENT:
			case SET_CONSTRAINT:
			case SET_TRANSACTION:
				{
				alt201=14;
				}
				break;
			case CASCATED_ELEMENT:
				{
				alt201=15;
				}
				break;
			case BODY:
				{
				alt201=16;
				}
				break;
			case BLOCK:
				{
				alt201=17;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 201, 0, input);
				throw nvae;
			}
			switch (alt201) {
				case 1 :
					// PLSQLPrinter.g:905:10: label_declaration
					{
					pushFollow(FOLLOW_label_declaration_in_statement8360);
					label_declaration10=label_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 905:28: -> { $label_declaration.st }
					{
						retval.st =  (label_declaration10!=null?((StringTemplate)label_declaration10.getTemplate()):null) ;
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:906:10: assignment_statement
					{
					pushFollow(FOLLOW_assignment_statement_in_statement8375);
					assignment_statement11=assignment_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 906:31: -> { $assignment_statement.st }
					{
						retval.st =  (assignment_statement11!=null?((StringTemplate)assignment_statement11.getTemplate()):null) ;
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:907:10: continue_statement
					{
					pushFollow(FOLLOW_continue_statement_in_statement8390);
					continue_statement12=continue_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 907:29: -> { $continue_statement.st }
					{
						retval.st =  (continue_statement12!=null?((StringTemplate)continue_statement12.getTemplate()):null) ;
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:908:10: exit_statement
					{
					pushFollow(FOLLOW_exit_statement_in_statement8405);
					exit_statement13=exit_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 908:25: -> { $exit_statement.st }
					{
						retval.st =  (exit_statement13!=null?((StringTemplate)exit_statement13.getTemplate()):null) ;
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:909:10: goto_statement
					{
					pushFollow(FOLLOW_goto_statement_in_statement8420);
					goto_statement14=goto_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 909:25: -> { $goto_statement.st }
					{
						retval.st =  (goto_statement14!=null?((StringTemplate)goto_statement14.getTemplate()):null) ;
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:910:10: if_statement
					{
					pushFollow(FOLLOW_if_statement_in_statement8435);
					if_statement15=if_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 910:23: -> { $if_statement.st }
					{
						retval.st =  (if_statement15!=null?((StringTemplate)if_statement15.getTemplate()):null) ;
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:911:10: loop_statement
					{
					pushFollow(FOLLOW_loop_statement_in_statement8450);
					loop_statement16=loop_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 911:25: -> { $loop_statement.st }
					{
						retval.st =  (loop_statement16!=null?((StringTemplate)loop_statement16.getTemplate()):null) ;
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:912:10: forall_statement
					{
					pushFollow(FOLLOW_forall_statement_in_statement8465);
					forall_statement17=forall_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 912:27: -> { $forall_statement.st }
					{
						retval.st =  (forall_statement17!=null?((StringTemplate)forall_statement17.getTemplate()):null) ;
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:913:10: null_statement
					{
					pushFollow(FOLLOW_null_statement_in_statement8480);
					null_statement18=null_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 913:25: -> { $null_statement.st }
					{
						retval.st =  (null_statement18!=null?((StringTemplate)null_statement18.getTemplate()):null) ;
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:914:10: raise_statement
					{
					pushFollow(FOLLOW_raise_statement_in_statement8495);
					raise_statement19=raise_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 914:26: -> { $raise_statement.st }
					{
						retval.st =  (raise_statement19!=null?((StringTemplate)raise_statement19.getTemplate()):null) ;
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:915:10: return_statement
					{
					pushFollow(FOLLOW_return_statement_in_statement8510);
					return_statement20=return_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 915:27: -> { $return_statement.st }
					{
						retval.st =  (return_statement20!=null?((StringTemplate)return_statement20.getTemplate()):null) ;
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:916:10: pipe_row_statement
					{
					pushFollow(FOLLOW_pipe_row_statement_in_statement8525);
					pipe_row_statement21=pipe_row_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 916:29: -> { $pipe_row_statement.st }
					{
						retval.st =  (pipe_row_statement21!=null?((StringTemplate)pipe_row_statement21.getTemplate()):null) ;
					}



					}
					break;
				case 13 :
					// PLSQLPrinter.g:917:10: case_statement
					{
					pushFollow(FOLLOW_case_statement_in_statement8540);
					case_statement22=case_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 917:25: -> { $case_statement.st }
					{
						retval.st =  (case_statement22!=null?((StringTemplate)case_statement22.getTemplate()):null) ;
					}



					}
					break;
				case 14 :
					// PLSQLPrinter.g:918:10: sql_statement
					{
					pushFollow(FOLLOW_sql_statement_in_statement8555);
					sql_statement23=sql_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 918:24: -> { $sql_statement.st }
					{
						retval.st =  (sql_statement23!=null?((StringTemplate)sql_statement23.getTemplate()):null) ;
					}



					}
					break;
				case 15 :
					// PLSQLPrinter.g:919:10: general_element
					{
					pushFollow(FOLLOW_general_element_in_statement8570);
					general_element24=general_element();
					state._fsp--;

					// TEMPLATE REWRITE
					// 919:26: -> { $general_element.st }
					{
						retval.st =  (general_element24!=null?((StringTemplate)general_element24.getTemplate()):null) ;
					}



					}
					break;
				case 16 :
					// PLSQLPrinter.g:920:10: body
					{
					pushFollow(FOLLOW_body_in_statement8585);
					body25=body();
					state._fsp--;

					// TEMPLATE REWRITE
					// 920:15: -> { $body.st }
					{
						retval.st =  (body25!=null?((StringTemplate)body25.getTemplate()):null) ;
					}



					}
					break;
				case 17 :
					// PLSQLPrinter.g:921:10: block
					{
					pushFollow(FOLLOW_block_in_statement8600);
					block26=block();
					state._fsp--;

					// TEMPLATE REWRITE
					// 921:16: -> { $block.st }
					{
						retval.st =  (block26!=null?((StringTemplate)block26.getTemplate()):null) ;
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "statement"


	public static class label_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "label_declaration"
	// PLSQLPrinter.g:924:1: label_declaration : ^( LABEL_DECLARE label_name ) -> template( \"not implemented: label_declaration\";
	public final PLSQLPrinter.label_declaration_return label_declaration() throws RecognitionException {
		PLSQLPrinter.label_declaration_return retval = new PLSQLPrinter.label_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:925:5: ( ^( LABEL_DECLARE label_name ) -> template( \"not implemented: label_declaration\")
			// PLSQLPrinter.g:925:10: ^( LABEL_DECLARE label_name )
			{
			match(input,LABEL_DECLARE,FOLLOW_LABEL_DECLARE_in_label_declaration8625); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_label_name_in_label_declaration8627);
			label_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 926:5: -> template( \"not implemented: label_declaration\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: label_declaration");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "label_declaration"


	public static class assignment_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "assignment_statement"
	// PLSQLPrinter.g:929:1: assignment_statement : ^( ASSIGN general_element expression ) -> template( \"not implemented: assignment_statement\";
	public final PLSQLPrinter.assignment_statement_return assignment_statement() throws RecognitionException {
		PLSQLPrinter.assignment_statement_return retval = new PLSQLPrinter.assignment_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:930:5: ( ^( ASSIGN general_element expression ) -> template( \"not implemented: assignment_statement\")
			// PLSQLPrinter.g:930:11: ^( ASSIGN general_element expression )
			{
			match(input,ASSIGN,FOLLOW_ASSIGN_in_assignment_statement8664); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_general_element_in_assignment_statement8666);
			general_element();
			state._fsp--;

			pushFollow(FOLLOW_expression_in_assignment_statement8668);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 931:5: -> template( \"not implemented: assignment_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: assignment_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "assignment_statement"


	public static class continue_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "continue_statement"
	// PLSQLPrinter.g:934:1: continue_statement : ^( CONTINUE_VK ( label_name )? ( general_when )? ) -> template( \"not implemented: continue_statement\";
	public final PLSQLPrinter.continue_statement_return continue_statement() throws RecognitionException {
		PLSQLPrinter.continue_statement_return retval = new PLSQLPrinter.continue_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:935:5: ( ^( CONTINUE_VK ( label_name )? ( general_when )? ) -> template( \"not implemented: continue_statement\")
			// PLSQLPrinter.g:935:10: ^( CONTINUE_VK ( label_name )? ( general_when )? )
			{
			match(input,CONTINUE_VK,FOLLOW_CONTINUE_VK_in_continue_statement8704); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:935:24: ( label_name )?
				int alt202=2;
				int LA202_0 = input.LA(1);
				if ( (LA202_0==LABEL_NAME) ) {
					alt202=1;
				}
				switch (alt202) {
					case 1 :
						// PLSQLPrinter.g:935:24: label_name
						{
						pushFollow(FOLLOW_label_name_in_continue_statement8706);
						label_name();
						state._fsp--;

						}
						break;

				}

				// PLSQLPrinter.g:935:36: ( general_when )?
				int alt203=2;
				int LA203_0 = input.LA(1);
				if ( (LA203_0==SQL92_RESERVED_WHEN) ) {
					alt203=1;
				}
				switch (alt203) {
					case 1 :
						// PLSQLPrinter.g:935:36: general_when
						{
						pushFollow(FOLLOW_general_when_in_continue_statement8709);
						general_when();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 936:5: -> template( \"not implemented: continue_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: continue_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "continue_statement"


	public static class general_when_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "general_when"
	// PLSQLPrinter.g:939:1: general_when : ^( SQL92_RESERVED_WHEN expression ) -> template( \"not implemented: general_when\";
	public final PLSQLPrinter.general_when_return general_when() throws RecognitionException {
		PLSQLPrinter.general_when_return retval = new PLSQLPrinter.general_when_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:940:5: ( ^( SQL92_RESERVED_WHEN expression ) -> template( \"not implemented: general_when\")
			// PLSQLPrinter.g:940:10: ^( SQL92_RESERVED_WHEN expression )
			{
			match(input,SQL92_RESERVED_WHEN,FOLLOW_SQL92_RESERVED_WHEN_in_general_when8746); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_general_when8748);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 941:5: -> template( \"not implemented: general_when\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: general_when");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "general_when"


	public static class exit_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "exit_statement"
	// PLSQLPrinter.g:944:1: exit_statement : ^( EXIT_VK ( label_name )? ( general_when )? ) -> template( \"not implemented: exit_statement\";
	public final PLSQLPrinter.exit_statement_return exit_statement() throws RecognitionException {
		PLSQLPrinter.exit_statement_return retval = new PLSQLPrinter.exit_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:945:5: ( ^( EXIT_VK ( label_name )? ( general_when )? ) -> template( \"not implemented: exit_statement\")
			// PLSQLPrinter.g:945:10: ^( EXIT_VK ( label_name )? ( general_when )? )
			{
			match(input,EXIT_VK,FOLLOW_EXIT_VK_in_exit_statement8784); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:945:20: ( label_name )?
				int alt204=2;
				int LA204_0 = input.LA(1);
				if ( (LA204_0==LABEL_NAME) ) {
					alt204=1;
				}
				switch (alt204) {
					case 1 :
						// PLSQLPrinter.g:945:20: label_name
						{
						pushFollow(FOLLOW_label_name_in_exit_statement8786);
						label_name();
						state._fsp--;

						}
						break;

				}

				// PLSQLPrinter.g:945:32: ( general_when )?
				int alt205=2;
				int LA205_0 = input.LA(1);
				if ( (LA205_0==SQL92_RESERVED_WHEN) ) {
					alt205=1;
				}
				switch (alt205) {
					case 1 :
						// PLSQLPrinter.g:945:32: general_when
						{
						pushFollow(FOLLOW_general_when_in_exit_statement8789);
						general_when();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 946:5: -> template( \"not implemented: exit_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: exit_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exit_statement"


	public static class goto_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "goto_statement"
	// PLSQLPrinter.g:949:1: goto_statement : ^( SQL92_RESERVED_GOTO label_name ) -> template( \"not implemented: goto_statement\";
	public final PLSQLPrinter.goto_statement_return goto_statement() throws RecognitionException {
		PLSQLPrinter.goto_statement_return retval = new PLSQLPrinter.goto_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:950:5: ( ^( SQL92_RESERVED_GOTO label_name ) -> template( \"not implemented: goto_statement\")
			// PLSQLPrinter.g:950:10: ^( SQL92_RESERVED_GOTO label_name )
			{
			match(input,SQL92_RESERVED_GOTO,FOLLOW_SQL92_RESERVED_GOTO_in_goto_statement8826); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_label_name_in_goto_statement8828);
			label_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 951:5: -> template( \"not implemented: goto_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: goto_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "goto_statement"


	public static class if_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "if_statement"
	// PLSQLPrinter.g:954:1: if_statement : ^( PLSQL_RESERVED_IF expression seq_of_statements ( elsif_part )* ( else_part )? ) -> template( \"not implemented: if_statement\";
	public final PLSQLPrinter.if_statement_return if_statement() throws RecognitionException {
		PLSQLPrinter.if_statement_return retval = new PLSQLPrinter.if_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:955:5: ( ^( PLSQL_RESERVED_IF expression seq_of_statements ( elsif_part )* ( else_part )? ) -> template( \"not implemented: if_statement\")
			// PLSQLPrinter.g:955:10: ^( PLSQL_RESERVED_IF expression seq_of_statements ( elsif_part )* ( else_part )? )
			{
			match(input,PLSQL_RESERVED_IF,FOLLOW_PLSQL_RESERVED_IF_in_if_statement8864); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_if_statement8866);
			expression();
			state._fsp--;

			pushFollow(FOLLOW_seq_of_statements_in_if_statement8868);
			seq_of_statements();
			state._fsp--;

			// PLSQLPrinter.g:955:59: ( elsif_part )*
			loop206:
			while (true) {
				int alt206=2;
				int LA206_0 = input.LA(1);
				if ( (LA206_0==PLSQL_NON_RESERVED_ELSIF) ) {
					alt206=1;
				}

				switch (alt206) {
				case 1 :
					// PLSQLPrinter.g:955:59: elsif_part
					{
					pushFollow(FOLLOW_elsif_part_in_if_statement8870);
					elsif_part();
					state._fsp--;

					}
					break;

				default :
					break loop206;
				}
			}

			// PLSQLPrinter.g:955:71: ( else_part )?
			int alt207=2;
			int LA207_0 = input.LA(1);
			if ( (LA207_0==SQL92_RESERVED_ELSE) ) {
				alt207=1;
			}
			switch (alt207) {
				case 1 :
					// PLSQLPrinter.g:955:71: else_part
					{
					pushFollow(FOLLOW_else_part_in_if_statement8873);
					else_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 956:5: -> template( \"not implemented: if_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: if_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "if_statement"


	public static class elsif_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "elsif_part"
	// PLSQLPrinter.g:959:1: elsif_part : ^( PLSQL_NON_RESERVED_ELSIF expression seq_of_statements ) -> template( \"not implemented: elsif_part\";
	public final PLSQLPrinter.elsif_part_return elsif_part() throws RecognitionException {
		PLSQLPrinter.elsif_part_return retval = new PLSQLPrinter.elsif_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:960:5: ( ^( PLSQL_NON_RESERVED_ELSIF expression seq_of_statements ) -> template( \"not implemented: elsif_part\")
			// PLSQLPrinter.g:960:10: ^( PLSQL_NON_RESERVED_ELSIF expression seq_of_statements )
			{
			match(input,PLSQL_NON_RESERVED_ELSIF,FOLLOW_PLSQL_NON_RESERVED_ELSIF_in_elsif_part8910); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_elsif_part8912);
			expression();
			state._fsp--;

			pushFollow(FOLLOW_seq_of_statements_in_elsif_part8914);
			seq_of_statements();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 961:5: -> template( \"not implemented: elsif_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: elsif_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "elsif_part"


	public static class else_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "else_part"
	// PLSQLPrinter.g:964:1: else_part : ^( SQL92_RESERVED_ELSE seq_of_statements ) -> template( \"not implemented: else_part\";
	public final PLSQLPrinter.else_part_return else_part() throws RecognitionException {
		PLSQLPrinter.else_part_return retval = new PLSQLPrinter.else_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:965:5: ( ^( SQL92_RESERVED_ELSE seq_of_statements ) -> template( \"not implemented: else_part\")
			// PLSQLPrinter.g:965:10: ^( SQL92_RESERVED_ELSE seq_of_statements )
			{
			match(input,SQL92_RESERVED_ELSE,FOLLOW_SQL92_RESERVED_ELSE_in_else_part8950); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_seq_of_statements_in_else_part8952);
			seq_of_statements();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 966:5: -> template( \"not implemented: else_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: else_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "else_part"


	public static class loop_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "loop_statement"
	// PLSQLPrinter.g:969:1: loop_statement : ( ^( WHILE_LOOP ( label_name )* expression seq_of_statements ) -> template( \"not implemented: loop_statement\"| ^( FOR_LOOP ( label_name )* cursor_loop_param seq_of_statements ) -> template( \"not implemented: loop_statement\"| ^( LOOP_VK ( label_name )* seq_of_statements ) -> template( \"not implemented: loop_statement\");
	public final PLSQLPrinter.loop_statement_return loop_statement() throws RecognitionException {
		PLSQLPrinter.loop_statement_return retval = new PLSQLPrinter.loop_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:970:5: ( ^( WHILE_LOOP ( label_name )* expression seq_of_statements ) -> template( \"not implemented: loop_statement\"| ^( FOR_LOOP ( label_name )* cursor_loop_param seq_of_statements ) -> template( \"not implemented: loop_statement\"| ^( LOOP_VK ( label_name )* seq_of_statements ) -> template( \"not implemented: loop_statement\")
			int alt211=3;
			switch ( input.LA(1) ) {
			case WHILE_LOOP:
				{
				alt211=1;
				}
				break;
			case FOR_LOOP:
				{
				alt211=2;
				}
				break;
			case LOOP_VK:
				{
				alt211=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 211, 0, input);
				throw nvae;
			}
			switch (alt211) {
				case 1 :
					// PLSQLPrinter.g:970:10: ^( WHILE_LOOP ( label_name )* expression seq_of_statements )
					{
					match(input,WHILE_LOOP,FOLLOW_WHILE_LOOP_in_loop_statement8988); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:970:23: ( label_name )*
					loop208:
					while (true) {
						int alt208=2;
						int LA208_0 = input.LA(1);
						if ( (LA208_0==LABEL_NAME) ) {
							alt208=1;
						}

						switch (alt208) {
						case 1 :
							// PLSQLPrinter.g:970:23: label_name
							{
							pushFollow(FOLLOW_label_name_in_loop_statement8990);
							label_name();
							state._fsp--;

							}
							break;

						default :
							break loop208;
						}
					}

					pushFollow(FOLLOW_expression_in_loop_statement8993);
					expression();
					state._fsp--;

					pushFollow(FOLLOW_seq_of_statements_in_loop_statement8995);
					seq_of_statements();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 971:5: -> template( \"not implemented: loop_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: loop_statement");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:972:10: ^( FOR_LOOP ( label_name )* cursor_loop_param seq_of_statements )
					{
					match(input,FOR_LOOP,FOLLOW_FOR_LOOP_in_loop_statement9022); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:972:21: ( label_name )*
					loop209:
					while (true) {
						int alt209=2;
						int LA209_0 = input.LA(1);
						if ( (LA209_0==LABEL_NAME) ) {
							alt209=1;
						}

						switch (alt209) {
						case 1 :
							// PLSQLPrinter.g:972:21: label_name
							{
							pushFollow(FOLLOW_label_name_in_loop_statement9024);
							label_name();
							state._fsp--;

							}
							break;

						default :
							break loop209;
						}
					}

					pushFollow(FOLLOW_cursor_loop_param_in_loop_statement9027);
					cursor_loop_param();
					state._fsp--;

					pushFollow(FOLLOW_seq_of_statements_in_loop_statement9029);
					seq_of_statements();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 973:5: -> template( \"not implemented: loop_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: loop_statement");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:974:10: ^( LOOP_VK ( label_name )* seq_of_statements )
					{
					match(input,LOOP_VK,FOLLOW_LOOP_VK_in_loop_statement9056); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:974:20: ( label_name )*
					loop210:
					while (true) {
						int alt210=2;
						int LA210_0 = input.LA(1);
						if ( (LA210_0==LABEL_NAME) ) {
							alt210=1;
						}

						switch (alt210) {
						case 1 :
							// PLSQLPrinter.g:974:20: label_name
							{
							pushFollow(FOLLOW_label_name_in_loop_statement9058);
							label_name();
							state._fsp--;

							}
							break;

						default :
							break loop210;
						}
					}

					pushFollow(FOLLOW_seq_of_statements_in_loop_statement9061);
					seq_of_statements();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 975:5: -> template( \"not implemented: loop_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: loop_statement");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "loop_statement"


	public static class cursor_loop_param_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "cursor_loop_param"
	// PLSQLPrinter.g:980:1: cursor_loop_param : ( ^( INDEXED_FOR index_name ( REVERSE_VK )? ^( SIMPLE_BOUND expression expression ) ) -> template( \"not implemented: cursor_loop_param\"| ^( CURSOR_BASED_FOR record_name cursor_name ( expression_list )? ) -> template( \"not implemented: cursor_loop_param\"| ^( SELECT_BASED_FOR record_name select_statement ) -> template( \"not implemented: cursor_loop_param\");
	public final PLSQLPrinter.cursor_loop_param_return cursor_loop_param() throws RecognitionException {
		PLSQLPrinter.cursor_loop_param_return retval = new PLSQLPrinter.cursor_loop_param_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:981:5: ( ^( INDEXED_FOR index_name ( REVERSE_VK )? ^( SIMPLE_BOUND expression expression ) ) -> template( \"not implemented: cursor_loop_param\"| ^( CURSOR_BASED_FOR record_name cursor_name ( expression_list )? ) -> template( \"not implemented: cursor_loop_param\"| ^( SELECT_BASED_FOR record_name select_statement ) -> template( \"not implemented: cursor_loop_param\")
			int alt214=3;
			switch ( input.LA(1) ) {
			case INDEXED_FOR:
				{
				alt214=1;
				}
				break;
			case CURSOR_BASED_FOR:
				{
				alt214=2;
				}
				break;
			case SELECT_BASED_FOR:
				{
				alt214=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 214, 0, input);
				throw nvae;
			}
			switch (alt214) {
				case 1 :
					// PLSQLPrinter.g:981:10: ^( INDEXED_FOR index_name ( REVERSE_VK )? ^( SIMPLE_BOUND expression expression ) )
					{
					match(input,INDEXED_FOR,FOLLOW_INDEXED_FOR_in_cursor_loop_param9099); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_index_name_in_cursor_loop_param9101);
					index_name();
					state._fsp--;

					// PLSQLPrinter.g:981:35: ( REVERSE_VK )?
					int alt212=2;
					int LA212_0 = input.LA(1);
					if ( (LA212_0==REVERSE_VK) ) {
						alt212=1;
					}
					switch (alt212) {
						case 1 :
							// PLSQLPrinter.g:981:35: REVERSE_VK
							{
							match(input,REVERSE_VK,FOLLOW_REVERSE_VK_in_cursor_loop_param9103); 
							}
							break;

					}

					match(input,SIMPLE_BOUND,FOLLOW_SIMPLE_BOUND_in_cursor_loop_param9107); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_cursor_loop_param9109);
					expression();
					state._fsp--;

					pushFollow(FOLLOW_expression_in_cursor_loop_param9111);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 982:5: -> template( \"not implemented: cursor_loop_param\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: cursor_loop_param");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:983:10: ^( CURSOR_BASED_FOR record_name cursor_name ( expression_list )? )
					{
					match(input,CURSOR_BASED_FOR,FOLLOW_CURSOR_BASED_FOR_in_cursor_loop_param9139); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_record_name_in_cursor_loop_param9141);
					record_name();
					state._fsp--;

					pushFollow(FOLLOW_cursor_name_in_cursor_loop_param9143);
					cursor_name();
					state._fsp--;

					// PLSQLPrinter.g:983:53: ( expression_list )?
					int alt213=2;
					int LA213_0 = input.LA(1);
					if ( (LA213_0==EXPR_LIST) ) {
						alt213=1;
					}
					switch (alt213) {
						case 1 :
							// PLSQLPrinter.g:983:53: expression_list
							{
							pushFollow(FOLLOW_expression_list_in_cursor_loop_param9145);
							expression_list();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 984:5: -> template( \"not implemented: cursor_loop_param\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: cursor_loop_param");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:985:10: ^( SELECT_BASED_FOR record_name select_statement )
					{
					match(input,SELECT_BASED_FOR,FOLLOW_SELECT_BASED_FOR_in_cursor_loop_param9173); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_record_name_in_cursor_loop_param9175);
					record_name();
					state._fsp--;

					pushFollow(FOLLOW_select_statement_in_cursor_loop_param9177);
					select_statement();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 986:5: -> template( \"not implemented: cursor_loop_param\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: cursor_loop_param");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cursor_loop_param"


	public static class forall_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "forall_statement"
	// PLSQLPrinter.g:991:1: forall_statement : ^( FORALL_VK index_name bounds_clause sql_statement ( EXCEPTIONS_VK )? ) -> template( \"not implemented: forall_statement\";
	public final PLSQLPrinter.forall_statement_return forall_statement() throws RecognitionException {
		PLSQLPrinter.forall_statement_return retval = new PLSQLPrinter.forall_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:992:5: ( ^( FORALL_VK index_name bounds_clause sql_statement ( EXCEPTIONS_VK )? ) -> template( \"not implemented: forall_statement\")
			// PLSQLPrinter.g:992:10: ^( FORALL_VK index_name bounds_clause sql_statement ( EXCEPTIONS_VK )? )
			{
			match(input,FORALL_VK,FOLLOW_FORALL_VK_in_forall_statement9215); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_index_name_in_forall_statement9217);
			index_name();
			state._fsp--;

			pushFollow(FOLLOW_bounds_clause_in_forall_statement9219);
			bounds_clause();
			state._fsp--;

			pushFollow(FOLLOW_sql_statement_in_forall_statement9221);
			sql_statement();
			state._fsp--;

			// PLSQLPrinter.g:992:61: ( EXCEPTIONS_VK )?
			int alt215=2;
			int LA215_0 = input.LA(1);
			if ( (LA215_0==EXCEPTIONS_VK) ) {
				alt215=1;
			}
			switch (alt215) {
				case 1 :
					// PLSQLPrinter.g:992:61: EXCEPTIONS_VK
					{
					match(input,EXCEPTIONS_VK,FOLLOW_EXCEPTIONS_VK_in_forall_statement9223); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 993:5: -> template( \"not implemented: forall_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: forall_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "forall_statement"


	public static class bounds_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "bounds_clause"
	// PLSQLPrinter.g:996:1: bounds_clause : ( ^( SIMPLE_BOUND expression expression ) -> template( \"not implemented: bounds_clause\"| ^( INDICES_BOUND collection_name ( between_bound )? ) -> template( \"not implemented: bounds_clause\"| ^( VALUES_BOUND index_name ) -> template( \"not implemented: bounds_clause\");
	public final PLSQLPrinter.bounds_clause_return bounds_clause() throws RecognitionException {
		PLSQLPrinter.bounds_clause_return retval = new PLSQLPrinter.bounds_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:997:5: ( ^( SIMPLE_BOUND expression expression ) -> template( \"not implemented: bounds_clause\"| ^( INDICES_BOUND collection_name ( between_bound )? ) -> template( \"not implemented: bounds_clause\"| ^( VALUES_BOUND index_name ) -> template( \"not implemented: bounds_clause\")
			int alt217=3;
			switch ( input.LA(1) ) {
			case SIMPLE_BOUND:
				{
				alt217=1;
				}
				break;
			case INDICES_BOUND:
				{
				alt217=2;
				}
				break;
			case VALUES_BOUND:
				{
				alt217=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 217, 0, input);
				throw nvae;
			}
			switch (alt217) {
				case 1 :
					// PLSQLPrinter.g:997:10: ^( SIMPLE_BOUND expression expression )
					{
					match(input,SIMPLE_BOUND,FOLLOW_SIMPLE_BOUND_in_bounds_clause9260); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_bounds_clause9262);
					expression();
					state._fsp--;

					pushFollow(FOLLOW_expression_in_bounds_clause9264);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 998:5: -> template( \"not implemented: bounds_clause\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: bounds_clause");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:999:10: ^( INDICES_BOUND collection_name ( between_bound )? )
					{
					match(input,INDICES_BOUND,FOLLOW_INDICES_BOUND_in_bounds_clause9291); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_collection_name_in_bounds_clause9293);
					collection_name();
					state._fsp--;

					// PLSQLPrinter.g:999:42: ( between_bound )?
					int alt216=2;
					int LA216_0 = input.LA(1);
					if ( (LA216_0==SQL92_RESERVED_BETWEEN) ) {
						alt216=1;
					}
					switch (alt216) {
						case 1 :
							// PLSQLPrinter.g:999:42: between_bound
							{
							pushFollow(FOLLOW_between_bound_in_bounds_clause9295);
							between_bound();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1000:5: -> template( \"not implemented: bounds_clause\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: bounds_clause");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1001:10: ^( VALUES_BOUND index_name )
					{
					match(input,VALUES_BOUND,FOLLOW_VALUES_BOUND_in_bounds_clause9323); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_index_name_in_bounds_clause9325);
					index_name();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1002:5: -> template( \"not implemented: bounds_clause\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: bounds_clause");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "bounds_clause"


	public static class between_bound_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "between_bound"
	// PLSQLPrinter.g:1005:1: between_bound : ^( SQL92_RESERVED_BETWEEN expression expression ) -> template( \"not implemented: between_bound\";
	public final PLSQLPrinter.between_bound_return between_bound() throws RecognitionException {
		PLSQLPrinter.between_bound_return retval = new PLSQLPrinter.between_bound_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1006:5: ( ^( SQL92_RESERVED_BETWEEN expression expression ) -> template( \"not implemented: between_bound\")
			// PLSQLPrinter.g:1006:10: ^( SQL92_RESERVED_BETWEEN expression expression )
			{
			match(input,SQL92_RESERVED_BETWEEN,FOLLOW_SQL92_RESERVED_BETWEEN_in_between_bound9362); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_between_bound9364);
			expression();
			state._fsp--;

			pushFollow(FOLLOW_expression_in_between_bound9366);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1007:5: -> template( \"not implemented: between_bound\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: between_bound");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "between_bound"


	public static class null_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "null_statement"
	// PLSQLPrinter.g:1010:1: null_statement : SQL92_RESERVED_NULL -> template( \"not implemented: null_statement\";
	public final PLSQLPrinter.null_statement_return null_statement() throws RecognitionException {
		PLSQLPrinter.null_statement_return retval = new PLSQLPrinter.null_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1011:5: ( SQL92_RESERVED_NULL -> template( \"not implemented: null_statement\")
			// PLSQLPrinter.g:1011:10: SQL92_RESERVED_NULL
			{
			match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_null_statement9401); 
			// TEMPLATE REWRITE
			// 1012:5: -> template( \"not implemented: null_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: null_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "null_statement"


	public static class raise_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "raise_statement"
	// PLSQLPrinter.g:1015:1: raise_statement : ^( RAISE_VK ( exception_name )? ) -> template( \"not implemented: raise_statement\";
	public final PLSQLPrinter.raise_statement_return raise_statement() throws RecognitionException {
		PLSQLPrinter.raise_statement_return retval = new PLSQLPrinter.raise_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1016:5: ( ^( RAISE_VK ( exception_name )? ) -> template( \"not implemented: raise_statement\")
			// PLSQLPrinter.g:1016:10: ^( RAISE_VK ( exception_name )? )
			{
			match(input,RAISE_VK,FOLLOW_RAISE_VK_in_raise_statement9436); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1016:21: ( exception_name )?
				int alt218=2;
				int LA218_0 = input.LA(1);
				if ( (LA218_0==EXCEPTION_NAME) ) {
					alt218=1;
				}
				switch (alt218) {
					case 1 :
						// PLSQLPrinter.g:1016:21: exception_name
						{
						pushFollow(FOLLOW_exception_name_in_raise_statement9438);
						exception_name();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1017:5: -> template( \"not implemented: raise_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: raise_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "raise_statement"


	public static class return_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "return_statement"
	// PLSQLPrinter.g:1020:1: return_statement : ^( RETURN_VK ( expression )? ) -> template( \"not implemented: return_statement\";
	public final PLSQLPrinter.return_statement_return return_statement() throws RecognitionException {
		PLSQLPrinter.return_statement_return retval = new PLSQLPrinter.return_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1021:5: ( ^( RETURN_VK ( expression )? ) -> template( \"not implemented: return_statement\")
			// PLSQLPrinter.g:1021:10: ^( RETURN_VK ( expression )? )
			{
			match(input,RETURN_VK,FOLLOW_RETURN_VK_in_return_statement9475); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1021:22: ( expression )?
				int alt219=2;
				int LA219_0 = input.LA(1);
				if ( (LA219_0==EXPR||LA219_0==LOGIC_EXPR) ) {
					alt219=1;
				}
				switch (alt219) {
					case 1 :
						// PLSQLPrinter.g:1021:22: expression
						{
						pushFollow(FOLLOW_expression_in_return_statement9477);
						expression();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1022:5: -> template( \"not implemented: return_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: return_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "return_statement"


	public static class body_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "body"
	// PLSQLPrinter.g:1025:1: body : ^( BODY ( label_name )? seq_of_statements ( exception_clause )? ) -> body(bodyLabel=$label_name.ststatements=$seq_of_statements.stexception_clause=$exception_clause.st);
	public final PLSQLPrinter.body_return body() throws RecognitionException {
		PLSQLPrinter.body_return retval = new PLSQLPrinter.body_return();
		retval.start = input.LT(1);

		TreeRuleReturnScope label_name27 =null;
		TreeRuleReturnScope seq_of_statements28 =null;
		TreeRuleReturnScope exception_clause29 =null;

		try {
			// PLSQLPrinter.g:1026:5: ( ^( BODY ( label_name )? seq_of_statements ( exception_clause )? ) -> body(bodyLabel=$label_name.ststatements=$seq_of_statements.stexception_clause=$exception_clause.st))
			// PLSQLPrinter.g:1026:10: ^( BODY ( label_name )? seq_of_statements ( exception_clause )? )
			{
			match(input,BODY,FOLLOW_BODY_in_body9514); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1026:17: ( label_name )?
			int alt220=2;
			int LA220_0 = input.LA(1);
			if ( (LA220_0==LABEL_NAME) ) {
				alt220=1;
			}
			switch (alt220) {
				case 1 :
					// PLSQLPrinter.g:1026:17: label_name
					{
					pushFollow(FOLLOW_label_name_in_body9516);
					label_name27=label_name();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_seq_of_statements_in_body9519);
			seq_of_statements28=seq_of_statements();
			state._fsp--;

			// PLSQLPrinter.g:1026:47: ( exception_clause )?
			int alt221=2;
			int LA221_0 = input.LA(1);
			if ( (LA221_0==SQL92_RESERVED_EXCEPTION) ) {
				alt221=1;
			}
			switch (alt221) {
				case 1 :
					// PLSQLPrinter.g:1026:47: exception_clause
					{
					pushFollow(FOLLOW_exception_clause_in_body9521);
					exception_clause29=exception_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1027:5: -> body(bodyLabel=$label_name.ststatements=$seq_of_statements.stexception_clause=$exception_clause.st)
			{
				retval.st = templateLib.getInstanceOf("body",new STAttrMap().put("bodyLabel", (label_name27!=null?((StringTemplate)label_name27.getTemplate()):null)).put("statements", (seq_of_statements28!=null?((StringTemplate)seq_of_statements28.getTemplate()):null)).put("exception_clause", (exception_clause29!=null?((StringTemplate)exception_clause29.getTemplate()):null)));
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "body"


	public static class exception_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "exception_clause"
	// PLSQLPrinter.g:1032:1: exception_clause : ^( SQL92_RESERVED_EXCEPTION ( exception_handler )+ ) -> template( \"not implemented: exception_clause\";
	public final PLSQLPrinter.exception_clause_return exception_clause() throws RecognitionException {
		PLSQLPrinter.exception_clause_return retval = new PLSQLPrinter.exception_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1033:5: ( ^( SQL92_RESERVED_EXCEPTION ( exception_handler )+ ) -> template( \"not implemented: exception_clause\")
			// PLSQLPrinter.g:1033:10: ^( SQL92_RESERVED_EXCEPTION ( exception_handler )+ )
			{
			match(input,SQL92_RESERVED_EXCEPTION,FOLLOW_SQL92_RESERVED_EXCEPTION_in_exception_clause9572); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1033:37: ( exception_handler )+
			int cnt222=0;
			loop222:
			while (true) {
				int alt222=2;
				int LA222_0 = input.LA(1);
				if ( (LA222_0==SQL92_RESERVED_WHEN) ) {
					alt222=1;
				}

				switch (alt222) {
				case 1 :
					// PLSQLPrinter.g:1033:37: exception_handler
					{
					pushFollow(FOLLOW_exception_handler_in_exception_clause9574);
					exception_handler();
					state._fsp--;

					}
					break;

				default :
					if ( cnt222 >= 1 ) break loop222;
					EarlyExitException eee = new EarlyExitException(222, input);
					throw eee;
				}
				cnt222++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1034:5: -> template( \"not implemented: exception_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: exception_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exception_clause"


	public static class exception_handler_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "exception_handler"
	// PLSQLPrinter.g:1037:1: exception_handler : ^( SQL92_RESERVED_WHEN ( exception_name )+ seq_of_statements ) -> template( \"not implemented: exception_handler\";
	public final PLSQLPrinter.exception_handler_return exception_handler() throws RecognitionException {
		PLSQLPrinter.exception_handler_return retval = new PLSQLPrinter.exception_handler_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1038:5: ( ^( SQL92_RESERVED_WHEN ( exception_name )+ seq_of_statements ) -> template( \"not implemented: exception_handler\")
			// PLSQLPrinter.g:1038:10: ^( SQL92_RESERVED_WHEN ( exception_name )+ seq_of_statements )
			{
			match(input,SQL92_RESERVED_WHEN,FOLLOW_SQL92_RESERVED_WHEN_in_exception_handler9611); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1038:32: ( exception_name )+
			int cnt223=0;
			loop223:
			while (true) {
				int alt223=2;
				int LA223_0 = input.LA(1);
				if ( (LA223_0==EXCEPTION_NAME) ) {
					alt223=1;
				}

				switch (alt223) {
				case 1 :
					// PLSQLPrinter.g:1038:32: exception_name
					{
					pushFollow(FOLLOW_exception_name_in_exception_handler9613);
					exception_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt223 >= 1 ) break loop223;
					EarlyExitException eee = new EarlyExitException(223, input);
					throw eee;
				}
				cnt223++;
			}

			pushFollow(FOLLOW_seq_of_statements_in_exception_handler9616);
			seq_of_statements();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1039:5: -> template( \"not implemented: exception_handler\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: exception_handler");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exception_handler"


	public static class block_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "block"
	// PLSQLPrinter.g:1044:1: block : ^( BLOCK ( declare_spec )* body ) -> template( \"not implemented: block\";
	public final PLSQLPrinter.block_return block() throws RecognitionException {
		PLSQLPrinter.block_return retval = new PLSQLPrinter.block_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1045:5: ( ^( BLOCK ( declare_spec )* body ) -> template( \"not implemented: block\")
			// PLSQLPrinter.g:1045:10: ^( BLOCK ( declare_spec )* body )
			{
			match(input,BLOCK,FOLLOW_BLOCK_in_block9654); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1045:18: ( declare_spec )*
			loop224:
			while (true) {
				int alt224=2;
				int LA224_0 = input.LA(1);
				if ( (LA224_0==CREATE_FUNCTION||LA224_0==CREATE_PROCEDURE||(LA224_0 >= CREATE_TYPE_BODY && LA224_0 <= CREATE_TYPE_SPEC)||LA224_0==CURSOR_DECLARE||LA224_0==EXCEPTION_DECLARE||LA224_0==PRAGMA_DECLARE||(LA224_0 >= RECORD_TYPE_DECLARE && LA224_0 <= RECORD_VAR_DECLARE)||LA224_0==SUBTYPE_DECLARE||(LA224_0 >= TABLE_TYPE_DECLARE && LA224_0 <= TABLE_VAR_DECLARE)||LA224_0==VARIABLE_DECLARE) ) {
					alt224=1;
				}

				switch (alt224) {
				case 1 :
					// PLSQLPrinter.g:1045:18: declare_spec
					{
					pushFollow(FOLLOW_declare_spec_in_block9656);
					declare_spec();
					state._fsp--;

					}
					break;

				default :
					break loop224;
				}
			}

			pushFollow(FOLLOW_body_in_block9659);
			body();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1046:5: -> template( \"not implemented: block\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: block");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "block"


	public static class sql_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "sql_statement"
	// PLSQLPrinter.g:1053:1: sql_statement : ( execute_immediate -> template( \"not implemented: sql_statement\"| data_manipulation_language_statements -> template( \"not implemented: sql_statement\"| cursor_manipulation_statements -> template( \"not implemented: sql_statement\"| transaction_control_statements -> template( \"not implemented: sql_statement\");
	public final PLSQLPrinter.sql_statement_return sql_statement() throws RecognitionException {
		PLSQLPrinter.sql_statement_return retval = new PLSQLPrinter.sql_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1054:5: ( execute_immediate -> template( \"not implemented: sql_statement\"| data_manipulation_language_statements -> template( \"not implemented: sql_statement\"| cursor_manipulation_statements -> template( \"not implemented: sql_statement\"| transaction_control_statements -> template( \"not implemented: sql_statement\")
			int alt225=4;
			switch ( input.LA(1) ) {
			case EXECUTE_VK:
				{
				alt225=1;
				}
				break;
			case PLSQL_RESERVED_LOCK:
			case SQL92_RESERVED_DELETE:
			case SQL92_RESERVED_INSERT:
			case SQL92_RESERVED_UPDATE:
			case MERGE_VK:
			case SELECT_STATEMENT:
				{
				alt225=2;
				}
				break;
			case SQL92_RESERVED_FETCH:
			case CLOSE_VK:
			case OPEN_VK:
				{
				alt225=3;
				}
				break;
			case COMMIT_VK:
			case ROLLBACK_VK:
			case SAVEPOINT_VK:
			case SET_CONSTRAINT:
			case SET_TRANSACTION:
				{
				alt225=4;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 225, 0, input);
				throw nvae;
			}
			switch (alt225) {
				case 1 :
					// PLSQLPrinter.g:1054:10: execute_immediate
					{
					pushFollow(FOLLOW_execute_immediate_in_sql_statement9698);
					execute_immediate();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1055:5: -> template( \"not implemented: sql_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sql_statement");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1056:10: data_manipulation_language_statements
					{
					pushFollow(FOLLOW_data_manipulation_language_statements_in_sql_statement9723);
					data_manipulation_language_statements();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1057:5: -> template( \"not implemented: sql_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sql_statement");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1058:10: cursor_manipulation_statements
					{
					pushFollow(FOLLOW_cursor_manipulation_statements_in_sql_statement9748);
					cursor_manipulation_statements();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1059:5: -> template( \"not implemented: sql_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sql_statement");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1060:10: transaction_control_statements
					{
					pushFollow(FOLLOW_transaction_control_statements_in_sql_statement9773);
					transaction_control_statements();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1061:5: -> template( \"not implemented: sql_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: sql_statement");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sql_statement"


	public static class execute_immediate_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "execute_immediate"
	// PLSQLPrinter.g:1064:1: execute_immediate : ^( EXECUTE_VK expression ( into_clause ( using_clause )? | using_clause ( dynamic_returning_clause )? | dynamic_returning_clause )? ) -> template( \"not implemented: execute_immediate\";
	public final PLSQLPrinter.execute_immediate_return execute_immediate() throws RecognitionException {
		PLSQLPrinter.execute_immediate_return retval = new PLSQLPrinter.execute_immediate_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1065:5: ( ^( EXECUTE_VK expression ( into_clause ( using_clause )? | using_clause ( dynamic_returning_clause )? | dynamic_returning_clause )? ) -> template( \"not implemented: execute_immediate\")
			// PLSQLPrinter.g:1065:10: ^( EXECUTE_VK expression ( into_clause ( using_clause )? | using_clause ( dynamic_returning_clause )? | dynamic_returning_clause )? )
			{
			match(input,EXECUTE_VK,FOLLOW_EXECUTE_VK_in_execute_immediate9808); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_execute_immediate9810);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:1066:11: ( into_clause ( using_clause )? | using_clause ( dynamic_returning_clause )? | dynamic_returning_clause )?
			int alt228=4;
			switch ( input.LA(1) ) {
				case SQL92_RESERVED_INTO:
				case BULK_VK:
					{
					alt228=1;
					}
					break;
				case PLSQL_NON_RESERVED_USING:
					{
					alt228=2;
					}
					break;
				case DYNAMIC_RETURN:
					{
					alt228=3;
					}
					break;
			}
			switch (alt228) {
				case 1 :
					// PLSQLPrinter.g:1066:16: into_clause ( using_clause )?
					{
					pushFollow(FOLLOW_into_clause_in_execute_immediate9827);
					into_clause();
					state._fsp--;

					// PLSQLPrinter.g:1066:28: ( using_clause )?
					int alt226=2;
					int LA226_0 = input.LA(1);
					if ( (LA226_0==PLSQL_NON_RESERVED_USING) ) {
						alt226=1;
					}
					switch (alt226) {
						case 1 :
							// PLSQLPrinter.g:1066:28: using_clause
							{
							pushFollow(FOLLOW_using_clause_in_execute_immediate9829);
							using_clause();
							state._fsp--;

							}
							break;

					}

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1067:16: using_clause ( dynamic_returning_clause )?
					{
					pushFollow(FOLLOW_using_clause_in_execute_immediate9847);
					using_clause();
					state._fsp--;

					// PLSQLPrinter.g:1067:29: ( dynamic_returning_clause )?
					int alt227=2;
					int LA227_0 = input.LA(1);
					if ( (LA227_0==DYNAMIC_RETURN) ) {
						alt227=1;
					}
					switch (alt227) {
						case 1 :
							// PLSQLPrinter.g:1067:29: dynamic_returning_clause
							{
							pushFollow(FOLLOW_dynamic_returning_clause_in_execute_immediate9849);
							dynamic_returning_clause();
							state._fsp--;

							}
							break;

					}

					}
					break;
				case 3 :
					// PLSQLPrinter.g:1068:16: dynamic_returning_clause
					{
					pushFollow(FOLLOW_dynamic_returning_clause_in_execute_immediate9867);
					dynamic_returning_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1071:5: -> template( \"not implemented: execute_immediate\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: execute_immediate");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "execute_immediate"


	public static class dynamic_returning_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "dynamic_returning_clause"
	// PLSQLPrinter.g:1075:1: dynamic_returning_clause : ^( DYNAMIC_RETURN into_clause ) -> template( \"not implemented: dynamic_returning_clause\";
	public final PLSQLPrinter.dynamic_returning_clause_return dynamic_returning_clause() throws RecognitionException {
		PLSQLPrinter.dynamic_returning_clause_return retval = new PLSQLPrinter.dynamic_returning_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1076:5: ( ^( DYNAMIC_RETURN into_clause ) -> template( \"not implemented: dynamic_returning_clause\")
			// PLSQLPrinter.g:1076:10: ^( DYNAMIC_RETURN into_clause )
			{
			match(input,DYNAMIC_RETURN,FOLLOW_DYNAMIC_RETURN_in_dynamic_returning_clause9926); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_into_clause_in_dynamic_returning_clause9928);
			into_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1077:5: -> template( \"not implemented: dynamic_returning_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: dynamic_returning_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dynamic_returning_clause"


	public static class data_manipulation_language_statements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "data_manipulation_language_statements"
	// PLSQLPrinter.g:1084:1: data_manipulation_language_statements : ( merge_statement -> template( \"not implemented: data_manipulation_language_statements\"| lock_table_statement -> template( \"not implemented: data_manipulation_language_statements\"| select_statement -> template( \"not implemented: data_manipulation_language_statements\"| update_statement -> template( \"not implemented: data_manipulation_language_statements\"| delete_statement -> template( \"not implemented: data_manipulation_language_statements\"| insert_statement -> template( \"not implemented: data_manipulation_language_statements\");
	public final PLSQLPrinter.data_manipulation_language_statements_return data_manipulation_language_statements() throws RecognitionException {
		PLSQLPrinter.data_manipulation_language_statements_return retval = new PLSQLPrinter.data_manipulation_language_statements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1085:5: ( merge_statement -> template( \"not implemented: data_manipulation_language_statements\"| lock_table_statement -> template( \"not implemented: data_manipulation_language_statements\"| select_statement -> template( \"not implemented: data_manipulation_language_statements\"| update_statement -> template( \"not implemented: data_manipulation_language_statements\"| delete_statement -> template( \"not implemented: data_manipulation_language_statements\"| insert_statement -> template( \"not implemented: data_manipulation_language_statements\")
			int alt229=6;
			switch ( input.LA(1) ) {
			case MERGE_VK:
				{
				alt229=1;
				}
				break;
			case PLSQL_RESERVED_LOCK:
				{
				alt229=2;
				}
				break;
			case SELECT_STATEMENT:
				{
				alt229=3;
				}
				break;
			case SQL92_RESERVED_UPDATE:
				{
				alt229=4;
				}
				break;
			case SQL92_RESERVED_DELETE:
				{
				alt229=5;
				}
				break;
			case SQL92_RESERVED_INSERT:
				{
				alt229=6;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 229, 0, input);
				throw nvae;
			}
			switch (alt229) {
				case 1 :
					// PLSQLPrinter.g:1085:10: merge_statement
					{
					pushFollow(FOLLOW_merge_statement_in_data_manipulation_language_statements9967);
					merge_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1086:5: -> template( \"not implemented: data_manipulation_language_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: data_manipulation_language_statements");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1087:10: lock_table_statement
					{
					pushFollow(FOLLOW_lock_table_statement_in_data_manipulation_language_statements9992);
					lock_table_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1088:5: -> template( \"not implemented: data_manipulation_language_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: data_manipulation_language_statements");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1089:10: select_statement
					{
					pushFollow(FOLLOW_select_statement_in_data_manipulation_language_statements10017);
					select_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1090:5: -> template( \"not implemented: data_manipulation_language_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: data_manipulation_language_statements");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1091:11: update_statement
					{
					pushFollow(FOLLOW_update_statement_in_data_manipulation_language_statements10043);
					update_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1092:5: -> template( \"not implemented: data_manipulation_language_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: data_manipulation_language_statements");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:1093:11: delete_statement
					{
					pushFollow(FOLLOW_delete_statement_in_data_manipulation_language_statements10069);
					delete_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1094:5: -> template( \"not implemented: data_manipulation_language_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: data_manipulation_language_statements");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:1095:10: insert_statement
					{
					pushFollow(FOLLOW_insert_statement_in_data_manipulation_language_statements10094);
					insert_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1096:5: -> template( \"not implemented: data_manipulation_language_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: data_manipulation_language_statements");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "data_manipulation_language_statements"


	public static class select_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "select_statement"
	// PLSQLPrinter.g:1099:1: select_statement : ^( SELECT_STATEMENT ( subquery_factoring_clause )? subquery ( for_update_clause )* ( order_by_clause )* ) -> template( \"not implemented: select_statement\";
	public final PLSQLPrinter.select_statement_return select_statement() throws RecognitionException {
		PLSQLPrinter.select_statement_return retval = new PLSQLPrinter.select_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1100:5: ( ^( SELECT_STATEMENT ( subquery_factoring_clause )? subquery ( for_update_clause )* ( order_by_clause )* ) -> template( \"not implemented: select_statement\")
			// PLSQLPrinter.g:1100:10: ^( SELECT_STATEMENT ( subquery_factoring_clause )? subquery ( for_update_clause )* ( order_by_clause )* )
			{
			match(input,SELECT_STATEMENT,FOLLOW_SELECT_STATEMENT_in_select_statement10129); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1100:29: ( subquery_factoring_clause )?
			int alt230=2;
			int LA230_0 = input.LA(1);
			if ( (LA230_0==SQL92_RESERVED_WITH) ) {
				alt230=1;
			}
			switch (alt230) {
				case 1 :
					// PLSQLPrinter.g:1100:29: subquery_factoring_clause
					{
					pushFollow(FOLLOW_subquery_factoring_clause_in_select_statement10131);
					subquery_factoring_clause();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_subquery_in_select_statement10134);
			subquery();
			state._fsp--;

			// PLSQLPrinter.g:1100:65: ( for_update_clause )*
			loop231:
			while (true) {
				int alt231=2;
				int LA231_0 = input.LA(1);
				if ( (LA231_0==SQL92_RESERVED_FOR) ) {
					alt231=1;
				}

				switch (alt231) {
				case 1 :
					// PLSQLPrinter.g:1100:65: for_update_clause
					{
					pushFollow(FOLLOW_for_update_clause_in_select_statement10136);
					for_update_clause();
					state._fsp--;

					}
					break;

				default :
					break loop231;
				}
			}

			// PLSQLPrinter.g:1100:84: ( order_by_clause )*
			loop232:
			while (true) {
				int alt232=2;
				int LA232_0 = input.LA(1);
				if ( (LA232_0==SQL92_RESERVED_ORDER) ) {
					alt232=1;
				}

				switch (alt232) {
				case 1 :
					// PLSQLPrinter.g:1100:84: order_by_clause
					{
					pushFollow(FOLLOW_order_by_clause_in_select_statement10139);
					order_by_clause();
					state._fsp--;

					}
					break;

				default :
					break loop232;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1101:5: -> template( \"not implemented: select_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: select_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "select_statement"


	public static class subquery_factoring_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subquery_factoring_clause"
	// PLSQLPrinter.g:1105:1: subquery_factoring_clause : ^( SQL92_RESERVED_WITH ( factoring_element )+ ) -> template( \"not implemented: subquery_factoring_clause\";
	public final PLSQLPrinter.subquery_factoring_clause_return subquery_factoring_clause() throws RecognitionException {
		PLSQLPrinter.subquery_factoring_clause_return retval = new PLSQLPrinter.subquery_factoring_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1106:5: ( ^( SQL92_RESERVED_WITH ( factoring_element )+ ) -> template( \"not implemented: subquery_factoring_clause\")
			// PLSQLPrinter.g:1106:10: ^( SQL92_RESERVED_WITH ( factoring_element )+ )
			{
			match(input,SQL92_RESERVED_WITH,FOLLOW_SQL92_RESERVED_WITH_in_subquery_factoring_clause10179); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1106:32: ( factoring_element )+
			int cnt233=0;
			loop233:
			while (true) {
				int alt233=2;
				int LA233_0 = input.LA(1);
				if ( (LA233_0==FACTORING) ) {
					alt233=1;
				}

				switch (alt233) {
				case 1 :
					// PLSQLPrinter.g:1106:32: factoring_element
					{
					pushFollow(FOLLOW_factoring_element_in_subquery_factoring_clause10181);
					factoring_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt233 >= 1 ) break loop233;
					EarlyExitException eee = new EarlyExitException(233, input);
					throw eee;
				}
				cnt233++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1107:5: -> template( \"not implemented: subquery_factoring_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: subquery_factoring_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subquery_factoring_clause"


	public static class factoring_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "factoring_element"
	// PLSQLPrinter.g:1110:1: factoring_element : ^( FACTORING query_name subquery ) -> template( \"not implemented: factoring_element\";
	public final PLSQLPrinter.factoring_element_return factoring_element() throws RecognitionException {
		PLSQLPrinter.factoring_element_return retval = new PLSQLPrinter.factoring_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1111:5: ( ^( FACTORING query_name subquery ) -> template( \"not implemented: factoring_element\")
			// PLSQLPrinter.g:1111:10: ^( FACTORING query_name subquery )
			{
			match(input,FACTORING,FOLLOW_FACTORING_in_factoring_element10218); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_query_name_in_factoring_element10220);
			query_name();
			state._fsp--;

			pushFollow(FOLLOW_subquery_in_factoring_element10222);
			subquery();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1112:5: -> template( \"not implemented: factoring_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: factoring_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "factoring_element"


	public static class subquery_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subquery"
	// PLSQLPrinter.g:1115:1: subquery : ^( SUBQUERY subquery_basic_elements ( subquery_operation_part )* ) -> template( \"not implemented: subquery\";
	public final PLSQLPrinter.subquery_return subquery() throws RecognitionException {
		PLSQLPrinter.subquery_return retval = new PLSQLPrinter.subquery_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1116:5: ( ^( SUBQUERY subquery_basic_elements ( subquery_operation_part )* ) -> template( \"not implemented: subquery\")
			// PLSQLPrinter.g:1116:10: ^( SUBQUERY subquery_basic_elements ( subquery_operation_part )* )
			{
			match(input,SUBQUERY,FOLLOW_SUBQUERY_in_subquery10258); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_subquery_basic_elements_in_subquery10260);
			subquery_basic_elements();
			state._fsp--;

			// PLSQLPrinter.g:1116:45: ( subquery_operation_part )*
			loop234:
			while (true) {
				int alt234=2;
				int LA234_0 = input.LA(1);
				if ( (LA234_0==PLSQL_RESERVED_MINUS||LA234_0==SQL92_RESERVED_INTERSECT||LA234_0==SQL92_RESERVED_UNION) ) {
					alt234=1;
				}

				switch (alt234) {
				case 1 :
					// PLSQLPrinter.g:1116:45: subquery_operation_part
					{
					pushFollow(FOLLOW_subquery_operation_part_in_subquery10262);
					subquery_operation_part();
					state._fsp--;

					}
					break;

				default :
					break loop234;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1117:5: -> template( \"not implemented: subquery\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: subquery");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subquery"


	public static class subquery_operation_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subquery_operation_part"
	// PLSQLPrinter.g:1120:1: subquery_operation_part : ^( ( SQL92_RESERVED_UNION | SQL92_RESERVED_INTERSECT | PLSQL_RESERVED_MINUS ) ( SQL92_RESERVED_ALL )? subquery_basic_elements ) -> template( \"not implemented: subquery_operation_part\";
	public final PLSQLPrinter.subquery_operation_part_return subquery_operation_part() throws RecognitionException {
		PLSQLPrinter.subquery_operation_part_return retval = new PLSQLPrinter.subquery_operation_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1121:5: ( ^( ( SQL92_RESERVED_UNION | SQL92_RESERVED_INTERSECT | PLSQL_RESERVED_MINUS ) ( SQL92_RESERVED_ALL )? subquery_basic_elements ) -> template( \"not implemented: subquery_operation_part\")
			// PLSQLPrinter.g:1121:10: ^( ( SQL92_RESERVED_UNION | SQL92_RESERVED_INTERSECT | PLSQL_RESERVED_MINUS ) ( SQL92_RESERVED_ALL )? subquery_basic_elements )
			{
			// PLSQLPrinter.g:1121:12: ( SQL92_RESERVED_UNION | SQL92_RESERVED_INTERSECT | PLSQL_RESERVED_MINUS )
			int alt235=3;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_UNION:
				{
				alt235=1;
				}
				break;
			case SQL92_RESERVED_INTERSECT:
				{
				alt235=2;
				}
				break;
			case PLSQL_RESERVED_MINUS:
				{
				alt235=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 235, 0, input);
				throw nvae;
			}
			switch (alt235) {
				case 1 :
					// PLSQLPrinter.g:1121:13: SQL92_RESERVED_UNION
					{
					match(input,SQL92_RESERVED_UNION,FOLLOW_SQL92_RESERVED_UNION_in_subquery_operation_part10300); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1121:34: SQL92_RESERVED_INTERSECT
					{
					match(input,SQL92_RESERVED_INTERSECT,FOLLOW_SQL92_RESERVED_INTERSECT_in_subquery_operation_part10302); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:1121:59: PLSQL_RESERVED_MINUS
					{
					match(input,PLSQL_RESERVED_MINUS,FOLLOW_PLSQL_RESERVED_MINUS_in_subquery_operation_part10304); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1121:81: ( SQL92_RESERVED_ALL )?
			int alt236=2;
			int LA236_0 = input.LA(1);
			if ( (LA236_0==SQL92_RESERVED_ALL) ) {
				alt236=1;
			}
			switch (alt236) {
				case 1 :
					// PLSQLPrinter.g:1121:81: SQL92_RESERVED_ALL
					{
					match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_subquery_operation_part10307); 
					}
					break;

			}

			pushFollow(FOLLOW_subquery_basic_elements_in_subquery_operation_part10310);
			subquery_basic_elements();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1122:5: -> template( \"not implemented: subquery_operation_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: subquery_operation_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subquery_operation_part"


	public static class subquery_basic_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subquery_basic_elements"
	// PLSQLPrinter.g:1125:1: subquery_basic_elements : ( query_block -> template( \"not implemented: subquery_basic_elements\"| subquery -> template( \"not implemented: subquery_basic_elements\");
	public final PLSQLPrinter.subquery_basic_elements_return subquery_basic_elements() throws RecognitionException {
		PLSQLPrinter.subquery_basic_elements_return retval = new PLSQLPrinter.subquery_basic_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1126:5: ( query_block -> template( \"not implemented: subquery_basic_elements\"| subquery -> template( \"not implemented: subquery_basic_elements\")
			int alt237=2;
			int LA237_0 = input.LA(1);
			if ( (LA237_0==SQL92_RESERVED_SELECT) ) {
				alt237=1;
			}
			else if ( (LA237_0==SUBQUERY) ) {
				alt237=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 237, 0, input);
				throw nvae;
			}

			switch (alt237) {
				case 1 :
					// PLSQLPrinter.g:1126:10: query_block
					{
					pushFollow(FOLLOW_query_block_in_subquery_basic_elements10345);
					query_block();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1127:5: -> template( \"not implemented: subquery_basic_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: subquery_basic_elements");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1128:10: subquery
					{
					pushFollow(FOLLOW_subquery_in_subquery_basic_elements10370);
					subquery();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1129:5: -> template( \"not implemented: subquery_basic_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: subquery_basic_elements");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subquery_basic_elements"


	public static class query_block_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "query_block"
	// PLSQLPrinter.g:1132:1: query_block : ^( SQL92_RESERVED_SELECT from_clause ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )? ( SQL92_RESERVED_ALL )? ( ASTERISK | ^( SELECT_LIST ( selected_element )+ ) ) ( into_clause )? ( where_clause )? ( hierarchical_query_clause )? ( group_by_clause )? ( model_clause )? ) -> template( \"not implemented: query_block\";
	public final PLSQLPrinter.query_block_return query_block() throws RecognitionException {
		PLSQLPrinter.query_block_return retval = new PLSQLPrinter.query_block_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1133:5: ( ^( SQL92_RESERVED_SELECT from_clause ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )? ( SQL92_RESERVED_ALL )? ( ASTERISK | ^( SELECT_LIST ( selected_element )+ ) ) ( into_clause )? ( where_clause )? ( hierarchical_query_clause )? ( group_by_clause )? ( model_clause )? ) -> template( \"not implemented: query_block\")
			// PLSQLPrinter.g:1133:10: ^( SQL92_RESERVED_SELECT from_clause ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )? ( SQL92_RESERVED_ALL )? ( ASTERISK | ^( SELECT_LIST ( selected_element )+ ) ) ( into_clause )? ( where_clause )? ( hierarchical_query_clause )? ( group_by_clause )? ( model_clause )? )
			{
			match(input,SQL92_RESERVED_SELECT,FOLLOW_SQL92_RESERVED_SELECT_in_query_block10405); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_from_clause_in_query_block10420);
			from_clause();
			state._fsp--;

			// PLSQLPrinter.g:1135:13: ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )?
			int alt238=3;
			int LA238_0 = input.LA(1);
			if ( (LA238_0==SQL92_RESERVED_DISTINCT) ) {
				alt238=1;
			}
			else if ( (LA238_0==SQL92_RESERVED_UNIQUE) ) {
				alt238=2;
			}
			switch (alt238) {
				case 1 :
					// PLSQLPrinter.g:1135:14: SQL92_RESERVED_DISTINCT
					{
					match(input,SQL92_RESERVED_DISTINCT,FOLLOW_SQL92_RESERVED_DISTINCT_in_query_block10436); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1135:38: SQL92_RESERVED_UNIQUE
					{
					match(input,SQL92_RESERVED_UNIQUE,FOLLOW_SQL92_RESERVED_UNIQUE_in_query_block10438); 
					}
					break;

			}

			// PLSQLPrinter.g:1135:62: ( SQL92_RESERVED_ALL )?
			int alt239=2;
			int LA239_0 = input.LA(1);
			if ( (LA239_0==SQL92_RESERVED_ALL) ) {
				alt239=1;
			}
			switch (alt239) {
				case 1 :
					// PLSQLPrinter.g:1135:62: SQL92_RESERVED_ALL
					{
					match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_query_block10442); 
					}
					break;

			}

			// PLSQLPrinter.g:1136:13: ( ASTERISK | ^( SELECT_LIST ( selected_element )+ ) )
			int alt241=2;
			int LA241_0 = input.LA(1);
			if ( (LA241_0==ASTERISK) ) {
				alt241=1;
			}
			else if ( (LA241_0==SELECT_LIST) ) {
				alt241=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 241, 0, input);
				throw nvae;
			}

			switch (alt241) {
				case 1 :
					// PLSQLPrinter.g:1136:18: ASTERISK
					{
					match(input,ASTERISK,FOLLOW_ASTERISK_in_query_block10463); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1137:18: ^( SELECT_LIST ( selected_element )+ )
					{
					match(input,SELECT_LIST,FOLLOW_SELECT_LIST_in_query_block10483); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1137:32: ( selected_element )+
					int cnt240=0;
					loop240:
					while (true) {
						int alt240=2;
						int LA240_0 = input.LA(1);
						if ( (LA240_0==SELECT_ITEM) ) {
							alt240=1;
						}

						switch (alt240) {
						case 1 :
							// PLSQLPrinter.g:1137:32: selected_element
							{
							pushFollow(FOLLOW_selected_element_in_query_block10485);
							selected_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt240 >= 1 ) break loop240;
							EarlyExitException eee = new EarlyExitException(240, input);
							throw eee;
						}
						cnt240++;
					}

					match(input, Token.UP, null); 

					}
					break;

			}

			// PLSQLPrinter.g:1139:13: ( into_clause )?
			int alt242=2;
			int LA242_0 = input.LA(1);
			if ( (LA242_0==SQL92_RESERVED_INTO||LA242_0==BULK_VK) ) {
				alt242=1;
			}
			switch (alt242) {
				case 1 :
					// PLSQLPrinter.g:1139:13: into_clause
					{
					pushFollow(FOLLOW_into_clause_in_query_block10515);
					into_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1139:26: ( where_clause )?
			int alt243=2;
			int LA243_0 = input.LA(1);
			if ( (LA243_0==SQL92_RESERVED_WHERE) ) {
				alt243=1;
			}
			switch (alt243) {
				case 1 :
					// PLSQLPrinter.g:1139:26: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_query_block10518);
					where_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1139:40: ( hierarchical_query_clause )?
			int alt244=2;
			int LA244_0 = input.LA(1);
			if ( (LA244_0==HIERARCHICAL) ) {
				alt244=1;
			}
			switch (alt244) {
				case 1 :
					// PLSQLPrinter.g:1139:40: hierarchical_query_clause
					{
					pushFollow(FOLLOW_hierarchical_query_clause_in_query_block10521);
					hierarchical_query_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1140:13: ( group_by_clause )?
			int alt245=2;
			int LA245_0 = input.LA(1);
			if ( (LA245_0==SQL92_RESERVED_GROUP) ) {
				alt245=1;
			}
			switch (alt245) {
				case 1 :
					// PLSQLPrinter.g:1140:13: group_by_clause
					{
					pushFollow(FOLLOW_group_by_clause_in_query_block10537);
					group_by_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1140:30: ( model_clause )?
			int alt246=2;
			int LA246_0 = input.LA(1);
			if ( (LA246_0==PLSQL_NON_RESERVED_MODEL) ) {
				alt246=1;
			}
			switch (alt246) {
				case 1 :
					// PLSQLPrinter.g:1140:30: model_clause
					{
					pushFollow(FOLLOW_model_clause_in_query_block10540);
					model_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1142:5: -> template( \"not implemented: query_block\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: query_block");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "query_block"


	public static class selected_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "selected_element"
	// PLSQLPrinter.g:1145:1: selected_element : ^( SELECT_ITEM expression ( alias )? ) -> template( \"not implemented: selected_element\";
	public final PLSQLPrinter.selected_element_return selected_element() throws RecognitionException {
		PLSQLPrinter.selected_element_return retval = new PLSQLPrinter.selected_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1146:5: ( ^( SELECT_ITEM expression ( alias )? ) -> template( \"not implemented: selected_element\")
			// PLSQLPrinter.g:1146:10: ^( SELECT_ITEM expression ( alias )? )
			{
			match(input,SELECT_ITEM,FOLLOW_SELECT_ITEM_in_selected_element10586); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_selected_element10588);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:1146:35: ( alias )?
			int alt247=2;
			int LA247_0 = input.LA(1);
			if ( (LA247_0==ALIAS) ) {
				alt247=1;
			}
			switch (alt247) {
				case 1 :
					// PLSQLPrinter.g:1146:35: alias
					{
					pushFollow(FOLLOW_alias_in_selected_element10590);
					alias();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1147:5: -> template( \"not implemented: selected_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: selected_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "selected_element"


	public static class from_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "from_clause"
	// PLSQLPrinter.g:1150:1: from_clause : ^( SQL92_RESERVED_FROM ( table_ref )+ ) -> template( \"not implemented: from_clause\";
	public final PLSQLPrinter.from_clause_return from_clause() throws RecognitionException {
		PLSQLPrinter.from_clause_return retval = new PLSQLPrinter.from_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1151:5: ( ^( SQL92_RESERVED_FROM ( table_ref )+ ) -> template( \"not implemented: from_clause\")
			// PLSQLPrinter.g:1151:10: ^( SQL92_RESERVED_FROM ( table_ref )+ )
			{
			match(input,SQL92_RESERVED_FROM,FOLLOW_SQL92_RESERVED_FROM_in_from_clause10627); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1151:32: ( table_ref )+
			int cnt248=0;
			loop248:
			while (true) {
				int alt248=2;
				int LA248_0 = input.LA(1);
				if ( (LA248_0==TABLE_REF) ) {
					alt248=1;
				}

				switch (alt248) {
				case 1 :
					// PLSQLPrinter.g:1151:32: table_ref
					{
					pushFollow(FOLLOW_table_ref_in_from_clause10629);
					table_ref();
					state._fsp--;

					}
					break;

				default :
					if ( cnt248 >= 1 ) break loop248;
					EarlyExitException eee = new EarlyExitException(248, input);
					throw eee;
				}
				cnt248++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1152:5: -> template( \"not implemented: from_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: from_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "from_clause"


	public static class table_ref_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "table_ref"
	// PLSQLPrinter.g:1155:1: table_ref : ^( TABLE_REF table_ref_aux ( join_clause )* ) -> template( \"not implemented: table_ref\";
	public final PLSQLPrinter.table_ref_return table_ref() throws RecognitionException {
		PLSQLPrinter.table_ref_return retval = new PLSQLPrinter.table_ref_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1156:5: ( ^( TABLE_REF table_ref_aux ( join_clause )* ) -> template( \"not implemented: table_ref\")
			// PLSQLPrinter.g:1156:10: ^( TABLE_REF table_ref_aux ( join_clause )* )
			{
			match(input,TABLE_REF,FOLLOW_TABLE_REF_in_table_ref10666); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_table_ref_aux_in_table_ref10668);
			table_ref_aux();
			state._fsp--;

			// PLSQLPrinter.g:1156:36: ( join_clause )*
			loop249:
			while (true) {
				int alt249=2;
				int LA249_0 = input.LA(1);
				if ( (LA249_0==JOIN_DEF) ) {
					alt249=1;
				}

				switch (alt249) {
				case 1 :
					// PLSQLPrinter.g:1156:36: join_clause
					{
					pushFollow(FOLLOW_join_clause_in_table_ref10670);
					join_clause();
					state._fsp--;

					}
					break;

				default :
					break loop249;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1157:5: -> template( \"not implemented: table_ref\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: table_ref");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_ref"


	public static class table_ref_aux_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "table_ref_aux"
	// PLSQLPrinter.g:1160:1: table_ref_aux : ^( TABLE_REF_ELEMENT ( alias )? dml_table_expression_clause ( ONLY_VK )? ( pivot_clause )? ( unpivot_clause )? ( flashback_query_clause )* ) -> template( \"not implemented: table_ref_aux\";
	public final PLSQLPrinter.table_ref_aux_return table_ref_aux() throws RecognitionException {
		PLSQLPrinter.table_ref_aux_return retval = new PLSQLPrinter.table_ref_aux_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1161:5: ( ^( TABLE_REF_ELEMENT ( alias )? dml_table_expression_clause ( ONLY_VK )? ( pivot_clause )? ( unpivot_clause )? ( flashback_query_clause )* ) -> template( \"not implemented: table_ref_aux\")
			// PLSQLPrinter.g:1161:10: ^( TABLE_REF_ELEMENT ( alias )? dml_table_expression_clause ( ONLY_VK )? ( pivot_clause )? ( unpivot_clause )? ( flashback_query_clause )* )
			{
			match(input,TABLE_REF_ELEMENT,FOLLOW_TABLE_REF_ELEMENT_in_table_ref_aux10707); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1161:30: ( alias )?
			int alt250=2;
			int LA250_0 = input.LA(1);
			if ( (LA250_0==ALIAS) ) {
				alt250=1;
			}
			switch (alt250) {
				case 1 :
					// PLSQLPrinter.g:1161:30: alias
					{
					pushFollow(FOLLOW_alias_in_table_ref_aux10709);
					alias();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_dml_table_expression_clause_in_table_ref_aux10712);
			dml_table_expression_clause();
			state._fsp--;

			// PLSQLPrinter.g:1161:65: ( ONLY_VK )?
			int alt251=2;
			int LA251_0 = input.LA(1);
			if ( (LA251_0==ONLY_VK) ) {
				alt251=1;
			}
			switch (alt251) {
				case 1 :
					// PLSQLPrinter.g:1161:65: ONLY_VK
					{
					match(input,ONLY_VK,FOLLOW_ONLY_VK_in_table_ref_aux10714); 
					}
					break;

			}

			// PLSQLPrinter.g:1161:74: ( pivot_clause )?
			int alt252=2;
			int LA252_0 = input.LA(1);
			if ( (LA252_0==PIVOT_VK) ) {
				alt252=1;
			}
			switch (alt252) {
				case 1 :
					// PLSQLPrinter.g:1161:74: pivot_clause
					{
					pushFollow(FOLLOW_pivot_clause_in_table_ref_aux10717);
					pivot_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1161:88: ( unpivot_clause )?
			int alt253=2;
			int LA253_0 = input.LA(1);
			if ( (LA253_0==UNPIVOT_VK) ) {
				alt253=1;
			}
			switch (alt253) {
				case 1 :
					// PLSQLPrinter.g:1161:88: unpivot_clause
					{
					pushFollow(FOLLOW_unpivot_clause_in_table_ref_aux10720);
					unpivot_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1161:104: ( flashback_query_clause )*
			loop254:
			while (true) {
				int alt254=2;
				int LA254_0 = input.LA(1);
				if ( (LA254_0==SQL92_RESERVED_AS||LA254_0==VERSIONS_VK) ) {
					alt254=1;
				}

				switch (alt254) {
				case 1 :
					// PLSQLPrinter.g:1161:104: flashback_query_clause
					{
					pushFollow(FOLLOW_flashback_query_clause_in_table_ref_aux10723);
					flashback_query_clause();
					state._fsp--;

					}
					break;

				default :
					break loop254;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1162:5: -> template( \"not implemented: table_ref_aux\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: table_ref_aux");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_ref_aux"


	public static class join_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "join_clause"
	// PLSQLPrinter.g:1165:1: join_clause : ^( JOIN_DEF ( CROSS_VK | NATURAL_VK )? ( INNER_VK | FULL_VK | LEFT_VK | RIGHT_VK )? table_ref_aux ( query_partition_clause )* ( join_on_part | join_using_part )? ) -> template( \"not implemented: join_clause\";
	public final PLSQLPrinter.join_clause_return join_clause() throws RecognitionException {
		PLSQLPrinter.join_clause_return retval = new PLSQLPrinter.join_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1166:5: ( ^( JOIN_DEF ( CROSS_VK | NATURAL_VK )? ( INNER_VK | FULL_VK | LEFT_VK | RIGHT_VK )? table_ref_aux ( query_partition_clause )* ( join_on_part | join_using_part )? ) -> template( \"not implemented: join_clause\")
			// PLSQLPrinter.g:1166:10: ^( JOIN_DEF ( CROSS_VK | NATURAL_VK )? ( INNER_VK | FULL_VK | LEFT_VK | RIGHT_VK )? table_ref_aux ( query_partition_clause )* ( join_on_part | join_using_part )? )
			{
			match(input,JOIN_DEF,FOLLOW_JOIN_DEF_in_join_clause10760); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1166:21: ( CROSS_VK | NATURAL_VK )?
			int alt255=3;
			int LA255_0 = input.LA(1);
			if ( (LA255_0==CROSS_VK) ) {
				alt255=1;
			}
			else if ( (LA255_0==NATURAL_VK) ) {
				alt255=2;
			}
			switch (alt255) {
				case 1 :
					// PLSQLPrinter.g:1166:22: CROSS_VK
					{
					match(input,CROSS_VK,FOLLOW_CROSS_VK_in_join_clause10763); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1166:31: NATURAL_VK
					{
					match(input,NATURAL_VK,FOLLOW_NATURAL_VK_in_join_clause10765); 
					}
					break;

			}

			// PLSQLPrinter.g:1166:44: ( INNER_VK | FULL_VK | LEFT_VK | RIGHT_VK )?
			int alt256=5;
			switch ( input.LA(1) ) {
				case INNER_VK:
					{
					alt256=1;
					}
					break;
				case FULL_VK:
					{
					alt256=2;
					}
					break;
				case LEFT_VK:
					{
					alt256=3;
					}
					break;
				case RIGHT_VK:
					{
					alt256=4;
					}
					break;
			}
			switch (alt256) {
				case 1 :
					// PLSQLPrinter.g:1166:45: INNER_VK
					{
					match(input,INNER_VK,FOLLOW_INNER_VK_in_join_clause10770); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1166:54: FULL_VK
					{
					match(input,FULL_VK,FOLLOW_FULL_VK_in_join_clause10772); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:1166:62: LEFT_VK
					{
					match(input,LEFT_VK,FOLLOW_LEFT_VK_in_join_clause10774); 
					}
					break;
				case 4 :
					// PLSQLPrinter.g:1166:70: RIGHT_VK
					{
					match(input,RIGHT_VK,FOLLOW_RIGHT_VK_in_join_clause10776); 
					}
					break;

			}

			pushFollow(FOLLOW_table_ref_aux_in_join_clause10780);
			table_ref_aux();
			state._fsp--;

			// PLSQLPrinter.g:1166:95: ( query_partition_clause )*
			loop257:
			while (true) {
				int alt257=2;
				int LA257_0 = input.LA(1);
				if ( (LA257_0==PARTITION_VK) ) {
					alt257=1;
				}

				switch (alt257) {
				case 1 :
					// PLSQLPrinter.g:1166:95: query_partition_clause
					{
					pushFollow(FOLLOW_query_partition_clause_in_join_clause10782);
					query_partition_clause();
					state._fsp--;

					}
					break;

				default :
					break loop257;
				}
			}

			// PLSQLPrinter.g:1166:119: ( join_on_part | join_using_part )?
			int alt258=3;
			int LA258_0 = input.LA(1);
			if ( (LA258_0==SQL92_RESERVED_ON) ) {
				alt258=1;
			}
			else if ( (LA258_0==PLSQL_NON_RESERVED_USING) ) {
				alt258=2;
			}
			switch (alt258) {
				case 1 :
					// PLSQLPrinter.g:1166:120: join_on_part
					{
					pushFollow(FOLLOW_join_on_part_in_join_clause10786);
					join_on_part();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1166:133: join_using_part
					{
					pushFollow(FOLLOW_join_using_part_in_join_clause10788);
					join_using_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1167:5: -> template( \"not implemented: join_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: join_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "join_clause"


	public static class join_on_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "join_on_part"
	// PLSQLPrinter.g:1170:1: join_on_part : ^( SQL92_RESERVED_ON expression ) -> template( \"not implemented: join_on_part\";
	public final PLSQLPrinter.join_on_part_return join_on_part() throws RecognitionException {
		PLSQLPrinter.join_on_part_return retval = new PLSQLPrinter.join_on_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1171:5: ( ^( SQL92_RESERVED_ON expression ) -> template( \"not implemented: join_on_part\")
			// PLSQLPrinter.g:1171:10: ^( SQL92_RESERVED_ON expression )
			{
			match(input,SQL92_RESERVED_ON,FOLLOW_SQL92_RESERVED_ON_in_join_on_part10827); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_join_on_part10829);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1172:5: -> template( \"not implemented: join_on_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: join_on_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "join_on_part"


	public static class join_using_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "join_using_part"
	// PLSQLPrinter.g:1175:1: join_using_part : ^( PLSQL_NON_RESERVED_USING ( column_name )+ ) -> template( \"not implemented: join_using_part\";
	public final PLSQLPrinter.join_using_part_return join_using_part() throws RecognitionException {
		PLSQLPrinter.join_using_part_return retval = new PLSQLPrinter.join_using_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1176:5: ( ^( PLSQL_NON_RESERVED_USING ( column_name )+ ) -> template( \"not implemented: join_using_part\")
			// PLSQLPrinter.g:1176:10: ^( PLSQL_NON_RESERVED_USING ( column_name )+ )
			{
			match(input,PLSQL_NON_RESERVED_USING,FOLLOW_PLSQL_NON_RESERVED_USING_in_join_using_part10866); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1176:37: ( column_name )+
			int cnt259=0;
			loop259:
			while (true) {
				int alt259=2;
				int LA259_0 = input.LA(1);
				if ( (LA259_0==COLUMN_NAME) ) {
					alt259=1;
				}

				switch (alt259) {
				case 1 :
					// PLSQLPrinter.g:1176:37: column_name
					{
					pushFollow(FOLLOW_column_name_in_join_using_part10868);
					column_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt259 >= 1 ) break loop259;
					EarlyExitException eee = new EarlyExitException(259, input);
					throw eee;
				}
				cnt259++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1177:5: -> template( \"not implemented: join_using_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: join_using_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "join_using_part"


	public static class query_partition_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "query_partition_clause"
	// PLSQLPrinter.g:1180:1: query_partition_clause : ^( PARTITION_VK ( subquery | expression_list | ( expression )+ ) ) -> template( \"not implemented: query_partition_clause\";
	public final PLSQLPrinter.query_partition_clause_return query_partition_clause() throws RecognitionException {
		PLSQLPrinter.query_partition_clause_return retval = new PLSQLPrinter.query_partition_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1181:5: ( ^( PARTITION_VK ( subquery | expression_list | ( expression )+ ) ) -> template( \"not implemented: query_partition_clause\")
			// PLSQLPrinter.g:1181:10: ^( PARTITION_VK ( subquery | expression_list | ( expression )+ ) )
			{
			match(input,PARTITION_VK,FOLLOW_PARTITION_VK_in_query_partition_clause10905); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1181:25: ( subquery | expression_list | ( expression )+ )
			int alt261=3;
			switch ( input.LA(1) ) {
			case SUBQUERY:
				{
				alt261=1;
				}
				break;
			case EXPR_LIST:
				{
				alt261=2;
				}
				break;
			case EXPR:
			case LOGIC_EXPR:
				{
				alt261=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 261, 0, input);
				throw nvae;
			}
			switch (alt261) {
				case 1 :
					// PLSQLPrinter.g:1181:26: subquery
					{
					pushFollow(FOLLOW_subquery_in_query_partition_clause10908);
					subquery();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1181:35: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_query_partition_clause10910);
					expression_list();
					state._fsp--;

					}
					break;
				case 3 :
					// PLSQLPrinter.g:1181:51: ( expression )+
					{
					// PLSQLPrinter.g:1181:51: ( expression )+
					int cnt260=0;
					loop260:
					while (true) {
						int alt260=2;
						int LA260_0 = input.LA(1);
						if ( (LA260_0==EXPR||LA260_0==LOGIC_EXPR) ) {
							alt260=1;
						}

						switch (alt260) {
						case 1 :
							// PLSQLPrinter.g:1181:51: expression
							{
							pushFollow(FOLLOW_expression_in_query_partition_clause10912);
							expression();
							state._fsp--;

							}
							break;

						default :
							if ( cnt260 >= 1 ) break loop260;
							EarlyExitException eee = new EarlyExitException(260, input);
							throw eee;
						}
						cnt260++;
					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1182:5: -> template( \"not implemented: query_partition_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: query_partition_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "query_partition_clause"


	public static class flashback_query_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "flashback_query_clause"
	// PLSQLPrinter.g:1185:1: flashback_query_clause : ^( ( VERSIONS_VK | SQL92_RESERVED_AS ) ( SCN_VK | TIMESTAMP_VK )? expression ) -> template( \"not implemented: flashback_query_clause\";
	public final PLSQLPrinter.flashback_query_clause_return flashback_query_clause() throws RecognitionException {
		PLSQLPrinter.flashback_query_clause_return retval = new PLSQLPrinter.flashback_query_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1186:5: ( ^( ( VERSIONS_VK | SQL92_RESERVED_AS ) ( SCN_VK | TIMESTAMP_VK )? expression ) -> template( \"not implemented: flashback_query_clause\")
			// PLSQLPrinter.g:1186:10: ^( ( VERSIONS_VK | SQL92_RESERVED_AS ) ( SCN_VK | TIMESTAMP_VK )? expression )
			{
			// PLSQLPrinter.g:1186:12: ( VERSIONS_VK | SQL92_RESERVED_AS )
			int alt262=2;
			int LA262_0 = input.LA(1);
			if ( (LA262_0==VERSIONS_VK) ) {
				alt262=1;
			}
			else if ( (LA262_0==SQL92_RESERVED_AS) ) {
				alt262=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 262, 0, input);
				throw nvae;
			}

			switch (alt262) {
				case 1 :
					// PLSQLPrinter.g:1186:13: VERSIONS_VK
					{
					match(input,VERSIONS_VK,FOLLOW_VERSIONS_VK_in_flashback_query_clause10951); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1186:25: SQL92_RESERVED_AS
					{
					match(input,SQL92_RESERVED_AS,FOLLOW_SQL92_RESERVED_AS_in_flashback_query_clause10953); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1186:44: ( SCN_VK | TIMESTAMP_VK )?
			int alt263=3;
			int LA263_0 = input.LA(1);
			if ( (LA263_0==SCN_VK) ) {
				alt263=1;
			}
			else if ( (LA263_0==TIMESTAMP_VK) ) {
				alt263=2;
			}
			switch (alt263) {
				case 1 :
					// PLSQLPrinter.g:1186:45: SCN_VK
					{
					match(input,SCN_VK,FOLLOW_SCN_VK_in_flashback_query_clause10957); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1186:52: TIMESTAMP_VK
					{
					match(input,TIMESTAMP_VK,FOLLOW_TIMESTAMP_VK_in_flashback_query_clause10959); 
					}
					break;

			}

			pushFollow(FOLLOW_expression_in_flashback_query_clause10963);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1187:5: -> template( \"not implemented: flashback_query_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: flashback_query_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "flashback_query_clause"


	public static class pivot_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pivot_clause"
	// PLSQLPrinter.g:1190:1: pivot_clause : ^( PIVOT_VK ( XML_VK )? ( pivot_element )+ pivot_for_clause pivot_in_clause ) -> template( \"not implemented: pivot_clause\";
	public final PLSQLPrinter.pivot_clause_return pivot_clause() throws RecognitionException {
		PLSQLPrinter.pivot_clause_return retval = new PLSQLPrinter.pivot_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1191:5: ( ^( PIVOT_VK ( XML_VK )? ( pivot_element )+ pivot_for_clause pivot_in_clause ) -> template( \"not implemented: pivot_clause\")
			// PLSQLPrinter.g:1191:10: ^( PIVOT_VK ( XML_VK )? ( pivot_element )+ pivot_for_clause pivot_in_clause )
			{
			match(input,PIVOT_VK,FOLLOW_PIVOT_VK_in_pivot_clause11000); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1191:21: ( XML_VK )?
			int alt264=2;
			int LA264_0 = input.LA(1);
			if ( (LA264_0==XML_VK) ) {
				alt264=1;
			}
			switch (alt264) {
				case 1 :
					// PLSQLPrinter.g:1191:21: XML_VK
					{
					match(input,XML_VK,FOLLOW_XML_VK_in_pivot_clause11002); 
					}
					break;

			}

			// PLSQLPrinter.g:1191:29: ( pivot_element )+
			int cnt265=0;
			loop265:
			while (true) {
				int alt265=2;
				int LA265_0 = input.LA(1);
				if ( (LA265_0==PIVOT_ELEMENT) ) {
					alt265=1;
				}

				switch (alt265) {
				case 1 :
					// PLSQLPrinter.g:1191:29: pivot_element
					{
					pushFollow(FOLLOW_pivot_element_in_pivot_clause11005);
					pivot_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt265 >= 1 ) break loop265;
					EarlyExitException eee = new EarlyExitException(265, input);
					throw eee;
				}
				cnt265++;
			}

			pushFollow(FOLLOW_pivot_for_clause_in_pivot_clause11008);
			pivot_for_clause();
			state._fsp--;

			pushFollow(FOLLOW_pivot_in_clause_in_pivot_clause11010);
			pivot_in_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1192:5: -> template( \"not implemented: pivot_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: pivot_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pivot_clause"


	public static class pivot_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pivot_element"
	// PLSQLPrinter.g:1195:1: pivot_element : ^( PIVOT_ELEMENT ( alias )? expression ) -> template( \"not implemented: pivot_element\";
	public final PLSQLPrinter.pivot_element_return pivot_element() throws RecognitionException {
		PLSQLPrinter.pivot_element_return retval = new PLSQLPrinter.pivot_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1196:5: ( ^( PIVOT_ELEMENT ( alias )? expression ) -> template( \"not implemented: pivot_element\")
			// PLSQLPrinter.g:1196:10: ^( PIVOT_ELEMENT ( alias )? expression )
			{
			match(input,PIVOT_ELEMENT,FOLLOW_PIVOT_ELEMENT_in_pivot_element11046); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1196:26: ( alias )?
			int alt266=2;
			int LA266_0 = input.LA(1);
			if ( (LA266_0==ALIAS) ) {
				alt266=1;
			}
			switch (alt266) {
				case 1 :
					// PLSQLPrinter.g:1196:26: alias
					{
					pushFollow(FOLLOW_alias_in_pivot_element11048);
					alias();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_expression_in_pivot_element11051);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1197:5: -> template( \"not implemented: pivot_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: pivot_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pivot_element"


	public static class pivot_for_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pivot_for_clause"
	// PLSQLPrinter.g:1200:1: pivot_for_clause : ^( SQL92_RESERVED_FOR ( column_name )+ ) -> template( \"not implemented: pivot_for_clause\";
	public final PLSQLPrinter.pivot_for_clause_return pivot_for_clause() throws RecognitionException {
		PLSQLPrinter.pivot_for_clause_return retval = new PLSQLPrinter.pivot_for_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1201:5: ( ^( SQL92_RESERVED_FOR ( column_name )+ ) -> template( \"not implemented: pivot_for_clause\")
			// PLSQLPrinter.g:1201:10: ^( SQL92_RESERVED_FOR ( column_name )+ )
			{
			match(input,SQL92_RESERVED_FOR,FOLLOW_SQL92_RESERVED_FOR_in_pivot_for_clause11087); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1201:31: ( column_name )+
			int cnt267=0;
			loop267:
			while (true) {
				int alt267=2;
				int LA267_0 = input.LA(1);
				if ( (LA267_0==COLUMN_NAME) ) {
					alt267=1;
				}

				switch (alt267) {
				case 1 :
					// PLSQLPrinter.g:1201:31: column_name
					{
					pushFollow(FOLLOW_column_name_in_pivot_for_clause11089);
					column_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt267 >= 1 ) break loop267;
					EarlyExitException eee = new EarlyExitException(267, input);
					throw eee;
				}
				cnt267++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1202:5: -> template( \"not implemented: pivot_for_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: pivot_for_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pivot_for_clause"


	public static class pivot_in_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pivot_in_clause"
	// PLSQLPrinter.g:1205:1: pivot_in_clause : ^( SQL92_RESERVED_IN ( subquery | ^( ANY_MODE ( SQL92_RESERVED_ANY )+ ) | ^( ELEMENTS_MODE ( pivot_in_clause_element )+ ) ) ) -> template( \"not implemented: pivot_in_clause\";
	public final PLSQLPrinter.pivot_in_clause_return pivot_in_clause() throws RecognitionException {
		PLSQLPrinter.pivot_in_clause_return retval = new PLSQLPrinter.pivot_in_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1206:5: ( ^( SQL92_RESERVED_IN ( subquery | ^( ANY_MODE ( SQL92_RESERVED_ANY )+ ) | ^( ELEMENTS_MODE ( pivot_in_clause_element )+ ) ) ) -> template( \"not implemented: pivot_in_clause\")
			// PLSQLPrinter.g:1206:10: ^( SQL92_RESERVED_IN ( subquery | ^( ANY_MODE ( SQL92_RESERVED_ANY )+ ) | ^( ELEMENTS_MODE ( pivot_in_clause_element )+ ) ) )
			{
			match(input,SQL92_RESERVED_IN,FOLLOW_SQL92_RESERVED_IN_in_pivot_in_clause11126); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1207:9: ( subquery | ^( ANY_MODE ( SQL92_RESERVED_ANY )+ ) | ^( ELEMENTS_MODE ( pivot_in_clause_element )+ ) )
			int alt270=3;
			switch ( input.LA(1) ) {
			case SUBQUERY:
				{
				alt270=1;
				}
				break;
			case ANY_MODE:
				{
				alt270=2;
				}
				break;
			case ELEMENTS_MODE:
				{
				alt270=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 270, 0, input);
				throw nvae;
			}
			switch (alt270) {
				case 1 :
					// PLSQLPrinter.g:1207:14: subquery
					{
					pushFollow(FOLLOW_subquery_in_pivot_in_clause11142);
					subquery();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1208:14: ^( ANY_MODE ( SQL92_RESERVED_ANY )+ )
					{
					match(input,ANY_MODE,FOLLOW_ANY_MODE_in_pivot_in_clause11158); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1208:25: ( SQL92_RESERVED_ANY )+
					int cnt268=0;
					loop268:
					while (true) {
						int alt268=2;
						int LA268_0 = input.LA(1);
						if ( (LA268_0==SQL92_RESERVED_ANY) ) {
							alt268=1;
						}

						switch (alt268) {
						case 1 :
							// PLSQLPrinter.g:1208:25: SQL92_RESERVED_ANY
							{
							match(input,SQL92_RESERVED_ANY,FOLLOW_SQL92_RESERVED_ANY_in_pivot_in_clause11160); 
							}
							break;

						default :
							if ( cnt268 >= 1 ) break loop268;
							EarlyExitException eee = new EarlyExitException(268, input);
							throw eee;
						}
						cnt268++;
					}

					match(input, Token.UP, null); 

					}
					break;
				case 3 :
					// PLSQLPrinter.g:1209:14: ^( ELEMENTS_MODE ( pivot_in_clause_element )+ )
					{
					match(input,ELEMENTS_MODE,FOLLOW_ELEMENTS_MODE_in_pivot_in_clause11178); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1209:30: ( pivot_in_clause_element )+
					int cnt269=0;
					loop269:
					while (true) {
						int alt269=2;
						int LA269_0 = input.LA(1);
						if ( (LA269_0==PIVOT_IN_ELEMENT) ) {
							alt269=1;
						}

						switch (alt269) {
						case 1 :
							// PLSQLPrinter.g:1209:30: pivot_in_clause_element
							{
							pushFollow(FOLLOW_pivot_in_clause_element_in_pivot_in_clause11180);
							pivot_in_clause_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt269 >= 1 ) break loop269;
							EarlyExitException eee = new EarlyExitException(269, input);
							throw eee;
						}
						cnt269++;
					}

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1212:5: -> template( \"not implemented: pivot_in_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: pivot_in_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pivot_in_clause"


	public static class pivot_in_clause_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pivot_in_clause_element"
	// PLSQLPrinter.g:1215:1: pivot_in_clause_element : ^( PIVOT_IN_ELEMENT ( alias )? ( expression | expression_list ) ) -> template( \"not implemented: pivot_in_clause_element\";
	public final PLSQLPrinter.pivot_in_clause_element_return pivot_in_clause_element() throws RecognitionException {
		PLSQLPrinter.pivot_in_clause_element_return retval = new PLSQLPrinter.pivot_in_clause_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1216:5: ( ^( PIVOT_IN_ELEMENT ( alias )? ( expression | expression_list ) ) -> template( \"not implemented: pivot_in_clause_element\")
			// PLSQLPrinter.g:1216:10: ^( PIVOT_IN_ELEMENT ( alias )? ( expression | expression_list ) )
			{
			match(input,PIVOT_IN_ELEMENT,FOLLOW_PIVOT_IN_ELEMENT_in_pivot_in_clause_element11237); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1216:29: ( alias )?
			int alt271=2;
			int LA271_0 = input.LA(1);
			if ( (LA271_0==ALIAS) ) {
				alt271=1;
			}
			switch (alt271) {
				case 1 :
					// PLSQLPrinter.g:1216:29: alias
					{
					pushFollow(FOLLOW_alias_in_pivot_in_clause_element11239);
					alias();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1216:36: ( expression | expression_list )
			int alt272=2;
			int LA272_0 = input.LA(1);
			if ( (LA272_0==EXPR||LA272_0==LOGIC_EXPR) ) {
				alt272=1;
			}
			else if ( (LA272_0==EXPR_LIST) ) {
				alt272=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 272, 0, input);
				throw nvae;
			}

			switch (alt272) {
				case 1 :
					// PLSQLPrinter.g:1216:37: expression
					{
					pushFollow(FOLLOW_expression_in_pivot_in_clause_element11243);
					expression();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1216:48: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_pivot_in_clause_element11245);
					expression_list();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1217:5: -> template( \"not implemented: pivot_in_clause_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: pivot_in_clause_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pivot_in_clause_element"


	public static class unpivot_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "unpivot_clause"
	// PLSQLPrinter.g:1220:1: unpivot_clause : ^( UNPIVOT_VK ( ( INCLUDE_VK | EXCLUDE_VK ) ( NULLS_VK )? )? ( column_name )+ pivot_for_clause unpivot_in_clause ) -> template( \"not implemented: unpivot_clause\";
	public final PLSQLPrinter.unpivot_clause_return unpivot_clause() throws RecognitionException {
		PLSQLPrinter.unpivot_clause_return retval = new PLSQLPrinter.unpivot_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1221:5: ( ^( UNPIVOT_VK ( ( INCLUDE_VK | EXCLUDE_VK ) ( NULLS_VK )? )? ( column_name )+ pivot_for_clause unpivot_in_clause ) -> template( \"not implemented: unpivot_clause\")
			// PLSQLPrinter.g:1221:10: ^( UNPIVOT_VK ( ( INCLUDE_VK | EXCLUDE_VK ) ( NULLS_VK )? )? ( column_name )+ pivot_for_clause unpivot_in_clause )
			{
			match(input,UNPIVOT_VK,FOLLOW_UNPIVOT_VK_in_unpivot_clause11282); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1221:23: ( ( INCLUDE_VK | EXCLUDE_VK ) ( NULLS_VK )? )?
			int alt275=2;
			int LA275_0 = input.LA(1);
			if ( (LA275_0==EXCLUDE_VK||LA275_0==INCLUDE_VK) ) {
				alt275=1;
			}
			switch (alt275) {
				case 1 :
					// PLSQLPrinter.g:1221:24: ( INCLUDE_VK | EXCLUDE_VK ) ( NULLS_VK )?
					{
					// PLSQLPrinter.g:1221:24: ( INCLUDE_VK | EXCLUDE_VK )
					int alt273=2;
					int LA273_0 = input.LA(1);
					if ( (LA273_0==INCLUDE_VK) ) {
						alt273=1;
					}
					else if ( (LA273_0==EXCLUDE_VK) ) {
						alt273=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 273, 0, input);
						throw nvae;
					}

					switch (alt273) {
						case 1 :
							// PLSQLPrinter.g:1221:25: INCLUDE_VK
							{
							match(input,INCLUDE_VK,FOLLOW_INCLUDE_VK_in_unpivot_clause11286); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1221:36: EXCLUDE_VK
							{
							match(input,EXCLUDE_VK,FOLLOW_EXCLUDE_VK_in_unpivot_clause11288); 
							}
							break;

					}

					// PLSQLPrinter.g:1221:48: ( NULLS_VK )?
					int alt274=2;
					int LA274_0 = input.LA(1);
					if ( (LA274_0==NULLS_VK) ) {
						alt274=1;
					}
					switch (alt274) {
						case 1 :
							// PLSQLPrinter.g:1221:48: NULLS_VK
							{
							match(input,NULLS_VK,FOLLOW_NULLS_VK_in_unpivot_clause11291); 
							}
							break;

					}

					}
					break;

			}

			// PLSQLPrinter.g:1221:60: ( column_name )+
			int cnt276=0;
			loop276:
			while (true) {
				int alt276=2;
				int LA276_0 = input.LA(1);
				if ( (LA276_0==COLUMN_NAME) ) {
					alt276=1;
				}

				switch (alt276) {
				case 1 :
					// PLSQLPrinter.g:1221:60: column_name
					{
					pushFollow(FOLLOW_column_name_in_unpivot_clause11296);
					column_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt276 >= 1 ) break loop276;
					EarlyExitException eee = new EarlyExitException(276, input);
					throw eee;
				}
				cnt276++;
			}

			pushFollow(FOLLOW_pivot_for_clause_in_unpivot_clause11299);
			pivot_for_clause();
			state._fsp--;

			pushFollow(FOLLOW_unpivot_in_clause_in_unpivot_clause11301);
			unpivot_in_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1222:5: -> template( \"not implemented: unpivot_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: unpivot_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "unpivot_clause"


	public static class unpivot_in_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "unpivot_in_clause"
	// PLSQLPrinter.g:1225:1: unpivot_in_clause : ^( SQL92_RESERVED_IN ( unpivot_in_element )+ ) -> template( \"not implemented: unpivot_in_clause\";
	public final PLSQLPrinter.unpivot_in_clause_return unpivot_in_clause() throws RecognitionException {
		PLSQLPrinter.unpivot_in_clause_return retval = new PLSQLPrinter.unpivot_in_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1226:5: ( ^( SQL92_RESERVED_IN ( unpivot_in_element )+ ) -> template( \"not implemented: unpivot_in_clause\")
			// PLSQLPrinter.g:1226:10: ^( SQL92_RESERVED_IN ( unpivot_in_element )+ )
			{
			match(input,SQL92_RESERVED_IN,FOLLOW_SQL92_RESERVED_IN_in_unpivot_in_clause11337); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1226:30: ( unpivot_in_element )+
			int cnt277=0;
			loop277:
			while (true) {
				int alt277=2;
				int LA277_0 = input.LA(1);
				if ( (LA277_0==UNPIVOT_IN_ELEMENT) ) {
					alt277=1;
				}

				switch (alt277) {
				case 1 :
					// PLSQLPrinter.g:1226:30: unpivot_in_element
					{
					pushFollow(FOLLOW_unpivot_in_element_in_unpivot_in_clause11339);
					unpivot_in_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt277 >= 1 ) break loop277;
					EarlyExitException eee = new EarlyExitException(277, input);
					throw eee;
				}
				cnt277++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1227:5: -> template( \"not implemented: unpivot_in_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: unpivot_in_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "unpivot_in_clause"


	public static class unpivot_in_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "unpivot_in_element"
	// PLSQLPrinter.g:1230:1: unpivot_in_element : ^( UNPIVOT_IN_ELEMENT ( column_name )+ ^( PIVOT_ALIAS ( expression | expression_list ) ) ) -> template( \"not implemented: unpivot_in_element\";
	public final PLSQLPrinter.unpivot_in_element_return unpivot_in_element() throws RecognitionException {
		PLSQLPrinter.unpivot_in_element_return retval = new PLSQLPrinter.unpivot_in_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1231:5: ( ^( UNPIVOT_IN_ELEMENT ( column_name )+ ^( PIVOT_ALIAS ( expression | expression_list ) ) ) -> template( \"not implemented: unpivot_in_element\")
			// PLSQLPrinter.g:1231:10: ^( UNPIVOT_IN_ELEMENT ( column_name )+ ^( PIVOT_ALIAS ( expression | expression_list ) ) )
			{
			match(input,UNPIVOT_IN_ELEMENT,FOLLOW_UNPIVOT_IN_ELEMENT_in_unpivot_in_element11376); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1231:31: ( column_name )+
			int cnt278=0;
			loop278:
			while (true) {
				int alt278=2;
				int LA278_0 = input.LA(1);
				if ( (LA278_0==COLUMN_NAME) ) {
					alt278=1;
				}

				switch (alt278) {
				case 1 :
					// PLSQLPrinter.g:1231:31: column_name
					{
					pushFollow(FOLLOW_column_name_in_unpivot_in_element11378);
					column_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt278 >= 1 ) break loop278;
					EarlyExitException eee = new EarlyExitException(278, input);
					throw eee;
				}
				cnt278++;
			}

			match(input,PIVOT_ALIAS,FOLLOW_PIVOT_ALIAS_in_unpivot_in_element11382); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1231:58: ( expression | expression_list )
			int alt279=2;
			int LA279_0 = input.LA(1);
			if ( (LA279_0==EXPR||LA279_0==LOGIC_EXPR) ) {
				alt279=1;
			}
			else if ( (LA279_0==EXPR_LIST) ) {
				alt279=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 279, 0, input);
				throw nvae;
			}

			switch (alt279) {
				case 1 :
					// PLSQLPrinter.g:1231:59: expression
					{
					pushFollow(FOLLOW_expression_in_unpivot_in_element11385);
					expression();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1231:70: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_unpivot_in_element11387);
					expression_list();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1232:5: -> template( \"not implemented: unpivot_in_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: unpivot_in_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "unpivot_in_element"


	public static class hierarchical_query_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "hierarchical_query_clause"
	// PLSQLPrinter.g:1235:1: hierarchical_query_clause : ^( HIERARCHICAL ( start_part )? ^( SQL92_RESERVED_CONNECT ( NOCYCLE_VK )? expression ) ) -> template( \"not implemented: hierarchical_query_clause\";
	public final PLSQLPrinter.hierarchical_query_clause_return hierarchical_query_clause() throws RecognitionException {
		PLSQLPrinter.hierarchical_query_clause_return retval = new PLSQLPrinter.hierarchical_query_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1236:5: ( ^( HIERARCHICAL ( start_part )? ^( SQL92_RESERVED_CONNECT ( NOCYCLE_VK )? expression ) ) -> template( \"not implemented: hierarchical_query_clause\")
			// PLSQLPrinter.g:1236:10: ^( HIERARCHICAL ( start_part )? ^( SQL92_RESERVED_CONNECT ( NOCYCLE_VK )? expression ) )
			{
			match(input,HIERARCHICAL,FOLLOW_HIERARCHICAL_in_hierarchical_query_clause11425); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1236:25: ( start_part )?
			int alt280=2;
			int LA280_0 = input.LA(1);
			if ( (LA280_0==PLSQL_RESERVED_START) ) {
				alt280=1;
			}
			switch (alt280) {
				case 1 :
					// PLSQLPrinter.g:1236:25: start_part
					{
					pushFollow(FOLLOW_start_part_in_hierarchical_query_clause11427);
					start_part();
					state._fsp--;

					}
					break;

			}

			match(input,SQL92_RESERVED_CONNECT,FOLLOW_SQL92_RESERVED_CONNECT_in_hierarchical_query_clause11431); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1236:62: ( NOCYCLE_VK )?
			int alt281=2;
			int LA281_0 = input.LA(1);
			if ( (LA281_0==NOCYCLE_VK) ) {
				alt281=1;
			}
			switch (alt281) {
				case 1 :
					// PLSQLPrinter.g:1236:62: NOCYCLE_VK
					{
					match(input,NOCYCLE_VK,FOLLOW_NOCYCLE_VK_in_hierarchical_query_clause11433); 
					}
					break;

			}

			pushFollow(FOLLOW_expression_in_hierarchical_query_clause11436);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1237:5: -> template( \"not implemented: hierarchical_query_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: hierarchical_query_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "hierarchical_query_clause"


	public static class start_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "start_part"
	// PLSQLPrinter.g:1240:1: start_part : ^( PLSQL_RESERVED_START expression ) -> template( \"not implemented: start_part\";
	public final PLSQLPrinter.start_part_return start_part() throws RecognitionException {
		PLSQLPrinter.start_part_return retval = new PLSQLPrinter.start_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1241:5: ( ^( PLSQL_RESERVED_START expression ) -> template( \"not implemented: start_part\")
			// PLSQLPrinter.g:1241:10: ^( PLSQL_RESERVED_START expression )
			{
			match(input,PLSQL_RESERVED_START,FOLLOW_PLSQL_RESERVED_START_in_start_part11473); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_start_part11475);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1242:5: -> template( \"not implemented: start_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: start_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "start_part"


	public static class group_by_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "group_by_clause"
	// PLSQLPrinter.g:1245:1: group_by_clause : ^( SQL92_RESERVED_GROUP ( group_by_element )+ ( having_clause )? ) -> template( \"not implemented: group_by_clause\";
	public final PLSQLPrinter.group_by_clause_return group_by_clause() throws RecognitionException {
		PLSQLPrinter.group_by_clause_return retval = new PLSQLPrinter.group_by_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1246:5: ( ^( SQL92_RESERVED_GROUP ( group_by_element )+ ( having_clause )? ) -> template( \"not implemented: group_by_clause\")
			// PLSQLPrinter.g:1246:10: ^( SQL92_RESERVED_GROUP ( group_by_element )+ ( having_clause )? )
			{
			match(input,SQL92_RESERVED_GROUP,FOLLOW_SQL92_RESERVED_GROUP_in_group_by_clause11511); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1246:33: ( group_by_element )+
			int cnt282=0;
			loop282:
			while (true) {
				int alt282=2;
				int LA282_0 = input.LA(1);
				if ( (LA282_0==GROUP_BY_ELEMENT) ) {
					alt282=1;
				}

				switch (alt282) {
				case 1 :
					// PLSQLPrinter.g:1246:33: group_by_element
					{
					pushFollow(FOLLOW_group_by_element_in_group_by_clause11513);
					group_by_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt282 >= 1 ) break loop282;
					EarlyExitException eee = new EarlyExitException(282, input);
					throw eee;
				}
				cnt282++;
			}

			// PLSQLPrinter.g:1246:51: ( having_clause )?
			int alt283=2;
			int LA283_0 = input.LA(1);
			if ( (LA283_0==SQL92_RESERVED_HAVING) ) {
				alt283=1;
			}
			switch (alt283) {
				case 1 :
					// PLSQLPrinter.g:1246:51: having_clause
					{
					pushFollow(FOLLOW_having_clause_in_group_by_clause11516);
					having_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1247:5: -> template( \"not implemented: group_by_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: group_by_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "group_by_clause"


	public static class group_by_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "group_by_element"
	// PLSQLPrinter.g:1250:1: group_by_element : ^( GROUP_BY_ELEMENT group_by_elements ) -> template( \"not implemented: group_by_element\";
	public final PLSQLPrinter.group_by_element_return group_by_element() throws RecognitionException {
		PLSQLPrinter.group_by_element_return retval = new PLSQLPrinter.group_by_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1251:5: ( ^( GROUP_BY_ELEMENT group_by_elements ) -> template( \"not implemented: group_by_element\")
			// PLSQLPrinter.g:1251:10: ^( GROUP_BY_ELEMENT group_by_elements )
			{
			match(input,GROUP_BY_ELEMENT,FOLLOW_GROUP_BY_ELEMENT_in_group_by_element11553); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_group_by_elements_in_group_by_element11555);
			group_by_elements();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1252:5: -> template( \"not implemented: group_by_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: group_by_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "group_by_element"


	public static class group_by_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "group_by_elements"
	// PLSQLPrinter.g:1255:1: group_by_elements : ( ^( GROUPING_VK ( groupin_set )+ ) -> template( \"not implemented: group_by_elements\"| grouping_element -> template( \"not implemented: group_by_elements\");
	public final PLSQLPrinter.group_by_elements_return group_by_elements() throws RecognitionException {
		PLSQLPrinter.group_by_elements_return retval = new PLSQLPrinter.group_by_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1256:5: ( ^( GROUPING_VK ( groupin_set )+ ) -> template( \"not implemented: group_by_elements\"| grouping_element -> template( \"not implemented: group_by_elements\")
			int alt285=2;
			int LA285_0 = input.LA(1);
			if ( (LA285_0==GROUPING_VK) ) {
				alt285=1;
			}
			else if ( (LA285_0==CUBE_VK||(LA285_0 >= EXPR && LA285_0 <= EXPR_LIST)||LA285_0==LOGIC_EXPR||LA285_0==ROLLUP_VK) ) {
				alt285=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 285, 0, input);
				throw nvae;
			}

			switch (alt285) {
				case 1 :
					// PLSQLPrinter.g:1256:10: ^( GROUPING_VK ( groupin_set )+ )
					{
					match(input,GROUPING_VK,FOLLOW_GROUPING_VK_in_group_by_elements11591); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1256:24: ( groupin_set )+
					int cnt284=0;
					loop284:
					while (true) {
						int alt284=2;
						int LA284_0 = input.LA(1);
						if ( (LA284_0==GROUPIN_SET) ) {
							alt284=1;
						}

						switch (alt284) {
						case 1 :
							// PLSQLPrinter.g:1256:24: groupin_set
							{
							pushFollow(FOLLOW_groupin_set_in_group_by_elements11593);
							groupin_set();
							state._fsp--;

							}
							break;

						default :
							if ( cnt284 >= 1 ) break loop284;
							EarlyExitException eee = new EarlyExitException(284, input);
							throw eee;
						}
						cnt284++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1257:5: -> template( \"not implemented: group_by_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: group_by_elements");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1258:10: grouping_element
					{
					pushFollow(FOLLOW_grouping_element_in_group_by_elements11620);
					grouping_element();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1259:5: -> template( \"not implemented: group_by_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: group_by_elements");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "group_by_elements"


	public static class groupin_set_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "groupin_set"
	// PLSQLPrinter.g:1262:1: groupin_set : ^( GROUPIN_SET grouping_element ) -> template( \"not implemented: groupin_set\";
	public final PLSQLPrinter.groupin_set_return groupin_set() throws RecognitionException {
		PLSQLPrinter.groupin_set_return retval = new PLSQLPrinter.groupin_set_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1263:5: ( ^( GROUPIN_SET grouping_element ) -> template( \"not implemented: groupin_set\")
			// PLSQLPrinter.g:1263:10: ^( GROUPIN_SET grouping_element )
			{
			match(input,GROUPIN_SET,FOLLOW_GROUPIN_SET_in_groupin_set11656); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_grouping_element_in_groupin_set11658);
			grouping_element();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1264:5: -> template( \"not implemented: groupin_set\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: groupin_set");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "groupin_set"


	public static class grouping_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "grouping_element"
	// PLSQLPrinter.g:1267:1: grouping_element : ( ^( ( ROLLUP_VK | CUBE_VK ) ( grouping_element )+ ) -> template( \"not implemented: grouping_element\"| expression_list -> template( \"not implemented: grouping_element\"| expression -> template( \"not implemented: grouping_element\");
	public final PLSQLPrinter.grouping_element_return grouping_element() throws RecognitionException {
		PLSQLPrinter.grouping_element_return retval = new PLSQLPrinter.grouping_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1268:5: ( ^( ( ROLLUP_VK | CUBE_VK ) ( grouping_element )+ ) -> template( \"not implemented: grouping_element\"| expression_list -> template( \"not implemented: grouping_element\"| expression -> template( \"not implemented: grouping_element\")
			int alt288=3;
			switch ( input.LA(1) ) {
			case CUBE_VK:
			case ROLLUP_VK:
				{
				alt288=1;
				}
				break;
			case EXPR_LIST:
				{
				alt288=2;
				}
				break;
			case EXPR:
			case LOGIC_EXPR:
				{
				alt288=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 288, 0, input);
				throw nvae;
			}
			switch (alt288) {
				case 1 :
					// PLSQLPrinter.g:1268:10: ^( ( ROLLUP_VK | CUBE_VK ) ( grouping_element )+ )
					{
					// PLSQLPrinter.g:1268:12: ( ROLLUP_VK | CUBE_VK )
					int alt286=2;
					int LA286_0 = input.LA(1);
					if ( (LA286_0==ROLLUP_VK) ) {
						alt286=1;
					}
					else if ( (LA286_0==CUBE_VK) ) {
						alt286=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 286, 0, input);
						throw nvae;
					}

					switch (alt286) {
						case 1 :
							// PLSQLPrinter.g:1268:13: ROLLUP_VK
							{
							match(input,ROLLUP_VK,FOLLOW_ROLLUP_VK_in_grouping_element11695); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1268:23: CUBE_VK
							{
							match(input,CUBE_VK,FOLLOW_CUBE_VK_in_grouping_element11697); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1268:32: ( grouping_element )+
					int cnt287=0;
					loop287:
					while (true) {
						int alt287=2;
						int LA287_0 = input.LA(1);
						if ( (LA287_0==CUBE_VK||(LA287_0 >= EXPR && LA287_0 <= EXPR_LIST)||LA287_0==LOGIC_EXPR||LA287_0==ROLLUP_VK) ) {
							alt287=1;
						}

						switch (alt287) {
						case 1 :
							// PLSQLPrinter.g:1268:32: grouping_element
							{
							pushFollow(FOLLOW_grouping_element_in_grouping_element11700);
							grouping_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt287 >= 1 ) break loop287;
							EarlyExitException eee = new EarlyExitException(287, input);
							throw eee;
						}
						cnt287++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1269:5: -> template( \"not implemented: grouping_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: grouping_element");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1270:10: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_grouping_element11727);
					expression_list();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1271:5: -> template( \"not implemented: grouping_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: grouping_element");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1272:10: expression
					{
					pushFollow(FOLLOW_expression_in_grouping_element11752);
					expression();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1273:5: -> template( \"not implemented: grouping_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: grouping_element");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "grouping_element"


	public static class having_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "having_clause"
	// PLSQLPrinter.g:1276:1: having_clause : ^( SQL92_RESERVED_HAVING expression ) -> template( \"not implemented: having_clause\";
	public final PLSQLPrinter.having_clause_return having_clause() throws RecognitionException {
		PLSQLPrinter.having_clause_return retval = new PLSQLPrinter.having_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1277:5: ( ^( SQL92_RESERVED_HAVING expression ) -> template( \"not implemented: having_clause\")
			// PLSQLPrinter.g:1277:10: ^( SQL92_RESERVED_HAVING expression )
			{
			match(input,SQL92_RESERVED_HAVING,FOLLOW_SQL92_RESERVED_HAVING_in_having_clause11788); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_having_clause11790);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1278:5: -> template( \"not implemented: having_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: having_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "having_clause"


	public static class model_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_clause"
	// PLSQLPrinter.g:1281:1: model_clause : ^( PLSQL_NON_RESERVED_MODEL main_model ( cell_reference_options )* ( return_rows_clause )? ( reference_model )* ) -> template( \"not implemented: model_clause\";
	public final PLSQLPrinter.model_clause_return model_clause() throws RecognitionException {
		PLSQLPrinter.model_clause_return retval = new PLSQLPrinter.model_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1282:5: ( ^( PLSQL_NON_RESERVED_MODEL main_model ( cell_reference_options )* ( return_rows_clause )? ( reference_model )* ) -> template( \"not implemented: model_clause\")
			// PLSQLPrinter.g:1282:10: ^( PLSQL_NON_RESERVED_MODEL main_model ( cell_reference_options )* ( return_rows_clause )? ( reference_model )* )
			{
			match(input,PLSQL_NON_RESERVED_MODEL,FOLLOW_PLSQL_NON_RESERVED_MODEL_in_model_clause11826); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_main_model_in_model_clause11828);
			main_model();
			state._fsp--;

			// PLSQLPrinter.g:1282:48: ( cell_reference_options )*
			loop289:
			while (true) {
				int alt289=2;
				int LA289_0 = input.LA(1);
				if ( (LA289_0==SQL92_RESERVED_UNIQUE||LA289_0==IGNORE_VK||LA289_0==KEEP_VK) ) {
					alt289=1;
				}

				switch (alt289) {
				case 1 :
					// PLSQLPrinter.g:1282:48: cell_reference_options
					{
					pushFollow(FOLLOW_cell_reference_options_in_model_clause11830);
					cell_reference_options();
					state._fsp--;

					}
					break;

				default :
					break loop289;
				}
			}

			// PLSQLPrinter.g:1282:72: ( return_rows_clause )?
			int alt290=2;
			int LA290_0 = input.LA(1);
			if ( (LA290_0==RETURN_VK) ) {
				alt290=1;
			}
			switch (alt290) {
				case 1 :
					// PLSQLPrinter.g:1282:72: return_rows_clause
					{
					pushFollow(FOLLOW_return_rows_clause_in_model_clause11833);
					return_rows_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1282:92: ( reference_model )*
			loop291:
			while (true) {
				int alt291=2;
				int LA291_0 = input.LA(1);
				if ( (LA291_0==REFERENCE_VK) ) {
					alt291=1;
				}

				switch (alt291) {
				case 1 :
					// PLSQLPrinter.g:1282:92: reference_model
					{
					pushFollow(FOLLOW_reference_model_in_model_clause11836);
					reference_model();
					state._fsp--;

					}
					break;

				default :
					break loop291;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1283:5: -> template( \"not implemented: model_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: model_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_clause"


	public static class cell_reference_options_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "cell_reference_options"
	// PLSQLPrinter.g:1286:1: cell_reference_options : ( ^( ( IGNORE_VK | KEEP_VK ) NAV_VK ) | ^( SQL92_RESERVED_UNIQUE ( DIMENSION_VK | SINGLE_VK ) ) -> template( \"not implemented: cell_reference_options\");
	public final PLSQLPrinter.cell_reference_options_return cell_reference_options() throws RecognitionException {
		PLSQLPrinter.cell_reference_options_return retval = new PLSQLPrinter.cell_reference_options_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1287:5: ( ^( ( IGNORE_VK | KEEP_VK ) NAV_VK ) | ^( SQL92_RESERVED_UNIQUE ( DIMENSION_VK | SINGLE_VK ) ) -> template( \"not implemented: cell_reference_options\")
			int alt293=2;
			int LA293_0 = input.LA(1);
			if ( (LA293_0==IGNORE_VK||LA293_0==KEEP_VK) ) {
				alt293=1;
			}
			else if ( (LA293_0==SQL92_RESERVED_UNIQUE) ) {
				alt293=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 293, 0, input);
				throw nvae;
			}

			switch (alt293) {
				case 1 :
					// PLSQLPrinter.g:1287:10: ^( ( IGNORE_VK | KEEP_VK ) NAV_VK )
					{
					if ( input.LA(1)==IGNORE_VK||input.LA(1)==KEEP_VK ) {
						input.consume();
						state.errorRecovery=false;
					}
					else {
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					match(input, Token.DOWN, null); 
					match(input,NAV_VK,FOLLOW_NAV_VK_in_cell_reference_options11879); 
					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1288:10: ^( SQL92_RESERVED_UNIQUE ( DIMENSION_VK | SINGLE_VK ) )
					{
					match(input,SQL92_RESERVED_UNIQUE,FOLLOW_SQL92_RESERVED_UNIQUE_in_cell_reference_options11892); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1288:34: ( DIMENSION_VK | SINGLE_VK )
					int alt292=2;
					int LA292_0 = input.LA(1);
					if ( (LA292_0==DIMENSION_VK) ) {
						alt292=1;
					}
					else if ( (LA292_0==SINGLE_VK) ) {
						alt292=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 292, 0, input);
						throw nvae;
					}

					switch (alt292) {
						case 1 :
							// PLSQLPrinter.g:1288:35: DIMENSION_VK
							{
							match(input,DIMENSION_VK,FOLLOW_DIMENSION_VK_in_cell_reference_options11895); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1288:48: SINGLE_VK
							{
							match(input,SINGLE_VK,FOLLOW_SINGLE_VK_in_cell_reference_options11897); 
							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1289:5: -> template( \"not implemented: cell_reference_options\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: cell_reference_options");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cell_reference_options"


	public static class return_rows_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "return_rows_clause"
	// PLSQLPrinter.g:1292:1: return_rows_clause : ^( RETURN_VK ( UPDATED_VK | SQL92_RESERVED_ALL ) ) -> template( \"not implemented: return_rows_clause\";
	public final PLSQLPrinter.return_rows_clause_return return_rows_clause() throws RecognitionException {
		PLSQLPrinter.return_rows_clause_return retval = new PLSQLPrinter.return_rows_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1293:5: ( ^( RETURN_VK ( UPDATED_VK | SQL92_RESERVED_ALL ) ) -> template( \"not implemented: return_rows_clause\")
			// PLSQLPrinter.g:1293:10: ^( RETURN_VK ( UPDATED_VK | SQL92_RESERVED_ALL ) )
			{
			match(input,RETURN_VK,FOLLOW_RETURN_VK_in_return_rows_clause11934); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1293:22: ( UPDATED_VK | SQL92_RESERVED_ALL )
			int alt294=2;
			int LA294_0 = input.LA(1);
			if ( (LA294_0==UPDATED_VK) ) {
				alt294=1;
			}
			else if ( (LA294_0==SQL92_RESERVED_ALL) ) {
				alt294=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 294, 0, input);
				throw nvae;
			}

			switch (alt294) {
				case 1 :
					// PLSQLPrinter.g:1293:23: UPDATED_VK
					{
					match(input,UPDATED_VK,FOLLOW_UPDATED_VK_in_return_rows_clause11937); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1293:34: SQL92_RESERVED_ALL
					{
					match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_return_rows_clause11939); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1294:5: -> template( \"not implemented: return_rows_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: return_rows_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "return_rows_clause"


	public static class reference_model_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "reference_model"
	// PLSQLPrinter.g:1297:1: reference_model : ^( REFERENCE_VK reference_model_name subquery model_column_clauses ( cell_reference_options )* ) -> template( \"not implemented: reference_model\";
	public final PLSQLPrinter.reference_model_return reference_model() throws RecognitionException {
		PLSQLPrinter.reference_model_return retval = new PLSQLPrinter.reference_model_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1298:5: ( ^( REFERENCE_VK reference_model_name subquery model_column_clauses ( cell_reference_options )* ) -> template( \"not implemented: reference_model\")
			// PLSQLPrinter.g:1298:10: ^( REFERENCE_VK reference_model_name subquery model_column_clauses ( cell_reference_options )* )
			{
			match(input,REFERENCE_VK,FOLLOW_REFERENCE_VK_in_reference_model11976); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_reference_model_name_in_reference_model11978);
			reference_model_name();
			state._fsp--;

			pushFollow(FOLLOW_subquery_in_reference_model11980);
			subquery();
			state._fsp--;

			pushFollow(FOLLOW_model_column_clauses_in_reference_model11982);
			model_column_clauses();
			state._fsp--;

			// PLSQLPrinter.g:1298:76: ( cell_reference_options )*
			loop295:
			while (true) {
				int alt295=2;
				int LA295_0 = input.LA(1);
				if ( (LA295_0==SQL92_RESERVED_UNIQUE||LA295_0==IGNORE_VK||LA295_0==KEEP_VK) ) {
					alt295=1;
				}

				switch (alt295) {
				case 1 :
					// PLSQLPrinter.g:1298:76: cell_reference_options
					{
					pushFollow(FOLLOW_cell_reference_options_in_reference_model11984);
					cell_reference_options();
					state._fsp--;

					}
					break;

				default :
					break loop295;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1299:5: -> template( \"not implemented: reference_model\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: reference_model");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "reference_model"


	public static class main_model_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "main_model"
	// PLSQLPrinter.g:1302:1: main_model : ^( MAIN_MODEL ( main_model_name )? model_column_clauses model_rules_clause ( cell_reference_options )* ) -> template( \"not implemented: main_model\";
	public final PLSQLPrinter.main_model_return main_model() throws RecognitionException {
		PLSQLPrinter.main_model_return retval = new PLSQLPrinter.main_model_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1303:5: ( ^( MAIN_MODEL ( main_model_name )? model_column_clauses model_rules_clause ( cell_reference_options )* ) -> template( \"not implemented: main_model\")
			// PLSQLPrinter.g:1303:10: ^( MAIN_MODEL ( main_model_name )? model_column_clauses model_rules_clause ( cell_reference_options )* )
			{
			match(input,MAIN_MODEL,FOLLOW_MAIN_MODEL_in_main_model12021); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1303:23: ( main_model_name )?
			int alt296=2;
			int LA296_0 = input.LA(1);
			if ( (LA296_0==MAIN_MODEL_NAME) ) {
				alt296=1;
			}
			switch (alt296) {
				case 1 :
					// PLSQLPrinter.g:1303:23: main_model_name
					{
					pushFollow(FOLLOW_main_model_name_in_main_model12023);
					main_model_name();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_model_column_clauses_in_main_model12026);
			model_column_clauses();
			state._fsp--;

			pushFollow(FOLLOW_model_rules_clause_in_main_model12028);
			model_rules_clause();
			state._fsp--;

			// PLSQLPrinter.g:1303:80: ( cell_reference_options )*
			loop297:
			while (true) {
				int alt297=2;
				int LA297_0 = input.LA(1);
				if ( (LA297_0==SQL92_RESERVED_UNIQUE||LA297_0==IGNORE_VK||LA297_0==KEEP_VK) ) {
					alt297=1;
				}

				switch (alt297) {
				case 1 :
					// PLSQLPrinter.g:1303:80: cell_reference_options
					{
					pushFollow(FOLLOW_cell_reference_options_in_main_model12030);
					cell_reference_options();
					state._fsp--;

					}
					break;

				default :
					break loop297;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1304:5: -> template( \"not implemented: main_model\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: main_model");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "main_model"


	public static class model_column_clauses_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_column_clauses"
	// PLSQLPrinter.g:1307:1: model_column_clauses : ^( MODEL_COLUMN ^( DIMENSION_VK model_column_list ) ^( MEASURES_VK model_column_list ) ( model_column_partition_part )? ) -> template( \"not implemented: model_column_clauses\";
	public final PLSQLPrinter.model_column_clauses_return model_column_clauses() throws RecognitionException {
		PLSQLPrinter.model_column_clauses_return retval = new PLSQLPrinter.model_column_clauses_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1308:5: ( ^( MODEL_COLUMN ^( DIMENSION_VK model_column_list ) ^( MEASURES_VK model_column_list ) ( model_column_partition_part )? ) -> template( \"not implemented: model_column_clauses\")
			// PLSQLPrinter.g:1308:10: ^( MODEL_COLUMN ^( DIMENSION_VK model_column_list ) ^( MEASURES_VK model_column_list ) ( model_column_partition_part )? )
			{
			match(input,MODEL_COLUMN,FOLLOW_MODEL_COLUMN_in_model_column_clauses12067); 
			match(input, Token.DOWN, null); 
			match(input,DIMENSION_VK,FOLLOW_DIMENSION_VK_in_model_column_clauses12070); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_model_column_list_in_model_column_clauses12072);
			model_column_list();
			state._fsp--;

			match(input, Token.UP, null); 

			match(input,MEASURES_VK,FOLLOW_MEASURES_VK_in_model_column_clauses12076); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_model_column_list_in_model_column_clauses12078);
			model_column_list();
			state._fsp--;

			match(input, Token.UP, null); 

			// PLSQLPrinter.g:1308:92: ( model_column_partition_part )?
			int alt298=2;
			int LA298_0 = input.LA(1);
			if ( (LA298_0==PARTITION_VK) ) {
				alt298=1;
			}
			switch (alt298) {
				case 1 :
					// PLSQLPrinter.g:1308:92: model_column_partition_part
					{
					pushFollow(FOLLOW_model_column_partition_part_in_model_column_clauses12081);
					model_column_partition_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1309:5: -> template( \"not implemented: model_column_clauses\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: model_column_clauses");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_column_clauses"


	public static class model_column_partition_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_column_partition_part"
	// PLSQLPrinter.g:1312:1: model_column_partition_part : ^( PARTITION_VK model_column_list ) -> template( \"not implemented: model_column_partition_part\";
	public final PLSQLPrinter.model_column_partition_part_return model_column_partition_part() throws RecognitionException {
		PLSQLPrinter.model_column_partition_part_return retval = new PLSQLPrinter.model_column_partition_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1313:5: ( ^( PARTITION_VK model_column_list ) -> template( \"not implemented: model_column_partition_part\")
			// PLSQLPrinter.g:1313:10: ^( PARTITION_VK model_column_list )
			{
			match(input,PARTITION_VK,FOLLOW_PARTITION_VK_in_model_column_partition_part12118); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_model_column_list_in_model_column_partition_part12120);
			model_column_list();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1314:5: -> template( \"not implemented: model_column_partition_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: model_column_partition_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_column_partition_part"


	public static class model_column_list_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_column_list"
	// PLSQLPrinter.g:1317:1: model_column_list : ^( MODEL_COLUMNS ( model_column )+ ) -> template( \"not implemented: model_column_list\";
	public final PLSQLPrinter.model_column_list_return model_column_list() throws RecognitionException {
		PLSQLPrinter.model_column_list_return retval = new PLSQLPrinter.model_column_list_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1318:5: ( ^( MODEL_COLUMNS ( model_column )+ ) -> template( \"not implemented: model_column_list\")
			// PLSQLPrinter.g:1318:10: ^( MODEL_COLUMNS ( model_column )+ )
			{
			match(input,MODEL_COLUMNS,FOLLOW_MODEL_COLUMNS_in_model_column_list12156); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1318:26: ( model_column )+
			int cnt299=0;
			loop299:
			while (true) {
				int alt299=2;
				int LA299_0 = input.LA(1);
				if ( (LA299_0==MODEL_COLUMN) ) {
					alt299=1;
				}

				switch (alt299) {
				case 1 :
					// PLSQLPrinter.g:1318:26: model_column
					{
					pushFollow(FOLLOW_model_column_in_model_column_list12158);
					model_column();
					state._fsp--;

					}
					break;

				default :
					if ( cnt299 >= 1 ) break loop299;
					EarlyExitException eee = new EarlyExitException(299, input);
					throw eee;
				}
				cnt299++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1319:5: -> template( \"not implemented: model_column_list\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: model_column_list");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_column_list"


	public static class model_column_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_column"
	// PLSQLPrinter.g:1322:1: model_column : ^( MODEL_COLUMN ( alias )? expression ) -> template( \"not implemented: model_column\";
	public final PLSQLPrinter.model_column_return model_column() throws RecognitionException {
		PLSQLPrinter.model_column_return retval = new PLSQLPrinter.model_column_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1323:5: ( ^( MODEL_COLUMN ( alias )? expression ) -> template( \"not implemented: model_column\")
			// PLSQLPrinter.g:1323:10: ^( MODEL_COLUMN ( alias )? expression )
			{
			match(input,MODEL_COLUMN,FOLLOW_MODEL_COLUMN_in_model_column12195); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1323:25: ( alias )?
			int alt300=2;
			int LA300_0 = input.LA(1);
			if ( (LA300_0==ALIAS) ) {
				alt300=1;
			}
			switch (alt300) {
				case 1 :
					// PLSQLPrinter.g:1323:25: alias
					{
					pushFollow(FOLLOW_alias_in_model_column12197);
					alias();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_expression_in_model_column12200);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1324:5: -> template( \"not implemented: model_column\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: model_column");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_column"


	public static class model_rules_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_rules_clause"
	// PLSQLPrinter.g:1327:1: model_rules_clause : ^( MODEL_RULES ( model_rules_element )+ ( model_rules_part )? ) -> template( \"not implemented: model_rules_clause\";
	public final PLSQLPrinter.model_rules_clause_return model_rules_clause() throws RecognitionException {
		PLSQLPrinter.model_rules_clause_return retval = new PLSQLPrinter.model_rules_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1328:5: ( ^( MODEL_RULES ( model_rules_element )+ ( model_rules_part )? ) -> template( \"not implemented: model_rules_clause\")
			// PLSQLPrinter.g:1328:10: ^( MODEL_RULES ( model_rules_element )+ ( model_rules_part )? )
			{
			match(input,MODEL_RULES,FOLLOW_MODEL_RULES_in_model_rules_clause12237); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1328:24: ( model_rules_element )+
			int cnt301=0;
			loop301:
			while (true) {
				int alt301=2;
				int LA301_0 = input.LA(1);
				if ( (LA301_0==MODEL_RULE) ) {
					alt301=1;
				}

				switch (alt301) {
				case 1 :
					// PLSQLPrinter.g:1328:24: model_rules_element
					{
					pushFollow(FOLLOW_model_rules_element_in_model_rules_clause12239);
					model_rules_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt301 >= 1 ) break loop301;
					EarlyExitException eee = new EarlyExitException(301, input);
					throw eee;
				}
				cnt301++;
			}

			// PLSQLPrinter.g:1328:45: ( model_rules_part )?
			int alt302=2;
			int LA302_0 = input.LA(1);
			if ( (LA302_0==RULES_VK) ) {
				alt302=1;
			}
			switch (alt302) {
				case 1 :
					// PLSQLPrinter.g:1328:45: model_rules_part
					{
					pushFollow(FOLLOW_model_rules_part_in_model_rules_clause12242);
					model_rules_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1329:5: -> template( \"not implemented: model_rules_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: model_rules_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_rules_clause"


	public static class model_rules_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_rules_part"
	// PLSQLPrinter.g:1332:1: model_rules_part : ^( RULES_VK ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )? ( AUTOMATIC_VK | SEQUENTIAL_VK )? ( model_iterate_clause )? ) -> template( \"not implemented: model_rules_part\";
	public final PLSQLPrinter.model_rules_part_return model_rules_part() throws RecognitionException {
		PLSQLPrinter.model_rules_part_return retval = new PLSQLPrinter.model_rules_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1333:5: ( ^( RULES_VK ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )? ( AUTOMATIC_VK | SEQUENTIAL_VK )? ( model_iterate_clause )? ) -> template( \"not implemented: model_rules_part\")
			// PLSQLPrinter.g:1333:10: ^( RULES_VK ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )? ( AUTOMATIC_VK | SEQUENTIAL_VK )? ( model_iterate_clause )? )
			{
			match(input,RULES_VK,FOLLOW_RULES_VK_in_model_rules_part12279); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1334:13: ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )?
				int alt304=3;
				int LA304_0 = input.LA(1);
				if ( (LA304_0==SQL92_RESERVED_UPDATE) ) {
					alt304=1;
				}
				else if ( (LA304_0==UPSERT_VK) ) {
					alt304=2;
				}
				switch (alt304) {
					case 1 :
						// PLSQLPrinter.g:1334:14: SQL92_RESERVED_UPDATE
						{
						match(input,SQL92_RESERVED_UPDATE,FOLLOW_SQL92_RESERVED_UPDATE_in_model_rules_part12295); 
						}
						break;
					case 2 :
						// PLSQLPrinter.g:1334:36: UPSERT_VK ( SQL92_RESERVED_ALL )?
						{
						match(input,UPSERT_VK,FOLLOW_UPSERT_VK_in_model_rules_part12297); 
						// PLSQLPrinter.g:1334:46: ( SQL92_RESERVED_ALL )?
						int alt303=2;
						int LA303_0 = input.LA(1);
						if ( (LA303_0==SQL92_RESERVED_ALL) ) {
							alt303=1;
						}
						switch (alt303) {
							case 1 :
								// PLSQLPrinter.g:1334:46: SQL92_RESERVED_ALL
								{
								match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_model_rules_part12299); 
								}
								break;

						}

						}
						break;

				}

				// PLSQLPrinter.g:1335:13: ( AUTOMATIC_VK | SEQUENTIAL_VK )?
				int alt305=3;
				int LA305_0 = input.LA(1);
				if ( (LA305_0==AUTOMATIC_VK) ) {
					alt305=1;
				}
				else if ( (LA305_0==SEQUENTIAL_VK) ) {
					alt305=2;
				}
				switch (alt305) {
					case 1 :
						// PLSQLPrinter.g:1335:14: AUTOMATIC_VK
						{
						match(input,AUTOMATIC_VK,FOLLOW_AUTOMATIC_VK_in_model_rules_part12318); 
						}
						break;
					case 2 :
						// PLSQLPrinter.g:1335:27: SEQUENTIAL_VK
						{
						match(input,SEQUENTIAL_VK,FOLLOW_SEQUENTIAL_VK_in_model_rules_part12320); 
						}
						break;

				}

				// PLSQLPrinter.g:1336:13: ( model_iterate_clause )?
				int alt306=2;
				int LA306_0 = input.LA(1);
				if ( (LA306_0==ITERATE_VK) ) {
					alt306=1;
				}
				switch (alt306) {
					case 1 :
						// PLSQLPrinter.g:1336:13: model_iterate_clause
						{
						pushFollow(FOLLOW_model_iterate_clause_in_model_rules_part12337);
						model_iterate_clause();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1338:5: -> template( \"not implemented: model_rules_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: model_rules_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_rules_part"


	public static class model_rules_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_rules_element"
	// PLSQLPrinter.g:1341:1: model_rules_element : ^( MODEL_RULE ^( ASSIGN model_expression expression ) ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )? ( order_by_clause )? ) -> template( \"not implemented: model_rules_element\";
	public final PLSQLPrinter.model_rules_element_return model_rules_element() throws RecognitionException {
		PLSQLPrinter.model_rules_element_return retval = new PLSQLPrinter.model_rules_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1342:5: ( ^( MODEL_RULE ^( ASSIGN model_expression expression ) ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )? ( order_by_clause )? ) -> template( \"not implemented: model_rules_element\")
			// PLSQLPrinter.g:1342:10: ^( MODEL_RULE ^( ASSIGN model_expression expression ) ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )? ( order_by_clause )? )
			{
			match(input,MODEL_RULE,FOLLOW_MODEL_RULE_in_model_rules_element12383); 
			match(input, Token.DOWN, null); 
			match(input,ASSIGN,FOLLOW_ASSIGN_in_model_rules_element12399); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_model_expression_in_model_rules_element12401);
			model_expression();
			state._fsp--;

			pushFollow(FOLLOW_expression_in_model_rules_element12403);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// PLSQLPrinter.g:1344:13: ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )?
			int alt308=3;
			int LA308_0 = input.LA(1);
			if ( (LA308_0==SQL92_RESERVED_UPDATE) ) {
				alt308=1;
			}
			else if ( (LA308_0==UPSERT_VK) ) {
				alt308=2;
			}
			switch (alt308) {
				case 1 :
					// PLSQLPrinter.g:1344:14: SQL92_RESERVED_UPDATE
					{
					match(input,SQL92_RESERVED_UPDATE,FOLLOW_SQL92_RESERVED_UPDATE_in_model_rules_element12420); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1344:36: UPSERT_VK ( SQL92_RESERVED_ALL )?
					{
					match(input,UPSERT_VK,FOLLOW_UPSERT_VK_in_model_rules_element12422); 
					// PLSQLPrinter.g:1344:46: ( SQL92_RESERVED_ALL )?
					int alt307=2;
					int LA307_0 = input.LA(1);
					if ( (LA307_0==SQL92_RESERVED_ALL) ) {
						alt307=1;
					}
					switch (alt307) {
						case 1 :
							// PLSQLPrinter.g:1344:46: SQL92_RESERVED_ALL
							{
							match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_model_rules_element12424); 
							}
							break;

					}

					}
					break;

			}

			// PLSQLPrinter.g:1345:13: ( order_by_clause )?
			int alt309=2;
			int LA309_0 = input.LA(1);
			if ( (LA309_0==SQL92_RESERVED_ORDER) ) {
				alt309=1;
			}
			switch (alt309) {
				case 1 :
					// PLSQLPrinter.g:1345:13: order_by_clause
					{
					pushFollow(FOLLOW_order_by_clause_in_model_rules_element12442);
					order_by_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1347:5: -> template( \"not implemented: model_rules_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: model_rules_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_rules_element"


	public static class model_iterate_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_iterate_clause"
	// PLSQLPrinter.g:1350:1: model_iterate_clause : ^( ITERATE_VK expression ( until_part )? ) -> template( \"not implemented: model_iterate_clause\";
	public final PLSQLPrinter.model_iterate_clause_return model_iterate_clause() throws RecognitionException {
		PLSQLPrinter.model_iterate_clause_return retval = new PLSQLPrinter.model_iterate_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1351:5: ( ^( ITERATE_VK expression ( until_part )? ) -> template( \"not implemented: model_iterate_clause\")
			// PLSQLPrinter.g:1351:10: ^( ITERATE_VK expression ( until_part )? )
			{
			match(input,ITERATE_VK,FOLLOW_ITERATE_VK_in_model_iterate_clause12488); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_model_iterate_clause12490);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:1351:34: ( until_part )?
			int alt310=2;
			int LA310_0 = input.LA(1);
			if ( (LA310_0==UNTIL_VK) ) {
				alt310=1;
			}
			switch (alt310) {
				case 1 :
					// PLSQLPrinter.g:1351:34: until_part
					{
					pushFollow(FOLLOW_until_part_in_model_iterate_clause12492);
					until_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1352:5: -> template( \"not implemented: model_iterate_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: model_iterate_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_iterate_clause"


	public static class until_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "until_part"
	// PLSQLPrinter.g:1355:1: until_part : ^( UNTIL_VK expression ) -> template( \"not implemented: until_part\";
	public final PLSQLPrinter.until_part_return until_part() throws RecognitionException {
		PLSQLPrinter.until_part_return retval = new PLSQLPrinter.until_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1356:5: ( ^( UNTIL_VK expression ) -> template( \"not implemented: until_part\")
			// PLSQLPrinter.g:1356:10: ^( UNTIL_VK expression )
			{
			match(input,UNTIL_VK,FOLLOW_UNTIL_VK_in_until_part12529); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_until_part12531);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1357:5: -> template( \"not implemented: until_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: until_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "until_part"


	public static class order_by_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "order_by_clause"
	// PLSQLPrinter.g:1360:1: order_by_clause : ^( SQL92_RESERVED_ORDER ( SIBLINGS_VK )? ^( ORDER_BY_ELEMENTS ( order_by_elements )+ ) ) -> template( \"not implemented: order_by_clause\";
	public final PLSQLPrinter.order_by_clause_return order_by_clause() throws RecognitionException {
		PLSQLPrinter.order_by_clause_return retval = new PLSQLPrinter.order_by_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1361:5: ( ^( SQL92_RESERVED_ORDER ( SIBLINGS_VK )? ^( ORDER_BY_ELEMENTS ( order_by_elements )+ ) ) -> template( \"not implemented: order_by_clause\")
			// PLSQLPrinter.g:1361:10: ^( SQL92_RESERVED_ORDER ( SIBLINGS_VK )? ^( ORDER_BY_ELEMENTS ( order_by_elements )+ ) )
			{
			match(input,SQL92_RESERVED_ORDER,FOLLOW_SQL92_RESERVED_ORDER_in_order_by_clause12567); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1361:33: ( SIBLINGS_VK )?
			int alt311=2;
			int LA311_0 = input.LA(1);
			if ( (LA311_0==SIBLINGS_VK) ) {
				alt311=1;
			}
			switch (alt311) {
				case 1 :
					// PLSQLPrinter.g:1361:33: SIBLINGS_VK
					{
					match(input,SIBLINGS_VK,FOLLOW_SIBLINGS_VK_in_order_by_clause12569); 
					}
					break;

			}

			match(input,ORDER_BY_ELEMENTS,FOLLOW_ORDER_BY_ELEMENTS_in_order_by_clause12573); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1361:66: ( order_by_elements )+
			int cnt312=0;
			loop312:
			while (true) {
				int alt312=2;
				int LA312_0 = input.LA(1);
				if ( (LA312_0==ORDER_BY_ELEMENT) ) {
					alt312=1;
				}

				switch (alt312) {
				case 1 :
					// PLSQLPrinter.g:1361:66: order_by_elements
					{
					pushFollow(FOLLOW_order_by_elements_in_order_by_clause12575);
					order_by_elements();
					state._fsp--;

					}
					break;

				default :
					if ( cnt312 >= 1 ) break loop312;
					EarlyExitException eee = new EarlyExitException(312, input);
					throw eee;
				}
				cnt312++;
			}

			match(input, Token.UP, null); 

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1362:5: -> template( \"not implemented: order_by_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: order_by_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "order_by_clause"


	public static class order_by_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "order_by_elements"
	// PLSQLPrinter.g:1365:1: order_by_elements : ^( ORDER_BY_ELEMENT expression ( SQL92_RESERVED_ASC | SQL92_RESERVED_DESC )? ( NULLS_VK ( FIRST_VK | LAST_VK ) )? ) -> template( \"not implemented: order_by_elements\";
	public final PLSQLPrinter.order_by_elements_return order_by_elements() throws RecognitionException {
		PLSQLPrinter.order_by_elements_return retval = new PLSQLPrinter.order_by_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1366:5: ( ^( ORDER_BY_ELEMENT expression ( SQL92_RESERVED_ASC | SQL92_RESERVED_DESC )? ( NULLS_VK ( FIRST_VK | LAST_VK ) )? ) -> template( \"not implemented: order_by_elements\")
			// PLSQLPrinter.g:1366:10: ^( ORDER_BY_ELEMENT expression ( SQL92_RESERVED_ASC | SQL92_RESERVED_DESC )? ( NULLS_VK ( FIRST_VK | LAST_VK ) )? )
			{
			match(input,ORDER_BY_ELEMENT,FOLLOW_ORDER_BY_ELEMENT_in_order_by_elements12613); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_order_by_elements12615);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:1366:40: ( SQL92_RESERVED_ASC | SQL92_RESERVED_DESC )?
			int alt313=3;
			int LA313_0 = input.LA(1);
			if ( (LA313_0==SQL92_RESERVED_ASC) ) {
				alt313=1;
			}
			else if ( (LA313_0==SQL92_RESERVED_DESC) ) {
				alt313=2;
			}
			switch (alt313) {
				case 1 :
					// PLSQLPrinter.g:1366:41: SQL92_RESERVED_ASC
					{
					match(input,SQL92_RESERVED_ASC,FOLLOW_SQL92_RESERVED_ASC_in_order_by_elements12618); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1366:60: SQL92_RESERVED_DESC
					{
					match(input,SQL92_RESERVED_DESC,FOLLOW_SQL92_RESERVED_DESC_in_order_by_elements12620); 
					}
					break;

			}

			// PLSQLPrinter.g:1366:82: ( NULLS_VK ( FIRST_VK | LAST_VK ) )?
			int alt315=2;
			int LA315_0 = input.LA(1);
			if ( (LA315_0==NULLS_VK) ) {
				alt315=1;
			}
			switch (alt315) {
				case 1 :
					// PLSQLPrinter.g:1366:83: NULLS_VK ( FIRST_VK | LAST_VK )
					{
					match(input,NULLS_VK,FOLLOW_NULLS_VK_in_order_by_elements12625); 
					// PLSQLPrinter.g:1366:92: ( FIRST_VK | LAST_VK )
					int alt314=2;
					int LA314_0 = input.LA(1);
					if ( (LA314_0==FIRST_VK) ) {
						alt314=1;
					}
					else if ( (LA314_0==LAST_VK) ) {
						alt314=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 314, 0, input);
						throw nvae;
					}

					switch (alt314) {
						case 1 :
							// PLSQLPrinter.g:1366:93: FIRST_VK
							{
							match(input,FIRST_VK,FOLLOW_FIRST_VK_in_order_by_elements12628); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1366:102: LAST_VK
							{
							match(input,LAST_VK,FOLLOW_LAST_VK_in_order_by_elements12630); 
							}
							break;

					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1367:5: -> template( \"not implemented: order_by_elements\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: order_by_elements");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "order_by_elements"


	public static class for_update_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "for_update_clause"
	// PLSQLPrinter.g:1370:1: for_update_clause : ^( SQL92_RESERVED_FOR ( for_update_of_part )? ( for_update_options )? ) -> template( \"not implemented: for_update_clause\";
	public final PLSQLPrinter.for_update_clause_return for_update_clause() throws RecognitionException {
		PLSQLPrinter.for_update_clause_return retval = new PLSQLPrinter.for_update_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1371:5: ( ^( SQL92_RESERVED_FOR ( for_update_of_part )? ( for_update_options )? ) -> template( \"not implemented: for_update_clause\")
			// PLSQLPrinter.g:1371:10: ^( SQL92_RESERVED_FOR ( for_update_of_part )? ( for_update_options )? )
			{
			match(input,SQL92_RESERVED_FOR,FOLLOW_SQL92_RESERVED_FOR_in_for_update_clause12669); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1371:31: ( for_update_of_part )?
				int alt316=2;
				int LA316_0 = input.LA(1);
				if ( (LA316_0==SQL92_RESERVED_OF) ) {
					alt316=1;
				}
				switch (alt316) {
					case 1 :
						// PLSQLPrinter.g:1371:31: for_update_of_part
						{
						pushFollow(FOLLOW_for_update_of_part_in_for_update_clause12671);
						for_update_of_part();
						state._fsp--;

						}
						break;

				}

				// PLSQLPrinter.g:1371:51: ( for_update_options )?
				int alt317=2;
				int LA317_0 = input.LA(1);
				if ( (LA317_0==PLSQL_RESERVED_NOWAIT||LA317_0==SKIP_VK||LA317_0==WAIT_VK) ) {
					alt317=1;
				}
				switch (alt317) {
					case 1 :
						// PLSQLPrinter.g:1371:51: for_update_options
						{
						pushFollow(FOLLOW_for_update_options_in_for_update_clause12674);
						for_update_options();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1372:5: -> template( \"not implemented: for_update_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: for_update_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "for_update_clause"


	public static class for_update_of_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "for_update_of_part"
	// PLSQLPrinter.g:1375:1: for_update_of_part : ^( SQL92_RESERVED_OF ( column_name )+ ) -> template( \"not implemented: for_update_of_part\";
	public final PLSQLPrinter.for_update_of_part_return for_update_of_part() throws RecognitionException {
		PLSQLPrinter.for_update_of_part_return retval = new PLSQLPrinter.for_update_of_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1376:5: ( ^( SQL92_RESERVED_OF ( column_name )+ ) -> template( \"not implemented: for_update_of_part\")
			// PLSQLPrinter.g:1376:10: ^( SQL92_RESERVED_OF ( column_name )+ )
			{
			match(input,SQL92_RESERVED_OF,FOLLOW_SQL92_RESERVED_OF_in_for_update_of_part12711); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1376:30: ( column_name )+
			int cnt318=0;
			loop318:
			while (true) {
				int alt318=2;
				int LA318_0 = input.LA(1);
				if ( (LA318_0==COLUMN_NAME) ) {
					alt318=1;
				}

				switch (alt318) {
				case 1 :
					// PLSQLPrinter.g:1376:30: column_name
					{
					pushFollow(FOLLOW_column_name_in_for_update_of_part12713);
					column_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt318 >= 1 ) break loop318;
					EarlyExitException eee = new EarlyExitException(318, input);
					throw eee;
				}
				cnt318++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1377:5: -> template( \"not implemented: for_update_of_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: for_update_of_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "for_update_of_part"


	public static class for_update_options_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "for_update_options"
	// PLSQLPrinter.g:1380:1: for_update_options : ( SKIP_VK -> template( \"not implemented: for_update_options\"| PLSQL_RESERVED_NOWAIT -> template( \"not implemented: for_update_options\"| ^( WAIT_VK expression ) -> template( \"not implemented: for_update_options\");
	public final PLSQLPrinter.for_update_options_return for_update_options() throws RecognitionException {
		PLSQLPrinter.for_update_options_return retval = new PLSQLPrinter.for_update_options_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1381:5: ( SKIP_VK -> template( \"not implemented: for_update_options\"| PLSQL_RESERVED_NOWAIT -> template( \"not implemented: for_update_options\"| ^( WAIT_VK expression ) -> template( \"not implemented: for_update_options\")
			int alt319=3;
			switch ( input.LA(1) ) {
			case SKIP_VK:
				{
				alt319=1;
				}
				break;
			case PLSQL_RESERVED_NOWAIT:
				{
				alt319=2;
				}
				break;
			case WAIT_VK:
				{
				alt319=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 319, 0, input);
				throw nvae;
			}
			switch (alt319) {
				case 1 :
					// PLSQLPrinter.g:1381:10: SKIP_VK
					{
					match(input,SKIP_VK,FOLLOW_SKIP_VK_in_for_update_options12749); 
					// TEMPLATE REWRITE
					// 1382:5: -> template( \"not implemented: for_update_options\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: for_update_options");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1383:10: PLSQL_RESERVED_NOWAIT
					{
					match(input,PLSQL_RESERVED_NOWAIT,FOLLOW_PLSQL_RESERVED_NOWAIT_in_for_update_options12774); 
					// TEMPLATE REWRITE
					// 1384:5: -> template( \"not implemented: for_update_options\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: for_update_options");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1385:10: ^( WAIT_VK expression )
					{
					match(input,WAIT_VK,FOLLOW_WAIT_VK_in_for_update_options12800); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_for_update_options12802);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1386:5: -> template( \"not implemented: for_update_options\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: for_update_options");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "for_update_options"


	public static class update_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "update_statement"
	// PLSQLPrinter.g:1391:1: update_statement : ^( SQL92_RESERVED_UPDATE general_table_ref update_set_clause ( where_clause )? ( static_returning_clause )? ( error_logging_clause )? ) -> template( \"not implemented: update_statement\";
	public final PLSQLPrinter.update_statement_return update_statement() throws RecognitionException {
		PLSQLPrinter.update_statement_return retval = new PLSQLPrinter.update_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1392:5: ( ^( SQL92_RESERVED_UPDATE general_table_ref update_set_clause ( where_clause )? ( static_returning_clause )? ( error_logging_clause )? ) -> template( \"not implemented: update_statement\")
			// PLSQLPrinter.g:1392:10: ^( SQL92_RESERVED_UPDATE general_table_ref update_set_clause ( where_clause )? ( static_returning_clause )? ( error_logging_clause )? )
			{
			match(input,SQL92_RESERVED_UPDATE,FOLLOW_SQL92_RESERVED_UPDATE_in_update_statement12840); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_general_table_ref_in_update_statement12842);
			general_table_ref();
			state._fsp--;

			pushFollow(FOLLOW_update_set_clause_in_update_statement12856);
			update_set_clause();
			state._fsp--;

			// PLSQLPrinter.g:1394:13: ( where_clause )?
			int alt320=2;
			int LA320_0 = input.LA(1);
			if ( (LA320_0==SQL92_RESERVED_WHERE) ) {
				alt320=1;
			}
			switch (alt320) {
				case 1 :
					// PLSQLPrinter.g:1394:13: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_update_statement12870);
					where_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1394:27: ( static_returning_clause )?
			int alt321=2;
			int LA321_0 = input.LA(1);
			if ( (LA321_0==STATIC_RETURNING) ) {
				alt321=1;
			}
			switch (alt321) {
				case 1 :
					// PLSQLPrinter.g:1394:27: static_returning_clause
					{
					pushFollow(FOLLOW_static_returning_clause_in_update_statement12873);
					static_returning_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1394:52: ( error_logging_clause )?
			int alt322=2;
			int LA322_0 = input.LA(1);
			if ( (LA322_0==LOG_VK) ) {
				alt322=1;
			}
			switch (alt322) {
				case 1 :
					// PLSQLPrinter.g:1394:52: error_logging_clause
					{
					pushFollow(FOLLOW_error_logging_clause_in_update_statement12876);
					error_logging_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1396:5: -> template( \"not implemented: update_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: update_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "update_statement"


	public static class update_set_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "update_set_clause"
	// PLSQLPrinter.g:1400:1: update_set_clause : ^( SET_VK ( update_set_elements )+ ) -> template( \"not implemented: update_set_clause\";
	public final PLSQLPrinter.update_set_clause_return update_set_clause() throws RecognitionException {
		PLSQLPrinter.update_set_clause_return retval = new PLSQLPrinter.update_set_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1401:5: ( ^( SET_VK ( update_set_elements )+ ) -> template( \"not implemented: update_set_clause\")
			// PLSQLPrinter.g:1401:10: ^( SET_VK ( update_set_elements )+ )
			{
			match(input,SET_VK,FOLLOW_SET_VK_in_update_set_clause12923); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1401:19: ( update_set_elements )+
			int cnt323=0;
			loop323:
			while (true) {
				int alt323=2;
				int LA323_0 = input.LA(1);
				if ( (LA323_0==ASSIGN||LA323_0==VALUE_VK) ) {
					alt323=1;
				}

				switch (alt323) {
				case 1 :
					// PLSQLPrinter.g:1401:19: update_set_elements
					{
					pushFollow(FOLLOW_update_set_elements_in_update_set_clause12925);
					update_set_elements();
					state._fsp--;

					}
					break;

				default :
					if ( cnt323 >= 1 ) break loop323;
					EarlyExitException eee = new EarlyExitException(323, input);
					throw eee;
				}
				cnt323++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1402:5: -> template( \"not implemented: update_set_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: update_set_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "update_set_clause"


	public static class update_set_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "update_set_elements"
	// PLSQLPrinter.g:1405:1: update_set_elements : ( ^( ASSIGN column_name expression ) -> template( \"not implemented: update_set_elements\"| ^( ASSIGN ( column_name )+ subquery ) -> template( \"not implemented: update_set_elements\"| ^( VALUE_VK ( char_set_name )? ID expression ) -> template( \"not implemented: update_set_elements\");
	public final PLSQLPrinter.update_set_elements_return update_set_elements() throws RecognitionException {
		PLSQLPrinter.update_set_elements_return retval = new PLSQLPrinter.update_set_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1406:5: ( ^( ASSIGN column_name expression ) -> template( \"not implemented: update_set_elements\"| ^( ASSIGN ( column_name )+ subquery ) -> template( \"not implemented: update_set_elements\"| ^( VALUE_VK ( char_set_name )? ID expression ) -> template( \"not implemented: update_set_elements\")
			int alt326=3;
			alt326 = dfa326.predict(input);
			switch (alt326) {
				case 1 :
					// PLSQLPrinter.g:1406:10: ^( ASSIGN column_name expression )
					{
					match(input,ASSIGN,FOLLOW_ASSIGN_in_update_set_elements12962); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_column_name_in_update_set_elements12964);
					column_name();
					state._fsp--;

					pushFollow(FOLLOW_expression_in_update_set_elements12966);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1407:5: -> template( \"not implemented: update_set_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: update_set_elements");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1408:10: ^( ASSIGN ( column_name )+ subquery )
					{
					match(input,ASSIGN,FOLLOW_ASSIGN_in_update_set_elements12993); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1408:19: ( column_name )+
					int cnt324=0;
					loop324:
					while (true) {
						int alt324=2;
						int LA324_0 = input.LA(1);
						if ( (LA324_0==COLUMN_NAME) ) {
							alt324=1;
						}

						switch (alt324) {
						case 1 :
							// PLSQLPrinter.g:1408:19: column_name
							{
							pushFollow(FOLLOW_column_name_in_update_set_elements12995);
							column_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt324 >= 1 ) break loop324;
							EarlyExitException eee = new EarlyExitException(324, input);
							throw eee;
						}
						cnt324++;
					}

					pushFollow(FOLLOW_subquery_in_update_set_elements12998);
					subquery();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1409:5: -> template( \"not implemented: update_set_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: update_set_elements");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1410:10: ^( VALUE_VK ( char_set_name )? ID expression )
					{
					match(input,VALUE_VK,FOLLOW_VALUE_VK_in_update_set_elements13025); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1410:21: ( char_set_name )?
					int alt325=2;
					int LA325_0 = input.LA(1);
					if ( (LA325_0==CHAR_SET_NAME) ) {
						alt325=1;
					}
					switch (alt325) {
						case 1 :
							// PLSQLPrinter.g:1410:21: char_set_name
							{
							pushFollow(FOLLOW_char_set_name_in_update_set_elements13027);
							char_set_name();
							state._fsp--;

							}
							break;

					}

					match(input,ID,FOLLOW_ID_in_update_set_elements13030); 
					pushFollow(FOLLOW_expression_in_update_set_elements13032);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1411:5: -> template( \"not implemented: update_set_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: update_set_elements");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "update_set_elements"


	public static class delete_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "delete_statement"
	// PLSQLPrinter.g:1416:1: delete_statement : ^( SQL92_RESERVED_DELETE general_table_ref ( where_clause )? ( static_returning_clause )? ( error_logging_clause )? ) -> template( \"not implemented: delete_statement\";
	public final PLSQLPrinter.delete_statement_return delete_statement() throws RecognitionException {
		PLSQLPrinter.delete_statement_return retval = new PLSQLPrinter.delete_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1417:5: ( ^( SQL92_RESERVED_DELETE general_table_ref ( where_clause )? ( static_returning_clause )? ( error_logging_clause )? ) -> template( \"not implemented: delete_statement\")
			// PLSQLPrinter.g:1417:10: ^( SQL92_RESERVED_DELETE general_table_ref ( where_clause )? ( static_returning_clause )? ( error_logging_clause )? )
			{
			match(input,SQL92_RESERVED_DELETE,FOLLOW_SQL92_RESERVED_DELETE_in_delete_statement13070); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_general_table_ref_in_delete_statement13072);
			general_table_ref();
			state._fsp--;

			// PLSQLPrinter.g:1418:13: ( where_clause )?
			int alt327=2;
			int LA327_0 = input.LA(1);
			if ( (LA327_0==SQL92_RESERVED_WHERE) ) {
				alt327=1;
			}
			switch (alt327) {
				case 1 :
					// PLSQLPrinter.g:1418:13: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_delete_statement13086);
					where_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1418:27: ( static_returning_clause )?
			int alt328=2;
			int LA328_0 = input.LA(1);
			if ( (LA328_0==STATIC_RETURNING) ) {
				alt328=1;
			}
			switch (alt328) {
				case 1 :
					// PLSQLPrinter.g:1418:27: static_returning_clause
					{
					pushFollow(FOLLOW_static_returning_clause_in_delete_statement13089);
					static_returning_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1418:52: ( error_logging_clause )?
			int alt329=2;
			int LA329_0 = input.LA(1);
			if ( (LA329_0==LOG_VK) ) {
				alt329=1;
			}
			switch (alt329) {
				case 1 :
					// PLSQLPrinter.g:1418:52: error_logging_clause
					{
					pushFollow(FOLLOW_error_logging_clause_in_delete_statement13092);
					error_logging_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1419:5: -> template( \"not implemented: delete_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: delete_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "delete_statement"


	public static class insert_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "insert_statement"
	// PLSQLPrinter.g:1422:1: insert_statement : ^( SQL92_RESERVED_INSERT ( single_table_insert | multi_table_insert ) ) -> template( \"not implemented: insert_statement\";
	public final PLSQLPrinter.insert_statement_return insert_statement() throws RecognitionException {
		PLSQLPrinter.insert_statement_return retval = new PLSQLPrinter.insert_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1423:5: ( ^( SQL92_RESERVED_INSERT ( single_table_insert | multi_table_insert ) ) -> template( \"not implemented: insert_statement\")
			// PLSQLPrinter.g:1423:10: ^( SQL92_RESERVED_INSERT ( single_table_insert | multi_table_insert ) )
			{
			match(input,SQL92_RESERVED_INSERT,FOLLOW_SQL92_RESERVED_INSERT_in_insert_statement13129); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1424:9: ( single_table_insert | multi_table_insert )
			int alt330=2;
			int LA330_0 = input.LA(1);
			if ( (LA330_0==SINGLE_TABLE_MODE) ) {
				alt330=1;
			}
			else if ( (LA330_0==MULTI_TABLE_MODE) ) {
				alt330=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 330, 0, input);
				throw nvae;
			}

			switch (alt330) {
				case 1 :
					// PLSQLPrinter.g:1424:14: single_table_insert
					{
					pushFollow(FOLLOW_single_table_insert_in_insert_statement13144);
					single_table_insert();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1425:14: multi_table_insert
					{
					pushFollow(FOLLOW_multi_table_insert_in_insert_statement13159);
					multi_table_insert();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1428:5: -> template( \"not implemented: insert_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: insert_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "insert_statement"


	public static class single_table_insert_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "single_table_insert"
	// PLSQLPrinter.g:1433:1: single_table_insert : ^( SINGLE_TABLE_MODE insert_into_clause ( values_clause ( static_returning_clause )? | select_statement ) ( error_logging_clause )? ) -> template( \"not implemented: single_table_insert\";
	public final PLSQLPrinter.single_table_insert_return single_table_insert() throws RecognitionException {
		PLSQLPrinter.single_table_insert_return retval = new PLSQLPrinter.single_table_insert_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1434:5: ( ^( SINGLE_TABLE_MODE insert_into_clause ( values_clause ( static_returning_clause )? | select_statement ) ( error_logging_clause )? ) -> template( \"not implemented: single_table_insert\")
			// PLSQLPrinter.g:1434:10: ^( SINGLE_TABLE_MODE insert_into_clause ( values_clause ( static_returning_clause )? | select_statement ) ( error_logging_clause )? )
			{
			match(input,SINGLE_TABLE_MODE,FOLLOW_SINGLE_TABLE_MODE_in_single_table_insert13216); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_insert_into_clause_in_single_table_insert13218);
			insert_into_clause();
			state._fsp--;

			// PLSQLPrinter.g:1434:49: ( values_clause ( static_returning_clause )? | select_statement )
			int alt332=2;
			int LA332_0 = input.LA(1);
			if ( (LA332_0==SQL92_RESERVED_VALUES) ) {
				alt332=1;
			}
			else if ( (LA332_0==SELECT_STATEMENT) ) {
				alt332=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 332, 0, input);
				throw nvae;
			}

			switch (alt332) {
				case 1 :
					// PLSQLPrinter.g:1434:50: values_clause ( static_returning_clause )?
					{
					pushFollow(FOLLOW_values_clause_in_single_table_insert13221);
					values_clause();
					state._fsp--;

					// PLSQLPrinter.g:1434:64: ( static_returning_clause )?
					int alt331=2;
					int LA331_0 = input.LA(1);
					if ( (LA331_0==STATIC_RETURNING) ) {
						alt331=1;
					}
					switch (alt331) {
						case 1 :
							// PLSQLPrinter.g:1434:64: static_returning_clause
							{
							pushFollow(FOLLOW_static_returning_clause_in_single_table_insert13223);
							static_returning_clause();
							state._fsp--;

							}
							break;

					}

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1434:90: select_statement
					{
					pushFollow(FOLLOW_select_statement_in_single_table_insert13227);
					select_statement();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1434:108: ( error_logging_clause )?
			int alt333=2;
			int LA333_0 = input.LA(1);
			if ( (LA333_0==LOG_VK) ) {
				alt333=1;
			}
			switch (alt333) {
				case 1 :
					// PLSQLPrinter.g:1434:108: error_logging_clause
					{
					pushFollow(FOLLOW_error_logging_clause_in_single_table_insert13230);
					error_logging_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1435:5: -> template( \"not implemented: single_table_insert\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: single_table_insert");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "single_table_insert"


	public static class multi_table_insert_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "multi_table_insert"
	// PLSQLPrinter.g:1438:1: multi_table_insert : ^( MULTI_TABLE_MODE select_statement ( conditional_insert_clause | ( multi_table_element )+ ) ) -> template( \"not implemented: multi_table_insert\";
	public final PLSQLPrinter.multi_table_insert_return multi_table_insert() throws RecognitionException {
		PLSQLPrinter.multi_table_insert_return retval = new PLSQLPrinter.multi_table_insert_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1439:5: ( ^( MULTI_TABLE_MODE select_statement ( conditional_insert_clause | ( multi_table_element )+ ) ) -> template( \"not implemented: multi_table_insert\")
			// PLSQLPrinter.g:1439:10: ^( MULTI_TABLE_MODE select_statement ( conditional_insert_clause | ( multi_table_element )+ ) )
			{
			match(input,MULTI_TABLE_MODE,FOLLOW_MULTI_TABLE_MODE_in_multi_table_insert13267); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_select_statement_in_multi_table_insert13269);
			select_statement();
			state._fsp--;

			// PLSQLPrinter.g:1439:46: ( conditional_insert_clause | ( multi_table_element )+ )
			int alt335=2;
			int LA335_0 = input.LA(1);
			if ( (LA335_0==CONDITIONAL_INSERT) ) {
				alt335=1;
			}
			else if ( (LA335_0==TABLE_ELEMENT) ) {
				alt335=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 335, 0, input);
				throw nvae;
			}

			switch (alt335) {
				case 1 :
					// PLSQLPrinter.g:1439:47: conditional_insert_clause
					{
					pushFollow(FOLLOW_conditional_insert_clause_in_multi_table_insert13272);
					conditional_insert_clause();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1439:73: ( multi_table_element )+
					{
					// PLSQLPrinter.g:1439:73: ( multi_table_element )+
					int cnt334=0;
					loop334:
					while (true) {
						int alt334=2;
						int LA334_0 = input.LA(1);
						if ( (LA334_0==TABLE_ELEMENT) ) {
							alt334=1;
						}

						switch (alt334) {
						case 1 :
							// PLSQLPrinter.g:1439:73: multi_table_element
							{
							pushFollow(FOLLOW_multi_table_element_in_multi_table_insert13274);
							multi_table_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt334 >= 1 ) break loop334;
							EarlyExitException eee = new EarlyExitException(334, input);
							throw eee;
						}
						cnt334++;
					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1440:5: -> template( \"not implemented: multi_table_insert\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: multi_table_insert");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "multi_table_insert"


	public static class multi_table_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "multi_table_element"
	// PLSQLPrinter.g:1443:1: multi_table_element : ^( TABLE_ELEMENT insert_into_clause ( values_clause )? ( error_logging_clause )? ) -> template( \"not implemented: multi_table_element\";
	public final PLSQLPrinter.multi_table_element_return multi_table_element() throws RecognitionException {
		PLSQLPrinter.multi_table_element_return retval = new PLSQLPrinter.multi_table_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1444:5: ( ^( TABLE_ELEMENT insert_into_clause ( values_clause )? ( error_logging_clause )? ) -> template( \"not implemented: multi_table_element\")
			// PLSQLPrinter.g:1444:10: ^( TABLE_ELEMENT insert_into_clause ( values_clause )? ( error_logging_clause )? )
			{
			match(input,TABLE_ELEMENT,FOLLOW_TABLE_ELEMENT_in_multi_table_element13312); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_insert_into_clause_in_multi_table_element13314);
			insert_into_clause();
			state._fsp--;

			// PLSQLPrinter.g:1444:45: ( values_clause )?
			int alt336=2;
			int LA336_0 = input.LA(1);
			if ( (LA336_0==SQL92_RESERVED_VALUES) ) {
				alt336=1;
			}
			switch (alt336) {
				case 1 :
					// PLSQLPrinter.g:1444:45: values_clause
					{
					pushFollow(FOLLOW_values_clause_in_multi_table_element13316);
					values_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1444:60: ( error_logging_clause )?
			int alt337=2;
			int LA337_0 = input.LA(1);
			if ( (LA337_0==LOG_VK) ) {
				alt337=1;
			}
			switch (alt337) {
				case 1 :
					// PLSQLPrinter.g:1444:60: error_logging_clause
					{
					pushFollow(FOLLOW_error_logging_clause_in_multi_table_element13319);
					error_logging_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1445:5: -> template( \"not implemented: multi_table_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: multi_table_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "multi_table_element"


	public static class conditional_insert_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "conditional_insert_clause"
	// PLSQLPrinter.g:1448:1: conditional_insert_clause : ^( CONDITIONAL_INSERT ( SQL92_RESERVED_ALL | FIRST_VK )? ( conditional_insert_when_part )+ ( conditional_insert_else_part )? ) -> template( \"not implemented: conditional_insert_clause\";
	public final PLSQLPrinter.conditional_insert_clause_return conditional_insert_clause() throws RecognitionException {
		PLSQLPrinter.conditional_insert_clause_return retval = new PLSQLPrinter.conditional_insert_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1449:5: ( ^( CONDITIONAL_INSERT ( SQL92_RESERVED_ALL | FIRST_VK )? ( conditional_insert_when_part )+ ( conditional_insert_else_part )? ) -> template( \"not implemented: conditional_insert_clause\")
			// PLSQLPrinter.g:1449:10: ^( CONDITIONAL_INSERT ( SQL92_RESERVED_ALL | FIRST_VK )? ( conditional_insert_when_part )+ ( conditional_insert_else_part )? )
			{
			match(input,CONDITIONAL_INSERT,FOLLOW_CONDITIONAL_INSERT_in_conditional_insert_clause13356); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1449:31: ( SQL92_RESERVED_ALL | FIRST_VK )?
			int alt338=3;
			int LA338_0 = input.LA(1);
			if ( (LA338_0==SQL92_RESERVED_ALL) ) {
				alt338=1;
			}
			else if ( (LA338_0==FIRST_VK) ) {
				alt338=2;
			}
			switch (alt338) {
				case 1 :
					// PLSQLPrinter.g:1449:32: SQL92_RESERVED_ALL
					{
					match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_conditional_insert_clause13359); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1449:51: FIRST_VK
					{
					match(input,FIRST_VK,FOLLOW_FIRST_VK_in_conditional_insert_clause13361); 
					}
					break;

			}

			// PLSQLPrinter.g:1449:62: ( conditional_insert_when_part )+
			int cnt339=0;
			loop339:
			while (true) {
				int alt339=2;
				int LA339_0 = input.LA(1);
				if ( (LA339_0==SQL92_RESERVED_WHEN) ) {
					alt339=1;
				}

				switch (alt339) {
				case 1 :
					// PLSQLPrinter.g:1449:62: conditional_insert_when_part
					{
					pushFollow(FOLLOW_conditional_insert_when_part_in_conditional_insert_clause13365);
					conditional_insert_when_part();
					state._fsp--;

					}
					break;

				default :
					if ( cnt339 >= 1 ) break loop339;
					EarlyExitException eee = new EarlyExitException(339, input);
					throw eee;
				}
				cnt339++;
			}

			// PLSQLPrinter.g:1449:92: ( conditional_insert_else_part )?
			int alt340=2;
			int LA340_0 = input.LA(1);
			if ( (LA340_0==SQL92_RESERVED_ELSE) ) {
				alt340=1;
			}
			switch (alt340) {
				case 1 :
					// PLSQLPrinter.g:1449:92: conditional_insert_else_part
					{
					pushFollow(FOLLOW_conditional_insert_else_part_in_conditional_insert_clause13368);
					conditional_insert_else_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1450:5: -> template( \"not implemented: conditional_insert_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: conditional_insert_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "conditional_insert_clause"


	public static class conditional_insert_when_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "conditional_insert_when_part"
	// PLSQLPrinter.g:1453:1: conditional_insert_when_part : ^( SQL92_RESERVED_WHEN expression ( multi_table_element )+ ) -> template( \"not implemented: conditional_insert_when_part\";
	public final PLSQLPrinter.conditional_insert_when_part_return conditional_insert_when_part() throws RecognitionException {
		PLSQLPrinter.conditional_insert_when_part_return retval = new PLSQLPrinter.conditional_insert_when_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1454:5: ( ^( SQL92_RESERVED_WHEN expression ( multi_table_element )+ ) -> template( \"not implemented: conditional_insert_when_part\")
			// PLSQLPrinter.g:1454:10: ^( SQL92_RESERVED_WHEN expression ( multi_table_element )+ )
			{
			match(input,SQL92_RESERVED_WHEN,FOLLOW_SQL92_RESERVED_WHEN_in_conditional_insert_when_part13406); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_conditional_insert_when_part13408);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:1454:43: ( multi_table_element )+
			int cnt341=0;
			loop341:
			while (true) {
				int alt341=2;
				int LA341_0 = input.LA(1);
				if ( (LA341_0==TABLE_ELEMENT) ) {
					alt341=1;
				}

				switch (alt341) {
				case 1 :
					// PLSQLPrinter.g:1454:43: multi_table_element
					{
					pushFollow(FOLLOW_multi_table_element_in_conditional_insert_when_part13410);
					multi_table_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt341 >= 1 ) break loop341;
					EarlyExitException eee = new EarlyExitException(341, input);
					throw eee;
				}
				cnt341++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1455:5: -> template( \"not implemented: conditional_insert_when_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: conditional_insert_when_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "conditional_insert_when_part"


	public static class conditional_insert_else_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "conditional_insert_else_part"
	// PLSQLPrinter.g:1458:1: conditional_insert_else_part : ^( SQL92_RESERVED_ELSE ( multi_table_element )+ ) -> template( \"not implemented: conditional_insert_else_part\";
	public final PLSQLPrinter.conditional_insert_else_part_return conditional_insert_else_part() throws RecognitionException {
		PLSQLPrinter.conditional_insert_else_part_return retval = new PLSQLPrinter.conditional_insert_else_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1459:5: ( ^( SQL92_RESERVED_ELSE ( multi_table_element )+ ) -> template( \"not implemented: conditional_insert_else_part\")
			// PLSQLPrinter.g:1459:10: ^( SQL92_RESERVED_ELSE ( multi_table_element )+ )
			{
			match(input,SQL92_RESERVED_ELSE,FOLLOW_SQL92_RESERVED_ELSE_in_conditional_insert_else_part13447); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1459:32: ( multi_table_element )+
			int cnt342=0;
			loop342:
			while (true) {
				int alt342=2;
				int LA342_0 = input.LA(1);
				if ( (LA342_0==TABLE_ELEMENT) ) {
					alt342=1;
				}

				switch (alt342) {
				case 1 :
					// PLSQLPrinter.g:1459:32: multi_table_element
					{
					pushFollow(FOLLOW_multi_table_element_in_conditional_insert_else_part13449);
					multi_table_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt342 >= 1 ) break loop342;
					EarlyExitException eee = new EarlyExitException(342, input);
					throw eee;
				}
				cnt342++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1460:5: -> template( \"not implemented: conditional_insert_else_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: conditional_insert_else_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "conditional_insert_else_part"


	public static class insert_into_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "insert_into_clause"
	// PLSQLPrinter.g:1463:1: insert_into_clause : ^( SQL92_RESERVED_INTO general_table_ref ^( COLUMNS ( column_name )* ) ) -> template( \"not implemented: insert_into_clause\";
	public final PLSQLPrinter.insert_into_clause_return insert_into_clause() throws RecognitionException {
		PLSQLPrinter.insert_into_clause_return retval = new PLSQLPrinter.insert_into_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1464:5: ( ^( SQL92_RESERVED_INTO general_table_ref ^( COLUMNS ( column_name )* ) ) -> template( \"not implemented: insert_into_clause\")
			// PLSQLPrinter.g:1464:10: ^( SQL92_RESERVED_INTO general_table_ref ^( COLUMNS ( column_name )* ) )
			{
			match(input,SQL92_RESERVED_INTO,FOLLOW_SQL92_RESERVED_INTO_in_insert_into_clause13486); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_general_table_ref_in_insert_into_clause13488);
			general_table_ref();
			state._fsp--;

			match(input,COLUMNS,FOLLOW_COLUMNS_in_insert_into_clause13491); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1464:60: ( column_name )*
				loop343:
				while (true) {
					int alt343=2;
					int LA343_0 = input.LA(1);
					if ( (LA343_0==COLUMN_NAME) ) {
						alt343=1;
					}

					switch (alt343) {
					case 1 :
						// PLSQLPrinter.g:1464:60: column_name
						{
						pushFollow(FOLLOW_column_name_in_insert_into_clause13493);
						column_name();
						state._fsp--;

						}
						break;

					default :
						break loop343;
					}
				}

				match(input, Token.UP, null); 
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1465:5: -> template( \"not implemented: insert_into_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: insert_into_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "insert_into_clause"


	public static class values_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "values_clause"
	// PLSQLPrinter.g:1468:1: values_clause : ^( SQL92_RESERVED_VALUES ( expression_list | expression ) ) -> template( \"not implemented: values_clause\";
	public final PLSQLPrinter.values_clause_return values_clause() throws RecognitionException {
		PLSQLPrinter.values_clause_return retval = new PLSQLPrinter.values_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1469:5: ( ^( SQL92_RESERVED_VALUES ( expression_list | expression ) ) -> template( \"not implemented: values_clause\")
			// PLSQLPrinter.g:1469:10: ^( SQL92_RESERVED_VALUES ( expression_list | expression ) )
			{
			match(input,SQL92_RESERVED_VALUES,FOLLOW_SQL92_RESERVED_VALUES_in_values_clause13531); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1469:34: ( expression_list | expression )
			int alt344=2;
			int LA344_0 = input.LA(1);
			if ( (LA344_0==EXPR_LIST) ) {
				alt344=1;
			}
			else if ( (LA344_0==EXPR||LA344_0==LOGIC_EXPR) ) {
				alt344=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 344, 0, input);
				throw nvae;
			}

			switch (alt344) {
				case 1 :
					// PLSQLPrinter.g:1469:35: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_values_clause13534);
					expression_list();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1469:51: expression
					{
					pushFollow(FOLLOW_expression_in_values_clause13536);
					expression();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1470:5: -> template( \"not implemented: values_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: values_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "values_clause"


	public static class merge_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "merge_statement"
	// PLSQLPrinter.g:1474:1: merge_statement : ^( MERGE_VK ( alias )? tableview_name ^( PLSQL_NON_RESERVED_USING selected_tableview expression ) ( merge_update_clause )? ( merge_insert_clause )? ( error_logging_clause )? ) -> template( \"not implemented: merge_statement\";
	public final PLSQLPrinter.merge_statement_return merge_statement() throws RecognitionException {
		PLSQLPrinter.merge_statement_return retval = new PLSQLPrinter.merge_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1475:5: ( ^( MERGE_VK ( alias )? tableview_name ^( PLSQL_NON_RESERVED_USING selected_tableview expression ) ( merge_update_clause )? ( merge_insert_clause )? ( error_logging_clause )? ) -> template( \"not implemented: merge_statement\")
			// PLSQLPrinter.g:1475:10: ^( MERGE_VK ( alias )? tableview_name ^( PLSQL_NON_RESERVED_USING selected_tableview expression ) ( merge_update_clause )? ( merge_insert_clause )? ( error_logging_clause )? )
			{
			match(input,MERGE_VK,FOLLOW_MERGE_VK_in_merge_statement13574); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1475:21: ( alias )?
			int alt345=2;
			int LA345_0 = input.LA(1);
			if ( (LA345_0==ALIAS) ) {
				alt345=1;
			}
			switch (alt345) {
				case 1 :
					// PLSQLPrinter.g:1475:21: alias
					{
					pushFollow(FOLLOW_alias_in_merge_statement13576);
					alias();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_tableview_name_in_merge_statement13579);
			tableview_name();
			state._fsp--;

			match(input,PLSQL_NON_RESERVED_USING,FOLLOW_PLSQL_NON_RESERVED_USING_in_merge_statement13595); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_selected_tableview_in_merge_statement13597);
			selected_tableview();
			state._fsp--;

			pushFollow(FOLLOW_expression_in_merge_statement13599);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// PLSQLPrinter.g:1477:14: ( merge_update_clause )?
			int alt346=2;
			int LA346_0 = input.LA(1);
			if ( (LA346_0==MERGE_UPDATE) ) {
				alt346=1;
			}
			switch (alt346) {
				case 1 :
					// PLSQLPrinter.g:1477:14: merge_update_clause
					{
					pushFollow(FOLLOW_merge_update_clause_in_merge_statement13615);
					merge_update_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1477:35: ( merge_insert_clause )?
			int alt347=2;
			int LA347_0 = input.LA(1);
			if ( (LA347_0==MERGE_INSERT) ) {
				alt347=1;
			}
			switch (alt347) {
				case 1 :
					// PLSQLPrinter.g:1477:35: merge_insert_clause
					{
					pushFollow(FOLLOW_merge_insert_clause_in_merge_statement13618);
					merge_insert_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1477:56: ( error_logging_clause )?
			int alt348=2;
			int LA348_0 = input.LA(1);
			if ( (LA348_0==LOG_VK) ) {
				alt348=1;
			}
			switch (alt348) {
				case 1 :
					// PLSQLPrinter.g:1477:56: error_logging_clause
					{
					pushFollow(FOLLOW_error_logging_clause_in_merge_statement13621);
					error_logging_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1478:5: -> template( \"not implemented: merge_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: merge_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "merge_statement"


	public static class merge_update_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "merge_update_clause"
	// PLSQLPrinter.g:1483:1: merge_update_clause : ^( MERGE_UPDATE ( merge_element )+ ( where_clause )? ( merge_update_delete_part )? ) -> template( \"not implemented: merge_update_clause\";
	public final PLSQLPrinter.merge_update_clause_return merge_update_clause() throws RecognitionException {
		PLSQLPrinter.merge_update_clause_return retval = new PLSQLPrinter.merge_update_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1484:5: ( ^( MERGE_UPDATE ( merge_element )+ ( where_clause )? ( merge_update_delete_part )? ) -> template( \"not implemented: merge_update_clause\")
			// PLSQLPrinter.g:1484:10: ^( MERGE_UPDATE ( merge_element )+ ( where_clause )? ( merge_update_delete_part )? )
			{
			match(input,MERGE_UPDATE,FOLLOW_MERGE_UPDATE_in_merge_update_clause13660); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1484:25: ( merge_element )+
			int cnt349=0;
			loop349:
			while (true) {
				int alt349=2;
				int LA349_0 = input.LA(1);
				if ( (LA349_0==ASSIGN) ) {
					alt349=1;
				}

				switch (alt349) {
				case 1 :
					// PLSQLPrinter.g:1484:25: merge_element
					{
					pushFollow(FOLLOW_merge_element_in_merge_update_clause13662);
					merge_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt349 >= 1 ) break loop349;
					EarlyExitException eee = new EarlyExitException(349, input);
					throw eee;
				}
				cnt349++;
			}

			// PLSQLPrinter.g:1484:40: ( where_clause )?
			int alt350=2;
			int LA350_0 = input.LA(1);
			if ( (LA350_0==SQL92_RESERVED_WHERE) ) {
				alt350=1;
			}
			switch (alt350) {
				case 1 :
					// PLSQLPrinter.g:1484:40: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_merge_update_clause13665);
					where_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1484:54: ( merge_update_delete_part )?
			int alt351=2;
			int LA351_0 = input.LA(1);
			if ( (LA351_0==SQL92_RESERVED_DELETE) ) {
				alt351=1;
			}
			switch (alt351) {
				case 1 :
					// PLSQLPrinter.g:1484:54: merge_update_delete_part
					{
					pushFollow(FOLLOW_merge_update_delete_part_in_merge_update_clause13668);
					merge_update_delete_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1485:5: -> template( \"not implemented: merge_update_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: merge_update_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "merge_update_clause"


	public static class merge_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "merge_element"
	// PLSQLPrinter.g:1488:1: merge_element : ^( ASSIGN column_name expression ) -> template( \"not implemented: merge_element\";
	public final PLSQLPrinter.merge_element_return merge_element() throws RecognitionException {
		PLSQLPrinter.merge_element_return retval = new PLSQLPrinter.merge_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1489:5: ( ^( ASSIGN column_name expression ) -> template( \"not implemented: merge_element\")
			// PLSQLPrinter.g:1489:10: ^( ASSIGN column_name expression )
			{
			match(input,ASSIGN,FOLLOW_ASSIGN_in_merge_element13705); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_column_name_in_merge_element13707);
			column_name();
			state._fsp--;

			pushFollow(FOLLOW_expression_in_merge_element13709);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1490:5: -> template( \"not implemented: merge_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: merge_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "merge_element"


	public static class merge_update_delete_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "merge_update_delete_part"
	// PLSQLPrinter.g:1493:1: merge_update_delete_part : ^( SQL92_RESERVED_DELETE where_clause ) -> template( \"not implemented: merge_update_delete_part\";
	public final PLSQLPrinter.merge_update_delete_part_return merge_update_delete_part() throws RecognitionException {
		PLSQLPrinter.merge_update_delete_part_return retval = new PLSQLPrinter.merge_update_delete_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1494:5: ( ^( SQL92_RESERVED_DELETE where_clause ) -> template( \"not implemented: merge_update_delete_part\")
			// PLSQLPrinter.g:1494:10: ^( SQL92_RESERVED_DELETE where_clause )
			{
			match(input,SQL92_RESERVED_DELETE,FOLLOW_SQL92_RESERVED_DELETE_in_merge_update_delete_part13745); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_where_clause_in_merge_update_delete_part13747);
			where_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1495:5: -> template( \"not implemented: merge_update_delete_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: merge_update_delete_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "merge_update_delete_part"


	public static class merge_insert_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "merge_insert_clause"
	// PLSQLPrinter.g:1498:1: merge_insert_clause : ^( MERGE_INSERT ^( COLUMNS ( column_name )* ) expression_list ( where_clause )? ) -> template( \"not implemented: merge_insert_clause\";
	public final PLSQLPrinter.merge_insert_clause_return merge_insert_clause() throws RecognitionException {
		PLSQLPrinter.merge_insert_clause_return retval = new PLSQLPrinter.merge_insert_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1499:5: ( ^( MERGE_INSERT ^( COLUMNS ( column_name )* ) expression_list ( where_clause )? ) -> template( \"not implemented: merge_insert_clause\")
			// PLSQLPrinter.g:1499:10: ^( MERGE_INSERT ^( COLUMNS ( column_name )* ) expression_list ( where_clause )? )
			{
			match(input,MERGE_INSERT,FOLLOW_MERGE_INSERT_in_merge_insert_clause13783); 
			match(input, Token.DOWN, null); 
			match(input,COLUMNS,FOLLOW_COLUMNS_in_merge_insert_clause13786); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1499:35: ( column_name )*
				loop352:
				while (true) {
					int alt352=2;
					int LA352_0 = input.LA(1);
					if ( (LA352_0==COLUMN_NAME) ) {
						alt352=1;
					}

					switch (alt352) {
					case 1 :
						// PLSQLPrinter.g:1499:35: column_name
						{
						pushFollow(FOLLOW_column_name_in_merge_insert_clause13788);
						column_name();
						state._fsp--;

						}
						break;

					default :
						break loop352;
					}
				}

				match(input, Token.UP, null); 
			}

			pushFollow(FOLLOW_expression_list_in_merge_insert_clause13792);
			expression_list();
			state._fsp--;

			// PLSQLPrinter.g:1499:65: ( where_clause )?
			int alt353=2;
			int LA353_0 = input.LA(1);
			if ( (LA353_0==SQL92_RESERVED_WHERE) ) {
				alt353=1;
			}
			switch (alt353) {
				case 1 :
					// PLSQLPrinter.g:1499:65: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_merge_insert_clause13794);
					where_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1500:5: -> template( \"not implemented: merge_insert_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: merge_insert_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "merge_insert_clause"


	public static class selected_tableview_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "selected_tableview"
	// PLSQLPrinter.g:1503:1: selected_tableview : ^( SELECTED_TABLEVIEW ( alias )? ( tableview_name | select_statement ) ) -> template( \"not implemented: selected_tableview\";
	public final PLSQLPrinter.selected_tableview_return selected_tableview() throws RecognitionException {
		PLSQLPrinter.selected_tableview_return retval = new PLSQLPrinter.selected_tableview_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1504:5: ( ^( SELECTED_TABLEVIEW ( alias )? ( tableview_name | select_statement ) ) -> template( \"not implemented: selected_tableview\")
			// PLSQLPrinter.g:1504:10: ^( SELECTED_TABLEVIEW ( alias )? ( tableview_name | select_statement ) )
			{
			match(input,SELECTED_TABLEVIEW,FOLLOW_SELECTED_TABLEVIEW_in_selected_tableview13832); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1504:31: ( alias )?
			int alt354=2;
			int LA354_0 = input.LA(1);
			if ( (LA354_0==ALIAS) ) {
				alt354=1;
			}
			switch (alt354) {
				case 1 :
					// PLSQLPrinter.g:1504:31: alias
					{
					pushFollow(FOLLOW_alias_in_selected_tableview13834);
					alias();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1504:38: ( tableview_name | select_statement )
			int alt355=2;
			int LA355_0 = input.LA(1);
			if ( (LA355_0==TABLEVIEW_NAME) ) {
				alt355=1;
			}
			else if ( (LA355_0==SELECT_STATEMENT) ) {
				alt355=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 355, 0, input);
				throw nvae;
			}

			switch (alt355) {
				case 1 :
					// PLSQLPrinter.g:1504:39: tableview_name
					{
					pushFollow(FOLLOW_tableview_name_in_selected_tableview13838);
					tableview_name();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1504:54: select_statement
					{
					pushFollow(FOLLOW_select_statement_in_selected_tableview13840);
					select_statement();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1505:5: -> template( \"not implemented: selected_tableview\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: selected_tableview");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "selected_tableview"


	public static class lock_table_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "lock_table_statement"
	// PLSQLPrinter.g:1510:1: lock_table_statement : ^( PLSQL_RESERVED_LOCK ( lock_table_element )+ lock_mode ( wait_nowait_part )? ) -> template( \"not implemented: lock_table_statement\";
	public final PLSQLPrinter.lock_table_statement_return lock_table_statement() throws RecognitionException {
		PLSQLPrinter.lock_table_statement_return retval = new PLSQLPrinter.lock_table_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1511:5: ( ^( PLSQL_RESERVED_LOCK ( lock_table_element )+ lock_mode ( wait_nowait_part )? ) -> template( \"not implemented: lock_table_statement\")
			// PLSQLPrinter.g:1511:10: ^( PLSQL_RESERVED_LOCK ( lock_table_element )+ lock_mode ( wait_nowait_part )? )
			{
			match(input,PLSQL_RESERVED_LOCK,FOLLOW_PLSQL_RESERVED_LOCK_in_lock_table_statement13879); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1511:32: ( lock_table_element )+
			int cnt356=0;
			loop356:
			while (true) {
				int alt356=2;
				int LA356_0 = input.LA(1);
				if ( (LA356_0==LOCK_TABLE_ELEMENT) ) {
					alt356=1;
				}

				switch (alt356) {
				case 1 :
					// PLSQLPrinter.g:1511:32: lock_table_element
					{
					pushFollow(FOLLOW_lock_table_element_in_lock_table_statement13881);
					lock_table_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt356 >= 1 ) break loop356;
					EarlyExitException eee = new EarlyExitException(356, input);
					throw eee;
				}
				cnt356++;
			}

			pushFollow(FOLLOW_lock_mode_in_lock_table_statement13884);
			lock_mode();
			state._fsp--;

			// PLSQLPrinter.g:1511:62: ( wait_nowait_part )?
			int alt357=2;
			int LA357_0 = input.LA(1);
			if ( (LA357_0==PLSQL_RESERVED_NOWAIT||LA357_0==WAIT_VK) ) {
				alt357=1;
			}
			switch (alt357) {
				case 1 :
					// PLSQLPrinter.g:1511:62: wait_nowait_part
					{
					pushFollow(FOLLOW_wait_nowait_part_in_lock_table_statement13886);
					wait_nowait_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1512:5: -> template( \"not implemented: lock_table_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: lock_table_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "lock_table_statement"


	public static class wait_nowait_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "wait_nowait_part"
	// PLSQLPrinter.g:1515:1: wait_nowait_part : ( ^( WAIT_VK expression ) -> template( \"not implemented: wait_nowait_part\"| PLSQL_RESERVED_NOWAIT -> template( \"not implemented: wait_nowait_part\");
	public final PLSQLPrinter.wait_nowait_part_return wait_nowait_part() throws RecognitionException {
		PLSQLPrinter.wait_nowait_part_return retval = new PLSQLPrinter.wait_nowait_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1516:5: ( ^( WAIT_VK expression ) -> template( \"not implemented: wait_nowait_part\"| PLSQL_RESERVED_NOWAIT -> template( \"not implemented: wait_nowait_part\")
			int alt358=2;
			int LA358_0 = input.LA(1);
			if ( (LA358_0==WAIT_VK) ) {
				alt358=1;
			}
			else if ( (LA358_0==PLSQL_RESERVED_NOWAIT) ) {
				alt358=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 358, 0, input);
				throw nvae;
			}

			switch (alt358) {
				case 1 :
					// PLSQLPrinter.g:1516:10: ^( WAIT_VK expression )
					{
					match(input,WAIT_VK,FOLLOW_WAIT_VK_in_wait_nowait_part13923); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_wait_nowait_part13925);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1517:5: -> template( \"not implemented: wait_nowait_part\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: wait_nowait_part");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1518:10: PLSQL_RESERVED_NOWAIT
					{
					match(input,PLSQL_RESERVED_NOWAIT,FOLLOW_PLSQL_RESERVED_NOWAIT_in_wait_nowait_part13951); 
					// TEMPLATE REWRITE
					// 1519:5: -> template( \"not implemented: wait_nowait_part\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: wait_nowait_part");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "wait_nowait_part"


	public static class lock_table_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "lock_table_element"
	// PLSQLPrinter.g:1524:1: lock_table_element : ^( LOCK_TABLE_ELEMENT tableview_name ( partition_extension_clause )? ) -> template( \"not implemented: lock_table_element\";
	public final PLSQLPrinter.lock_table_element_return lock_table_element() throws RecognitionException {
		PLSQLPrinter.lock_table_element_return retval = new PLSQLPrinter.lock_table_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1525:5: ( ^( LOCK_TABLE_ELEMENT tableview_name ( partition_extension_clause )? ) -> template( \"not implemented: lock_table_element\")
			// PLSQLPrinter.g:1525:10: ^( LOCK_TABLE_ELEMENT tableview_name ( partition_extension_clause )? )
			{
			match(input,LOCK_TABLE_ELEMENT,FOLLOW_LOCK_TABLE_ELEMENT_in_lock_table_element13988); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_tableview_name_in_lock_table_element13990);
			tableview_name();
			state._fsp--;

			// PLSQLPrinter.g:1525:46: ( partition_extension_clause )?
			int alt359=2;
			int LA359_0 = input.LA(1);
			if ( (LA359_0==PARTITION_VK||LA359_0==SUBPARTITION_VK) ) {
				alt359=1;
			}
			switch (alt359) {
				case 1 :
					// PLSQLPrinter.g:1525:46: partition_extension_clause
					{
					pushFollow(FOLLOW_partition_extension_clause_in_lock_table_element13992);
					partition_extension_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1526:5: -> template( \"not implemented: lock_table_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: lock_table_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "lock_table_element"


	public static class lock_mode_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "lock_mode"
	// PLSQLPrinter.g:1529:1: lock_mode : ( ROW_VK PLSQL_RESERVED_SHARE -> template( \"not implemented: lock_mode\"| ROW_VK PLSQL_RESERVED_EXCLUSIVE -> template( \"not implemented: lock_mode\"| PLSQL_RESERVED_SHARE ( SQL92_RESERVED_UPDATE )? -> template( \"not implemented: lock_mode\"| PLSQL_RESERVED_SHARE ROW_VK PLSQL_RESERVED_EXCLUSIVE -> template( \"not implemented: lock_mode\"| PLSQL_RESERVED_EXCLUSIVE -> template( \"not implemented: lock_mode\");
	public final PLSQLPrinter.lock_mode_return lock_mode() throws RecognitionException {
		PLSQLPrinter.lock_mode_return retval = new PLSQLPrinter.lock_mode_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1530:5: ( ROW_VK PLSQL_RESERVED_SHARE -> template( \"not implemented: lock_mode\"| ROW_VK PLSQL_RESERVED_EXCLUSIVE -> template( \"not implemented: lock_mode\"| PLSQL_RESERVED_SHARE ( SQL92_RESERVED_UPDATE )? -> template( \"not implemented: lock_mode\"| PLSQL_RESERVED_SHARE ROW_VK PLSQL_RESERVED_EXCLUSIVE -> template( \"not implemented: lock_mode\"| PLSQL_RESERVED_EXCLUSIVE -> template( \"not implemented: lock_mode\")
			int alt361=5;
			switch ( input.LA(1) ) {
			case ROW_VK:
				{
				int LA361_1 = input.LA(2);
				if ( (LA361_1==PLSQL_RESERVED_SHARE) ) {
					alt361=1;
				}
				else if ( (LA361_1==PLSQL_RESERVED_EXCLUSIVE) ) {
					alt361=2;
				}

				else {
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 361, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PLSQL_RESERVED_SHARE:
				{
				int LA361_2 = input.LA(2);
				if ( (LA361_2==ROW_VK) ) {
					alt361=4;
				}
				else if ( (LA361_2==UP||LA361_2==PLSQL_RESERVED_NOWAIT||LA361_2==SQL92_RESERVED_UPDATE||LA361_2==WAIT_VK) ) {
					alt361=3;
				}

				else {
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 361, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PLSQL_RESERVED_EXCLUSIVE:
				{
				alt361=5;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 361, 0, input);
				throw nvae;
			}
			switch (alt361) {
				case 1 :
					// PLSQLPrinter.g:1530:10: ROW_VK PLSQL_RESERVED_SHARE
					{
					match(input,ROW_VK,FOLLOW_ROW_VK_in_lock_mode14028); 
					match(input,PLSQL_RESERVED_SHARE,FOLLOW_PLSQL_RESERVED_SHARE_in_lock_mode14030); 
					// TEMPLATE REWRITE
					// 1531:5: -> template( \"not implemented: lock_mode\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: lock_mode");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1532:10: ROW_VK PLSQL_RESERVED_EXCLUSIVE
					{
					match(input,ROW_VK,FOLLOW_ROW_VK_in_lock_mode14055); 
					match(input,PLSQL_RESERVED_EXCLUSIVE,FOLLOW_PLSQL_RESERVED_EXCLUSIVE_in_lock_mode14057); 
					// TEMPLATE REWRITE
					// 1533:5: -> template( \"not implemented: lock_mode\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: lock_mode");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1534:10: PLSQL_RESERVED_SHARE ( SQL92_RESERVED_UPDATE )?
					{
					match(input,PLSQL_RESERVED_SHARE,FOLLOW_PLSQL_RESERVED_SHARE_in_lock_mode14082); 
					// PLSQLPrinter.g:1534:31: ( SQL92_RESERVED_UPDATE )?
					int alt360=2;
					int LA360_0 = input.LA(1);
					if ( (LA360_0==SQL92_RESERVED_UPDATE) ) {
						alt360=1;
					}
					switch (alt360) {
						case 1 :
							// PLSQLPrinter.g:1534:31: SQL92_RESERVED_UPDATE
							{
							match(input,SQL92_RESERVED_UPDATE,FOLLOW_SQL92_RESERVED_UPDATE_in_lock_mode14084); 
							}
							break;

					}

					// TEMPLATE REWRITE
					// 1535:5: -> template( \"not implemented: lock_mode\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: lock_mode");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1536:10: PLSQL_RESERVED_SHARE ROW_VK PLSQL_RESERVED_EXCLUSIVE
					{
					match(input,PLSQL_RESERVED_SHARE,FOLLOW_PLSQL_RESERVED_SHARE_in_lock_mode14110); 
					match(input,ROW_VK,FOLLOW_ROW_VK_in_lock_mode14112); 
					match(input,PLSQL_RESERVED_EXCLUSIVE,FOLLOW_PLSQL_RESERVED_EXCLUSIVE_in_lock_mode14114); 
					// TEMPLATE REWRITE
					// 1537:5: -> template( \"not implemented: lock_mode\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: lock_mode");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:1538:10: PLSQL_RESERVED_EXCLUSIVE
					{
					match(input,PLSQL_RESERVED_EXCLUSIVE,FOLLOW_PLSQL_RESERVED_EXCLUSIVE_in_lock_mode14139); 
					// TEMPLATE REWRITE
					// 1539:5: -> template( \"not implemented: lock_mode\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: lock_mode");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "lock_mode"


	public static class general_table_ref_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "general_table_ref"
	// PLSQLPrinter.g:1545:1: general_table_ref : ^( TABLE_REF ( alias )? dml_table_expression_clause ( ONLY_VK )? ) -> template( \"not implemented: general_table_ref\";
	public final PLSQLPrinter.general_table_ref_return general_table_ref() throws RecognitionException {
		PLSQLPrinter.general_table_ref_return retval = new PLSQLPrinter.general_table_ref_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1546:5: ( ^( TABLE_REF ( alias )? dml_table_expression_clause ( ONLY_VK )? ) -> template( \"not implemented: general_table_ref\")
			// PLSQLPrinter.g:1546:10: ^( TABLE_REF ( alias )? dml_table_expression_clause ( ONLY_VK )? )
			{
			match(input,TABLE_REF,FOLLOW_TABLE_REF_in_general_table_ref14177); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1546:22: ( alias )?
			int alt362=2;
			int LA362_0 = input.LA(1);
			if ( (LA362_0==ALIAS) ) {
				alt362=1;
			}
			switch (alt362) {
				case 1 :
					// PLSQLPrinter.g:1546:22: alias
					{
					pushFollow(FOLLOW_alias_in_general_table_ref14179);
					alias();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_dml_table_expression_clause_in_general_table_ref14182);
			dml_table_expression_clause();
			state._fsp--;

			// PLSQLPrinter.g:1546:57: ( ONLY_VK )?
			int alt363=2;
			int LA363_0 = input.LA(1);
			if ( (LA363_0==ONLY_VK) ) {
				alt363=1;
			}
			switch (alt363) {
				case 1 :
					// PLSQLPrinter.g:1546:57: ONLY_VK
					{
					match(input,ONLY_VK,FOLLOW_ONLY_VK_in_general_table_ref14184); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1547:5: -> template( \"not implemented: general_table_ref\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: general_table_ref");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "general_table_ref"


	public static class static_returning_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "static_returning_clause"
	// PLSQLPrinter.g:1550:1: static_returning_clause : ^( STATIC_RETURNING ( expression )+ into_clause ) -> template( \"not implemented: static_returning_clause\";
	public final PLSQLPrinter.static_returning_clause_return static_returning_clause() throws RecognitionException {
		PLSQLPrinter.static_returning_clause_return retval = new PLSQLPrinter.static_returning_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1551:5: ( ^( STATIC_RETURNING ( expression )+ into_clause ) -> template( \"not implemented: static_returning_clause\")
			// PLSQLPrinter.g:1551:10: ^( STATIC_RETURNING ( expression )+ into_clause )
			{
			match(input,STATIC_RETURNING,FOLLOW_STATIC_RETURNING_in_static_returning_clause14221); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1551:29: ( expression )+
			int cnt364=0;
			loop364:
			while (true) {
				int alt364=2;
				int LA364_0 = input.LA(1);
				if ( (LA364_0==EXPR||LA364_0==LOGIC_EXPR) ) {
					alt364=1;
				}

				switch (alt364) {
				case 1 :
					// PLSQLPrinter.g:1551:29: expression
					{
					pushFollow(FOLLOW_expression_in_static_returning_clause14223);
					expression();
					state._fsp--;

					}
					break;

				default :
					if ( cnt364 >= 1 ) break loop364;
					EarlyExitException eee = new EarlyExitException(364, input);
					throw eee;
				}
				cnt364++;
			}

			pushFollow(FOLLOW_into_clause_in_static_returning_clause14226);
			into_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1552:5: -> template( \"not implemented: static_returning_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: static_returning_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "static_returning_clause"


	public static class error_logging_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "error_logging_clause"
	// PLSQLPrinter.g:1555:1: error_logging_clause : ^( LOG_VK ( error_logging_into_part )? ( expression )? ( error_logging_reject_part )? ) -> template( \"not implemented: error_logging_clause\";
	public final PLSQLPrinter.error_logging_clause_return error_logging_clause() throws RecognitionException {
		PLSQLPrinter.error_logging_clause_return retval = new PLSQLPrinter.error_logging_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1556:5: ( ^( LOG_VK ( error_logging_into_part )? ( expression )? ( error_logging_reject_part )? ) -> template( \"not implemented: error_logging_clause\")
			// PLSQLPrinter.g:1556:10: ^( LOG_VK ( error_logging_into_part )? ( expression )? ( error_logging_reject_part )? )
			{
			match(input,LOG_VK,FOLLOW_LOG_VK_in_error_logging_clause14262); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1556:19: ( error_logging_into_part )?
				int alt365=2;
				int LA365_0 = input.LA(1);
				if ( (LA365_0==SQL92_RESERVED_INTO) ) {
					alt365=1;
				}
				switch (alt365) {
					case 1 :
						// PLSQLPrinter.g:1556:19: error_logging_into_part
						{
						pushFollow(FOLLOW_error_logging_into_part_in_error_logging_clause14264);
						error_logging_into_part();
						state._fsp--;

						}
						break;

				}

				// PLSQLPrinter.g:1556:44: ( expression )?
				int alt366=2;
				int LA366_0 = input.LA(1);
				if ( (LA366_0==EXPR||LA366_0==LOGIC_EXPR) ) {
					alt366=1;
				}
				switch (alt366) {
					case 1 :
						// PLSQLPrinter.g:1556:44: expression
						{
						pushFollow(FOLLOW_expression_in_error_logging_clause14267);
						expression();
						state._fsp--;

						}
						break;

				}

				// PLSQLPrinter.g:1556:56: ( error_logging_reject_part )?
				int alt367=2;
				int LA367_0 = input.LA(1);
				if ( (LA367_0==REJECT_VK) ) {
					alt367=1;
				}
				switch (alt367) {
					case 1 :
						// PLSQLPrinter.g:1556:56: error_logging_reject_part
						{
						pushFollow(FOLLOW_error_logging_reject_part_in_error_logging_clause14270);
						error_logging_reject_part();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1557:5: -> template( \"not implemented: error_logging_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: error_logging_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "error_logging_clause"


	public static class error_logging_into_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "error_logging_into_part"
	// PLSQLPrinter.g:1560:1: error_logging_into_part : ^( SQL92_RESERVED_INTO tableview_name ) -> template( \"not implemented: error_logging_into_part\";
	public final PLSQLPrinter.error_logging_into_part_return error_logging_into_part() throws RecognitionException {
		PLSQLPrinter.error_logging_into_part_return retval = new PLSQLPrinter.error_logging_into_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1561:5: ( ^( SQL92_RESERVED_INTO tableview_name ) -> template( \"not implemented: error_logging_into_part\")
			// PLSQLPrinter.g:1561:10: ^( SQL92_RESERVED_INTO tableview_name )
			{
			match(input,SQL92_RESERVED_INTO,FOLLOW_SQL92_RESERVED_INTO_in_error_logging_into_part14307); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_tableview_name_in_error_logging_into_part14309);
			tableview_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1562:5: -> template( \"not implemented: error_logging_into_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: error_logging_into_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "error_logging_into_part"


	public static class error_logging_reject_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "error_logging_reject_part"
	// PLSQLPrinter.g:1565:1: error_logging_reject_part : ^( REJECT_VK ( UNLIMITED_VK | expression ) ) -> template( \"not implemented: error_logging_reject_part\";
	public final PLSQLPrinter.error_logging_reject_part_return error_logging_reject_part() throws RecognitionException {
		PLSQLPrinter.error_logging_reject_part_return retval = new PLSQLPrinter.error_logging_reject_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1566:5: ( ^( REJECT_VK ( UNLIMITED_VK | expression ) ) -> template( \"not implemented: error_logging_reject_part\")
			// PLSQLPrinter.g:1566:10: ^( REJECT_VK ( UNLIMITED_VK | expression ) )
			{
			match(input,REJECT_VK,FOLLOW_REJECT_VK_in_error_logging_reject_part14345); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1566:22: ( UNLIMITED_VK | expression )
			int alt368=2;
			int LA368_0 = input.LA(1);
			if ( (LA368_0==UNLIMITED_VK) ) {
				alt368=1;
			}
			else if ( (LA368_0==EXPR||LA368_0==LOGIC_EXPR) ) {
				alt368=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 368, 0, input);
				throw nvae;
			}

			switch (alt368) {
				case 1 :
					// PLSQLPrinter.g:1566:23: UNLIMITED_VK
					{
					match(input,UNLIMITED_VK,FOLLOW_UNLIMITED_VK_in_error_logging_reject_part14348); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1566:36: expression
					{
					pushFollow(FOLLOW_expression_in_error_logging_reject_part14350);
					expression();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1567:5: -> template( \"not implemented: error_logging_reject_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: error_logging_reject_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "error_logging_reject_part"


	public static class dml_table_expression_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "dml_table_expression_clause"
	// PLSQLPrinter.g:1570:1: dml_table_expression_clause : ( ^( TABLE_EXPRESSION ( ^( COLLECTION_MODE expression ( PLUS_SIGN )? ) | ^( SELECT_MODE select_statement ( subquery_restriction_clause )? ) | ^( DIRECT_MODE tableview_name ( sample_clause )? ) | table_ref | general_element | standard_function ) ) -> template( \"not implemented: dml_table_expression_clause\"| table_ref -> template( \"not implemented: dml_table_expression_clause\");
	public final PLSQLPrinter.dml_table_expression_clause_return dml_table_expression_clause() throws RecognitionException {
		PLSQLPrinter.dml_table_expression_clause_return retval = new PLSQLPrinter.dml_table_expression_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1571:5: ( ^( TABLE_EXPRESSION ( ^( COLLECTION_MODE expression ( PLUS_SIGN )? ) | ^( SELECT_MODE select_statement ( subquery_restriction_clause )? ) | ^( DIRECT_MODE tableview_name ( sample_clause )? ) | table_ref | general_element | standard_function ) ) -> template( \"not implemented: dml_table_expression_clause\"| table_ref -> template( \"not implemented: dml_table_expression_clause\")
			int alt373=2;
			int LA373_0 = input.LA(1);
			if ( (LA373_0==TABLE_EXPRESSION) ) {
				alt373=1;
			}
			else if ( (LA373_0==TABLE_REF) ) {
				alt373=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 373, 0, input);
				throw nvae;
			}

			switch (alt373) {
				case 1 :
					// PLSQLPrinter.g:1571:10: ^( TABLE_EXPRESSION ( ^( COLLECTION_MODE expression ( PLUS_SIGN )? ) | ^( SELECT_MODE select_statement ( subquery_restriction_clause )? ) | ^( DIRECT_MODE tableview_name ( sample_clause )? ) | table_ref | general_element | standard_function ) )
					{
					match(input,TABLE_EXPRESSION,FOLLOW_TABLE_EXPRESSION_in_dml_table_expression_clause14387); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1572:9: ( ^( COLLECTION_MODE expression ( PLUS_SIGN )? ) | ^( SELECT_MODE select_statement ( subquery_restriction_clause )? ) | ^( DIRECT_MODE tableview_name ( sample_clause )? ) | table_ref | general_element | standard_function )
					int alt372=6;
					switch ( input.LA(1) ) {
					case COLLECTION_MODE:
						{
						alt372=1;
						}
						break;
					case SELECT_MODE:
						{
						alt372=2;
						}
						break;
					case DIRECT_MODE:
						{
						alt372=3;
						}
						break;
					case TABLE_REF:
						{
						alt372=4;
						}
						break;
					case CASCATED_ELEMENT:
						{
						alt372=5;
						}
						break;
					case CAST_VK:
					case CHR_VK:
					case COLLECT_VK:
					case COUNT_VK:
					case DECOMPOSE_VK:
					case EXTRACT_VK:
					case FIRST_VALUE_VK:
					case FUNCTION_ENABLING_OVER:
					case FUNCTION_ENABLING_USING:
					case FUNCTION_ENABLING_WITHIN_OR_OVER:
					case LAST_VALUE_VK:
					case PREDICTION_FUNCTION:
					case TRANSLATE_VK:
					case TREAT_VK:
					case TRIM_VK:
					case XMLAGG_VK:
					case XMLCAST_VK:
					case XMLCOLATTVAL_VK:
					case XMLELEMENT_VK:
					case XMLEXISTS_VK:
					case XMLFOREST_VK:
					case XMLPARSE_VK:
					case XMLPI_VK:
					case XMLQUERY_VK:
					case XMLROOT_VK:
					case XMLSERIALIZE_VK:
					case XMLTABLE_VK:
						{
						alt372=6;
						}
						break;
					default:
						NoViableAltException nvae =
							new NoViableAltException("", 372, 0, input);
						throw nvae;
					}
					switch (alt372) {
						case 1 :
							// PLSQLPrinter.g:1572:14: ^( COLLECTION_MODE expression ( PLUS_SIGN )? )
							{
							match(input,COLLECTION_MODE,FOLLOW_COLLECTION_MODE_in_dml_table_expression_clause14404); 
							match(input, Token.DOWN, null); 
							pushFollow(FOLLOW_expression_in_dml_table_expression_clause14406);
							expression();
							state._fsp--;

							// PLSQLPrinter.g:1572:43: ( PLUS_SIGN )?
							int alt369=2;
							int LA369_0 = input.LA(1);
							if ( (LA369_0==PLUS_SIGN) ) {
								alt369=1;
							}
							switch (alt369) {
								case 1 :
									// PLSQLPrinter.g:1572:43: PLUS_SIGN
									{
									match(input,PLUS_SIGN,FOLLOW_PLUS_SIGN_in_dml_table_expression_clause14408); 
									}
									break;

							}

							match(input, Token.UP, null); 

							}
							break;
						case 2 :
							// PLSQLPrinter.g:1573:14: ^( SELECT_MODE select_statement ( subquery_restriction_clause )? )
							{
							match(input,SELECT_MODE,FOLLOW_SELECT_MODE_in_dml_table_expression_clause14426); 
							match(input, Token.DOWN, null); 
							pushFollow(FOLLOW_select_statement_in_dml_table_expression_clause14428);
							select_statement();
							state._fsp--;

							// PLSQLPrinter.g:1573:45: ( subquery_restriction_clause )?
							int alt370=2;
							int LA370_0 = input.LA(1);
							if ( (LA370_0==SQL92_RESERVED_WITH) ) {
								alt370=1;
							}
							switch (alt370) {
								case 1 :
									// PLSQLPrinter.g:1573:45: subquery_restriction_clause
									{
									pushFollow(FOLLOW_subquery_restriction_clause_in_dml_table_expression_clause14430);
									subquery_restriction_clause();
									state._fsp--;

									}
									break;

							}

							match(input, Token.UP, null); 

							}
							break;
						case 3 :
							// PLSQLPrinter.g:1574:14: ^( DIRECT_MODE tableview_name ( sample_clause )? )
							{
							match(input,DIRECT_MODE,FOLLOW_DIRECT_MODE_in_dml_table_expression_clause14448); 
							match(input, Token.DOWN, null); 
							pushFollow(FOLLOW_tableview_name_in_dml_table_expression_clause14450);
							tableview_name();
							state._fsp--;

							// PLSQLPrinter.g:1574:43: ( sample_clause )?
							int alt371=2;
							int LA371_0 = input.LA(1);
							if ( (LA371_0==SAMPLE_VK) ) {
								alt371=1;
							}
							switch (alt371) {
								case 1 :
									// PLSQLPrinter.g:1574:43: sample_clause
									{
									pushFollow(FOLLOW_sample_clause_in_dml_table_expression_clause14452);
									sample_clause();
									state._fsp--;

									}
									break;

							}

							match(input, Token.UP, null); 

							}
							break;
						case 4 :
							// PLSQLPrinter.g:1575:14: table_ref
							{
							pushFollow(FOLLOW_table_ref_in_dml_table_expression_clause14469);
							table_ref();
							state._fsp--;

							}
							break;
						case 5 :
							// PLSQLPrinter.g:1576:14: general_element
							{
							pushFollow(FOLLOW_general_element_in_dml_table_expression_clause14484);
							general_element();
							state._fsp--;

							}
							break;
						case 6 :
							// PLSQLPrinter.g:1577:14: standard_function
							{
							pushFollow(FOLLOW_standard_function_in_dml_table_expression_clause14499);
							standard_function();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1580:5: -> template( \"not implemented: dml_table_expression_clause\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: dml_table_expression_clause");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1581:14: table_ref
					{
					pushFollow(FOLLOW_table_ref_in_dml_table_expression_clause14548);
					table_ref();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1582:5: -> template( \"not implemented: dml_table_expression_clause\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: dml_table_expression_clause");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dml_table_expression_clause"


	public static class subquery_restriction_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subquery_restriction_clause"
	// PLSQLPrinter.g:1585:1: subquery_restriction_clause : ^( SQL92_RESERVED_WITH ( READ_VK | SQL92_RESERVED_CHECK ( constraint_name )? ) ) -> template( \"not implemented: subquery_restriction_clause\";
	public final PLSQLPrinter.subquery_restriction_clause_return subquery_restriction_clause() throws RecognitionException {
		PLSQLPrinter.subquery_restriction_clause_return retval = new PLSQLPrinter.subquery_restriction_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1586:5: ( ^( SQL92_RESERVED_WITH ( READ_VK | SQL92_RESERVED_CHECK ( constraint_name )? ) ) -> template( \"not implemented: subquery_restriction_clause\")
			// PLSQLPrinter.g:1586:10: ^( SQL92_RESERVED_WITH ( READ_VK | SQL92_RESERVED_CHECK ( constraint_name )? ) )
			{
			match(input,SQL92_RESERVED_WITH,FOLLOW_SQL92_RESERVED_WITH_in_subquery_restriction_clause14583); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1586:32: ( READ_VK | SQL92_RESERVED_CHECK ( constraint_name )? )
			int alt375=2;
			int LA375_0 = input.LA(1);
			if ( (LA375_0==READ_VK) ) {
				alt375=1;
			}
			else if ( (LA375_0==SQL92_RESERVED_CHECK) ) {
				alt375=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 375, 0, input);
				throw nvae;
			}

			switch (alt375) {
				case 1 :
					// PLSQLPrinter.g:1586:33: READ_VK
					{
					match(input,READ_VK,FOLLOW_READ_VK_in_subquery_restriction_clause14586); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1586:41: SQL92_RESERVED_CHECK ( constraint_name )?
					{
					match(input,SQL92_RESERVED_CHECK,FOLLOW_SQL92_RESERVED_CHECK_in_subquery_restriction_clause14588); 
					// PLSQLPrinter.g:1586:62: ( constraint_name )?
					int alt374=2;
					int LA374_0 = input.LA(1);
					if ( (LA374_0==CONSTRAINT_NAME) ) {
						alt374=1;
					}
					switch (alt374) {
						case 1 :
							// PLSQLPrinter.g:1586:62: constraint_name
							{
							pushFollow(FOLLOW_constraint_name_in_subquery_restriction_clause14590);
							constraint_name();
							state._fsp--;

							}
							break;

					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1587:5: -> template( \"not implemented: subquery_restriction_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: subquery_restriction_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subquery_restriction_clause"


	public static class sample_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "sample_clause"
	// PLSQLPrinter.g:1590:1: sample_clause : ^( SAMPLE_VK ( BLOCK_VK )? expression ( seed_part )? ) -> template( \"not implemented: sample_clause\";
	public final PLSQLPrinter.sample_clause_return sample_clause() throws RecognitionException {
		PLSQLPrinter.sample_clause_return retval = new PLSQLPrinter.sample_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1591:5: ( ^( SAMPLE_VK ( BLOCK_VK )? expression ( seed_part )? ) -> template( \"not implemented: sample_clause\")
			// PLSQLPrinter.g:1591:10: ^( SAMPLE_VK ( BLOCK_VK )? expression ( seed_part )? )
			{
			match(input,SAMPLE_VK,FOLLOW_SAMPLE_VK_in_sample_clause14628); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1591:22: ( BLOCK_VK )?
			int alt376=2;
			int LA376_0 = input.LA(1);
			if ( (LA376_0==BLOCK_VK) ) {
				alt376=1;
			}
			switch (alt376) {
				case 1 :
					// PLSQLPrinter.g:1591:22: BLOCK_VK
					{
					match(input,BLOCK_VK,FOLLOW_BLOCK_VK_in_sample_clause14630); 
					}
					break;

			}

			pushFollow(FOLLOW_expression_in_sample_clause14633);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:1591:43: ( seed_part )?
			int alt377=2;
			int LA377_0 = input.LA(1);
			if ( (LA377_0==SEED_VK) ) {
				alt377=1;
			}
			switch (alt377) {
				case 1 :
					// PLSQLPrinter.g:1591:43: seed_part
					{
					pushFollow(FOLLOW_seed_part_in_sample_clause14635);
					seed_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1592:5: -> template( \"not implemented: sample_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: sample_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sample_clause"


	public static class seed_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "seed_part"
	// PLSQLPrinter.g:1595:1: seed_part : ^( SEED_VK expression ) -> template( \"not implemented: seed_part\";
	public final PLSQLPrinter.seed_part_return seed_part() throws RecognitionException {
		PLSQLPrinter.seed_part_return retval = new PLSQLPrinter.seed_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1596:5: ( ^( SEED_VK expression ) -> template( \"not implemented: seed_part\")
			// PLSQLPrinter.g:1596:10: ^( SEED_VK expression )
			{
			match(input,SEED_VK,FOLLOW_SEED_VK_in_seed_part14673); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_seed_part14675);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1597:5: -> template( \"not implemented: seed_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: seed_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "seed_part"


	public static class cursor_manipulation_statements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "cursor_manipulation_statements"
	// PLSQLPrinter.g:1606:1: cursor_manipulation_statements : ( close_statement -> template( \"not implemented: cursor_manipulation_statements\"| open_statement -> template( \"not implemented: cursor_manipulation_statements\"| fetch_statement -> template( \"not implemented: cursor_manipulation_statements\"| open_for_statement -> template( \"not implemented: cursor_manipulation_statements\");
	public final PLSQLPrinter.cursor_manipulation_statements_return cursor_manipulation_statements() throws RecognitionException {
		PLSQLPrinter.cursor_manipulation_statements_return retval = new PLSQLPrinter.cursor_manipulation_statements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1607:5: ( close_statement -> template( \"not implemented: cursor_manipulation_statements\"| open_statement -> template( \"not implemented: cursor_manipulation_statements\"| fetch_statement -> template( \"not implemented: cursor_manipulation_statements\"| open_for_statement -> template( \"not implemented: cursor_manipulation_statements\")
			int alt378=4;
			switch ( input.LA(1) ) {
			case CLOSE_VK:
				{
				alt378=1;
				}
				break;
			case OPEN_VK:
				{
				int LA378_2 = input.LA(2);
				if ( (LA378_2==DOWN) ) {
					int LA378_4 = input.LA(3);
					if ( (LA378_4==CURSOR_NAME) ) {
						alt378=2;
					}
					else if ( (LA378_4==HOSTED_VARIABLE_NAME||LA378_4==VARIABLE_NAME) ) {
						alt378=4;
					}

					else {
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 378, 4, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 378, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SQL92_RESERVED_FETCH:
				{
				alt378=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 378, 0, input);
				throw nvae;
			}
			switch (alt378) {
				case 1 :
					// PLSQLPrinter.g:1607:10: close_statement
					{
					pushFollow(FOLLOW_close_statement_in_cursor_manipulation_statements14716);
					close_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1608:5: -> template( \"not implemented: cursor_manipulation_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: cursor_manipulation_statements");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1609:10: open_statement
					{
					pushFollow(FOLLOW_open_statement_in_cursor_manipulation_statements14741);
					open_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1610:5: -> template( \"not implemented: cursor_manipulation_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: cursor_manipulation_statements");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1611:10: fetch_statement
					{
					pushFollow(FOLLOW_fetch_statement_in_cursor_manipulation_statements14766);
					fetch_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1612:5: -> template( \"not implemented: cursor_manipulation_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: cursor_manipulation_statements");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1613:10: open_for_statement
					{
					pushFollow(FOLLOW_open_for_statement_in_cursor_manipulation_statements14791);
					open_for_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1614:5: -> template( \"not implemented: cursor_manipulation_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: cursor_manipulation_statements");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cursor_manipulation_statements"


	public static class close_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "close_statement"
	// PLSQLPrinter.g:1617:1: close_statement : ^( CLOSE_VK cursor_name ) -> template( \"not implemented: close_statement\";
	public final PLSQLPrinter.close_statement_return close_statement() throws RecognitionException {
		PLSQLPrinter.close_statement_return retval = new PLSQLPrinter.close_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1618:5: ( ^( CLOSE_VK cursor_name ) -> template( \"not implemented: close_statement\")
			// PLSQLPrinter.g:1618:11: ^( CLOSE_VK cursor_name )
			{
			match(input,CLOSE_VK,FOLLOW_CLOSE_VK_in_close_statement14827); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_cursor_name_in_close_statement14829);
			cursor_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1619:5: -> template( \"not implemented: close_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: close_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "close_statement"


	public static class open_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "open_statement"
	// PLSQLPrinter.g:1622:1: open_statement : ^( OPEN_VK cursor_name ( expression_list )? ) -> template( \"not implemented: open_statement\";
	public final PLSQLPrinter.open_statement_return open_statement() throws RecognitionException {
		PLSQLPrinter.open_statement_return retval = new PLSQLPrinter.open_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1623:5: ( ^( OPEN_VK cursor_name ( expression_list )? ) -> template( \"not implemented: open_statement\")
			// PLSQLPrinter.g:1623:10: ^( OPEN_VK cursor_name ( expression_list )? )
			{
			match(input,OPEN_VK,FOLLOW_OPEN_VK_in_open_statement14866); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_cursor_name_in_open_statement14868);
			cursor_name();
			state._fsp--;

			// PLSQLPrinter.g:1623:32: ( expression_list )?
			int alt379=2;
			int LA379_0 = input.LA(1);
			if ( (LA379_0==EXPR_LIST) ) {
				alt379=1;
			}
			switch (alt379) {
				case 1 :
					// PLSQLPrinter.g:1623:32: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_open_statement14870);
					expression_list();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1624:5: -> template( \"not implemented: open_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: open_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "open_statement"


	public static class fetch_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "fetch_statement"
	// PLSQLPrinter.g:1627:1: fetch_statement : ^( SQL92_RESERVED_FETCH cursor_name ( ^( SQL92_RESERVED_INTO ( variable_name )+ ) | ^( BULK_VK ( variable_name )+ ) ) ) -> template( \"not implemented: fetch_statement\";
	public final PLSQLPrinter.fetch_statement_return fetch_statement() throws RecognitionException {
		PLSQLPrinter.fetch_statement_return retval = new PLSQLPrinter.fetch_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1628:5: ( ^( SQL92_RESERVED_FETCH cursor_name ( ^( SQL92_RESERVED_INTO ( variable_name )+ ) | ^( BULK_VK ( variable_name )+ ) ) ) -> template( \"not implemented: fetch_statement\")
			// PLSQLPrinter.g:1628:10: ^( SQL92_RESERVED_FETCH cursor_name ( ^( SQL92_RESERVED_INTO ( variable_name )+ ) | ^( BULK_VK ( variable_name )+ ) ) )
			{
			match(input,SQL92_RESERVED_FETCH,FOLLOW_SQL92_RESERVED_FETCH_in_fetch_statement14907); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_cursor_name_in_fetch_statement14909);
			cursor_name();
			state._fsp--;

			// PLSQLPrinter.g:1629:13: ( ^( SQL92_RESERVED_INTO ( variable_name )+ ) | ^( BULK_VK ( variable_name )+ ) )
			int alt382=2;
			int LA382_0 = input.LA(1);
			if ( (LA382_0==SQL92_RESERVED_INTO) ) {
				alt382=1;
			}
			else if ( (LA382_0==BULK_VK) ) {
				alt382=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 382, 0, input);
				throw nvae;
			}

			switch (alt382) {
				case 1 :
					// PLSQLPrinter.g:1629:18: ^( SQL92_RESERVED_INTO ( variable_name )+ )
					{
					match(input,SQL92_RESERVED_INTO,FOLLOW_SQL92_RESERVED_INTO_in_fetch_statement14930); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1629:40: ( variable_name )+
					int cnt380=0;
					loop380:
					while (true) {
						int alt380=2;
						int LA380_0 = input.LA(1);
						if ( (LA380_0==HOSTED_VARIABLE_NAME||LA380_0==VARIABLE_NAME) ) {
							alt380=1;
						}

						switch (alt380) {
						case 1 :
							// PLSQLPrinter.g:1629:40: variable_name
							{
							pushFollow(FOLLOW_variable_name_in_fetch_statement14932);
							variable_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt380 >= 1 ) break loop380;
							EarlyExitException eee = new EarlyExitException(380, input);
							throw eee;
						}
						cnt380++;
					}

					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1630:18: ^( BULK_VK ( variable_name )+ )
					{
					match(input,BULK_VK,FOLLOW_BULK_VK_in_fetch_statement14954); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1630:28: ( variable_name )+
					int cnt381=0;
					loop381:
					while (true) {
						int alt381=2;
						int LA381_0 = input.LA(1);
						if ( (LA381_0==HOSTED_VARIABLE_NAME||LA381_0==VARIABLE_NAME) ) {
							alt381=1;
						}

						switch (alt381) {
						case 1 :
							// PLSQLPrinter.g:1630:28: variable_name
							{
							pushFollow(FOLLOW_variable_name_in_fetch_statement14956);
							variable_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt381 >= 1 ) break loop381;
							EarlyExitException eee = new EarlyExitException(381, input);
							throw eee;
						}
						cnt381++;
					}

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1633:5: -> template( \"not implemented: fetch_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: fetch_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "fetch_statement"


	public static class open_for_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "open_for_statement"
	// PLSQLPrinter.g:1636:1: open_for_statement : ^( OPEN_VK variable_name ( expression | select_statement ) ( using_clause )? ) -> template( \"not implemented: open_for_statement\";
	public final PLSQLPrinter.open_for_statement_return open_for_statement() throws RecognitionException {
		PLSQLPrinter.open_for_statement_return retval = new PLSQLPrinter.open_for_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1637:5: ( ^( OPEN_VK variable_name ( expression | select_statement ) ( using_clause )? ) -> template( \"not implemented: open_for_statement\")
			// PLSQLPrinter.g:1637:10: ^( OPEN_VK variable_name ( expression | select_statement ) ( using_clause )? )
			{
			match(input,OPEN_VK,FOLLOW_OPEN_VK_in_open_for_statement15017); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_variable_name_in_open_for_statement15019);
			variable_name();
			state._fsp--;

			// PLSQLPrinter.g:1637:34: ( expression | select_statement )
			int alt383=2;
			int LA383_0 = input.LA(1);
			if ( (LA383_0==EXPR||LA383_0==LOGIC_EXPR) ) {
				alt383=1;
			}
			else if ( (LA383_0==SELECT_STATEMENT) ) {
				alt383=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 383, 0, input);
				throw nvae;
			}

			switch (alt383) {
				case 1 :
					// PLSQLPrinter.g:1637:35: expression
					{
					pushFollow(FOLLOW_expression_in_open_for_statement15022);
					expression();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1637:46: select_statement
					{
					pushFollow(FOLLOW_select_statement_in_open_for_statement15024);
					select_statement();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1637:64: ( using_clause )?
			int alt384=2;
			int LA384_0 = input.LA(1);
			if ( (LA384_0==PLSQL_NON_RESERVED_USING) ) {
				alt384=1;
			}
			switch (alt384) {
				case 1 :
					// PLSQLPrinter.g:1637:64: using_clause
					{
					pushFollow(FOLLOW_using_clause_in_open_for_statement15027);
					using_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1638:5: -> template( \"not implemented: open_for_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: open_for_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "open_for_statement"


	public static class transaction_control_statements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "transaction_control_statements"
	// PLSQLPrinter.g:1645:1: transaction_control_statements : ( set_transaction_command -> template( \"not implemented: transaction_control_statements\"| set_constraint_command -> template( \"not implemented: transaction_control_statements\"| commit_statement -> template( \"not implemented: transaction_control_statements\"| rollback_statement -> template( \"not implemented: transaction_control_statements\"| savepoint_statement -> template( \"not implemented: transaction_control_statements\");
	public final PLSQLPrinter.transaction_control_statements_return transaction_control_statements() throws RecognitionException {
		PLSQLPrinter.transaction_control_statements_return retval = new PLSQLPrinter.transaction_control_statements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1646:5: ( set_transaction_command -> template( \"not implemented: transaction_control_statements\"| set_constraint_command -> template( \"not implemented: transaction_control_statements\"| commit_statement -> template( \"not implemented: transaction_control_statements\"| rollback_statement -> template( \"not implemented: transaction_control_statements\"| savepoint_statement -> template( \"not implemented: transaction_control_statements\")
			int alt385=5;
			switch ( input.LA(1) ) {
			case SET_TRANSACTION:
				{
				alt385=1;
				}
				break;
			case SET_CONSTRAINT:
				{
				alt385=2;
				}
				break;
			case COMMIT_VK:
				{
				alt385=3;
				}
				break;
			case ROLLBACK_VK:
				{
				alt385=4;
				}
				break;
			case SAVEPOINT_VK:
				{
				alt385=5;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 385, 0, input);
				throw nvae;
			}
			switch (alt385) {
				case 1 :
					// PLSQLPrinter.g:1646:10: set_transaction_command
					{
					pushFollow(FOLLOW_set_transaction_command_in_transaction_control_statements15067);
					set_transaction_command();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1647:5: -> template( \"not implemented: transaction_control_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: transaction_control_statements");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1648:10: set_constraint_command
					{
					pushFollow(FOLLOW_set_constraint_command_in_transaction_control_statements15092);
					set_constraint_command();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1649:5: -> template( \"not implemented: transaction_control_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: transaction_control_statements");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1650:10: commit_statement
					{
					pushFollow(FOLLOW_commit_statement_in_transaction_control_statements15117);
					commit_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1651:5: -> template( \"not implemented: transaction_control_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: transaction_control_statements");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1652:10: rollback_statement
					{
					pushFollow(FOLLOW_rollback_statement_in_transaction_control_statements15142);
					rollback_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1653:5: -> template( \"not implemented: transaction_control_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: transaction_control_statements");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:1654:10: savepoint_statement
					{
					pushFollow(FOLLOW_savepoint_statement_in_transaction_control_statements15167);
					savepoint_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1655:5: -> template( \"not implemented: transaction_control_statements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: transaction_control_statements");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "transaction_control_statements"


	public static class set_transaction_command_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "set_transaction_command"
	// PLSQLPrinter.g:1658:1: set_transaction_command : ^( SET_TRANSACTION ( CHAR_STRING )? ( ^( READ_VK ( ONLY_VK | WRITE_VK ) ) | ^( ISOLATION_VK ( SERIALIZABLE_VK | COMMITTED_VK ) ) | ^( ROLLBACK_VK rollback_segment_name ) )? ) -> template( \"not implemented: set_transaction_command\";
	public final PLSQLPrinter.set_transaction_command_return set_transaction_command() throws RecognitionException {
		PLSQLPrinter.set_transaction_command_return retval = new PLSQLPrinter.set_transaction_command_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1659:5: ( ^( SET_TRANSACTION ( CHAR_STRING )? ( ^( READ_VK ( ONLY_VK | WRITE_VK ) ) | ^( ISOLATION_VK ( SERIALIZABLE_VK | COMMITTED_VK ) ) | ^( ROLLBACK_VK rollback_segment_name ) )? ) -> template( \"not implemented: set_transaction_command\")
			// PLSQLPrinter.g:1659:10: ^( SET_TRANSACTION ( CHAR_STRING )? ( ^( READ_VK ( ONLY_VK | WRITE_VK ) ) | ^( ISOLATION_VK ( SERIALIZABLE_VK | COMMITTED_VK ) ) | ^( ROLLBACK_VK rollback_segment_name ) )? )
			{
			match(input,SET_TRANSACTION,FOLLOW_SET_TRANSACTION_in_set_transaction_command15202); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1659:28: ( CHAR_STRING )?
				int alt386=2;
				int LA386_0 = input.LA(1);
				if ( (LA386_0==CHAR_STRING) ) {
					alt386=1;
				}
				switch (alt386) {
					case 1 :
						// PLSQLPrinter.g:1659:28: CHAR_STRING
						{
						match(input,CHAR_STRING,FOLLOW_CHAR_STRING_in_set_transaction_command15204); 
						}
						break;

				}

				// PLSQLPrinter.g:1660:13: ( ^( READ_VK ( ONLY_VK | WRITE_VK ) ) | ^( ISOLATION_VK ( SERIALIZABLE_VK | COMMITTED_VK ) ) | ^( ROLLBACK_VK rollback_segment_name ) )?
				int alt389=4;
				switch ( input.LA(1) ) {
					case READ_VK:
						{
						alt389=1;
						}
						break;
					case ISOLATION_VK:
						{
						alt389=2;
						}
						break;
					case ROLLBACK_VK:
						{
						alt389=3;
						}
						break;
				}
				switch (alt389) {
					case 1 :
						// PLSQLPrinter.g:1660:18: ^( READ_VK ( ONLY_VK | WRITE_VK ) )
						{
						match(input,READ_VK,FOLLOW_READ_VK_in_set_transaction_command15225); 
						match(input, Token.DOWN, null); 
						// PLSQLPrinter.g:1660:28: ( ONLY_VK | WRITE_VK )
						int alt387=2;
						int LA387_0 = input.LA(1);
						if ( (LA387_0==ONLY_VK) ) {
							alt387=1;
						}
						else if ( (LA387_0==WRITE_VK) ) {
							alt387=2;
						}

						else {
							NoViableAltException nvae =
								new NoViableAltException("", 387, 0, input);
							throw nvae;
						}

						switch (alt387) {
							case 1 :
								// PLSQLPrinter.g:1660:29: ONLY_VK
								{
								match(input,ONLY_VK,FOLLOW_ONLY_VK_in_set_transaction_command15228); 
								}
								break;
							case 2 :
								// PLSQLPrinter.g:1660:37: WRITE_VK
								{
								match(input,WRITE_VK,FOLLOW_WRITE_VK_in_set_transaction_command15230); 
								}
								break;

						}

						match(input, Token.UP, null); 

						}
						break;
					case 2 :
						// PLSQLPrinter.g:1661:18: ^( ISOLATION_VK ( SERIALIZABLE_VK | COMMITTED_VK ) )
						{
						match(input,ISOLATION_VK,FOLLOW_ISOLATION_VK_in_set_transaction_command15252); 
						match(input, Token.DOWN, null); 
						// PLSQLPrinter.g:1661:33: ( SERIALIZABLE_VK | COMMITTED_VK )
						int alt388=2;
						int LA388_0 = input.LA(1);
						if ( (LA388_0==SERIALIZABLE_VK) ) {
							alt388=1;
						}
						else if ( (LA388_0==COMMITTED_VK) ) {
							alt388=2;
						}

						else {
							NoViableAltException nvae =
								new NoViableAltException("", 388, 0, input);
							throw nvae;
						}

						switch (alt388) {
							case 1 :
								// PLSQLPrinter.g:1661:34: SERIALIZABLE_VK
								{
								match(input,SERIALIZABLE_VK,FOLLOW_SERIALIZABLE_VK_in_set_transaction_command15255); 
								}
								break;
							case 2 :
								// PLSQLPrinter.g:1661:50: COMMITTED_VK
								{
								match(input,COMMITTED_VK,FOLLOW_COMMITTED_VK_in_set_transaction_command15257); 
								}
								break;

						}

						match(input, Token.UP, null); 

						}
						break;
					case 3 :
						// PLSQLPrinter.g:1662:18: ^( ROLLBACK_VK rollback_segment_name )
						{
						match(input,ROLLBACK_VK,FOLLOW_ROLLBACK_VK_in_set_transaction_command15279); 
						match(input, Token.DOWN, null); 
						pushFollow(FOLLOW_rollback_segment_name_in_set_transaction_command15281);
						rollback_segment_name();
						state._fsp--;

						match(input, Token.UP, null); 

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1665:5: -> template( \"not implemented: set_transaction_command\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: set_transaction_command");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "set_transaction_command"


	public static class set_constraint_command_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "set_constraint_command"
	// PLSQLPrinter.g:1668:1: set_constraint_command : ^( SET_CONSTRAINT ( SQL92_RESERVED_ALL | ( constraint_name )+ ) ( IMMEDIATE_VK | DEFERRED_VK ) ) -> template( \"not implemented: set_constraint_command\";
	public final PLSQLPrinter.set_constraint_command_return set_constraint_command() throws RecognitionException {
		PLSQLPrinter.set_constraint_command_return retval = new PLSQLPrinter.set_constraint_command_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1669:5: ( ^( SET_CONSTRAINT ( SQL92_RESERVED_ALL | ( constraint_name )+ ) ( IMMEDIATE_VK | DEFERRED_VK ) ) -> template( \"not implemented: set_constraint_command\")
			// PLSQLPrinter.g:1669:10: ^( SET_CONSTRAINT ( SQL92_RESERVED_ALL | ( constraint_name )+ ) ( IMMEDIATE_VK | DEFERRED_VK ) )
			{
			match(input,SET_CONSTRAINT,FOLLOW_SET_CONSTRAINT_in_set_constraint_command15342); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1669:27: ( SQL92_RESERVED_ALL | ( constraint_name )+ )
			int alt391=2;
			int LA391_0 = input.LA(1);
			if ( (LA391_0==SQL92_RESERVED_ALL) ) {
				alt391=1;
			}
			else if ( (LA391_0==CONSTRAINT_NAME) ) {
				alt391=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 391, 0, input);
				throw nvae;
			}

			switch (alt391) {
				case 1 :
					// PLSQLPrinter.g:1669:28: SQL92_RESERVED_ALL
					{
					match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_set_constraint_command15345); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1669:47: ( constraint_name )+
					{
					// PLSQLPrinter.g:1669:47: ( constraint_name )+
					int cnt390=0;
					loop390:
					while (true) {
						int alt390=2;
						int LA390_0 = input.LA(1);
						if ( (LA390_0==CONSTRAINT_NAME) ) {
							alt390=1;
						}

						switch (alt390) {
						case 1 :
							// PLSQLPrinter.g:1669:47: constraint_name
							{
							pushFollow(FOLLOW_constraint_name_in_set_constraint_command15347);
							constraint_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt390 >= 1 ) break loop390;
							EarlyExitException eee = new EarlyExitException(390, input);
							throw eee;
						}
						cnt390++;
					}

					}
					break;

			}

			// PLSQLPrinter.g:1669:65: ( IMMEDIATE_VK | DEFERRED_VK )
			int alt392=2;
			int LA392_0 = input.LA(1);
			if ( (LA392_0==IMMEDIATE_VK) ) {
				alt392=1;
			}
			else if ( (LA392_0==DEFERRED_VK) ) {
				alt392=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 392, 0, input);
				throw nvae;
			}

			switch (alt392) {
				case 1 :
					// PLSQLPrinter.g:1669:66: IMMEDIATE_VK
					{
					match(input,IMMEDIATE_VK,FOLLOW_IMMEDIATE_VK_in_set_constraint_command15352); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1669:79: DEFERRED_VK
					{
					match(input,DEFERRED_VK,FOLLOW_DEFERRED_VK_in_set_constraint_command15354); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1670:5: -> template( \"not implemented: set_constraint_command\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: set_constraint_command");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "set_constraint_command"


	public static class commit_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "commit_statement"
	// PLSQLPrinter.g:1673:1: commit_statement : ^( COMMIT_VK ( WORK_VK )? ( ^( COMMENT_VK expression ) | ^( FORCE_VK ( CORRUPT_XID_VK expression | CORRUPT_XID_ALL_VK | expression ( expression )? ) ) )? ( write_clause )? ) -> template( \"not implemented: commit_statement\";
	public final PLSQLPrinter.commit_statement_return commit_statement() throws RecognitionException {
		PLSQLPrinter.commit_statement_return retval = new PLSQLPrinter.commit_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1674:5: ( ^( COMMIT_VK ( WORK_VK )? ( ^( COMMENT_VK expression ) | ^( FORCE_VK ( CORRUPT_XID_VK expression | CORRUPT_XID_ALL_VK | expression ( expression )? ) ) )? ( write_clause )? ) -> template( \"not implemented: commit_statement\")
			// PLSQLPrinter.g:1674:11: ^( COMMIT_VK ( WORK_VK )? ( ^( COMMENT_VK expression ) | ^( FORCE_VK ( CORRUPT_XID_VK expression | CORRUPT_XID_ALL_VK | expression ( expression )? ) ) )? ( write_clause )? )
			{
			match(input,COMMIT_VK,FOLLOW_COMMIT_VK_in_commit_statement15392); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1674:23: ( WORK_VK )?
				int alt393=2;
				int LA393_0 = input.LA(1);
				if ( (LA393_0==WORK_VK) ) {
					alt393=1;
				}
				switch (alt393) {
					case 1 :
						// PLSQLPrinter.g:1674:23: WORK_VK
						{
						match(input,WORK_VK,FOLLOW_WORK_VK_in_commit_statement15394); 
						}
						break;

				}

				// PLSQLPrinter.g:1675:13: ( ^( COMMENT_VK expression ) | ^( FORCE_VK ( CORRUPT_XID_VK expression | CORRUPT_XID_ALL_VK | expression ( expression )? ) ) )?
				int alt396=3;
				int LA396_0 = input.LA(1);
				if ( (LA396_0==COMMENT_VK) ) {
					alt396=1;
				}
				else if ( (LA396_0==FORCE_VK) ) {
					alt396=2;
				}
				switch (alt396) {
					case 1 :
						// PLSQLPrinter.g:1675:18: ^( COMMENT_VK expression )
						{
						match(input,COMMENT_VK,FOLLOW_COMMENT_VK_in_commit_statement15416); 
						match(input, Token.DOWN, null); 
						pushFollow(FOLLOW_expression_in_commit_statement15418);
						expression();
						state._fsp--;

						match(input, Token.UP, null); 

						}
						break;
					case 2 :
						// PLSQLPrinter.g:1676:18: ^( FORCE_VK ( CORRUPT_XID_VK expression | CORRUPT_XID_ALL_VK | expression ( expression )? ) )
						{
						match(input,FORCE_VK,FOLLOW_FORCE_VK_in_commit_statement15439); 
						match(input, Token.DOWN, null); 
						// PLSQLPrinter.g:1676:29: ( CORRUPT_XID_VK expression | CORRUPT_XID_ALL_VK | expression ( expression )? )
						int alt395=3;
						switch ( input.LA(1) ) {
						case CORRUPT_XID_VK:
							{
							alt395=1;
							}
							break;
						case CORRUPT_XID_ALL_VK:
							{
							alt395=2;
							}
							break;
						case EXPR:
						case LOGIC_EXPR:
							{
							alt395=3;
							}
							break;
						default:
							NoViableAltException nvae =
								new NoViableAltException("", 395, 0, input);
							throw nvae;
						}
						switch (alt395) {
							case 1 :
								// PLSQLPrinter.g:1676:30: CORRUPT_XID_VK expression
								{
								match(input,CORRUPT_XID_VK,FOLLOW_CORRUPT_XID_VK_in_commit_statement15442); 
								pushFollow(FOLLOW_expression_in_commit_statement15444);
								expression();
								state._fsp--;

								}
								break;
							case 2 :
								// PLSQLPrinter.g:1676:56: CORRUPT_XID_ALL_VK
								{
								match(input,CORRUPT_XID_ALL_VK,FOLLOW_CORRUPT_XID_ALL_VK_in_commit_statement15446); 
								}
								break;
							case 3 :
								// PLSQLPrinter.g:1676:75: expression ( expression )?
								{
								pushFollow(FOLLOW_expression_in_commit_statement15448);
								expression();
								state._fsp--;

								// PLSQLPrinter.g:1676:86: ( expression )?
								int alt394=2;
								int LA394_0 = input.LA(1);
								if ( (LA394_0==EXPR||LA394_0==LOGIC_EXPR) ) {
									alt394=1;
								}
								switch (alt394) {
									case 1 :
										// PLSQLPrinter.g:1676:86: expression
										{
										pushFollow(FOLLOW_expression_in_commit_statement15450);
										expression();
										state._fsp--;

										}
										break;

								}

								}
								break;

						}

						match(input, Token.UP, null); 

						}
						break;

				}

				// PLSQLPrinter.g:1678:13: ( write_clause )?
				int alt397=2;
				int LA397_0 = input.LA(1);
				if ( (LA397_0==WRITE_VK) ) {
					alt397=1;
				}
				switch (alt397) {
					case 1 :
						// PLSQLPrinter.g:1678:13: write_clause
						{
						pushFollow(FOLLOW_write_clause_in_commit_statement15482);
						write_clause();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1680:5: -> template( \"not implemented: commit_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: commit_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "commit_statement"


	public static class write_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "write_clause"
	// PLSQLPrinter.g:1683:1: write_clause : ^( WRITE_VK ( WAIT_VK | PLSQL_RESERVED_NOWAIT )? ( IMMEDIATE_VK | BATCH_VK )? ) -> template( \"not implemented: write_clause\";
	public final PLSQLPrinter.write_clause_return write_clause() throws RecognitionException {
		PLSQLPrinter.write_clause_return retval = new PLSQLPrinter.write_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1684:5: ( ^( WRITE_VK ( WAIT_VK | PLSQL_RESERVED_NOWAIT )? ( IMMEDIATE_VK | BATCH_VK )? ) -> template( \"not implemented: write_clause\")
			// PLSQLPrinter.g:1684:10: ^( WRITE_VK ( WAIT_VK | PLSQL_RESERVED_NOWAIT )? ( IMMEDIATE_VK | BATCH_VK )? )
			{
			match(input,WRITE_VK,FOLLOW_WRITE_VK_in_write_clause15528); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1684:21: ( WAIT_VK | PLSQL_RESERVED_NOWAIT )?
				int alt398=3;
				int LA398_0 = input.LA(1);
				if ( (LA398_0==WAIT_VK) ) {
					alt398=1;
				}
				else if ( (LA398_0==PLSQL_RESERVED_NOWAIT) ) {
					alt398=2;
				}
				switch (alt398) {
					case 1 :
						// PLSQLPrinter.g:1684:22: WAIT_VK
						{
						match(input,WAIT_VK,FOLLOW_WAIT_VK_in_write_clause15531); 
						}
						break;
					case 2 :
						// PLSQLPrinter.g:1684:30: PLSQL_RESERVED_NOWAIT
						{
						match(input,PLSQL_RESERVED_NOWAIT,FOLLOW_PLSQL_RESERVED_NOWAIT_in_write_clause15533); 
						}
						break;

				}

				// PLSQLPrinter.g:1684:54: ( IMMEDIATE_VK | BATCH_VK )?
				int alt399=3;
				int LA399_0 = input.LA(1);
				if ( (LA399_0==IMMEDIATE_VK) ) {
					alt399=1;
				}
				else if ( (LA399_0==BATCH_VK) ) {
					alt399=2;
				}
				switch (alt399) {
					case 1 :
						// PLSQLPrinter.g:1684:55: IMMEDIATE_VK
						{
						match(input,IMMEDIATE_VK,FOLLOW_IMMEDIATE_VK_in_write_clause15538); 
						}
						break;
					case 2 :
						// PLSQLPrinter.g:1684:68: BATCH_VK
						{
						match(input,BATCH_VK,FOLLOW_BATCH_VK_in_write_clause15540); 
						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1685:5: -> template( \"not implemented: write_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: write_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "write_clause"


	public static class rollback_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "rollback_statement"
	// PLSQLPrinter.g:1688:1: rollback_statement : ^( ROLLBACK_VK ( WORK_VK )? ( ^( SQL92_RESERVED_TO savepoint_name ) | ^( FORCE_VK CHAR_STRING ) )? ) -> template( \"not implemented: rollback_statement\";
	public final PLSQLPrinter.rollback_statement_return rollback_statement() throws RecognitionException {
		PLSQLPrinter.rollback_statement_return retval = new PLSQLPrinter.rollback_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1689:5: ( ^( ROLLBACK_VK ( WORK_VK )? ( ^( SQL92_RESERVED_TO savepoint_name ) | ^( FORCE_VK CHAR_STRING ) )? ) -> template( \"not implemented: rollback_statement\")
			// PLSQLPrinter.g:1689:11: ^( ROLLBACK_VK ( WORK_VK )? ( ^( SQL92_RESERVED_TO savepoint_name ) | ^( FORCE_VK CHAR_STRING ) )? )
			{
			match(input,ROLLBACK_VK,FOLLOW_ROLLBACK_VK_in_rollback_statement15579); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1689:25: ( WORK_VK )?
				int alt400=2;
				int LA400_0 = input.LA(1);
				if ( (LA400_0==WORK_VK) ) {
					alt400=1;
				}
				switch (alt400) {
					case 1 :
						// PLSQLPrinter.g:1689:25: WORK_VK
						{
						match(input,WORK_VK,FOLLOW_WORK_VK_in_rollback_statement15581); 
						}
						break;

				}

				// PLSQLPrinter.g:1690:13: ( ^( SQL92_RESERVED_TO savepoint_name ) | ^( FORCE_VK CHAR_STRING ) )?
				int alt401=3;
				int LA401_0 = input.LA(1);
				if ( (LA401_0==SQL92_RESERVED_TO) ) {
					alt401=1;
				}
				else if ( (LA401_0==FORCE_VK) ) {
					alt401=2;
				}
				switch (alt401) {
					case 1 :
						// PLSQLPrinter.g:1690:18: ^( SQL92_RESERVED_TO savepoint_name )
						{
						match(input,SQL92_RESERVED_TO,FOLLOW_SQL92_RESERVED_TO_in_rollback_statement15603); 
						match(input, Token.DOWN, null); 
						pushFollow(FOLLOW_savepoint_name_in_rollback_statement15605);
						savepoint_name();
						state._fsp--;

						match(input, Token.UP, null); 

						}
						break;
					case 2 :
						// PLSQLPrinter.g:1691:18: ^( FORCE_VK CHAR_STRING )
						{
						match(input,FORCE_VK,FOLLOW_FORCE_VK_in_rollback_statement15626); 
						match(input, Token.DOWN, null); 
						match(input,CHAR_STRING,FOLLOW_CHAR_STRING_in_rollback_statement15628); 
						match(input, Token.UP, null); 

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1694:5: -> template( \"not implemented: rollback_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: rollback_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "rollback_statement"


	public static class savepoint_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "savepoint_statement"
	// PLSQLPrinter.g:1697:1: savepoint_statement : ^( SAVEPOINT_VK savepoint_name ) -> template( \"not implemented: savepoint_statement\";
	public final PLSQLPrinter.savepoint_statement_return savepoint_statement() throws RecognitionException {
		PLSQLPrinter.savepoint_statement_return retval = new PLSQLPrinter.savepoint_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1698:5: ( ^( SAVEPOINT_VK savepoint_name ) -> template( \"not implemented: savepoint_statement\")
			// PLSQLPrinter.g:1698:10: ^( SAVEPOINT_VK savepoint_name )
			{
			match(input,SAVEPOINT_VK,FOLLOW_SAVEPOINT_VK_in_savepoint_statement15689); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_savepoint_name_in_savepoint_statement15691);
			savepoint_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1699:5: -> template( \"not implemented: savepoint_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: savepoint_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "savepoint_statement"


	public static class pipe_row_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pipe_row_statement"
	// PLSQLPrinter.g:1702:1: pipe_row_statement : ^( PIPE_ROW expression ) -> template( \"not implemented: pipe_row_statement\";
	public final PLSQLPrinter.pipe_row_statement_return pipe_row_statement() throws RecognitionException {
		PLSQLPrinter.pipe_row_statement_return retval = new PLSQLPrinter.pipe_row_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1703:5: ( ^( PIPE_ROW expression ) -> template( \"not implemented: pipe_row_statement\")
			// PLSQLPrinter.g:1703:10: ^( PIPE_ROW expression )
			{
			match(input,PIPE_ROW,FOLLOW_PIPE_ROW_in_pipe_row_statement15732); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_pipe_row_statement15734);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1704:5: -> template( \"not implemented: pipe_row_statement\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: pipe_row_statement");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pipe_row_statement"


	public static class expression_list_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "expression_list"
	// PLSQLPrinter.g:1711:1: expression_list : ^( EXPR_LIST ( expression )* ) -> template( \"not implemented: expression_list\";
	public final PLSQLPrinter.expression_list_return expression_list() throws RecognitionException {
		PLSQLPrinter.expression_list_return retval = new PLSQLPrinter.expression_list_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1712:5: ( ^( EXPR_LIST ( expression )* ) -> template( \"not implemented: expression_list\")
			// PLSQLPrinter.g:1712:10: ^( EXPR_LIST ( expression )* )
			{
			match(input,EXPR_LIST,FOLLOW_EXPR_LIST_in_expression_list15774); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1712:22: ( expression )*
				loop402:
				while (true) {
					int alt402=2;
					int LA402_0 = input.LA(1);
					if ( (LA402_0==EXPR||LA402_0==LOGIC_EXPR) ) {
						alt402=1;
					}

					switch (alt402) {
					case 1 :
						// PLSQLPrinter.g:1712:22: expression
						{
						pushFollow(FOLLOW_expression_in_expression_list15776);
						expression();
						state._fsp--;

						}
						break;

					default :
						break loop402;
					}
				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1713:5: -> template( \"not implemented: expression_list\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: expression_list");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "expression_list"


	public static class expression_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "expression"
	// PLSQLPrinter.g:1716:1: expression : ( ^( LOGIC_EXPR expression_element ) -> template( \"not implemented: expression\"| ^( EXPR expression_element ) -> template( \"not implemented: expression\");
	public final PLSQLPrinter.expression_return expression() throws RecognitionException {
		PLSQLPrinter.expression_return retval = new PLSQLPrinter.expression_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1717:5: ( ^( LOGIC_EXPR expression_element ) -> template( \"not implemented: expression\"| ^( EXPR expression_element ) -> template( \"not implemented: expression\")
			int alt403=2;
			int LA403_0 = input.LA(1);
			if ( (LA403_0==LOGIC_EXPR) ) {
				alt403=1;
			}
			else if ( (LA403_0==EXPR) ) {
				alt403=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 403, 0, input);
				throw nvae;
			}

			switch (alt403) {
				case 1 :
					// PLSQLPrinter.g:1717:10: ^( LOGIC_EXPR expression_element )
					{
					match(input,LOGIC_EXPR,FOLLOW_LOGIC_EXPR_in_expression15813); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression15815);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1718:5: -> template( \"not implemented: expression\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1719:10: ^( EXPR expression_element )
					{
					match(input,EXPR,FOLLOW_EXPR_in_expression15842); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression15844);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1720:5: -> template( \"not implemented: expression\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "expression"


	public static class expression_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "expression_element"
	// PLSQLPrinter.g:1723:1: expression_element : ( ^( SQL92_RESERVED_OR expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( SQL92_RESERVED_AND expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( SQL92_RESERVED_NOT expression_element ) -> template( \"not implemented: expression_element\"| ^( ( EQUALS_OP | NOT_EQUAL_OP | LESS_THAN_OP | GREATER_THAN_OP | LESS_THAN_OR_EQUALS_OP | GREATER_THAN_OR_EQUALS_OP ) expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NOT_NULL expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NULL expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NOT_NAN expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NAN expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NOT_PRESENT expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_PRESENT expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NOT_INFINITE expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_INFINITE expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NOT_A_SET expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_A_SET expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NOT_EMPTY expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_EMPTY expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NOT_OF_TYPE expression_element ( type_spec )+ ) -> template( \"not implemented: expression_element\"| ^( IS_OF_TYPE expression_element ( type_spec )+ ) -> template( \"not implemented: expression_element\"| ^( ( MEMBER_VK | SUBMULTISET_VK ) expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( NOT_IN expression_element in_elements ) -> template( \"not implemented: expression_element\"| ^( SQL92_RESERVED_IN expression_element in_elements ) -> template( \"not implemented: expression_element\"| ^( NOT_BETWEEN expression_element expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( SQL92_RESERVED_BETWEEN expression_element expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( NOT_LIKE expression_element expression_element ( expression_element )? ) -> template( \"not implemented: expression_element\"| ^( ( SQL92_RESERVED_LIKE | LIKEC_VK | LIKE2_VK | LIKE4_VK ) expression_element expression_element ( expression_element )? ) -> template( \"not implemented: expression_element\"| ^( CONCATENATION_OP expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( PLUS_SIGN expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( MINUS_SIGN expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( ASTERISK expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( SOLIDUS expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( MOD_VK expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( DIV_VK expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( PIPE_VK expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( UNARY_OPERATOR expression_element ) -> template( \"not implemented: expression_element\"| ^( SQL92_RESERVED_PRIOR expression_element ) -> template( \"not implemented: expression_element\"| ^( NEW_VK expression ) -> template( \"not implemented: expression_element\"| ^( SQL92_RESERVED_DISTINCT expression_element ) -> template( \"not implemented: expression_element\"| ^( STANDARD_FUNCTION standard_function ) -> template( \"not implemented: expression_element\"| ^( ( SOME_VK | SQL92_RESERVED_EXISTS | SQL92_RESERVED_ALL | SQL92_RESERVED_ANY ) expression_element ) -> template( \"not implemented: expression_element\"| ^( VECTOR_EXPR ( expression_element )+ ) -> template( \"not implemented: expression_element\"| ^( DATETIME_OP expression_element datetime_element ) -> template( \"not implemented: expression_element\"| model_expression -> template( \"not implemented: expression_element\"| ^( KEEP_VK expression_element DENSE_RANK_VK ( FIRST_VK | LAST_VK ) order_by_clause ( over_clause )? ) -> template( \"not implemented: expression_element\"| ^( DOT_ASTERISK tableview_name ) -> template( \"not implemented: expression_element\"| ^( ( PERCENT_FOUND_VK | PERCENT_NOTFOUND_VK | PERCENT_ROWCOUNT_VK | PERCENT_ISOPEN_VK ) cursor_name ) -> template( \"not implemented: expression_element\"| ^( OUTER_JOIN_SIGN expression_element ) -> template( \"not implemented: expression_element\"| case_statement -> template( \"not implemented: expression_element\"| constant -> template( \"not implemented: expression_element\"| general_element -> template( \"not implemented: expression_element\"| subquery -> template( \"not implemented: expression_element\");
	public final PLSQLPrinter.expression_element_return expression_element() throws RecognitionException {
		PLSQLPrinter.expression_element_return retval = new PLSQLPrinter.expression_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1724:5: ( ^( SQL92_RESERVED_OR expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( SQL92_RESERVED_AND expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( SQL92_RESERVED_NOT expression_element ) -> template( \"not implemented: expression_element\"| ^( ( EQUALS_OP | NOT_EQUAL_OP | LESS_THAN_OP | GREATER_THAN_OP | LESS_THAN_OR_EQUALS_OP | GREATER_THAN_OR_EQUALS_OP ) expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NOT_NULL expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NULL expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NOT_NAN expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NAN expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NOT_PRESENT expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_PRESENT expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NOT_INFINITE expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_INFINITE expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NOT_A_SET expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_A_SET expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NOT_EMPTY expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_EMPTY expression_element ) -> template( \"not implemented: expression_element\"| ^( IS_NOT_OF_TYPE expression_element ( type_spec )+ ) -> template( \"not implemented: expression_element\"| ^( IS_OF_TYPE expression_element ( type_spec )+ ) -> template( \"not implemented: expression_element\"| ^( ( MEMBER_VK | SUBMULTISET_VK ) expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( NOT_IN expression_element in_elements ) -> template( \"not implemented: expression_element\"| ^( SQL92_RESERVED_IN expression_element in_elements ) -> template( \"not implemented: expression_element\"| ^( NOT_BETWEEN expression_element expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( SQL92_RESERVED_BETWEEN expression_element expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( NOT_LIKE expression_element expression_element ( expression_element )? ) -> template( \"not implemented: expression_element\"| ^( ( SQL92_RESERVED_LIKE | LIKEC_VK | LIKE2_VK | LIKE4_VK ) expression_element expression_element ( expression_element )? ) -> template( \"not implemented: expression_element\"| ^( CONCATENATION_OP expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( PLUS_SIGN expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( MINUS_SIGN expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( ASTERISK expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( SOLIDUS expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( MOD_VK expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( DIV_VK expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( PIPE_VK expression_element expression_element ) -> template( \"not implemented: expression_element\"| ^( UNARY_OPERATOR expression_element ) -> template( \"not implemented: expression_element\"| ^( SQL92_RESERVED_PRIOR expression_element ) -> template( \"not implemented: expression_element\"| ^( NEW_VK expression ) -> template( \"not implemented: expression_element\"| ^( SQL92_RESERVED_DISTINCT expression_element ) -> template( \"not implemented: expression_element\"| ^( STANDARD_FUNCTION standard_function ) -> template( \"not implemented: expression_element\"| ^( ( SOME_VK | SQL92_RESERVED_EXISTS | SQL92_RESERVED_ALL | SQL92_RESERVED_ANY ) expression_element ) -> template( \"not implemented: expression_element\"| ^( VECTOR_EXPR ( expression_element )+ ) -> template( \"not implemented: expression_element\"| ^( DATETIME_OP expression_element datetime_element ) -> template( \"not implemented: expression_element\"| model_expression -> template( \"not implemented: expression_element\"| ^( KEEP_VK expression_element DENSE_RANK_VK ( FIRST_VK | LAST_VK ) order_by_clause ( over_clause )? ) -> template( \"not implemented: expression_element\"| ^( DOT_ASTERISK tableview_name ) -> template( \"not implemented: expression_element\"| ^( ( PERCENT_FOUND_VK | PERCENT_NOTFOUND_VK | PERCENT_ROWCOUNT_VK | PERCENT_ISOPEN_VK ) cursor_name ) -> template( \"not implemented: expression_element\"| ^( OUTER_JOIN_SIGN expression_element ) -> template( \"not implemented: expression_element\"| case_statement -> template( \"not implemented: expression_element\"| constant -> template( \"not implemented: expression_element\"| general_element -> template( \"not implemented: expression_element\"| subquery -> template( \"not implemented: expression_element\")
			int alt416=50;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_OR:
				{
				alt416=1;
				}
				break;
			case SQL92_RESERVED_AND:
				{
				alt416=2;
				}
				break;
			case SQL92_RESERVED_NOT:
				{
				alt416=3;
				}
				break;
			case EQUALS_OP:
			case GREATER_THAN_OP:
			case GREATER_THAN_OR_EQUALS_OP:
			case LESS_THAN_OP:
			case LESS_THAN_OR_EQUALS_OP:
			case NOT_EQUAL_OP:
				{
				alt416=4;
				}
				break;
			case IS_NOT_NULL:
				{
				alt416=5;
				}
				break;
			case IS_NULL:
				{
				alt416=6;
				}
				break;
			case IS_NOT_NAN:
				{
				alt416=7;
				}
				break;
			case IS_NAN:
				{
				alt416=8;
				}
				break;
			case IS_NOT_PRESENT:
				{
				alt416=9;
				}
				break;
			case IS_PRESENT:
				{
				alt416=10;
				}
				break;
			case IS_NOT_INFINITE:
				{
				alt416=11;
				}
				break;
			case IS_INFINITE:
				{
				alt416=12;
				}
				break;
			case IS_NOT_A_SET:
				{
				alt416=13;
				}
				break;
			case IS_A_SET:
				{
				alt416=14;
				}
				break;
			case IS_NOT_EMPTY:
				{
				alt416=15;
				}
				break;
			case IS_EMPTY:
				{
				alt416=16;
				}
				break;
			case IS_NOT_OF_TYPE:
				{
				alt416=17;
				}
				break;
			case IS_OF_TYPE:
				{
				alt416=18;
				}
				break;
			case MEMBER_VK:
			case SUBMULTISET_VK:
				{
				alt416=19;
				}
				break;
			case NOT_IN:
				{
				alt416=20;
				}
				break;
			case SQL92_RESERVED_IN:
				{
				alt416=21;
				}
				break;
			case NOT_BETWEEN:
				{
				alt416=22;
				}
				break;
			case SQL92_RESERVED_BETWEEN:
				{
				alt416=23;
				}
				break;
			case NOT_LIKE:
				{
				alt416=24;
				}
				break;
			case SQL92_RESERVED_LIKE:
			case LIKE2_VK:
			case LIKE4_VK:
			case LIKEC_VK:
				{
				alt416=25;
				}
				break;
			case CONCATENATION_OP:
				{
				alt416=26;
				}
				break;
			case PLUS_SIGN:
				{
				alt416=27;
				}
				break;
			case MINUS_SIGN:
				{
				int LA416_28 = input.LA(2);
				if ( (LA416_28==DOWN) ) {
					int LA416_51 = input.LA(3);
					if ( (LA416_51==UNSIGNED_INTEGER) ) {
						int LA416_52 = input.LA(4);
						if ( (LA416_52==UP) ) {
							alt416=48;
						}
						else if ( (LA416_52==APPROXIMATE_NUM_LIT||LA416_52==ASTERISK||LA416_52==CHAR_STRING||LA416_52==CONCATENATION_OP||(LA416_52 >= EQUALS_OP && LA416_52 <= EXACT_NUM_LIT)||(LA416_52 >= GREATER_THAN_OP && LA416_52 <= GREATER_THAN_OR_EQUALS_OP)||(LA416_52 >= LESS_THAN_OP && LA416_52 <= LESS_THAN_OR_EQUALS_OP)||LA416_52==MINUS_SIGN||LA416_52==NOT_EQUAL_OP||LA416_52==PLUS_SIGN||LA416_52==SOLIDUS||LA416_52==SQL92_RESERVED_ALL||(LA416_52 >= SQL92_RESERVED_AND && LA416_52 <= SQL92_RESERVED_ANY)||LA416_52==SQL92_RESERVED_BETWEEN||LA416_52==SQL92_RESERVED_DEFAULT||LA416_52==SQL92_RESERVED_DISTINCT||(LA416_52 >= SQL92_RESERVED_EXISTS && LA416_52 <= SQL92_RESERVED_FALSE)||LA416_52==SQL92_RESERVED_IN||(LA416_52 >= SQL92_RESERVED_LIKE && LA416_52 <= SQL92_RESERVED_NULL)||LA416_52==SQL92_RESERVED_OR||LA416_52==SQL92_RESERVED_PRIOR||LA416_52==SQL92_RESERVED_TRUE||LA416_52==UNSIGNED_INTEGER||LA416_52==CASCATED_ELEMENT||LA416_52==DATETIME_OP||LA416_52==DBTIMEZONE_VK||LA416_52==DIV_VK||LA416_52==DOT_ASTERISK||(LA416_52 >= IS_A_SET && LA416_52 <= IS_PRESENT)||LA416_52==KEEP_VK||(LA416_52 >= LIKE2_VK && LA416_52 <= LIKEC_VK)||LA416_52==MAXVALUE_VK||LA416_52==MEMBER_VK||LA416_52==MINVALUE_VK||LA416_52==MODEL_EXPRESSION||LA416_52==MOD_VK||LA416_52==NEW_VK||LA416_52==NOT_BETWEEN||(LA416_52 >= NOT_IN && LA416_52 <= NOT_LIKE)||LA416_52==OUTER_JOIN_SIGN||(LA416_52 >= PERCENT_FOUND_VK && LA416_52 <= PERCENT_ROWCOUNT_VK)||LA416_52==PIPE_VK||LA416_52==SEARCHED_CASE||LA416_52==SESSIONTIMEZONE_VK||LA416_52==SIMPLE_CASE||LA416_52==SOME_VK||LA416_52==STANDARD_FUNCTION||LA416_52==SUBMULTISET_VK||LA416_52==SUBQUERY||LA416_52==UNARY_OPERATOR||LA416_52==VECTOR_EXPR) ) {
							alt416=28;
						}

						else {
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 416, 52, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA416_51==APPROXIMATE_NUM_LIT||LA416_51==ASTERISK||LA416_51==CHAR_STRING||LA416_51==CONCATENATION_OP||(LA416_51 >= EQUALS_OP && LA416_51 <= EXACT_NUM_LIT)||(LA416_51 >= GREATER_THAN_OP && LA416_51 <= GREATER_THAN_OR_EQUALS_OP)||(LA416_51 >= LESS_THAN_OP && LA416_51 <= LESS_THAN_OR_EQUALS_OP)||LA416_51==MINUS_SIGN||LA416_51==NOT_EQUAL_OP||LA416_51==PLUS_SIGN||LA416_51==SOLIDUS||LA416_51==SQL92_RESERVED_ALL||(LA416_51 >= SQL92_RESERVED_AND && LA416_51 <= SQL92_RESERVED_ANY)||LA416_51==SQL92_RESERVED_BETWEEN||LA416_51==SQL92_RESERVED_DEFAULT||LA416_51==SQL92_RESERVED_DISTINCT||(LA416_51 >= SQL92_RESERVED_EXISTS && LA416_51 <= SQL92_RESERVED_FALSE)||LA416_51==SQL92_RESERVED_IN||(LA416_51 >= SQL92_RESERVED_LIKE && LA416_51 <= SQL92_RESERVED_NULL)||LA416_51==SQL92_RESERVED_OR||LA416_51==SQL92_RESERVED_PRIOR||LA416_51==SQL92_RESERVED_TRUE||LA416_51==CASCATED_ELEMENT||LA416_51==DATETIME_OP||LA416_51==DBTIMEZONE_VK||LA416_51==DIV_VK||LA416_51==DOT_ASTERISK||(LA416_51 >= IS_A_SET && LA416_51 <= IS_PRESENT)||LA416_51==KEEP_VK||(LA416_51 >= LIKE2_VK && LA416_51 <= LIKEC_VK)||LA416_51==MAXVALUE_VK||LA416_51==MEMBER_VK||LA416_51==MINVALUE_VK||LA416_51==MODEL_EXPRESSION||LA416_51==MOD_VK||LA416_51==NEW_VK||LA416_51==NOT_BETWEEN||(LA416_51 >= NOT_IN && LA416_51 <= NOT_LIKE)||LA416_51==OUTER_JOIN_SIGN||(LA416_51 >= PERCENT_FOUND_VK && LA416_51 <= PERCENT_ROWCOUNT_VK)||LA416_51==PIPE_VK||LA416_51==SEARCHED_CASE||LA416_51==SESSIONTIMEZONE_VK||LA416_51==SIMPLE_CASE||LA416_51==SOME_VK||LA416_51==STANDARD_FUNCTION||LA416_51==SUBMULTISET_VK||LA416_51==SUBQUERY||LA416_51==UNARY_OPERATOR||LA416_51==VECTOR_EXPR) ) {
						alt416=28;
					}

					else {
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 416, 51, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 416, 28, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ASTERISK:
				{
				alt416=29;
				}
				break;
			case SOLIDUS:
				{
				alt416=30;
				}
				break;
			case MOD_VK:
				{
				alt416=31;
				}
				break;
			case DIV_VK:
				{
				alt416=32;
				}
				break;
			case PIPE_VK:
				{
				alt416=33;
				}
				break;
			case UNARY_OPERATOR:
				{
				alt416=34;
				}
				break;
			case SQL92_RESERVED_PRIOR:
				{
				alt416=35;
				}
				break;
			case NEW_VK:
				{
				alt416=36;
				}
				break;
			case SQL92_RESERVED_DISTINCT:
				{
				alt416=37;
				}
				break;
			case STANDARD_FUNCTION:
				{
				alt416=38;
				}
				break;
			case SQL92_RESERVED_ALL:
			case SQL92_RESERVED_ANY:
			case SQL92_RESERVED_EXISTS:
			case SOME_VK:
				{
				alt416=39;
				}
				break;
			case VECTOR_EXPR:
				{
				alt416=40;
				}
				break;
			case DATETIME_OP:
				{
				alt416=41;
				}
				break;
			case MODEL_EXPRESSION:
				{
				alt416=42;
				}
				break;
			case KEEP_VK:
				{
				alt416=43;
				}
				break;
			case DOT_ASTERISK:
				{
				alt416=44;
				}
				break;
			case PERCENT_FOUND_VK:
			case PERCENT_ISOPEN_VK:
			case PERCENT_NOTFOUND_VK:
			case PERCENT_ROWCOUNT_VK:
				{
				alt416=45;
				}
				break;
			case OUTER_JOIN_SIGN:
				{
				alt416=46;
				}
				break;
			case SEARCHED_CASE:
			case SIMPLE_CASE:
				{
				alt416=47;
				}
				break;
			case APPROXIMATE_NUM_LIT:
			case CHAR_STRING:
			case EXACT_NUM_LIT:
			case SQL92_RESERVED_DEFAULT:
			case SQL92_RESERVED_FALSE:
			case SQL92_RESERVED_NULL:
			case SQL92_RESERVED_TRUE:
			case UNSIGNED_INTEGER:
			case DBTIMEZONE_VK:
			case MAXVALUE_VK:
			case MINVALUE_VK:
			case SESSIONTIMEZONE_VK:
				{
				alt416=48;
				}
				break;
			case CASCATED_ELEMENT:
				{
				alt416=49;
				}
				break;
			case SUBQUERY:
				{
				alt416=50;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 416, 0, input);
				throw nvae;
			}
			switch (alt416) {
				case 1 :
					// PLSQLPrinter.g:1724:10: ^( SQL92_RESERVED_OR expression_element expression_element )
					{
					match(input,SQL92_RESERVED_OR,FOLLOW_SQL92_RESERVED_OR_in_expression_element15880); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element15882);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element15884);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1725:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1726:10: ^( SQL92_RESERVED_AND expression_element expression_element )
					{
					match(input,SQL92_RESERVED_AND,FOLLOW_SQL92_RESERVED_AND_in_expression_element15911); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element15913);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element15915);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1727:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1728:10: ^( SQL92_RESERVED_NOT expression_element )
					{
					match(input,SQL92_RESERVED_NOT,FOLLOW_SQL92_RESERVED_NOT_in_expression_element15942); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element15944);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1729:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1730:10: ^( ( EQUALS_OP | NOT_EQUAL_OP | LESS_THAN_OP | GREATER_THAN_OP | LESS_THAN_OR_EQUALS_OP | GREATER_THAN_OR_EQUALS_OP ) expression_element expression_element )
					{
					// PLSQLPrinter.g:1730:12: ( EQUALS_OP | NOT_EQUAL_OP | LESS_THAN_OP | GREATER_THAN_OP | LESS_THAN_OR_EQUALS_OP | GREATER_THAN_OR_EQUALS_OP )
					int alt404=6;
					switch ( input.LA(1) ) {
					case EQUALS_OP:
						{
						alt404=1;
						}
						break;
					case NOT_EQUAL_OP:
						{
						alt404=2;
						}
						break;
					case LESS_THAN_OP:
						{
						alt404=3;
						}
						break;
					case GREATER_THAN_OP:
						{
						alt404=4;
						}
						break;
					case LESS_THAN_OR_EQUALS_OP:
						{
						alt404=5;
						}
						break;
					case GREATER_THAN_OR_EQUALS_OP:
						{
						alt404=6;
						}
						break;
					default:
						NoViableAltException nvae =
							new NoViableAltException("", 404, 0, input);
						throw nvae;
					}
					switch (alt404) {
						case 1 :
							// PLSQLPrinter.g:1730:13: EQUALS_OP
							{
							match(input,EQUALS_OP,FOLLOW_EQUALS_OP_in_expression_element15972); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1730:23: NOT_EQUAL_OP
							{
							match(input,NOT_EQUAL_OP,FOLLOW_NOT_EQUAL_OP_in_expression_element15974); 
							}
							break;
						case 3 :
							// PLSQLPrinter.g:1730:36: LESS_THAN_OP
							{
							match(input,LESS_THAN_OP,FOLLOW_LESS_THAN_OP_in_expression_element15976); 
							}
							break;
						case 4 :
							// PLSQLPrinter.g:1730:49: GREATER_THAN_OP
							{
							match(input,GREATER_THAN_OP,FOLLOW_GREATER_THAN_OP_in_expression_element15978); 
							}
							break;
						case 5 :
							// PLSQLPrinter.g:1730:65: LESS_THAN_OR_EQUALS_OP
							{
							match(input,LESS_THAN_OR_EQUALS_OP,FOLLOW_LESS_THAN_OR_EQUALS_OP_in_expression_element15980); 
							}
							break;
						case 6 :
							// PLSQLPrinter.g:1730:88: GREATER_THAN_OR_EQUALS_OP
							{
							match(input,GREATER_THAN_OR_EQUALS_OP,FOLLOW_GREATER_THAN_OR_EQUALS_OP_in_expression_element15982); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element15985);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element15987);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1732:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:1733:10: ^( IS_NOT_NULL expression_element )
					{
					match(input,IS_NOT_NULL,FOLLOW_IS_NOT_NULL_in_expression_element16015); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16017);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1734:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:1735:10: ^( IS_NULL expression_element )
					{
					match(input,IS_NULL,FOLLOW_IS_NULL_in_expression_element16044); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16046);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1736:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:1737:10: ^( IS_NOT_NAN expression_element )
					{
					match(input,IS_NOT_NAN,FOLLOW_IS_NOT_NAN_in_expression_element16073); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16075);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1738:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:1739:10: ^( IS_NAN expression_element )
					{
					match(input,IS_NAN,FOLLOW_IS_NAN_in_expression_element16102); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16104);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1740:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:1741:10: ^( IS_NOT_PRESENT expression_element )
					{
					match(input,IS_NOT_PRESENT,FOLLOW_IS_NOT_PRESENT_in_expression_element16131); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16133);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1742:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:1743:10: ^( IS_PRESENT expression_element )
					{
					match(input,IS_PRESENT,FOLLOW_IS_PRESENT_in_expression_element16160); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16162);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1744:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:1745:10: ^( IS_NOT_INFINITE expression_element )
					{
					match(input,IS_NOT_INFINITE,FOLLOW_IS_NOT_INFINITE_in_expression_element16189); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16191);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1746:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:1747:10: ^( IS_INFINITE expression_element )
					{
					match(input,IS_INFINITE,FOLLOW_IS_INFINITE_in_expression_element16218); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16220);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1748:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 13 :
					// PLSQLPrinter.g:1749:10: ^( IS_NOT_A_SET expression_element )
					{
					match(input,IS_NOT_A_SET,FOLLOW_IS_NOT_A_SET_in_expression_element16247); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16249);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1750:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 14 :
					// PLSQLPrinter.g:1751:10: ^( IS_A_SET expression_element )
					{
					match(input,IS_A_SET,FOLLOW_IS_A_SET_in_expression_element16276); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16278);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1752:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 15 :
					// PLSQLPrinter.g:1753:10: ^( IS_NOT_EMPTY expression_element )
					{
					match(input,IS_NOT_EMPTY,FOLLOW_IS_NOT_EMPTY_in_expression_element16305); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16307);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1754:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 16 :
					// PLSQLPrinter.g:1755:10: ^( IS_EMPTY expression_element )
					{
					match(input,IS_EMPTY,FOLLOW_IS_EMPTY_in_expression_element16334); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16336);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1756:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 17 :
					// PLSQLPrinter.g:1757:10: ^( IS_NOT_OF_TYPE expression_element ( type_spec )+ )
					{
					match(input,IS_NOT_OF_TYPE,FOLLOW_IS_NOT_OF_TYPE_in_expression_element16363); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16365);
					expression_element();
					state._fsp--;

					// PLSQLPrinter.g:1757:46: ( type_spec )+
					int cnt405=0;
					loop405:
					while (true) {
						int alt405=2;
						int LA405_0 = input.LA(1);
						if ( (LA405_0==CUSTOM_TYPE||LA405_0==INTERVAL_DATATYPE||LA405_0==NATIVE_DATATYPE) ) {
							alt405=1;
						}

						switch (alt405) {
						case 1 :
							// PLSQLPrinter.g:1757:46: type_spec
							{
							pushFollow(FOLLOW_type_spec_in_expression_element16367);
							type_spec();
							state._fsp--;

							}
							break;

						default :
							if ( cnt405 >= 1 ) break loop405;
							EarlyExitException eee = new EarlyExitException(405, input);
							throw eee;
						}
						cnt405++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1758:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 18 :
					// PLSQLPrinter.g:1759:10: ^( IS_OF_TYPE expression_element ( type_spec )+ )
					{
					match(input,IS_OF_TYPE,FOLLOW_IS_OF_TYPE_in_expression_element16395); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16397);
					expression_element();
					state._fsp--;

					// PLSQLPrinter.g:1759:42: ( type_spec )+
					int cnt406=0;
					loop406:
					while (true) {
						int alt406=2;
						int LA406_0 = input.LA(1);
						if ( (LA406_0==CUSTOM_TYPE||LA406_0==INTERVAL_DATATYPE||LA406_0==NATIVE_DATATYPE) ) {
							alt406=1;
						}

						switch (alt406) {
						case 1 :
							// PLSQLPrinter.g:1759:42: type_spec
							{
							pushFollow(FOLLOW_type_spec_in_expression_element16399);
							type_spec();
							state._fsp--;

							}
							break;

						default :
							if ( cnt406 >= 1 ) break loop406;
							EarlyExitException eee = new EarlyExitException(406, input);
							throw eee;
						}
						cnt406++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1760:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 19 :
					// PLSQLPrinter.g:1762:10: ^( ( MEMBER_VK | SUBMULTISET_VK ) expression_element expression_element )
					{
					// PLSQLPrinter.g:1762:12: ( MEMBER_VK | SUBMULTISET_VK )
					int alt407=2;
					int LA407_0 = input.LA(1);
					if ( (LA407_0==MEMBER_VK) ) {
						alt407=1;
					}
					else if ( (LA407_0==SUBMULTISET_VK) ) {
						alt407=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 407, 0, input);
						throw nvae;
					}

					switch (alt407) {
						case 1 :
							// PLSQLPrinter.g:1762:13: MEMBER_VK
							{
							match(input,MEMBER_VK,FOLLOW_MEMBER_VK_in_expression_element16429); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1762:23: SUBMULTISET_VK
							{
							match(input,SUBMULTISET_VK,FOLLOW_SUBMULTISET_VK_in_expression_element16431); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16434);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16436);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1763:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 20 :
					// PLSQLPrinter.g:1765:10: ^( NOT_IN expression_element in_elements )
					{
					match(input,NOT_IN,FOLLOW_NOT_IN_in_expression_element16464); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16466);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_in_elements_in_expression_element16468);
					in_elements();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1766:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 21 :
					// PLSQLPrinter.g:1767:10: ^( SQL92_RESERVED_IN expression_element in_elements )
					{
					match(input,SQL92_RESERVED_IN,FOLLOW_SQL92_RESERVED_IN_in_expression_element16495); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16497);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_in_elements_in_expression_element16499);
					in_elements();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1768:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 22 :
					// PLSQLPrinter.g:1769:10: ^( NOT_BETWEEN expression_element expression_element expression_element )
					{
					match(input,NOT_BETWEEN,FOLLOW_NOT_BETWEEN_in_expression_element16526); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16528);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16530);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16532);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1770:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 23 :
					// PLSQLPrinter.g:1771:10: ^( SQL92_RESERVED_BETWEEN expression_element expression_element expression_element )
					{
					match(input,SQL92_RESERVED_BETWEEN,FOLLOW_SQL92_RESERVED_BETWEEN_in_expression_element16559); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16561);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16563);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16565);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1772:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 24 :
					// PLSQLPrinter.g:1773:10: ^( NOT_LIKE expression_element expression_element ( expression_element )? )
					{
					match(input,NOT_LIKE,FOLLOW_NOT_LIKE_in_expression_element16592); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16594);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16596);
					expression_element();
					state._fsp--;

					// PLSQLPrinter.g:1773:59: ( expression_element )?
					int alt408=2;
					int LA408_0 = input.LA(1);
					if ( (LA408_0==APPROXIMATE_NUM_LIT||LA408_0==ASTERISK||LA408_0==CHAR_STRING||LA408_0==CONCATENATION_OP||(LA408_0 >= EQUALS_OP && LA408_0 <= EXACT_NUM_LIT)||(LA408_0 >= GREATER_THAN_OP && LA408_0 <= GREATER_THAN_OR_EQUALS_OP)||(LA408_0 >= LESS_THAN_OP && LA408_0 <= LESS_THAN_OR_EQUALS_OP)||LA408_0==MINUS_SIGN||LA408_0==NOT_EQUAL_OP||LA408_0==PLUS_SIGN||LA408_0==SOLIDUS||LA408_0==SQL92_RESERVED_ALL||(LA408_0 >= SQL92_RESERVED_AND && LA408_0 <= SQL92_RESERVED_ANY)||LA408_0==SQL92_RESERVED_BETWEEN||LA408_0==SQL92_RESERVED_DEFAULT||LA408_0==SQL92_RESERVED_DISTINCT||(LA408_0 >= SQL92_RESERVED_EXISTS && LA408_0 <= SQL92_RESERVED_FALSE)||LA408_0==SQL92_RESERVED_IN||(LA408_0 >= SQL92_RESERVED_LIKE && LA408_0 <= SQL92_RESERVED_NULL)||LA408_0==SQL92_RESERVED_OR||LA408_0==SQL92_RESERVED_PRIOR||LA408_0==SQL92_RESERVED_TRUE||LA408_0==UNSIGNED_INTEGER||LA408_0==CASCATED_ELEMENT||LA408_0==DATETIME_OP||LA408_0==DBTIMEZONE_VK||LA408_0==DIV_VK||LA408_0==DOT_ASTERISK||(LA408_0 >= IS_A_SET && LA408_0 <= IS_PRESENT)||LA408_0==KEEP_VK||(LA408_0 >= LIKE2_VK && LA408_0 <= LIKEC_VK)||LA408_0==MAXVALUE_VK||LA408_0==MEMBER_VK||LA408_0==MINVALUE_VK||LA408_0==MODEL_EXPRESSION||LA408_0==MOD_VK||LA408_0==NEW_VK||LA408_0==NOT_BETWEEN||(LA408_0 >= NOT_IN && LA408_0 <= NOT_LIKE)||LA408_0==OUTER_JOIN_SIGN||(LA408_0 >= PERCENT_FOUND_VK && LA408_0 <= PERCENT_ROWCOUNT_VK)||LA408_0==PIPE_VK||LA408_0==SEARCHED_CASE||LA408_0==SESSIONTIMEZONE_VK||LA408_0==SIMPLE_CASE||LA408_0==SOME_VK||LA408_0==STANDARD_FUNCTION||LA408_0==SUBMULTISET_VK||LA408_0==SUBQUERY||LA408_0==UNARY_OPERATOR||LA408_0==VECTOR_EXPR) ) {
						alt408=1;
					}
					switch (alt408) {
						case 1 :
							// PLSQLPrinter.g:1773:59: expression_element
							{
							pushFollow(FOLLOW_expression_element_in_expression_element16598);
							expression_element();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1774:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 25 :
					// PLSQLPrinter.g:1775:10: ^( ( SQL92_RESERVED_LIKE | LIKEC_VK | LIKE2_VK | LIKE4_VK ) expression_element expression_element ( expression_element )? )
					{
					// PLSQLPrinter.g:1775:12: ( SQL92_RESERVED_LIKE | LIKEC_VK | LIKE2_VK | LIKE4_VK )
					int alt409=4;
					switch ( input.LA(1) ) {
					case SQL92_RESERVED_LIKE:
						{
						alt409=1;
						}
						break;
					case LIKEC_VK:
						{
						alt409=2;
						}
						break;
					case LIKE2_VK:
						{
						alt409=3;
						}
						break;
					case LIKE4_VK:
						{
						alt409=4;
						}
						break;
					default:
						NoViableAltException nvae =
							new NoViableAltException("", 409, 0, input);
						throw nvae;
					}
					switch (alt409) {
						case 1 :
							// PLSQLPrinter.g:1775:13: SQL92_RESERVED_LIKE
							{
							match(input,SQL92_RESERVED_LIKE,FOLLOW_SQL92_RESERVED_LIKE_in_expression_element16627); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1775:33: LIKEC_VK
							{
							match(input,LIKEC_VK,FOLLOW_LIKEC_VK_in_expression_element16629); 
							}
							break;
						case 3 :
							// PLSQLPrinter.g:1775:42: LIKE2_VK
							{
							match(input,LIKE2_VK,FOLLOW_LIKE2_VK_in_expression_element16631); 
							}
							break;
						case 4 :
							// PLSQLPrinter.g:1775:51: LIKE4_VK
							{
							match(input,LIKE4_VK,FOLLOW_LIKE4_VK_in_expression_element16633); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16636);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16638);
					expression_element();
					state._fsp--;

					// PLSQLPrinter.g:1775:99: ( expression_element )?
					int alt410=2;
					int LA410_0 = input.LA(1);
					if ( (LA410_0==APPROXIMATE_NUM_LIT||LA410_0==ASTERISK||LA410_0==CHAR_STRING||LA410_0==CONCATENATION_OP||(LA410_0 >= EQUALS_OP && LA410_0 <= EXACT_NUM_LIT)||(LA410_0 >= GREATER_THAN_OP && LA410_0 <= GREATER_THAN_OR_EQUALS_OP)||(LA410_0 >= LESS_THAN_OP && LA410_0 <= LESS_THAN_OR_EQUALS_OP)||LA410_0==MINUS_SIGN||LA410_0==NOT_EQUAL_OP||LA410_0==PLUS_SIGN||LA410_0==SOLIDUS||LA410_0==SQL92_RESERVED_ALL||(LA410_0 >= SQL92_RESERVED_AND && LA410_0 <= SQL92_RESERVED_ANY)||LA410_0==SQL92_RESERVED_BETWEEN||LA410_0==SQL92_RESERVED_DEFAULT||LA410_0==SQL92_RESERVED_DISTINCT||(LA410_0 >= SQL92_RESERVED_EXISTS && LA410_0 <= SQL92_RESERVED_FALSE)||LA410_0==SQL92_RESERVED_IN||(LA410_0 >= SQL92_RESERVED_LIKE && LA410_0 <= SQL92_RESERVED_NULL)||LA410_0==SQL92_RESERVED_OR||LA410_0==SQL92_RESERVED_PRIOR||LA410_0==SQL92_RESERVED_TRUE||LA410_0==UNSIGNED_INTEGER||LA410_0==CASCATED_ELEMENT||LA410_0==DATETIME_OP||LA410_0==DBTIMEZONE_VK||LA410_0==DIV_VK||LA410_0==DOT_ASTERISK||(LA410_0 >= IS_A_SET && LA410_0 <= IS_PRESENT)||LA410_0==KEEP_VK||(LA410_0 >= LIKE2_VK && LA410_0 <= LIKEC_VK)||LA410_0==MAXVALUE_VK||LA410_0==MEMBER_VK||LA410_0==MINVALUE_VK||LA410_0==MODEL_EXPRESSION||LA410_0==MOD_VK||LA410_0==NEW_VK||LA410_0==NOT_BETWEEN||(LA410_0 >= NOT_IN && LA410_0 <= NOT_LIKE)||LA410_0==OUTER_JOIN_SIGN||(LA410_0 >= PERCENT_FOUND_VK && LA410_0 <= PERCENT_ROWCOUNT_VK)||LA410_0==PIPE_VK||LA410_0==SEARCHED_CASE||LA410_0==SESSIONTIMEZONE_VK||LA410_0==SIMPLE_CASE||LA410_0==SOME_VK||LA410_0==STANDARD_FUNCTION||LA410_0==SUBMULTISET_VK||LA410_0==SUBQUERY||LA410_0==UNARY_OPERATOR||LA410_0==VECTOR_EXPR) ) {
						alt410=1;
					}
					switch (alt410) {
						case 1 :
							// PLSQLPrinter.g:1775:99: expression_element
							{
							pushFollow(FOLLOW_expression_element_in_expression_element16640);
							expression_element();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1776:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 26 :
					// PLSQLPrinter.g:1778:10: ^( CONCATENATION_OP expression_element expression_element )
					{
					match(input,CONCATENATION_OP,FOLLOW_CONCATENATION_OP_in_expression_element16669); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16671);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16673);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1779:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 27 :
					// PLSQLPrinter.g:1780:10: ^( PLUS_SIGN expression_element expression_element )
					{
					match(input,PLUS_SIGN,FOLLOW_PLUS_SIGN_in_expression_element16700); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16702);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16704);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1781:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 28 :
					// PLSQLPrinter.g:1782:10: ^( MINUS_SIGN expression_element expression_element )
					{
					match(input,MINUS_SIGN,FOLLOW_MINUS_SIGN_in_expression_element16731); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16733);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16735);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1783:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 29 :
					// PLSQLPrinter.g:1784:10: ^( ASTERISK expression_element expression_element )
					{
					match(input,ASTERISK,FOLLOW_ASTERISK_in_expression_element16762); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16764);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16766);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1785:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 30 :
					// PLSQLPrinter.g:1786:10: ^( SOLIDUS expression_element expression_element )
					{
					match(input,SOLIDUS,FOLLOW_SOLIDUS_in_expression_element16793); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16795);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16797);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1787:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 31 :
					// PLSQLPrinter.g:1788:10: ^( MOD_VK expression_element expression_element )
					{
					match(input,MOD_VK,FOLLOW_MOD_VK_in_expression_element16824); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16826);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16828);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1789:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 32 :
					// PLSQLPrinter.g:1790:10: ^( DIV_VK expression_element expression_element )
					{
					match(input,DIV_VK,FOLLOW_DIV_VK_in_expression_element16855); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16857);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16859);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1791:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 33 :
					// PLSQLPrinter.g:1792:10: ^( PIPE_VK expression_element expression_element )
					{
					match(input,PIPE_VK,FOLLOW_PIPE_VK_in_expression_element16886); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16888);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16890);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1793:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 34 :
					// PLSQLPrinter.g:1795:10: ^( UNARY_OPERATOR expression_element )
					{
					match(input,UNARY_OPERATOR,FOLLOW_UNARY_OPERATOR_in_expression_element16918); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16920);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1796:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 35 :
					// PLSQLPrinter.g:1797:10: ^( SQL92_RESERVED_PRIOR expression_element )
					{
					match(input,SQL92_RESERVED_PRIOR,FOLLOW_SQL92_RESERVED_PRIOR_in_expression_element16947); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16949);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1798:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 36 :
					// PLSQLPrinter.g:1799:10: ^( NEW_VK expression )
					{
					match(input,NEW_VK,FOLLOW_NEW_VK_in_expression_element16976); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_expression_element16978);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1800:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 37 :
					// PLSQLPrinter.g:1801:10: ^( SQL92_RESERVED_DISTINCT expression_element )
					{
					match(input,SQL92_RESERVED_DISTINCT,FOLLOW_SQL92_RESERVED_DISTINCT_in_expression_element17005); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element17007);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1802:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 38 :
					// PLSQLPrinter.g:1803:10: ^( STANDARD_FUNCTION standard_function )
					{
					match(input,STANDARD_FUNCTION,FOLLOW_STANDARD_FUNCTION_in_expression_element17034); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_standard_function_in_expression_element17036);
					standard_function();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1804:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 39 :
					// PLSQLPrinter.g:1805:10: ^( ( SOME_VK | SQL92_RESERVED_EXISTS | SQL92_RESERVED_ALL | SQL92_RESERVED_ANY ) expression_element )
					{
					// PLSQLPrinter.g:1805:12: ( SOME_VK | SQL92_RESERVED_EXISTS | SQL92_RESERVED_ALL | SQL92_RESERVED_ANY )
					int alt411=4;
					switch ( input.LA(1) ) {
					case SOME_VK:
						{
						alt411=1;
						}
						break;
					case SQL92_RESERVED_EXISTS:
						{
						alt411=2;
						}
						break;
					case SQL92_RESERVED_ALL:
						{
						alt411=3;
						}
						break;
					case SQL92_RESERVED_ANY:
						{
						alt411=4;
						}
						break;
					default:
						NoViableAltException nvae =
							new NoViableAltException("", 411, 0, input);
						throw nvae;
					}
					switch (alt411) {
						case 1 :
							// PLSQLPrinter.g:1805:13: SOME_VK
							{
							match(input,SOME_VK,FOLLOW_SOME_VK_in_expression_element17064); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1805:21: SQL92_RESERVED_EXISTS
							{
							match(input,SQL92_RESERVED_EXISTS,FOLLOW_SQL92_RESERVED_EXISTS_in_expression_element17066); 
							}
							break;
						case 3 :
							// PLSQLPrinter.g:1805:43: SQL92_RESERVED_ALL
							{
							match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_expression_element17068); 
							}
							break;
						case 4 :
							// PLSQLPrinter.g:1805:62: SQL92_RESERVED_ANY
							{
							match(input,SQL92_RESERVED_ANY,FOLLOW_SQL92_RESERVED_ANY_in_expression_element17070); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element17073);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1806:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 40 :
					// PLSQLPrinter.g:1807:10: ^( VECTOR_EXPR ( expression_element )+ )
					{
					match(input,VECTOR_EXPR,FOLLOW_VECTOR_EXPR_in_expression_element17100); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1807:24: ( expression_element )+
					int cnt412=0;
					loop412:
					while (true) {
						int alt412=2;
						int LA412_0 = input.LA(1);
						if ( (LA412_0==APPROXIMATE_NUM_LIT||LA412_0==ASTERISK||LA412_0==CHAR_STRING||LA412_0==CONCATENATION_OP||(LA412_0 >= EQUALS_OP && LA412_0 <= EXACT_NUM_LIT)||(LA412_0 >= GREATER_THAN_OP && LA412_0 <= GREATER_THAN_OR_EQUALS_OP)||(LA412_0 >= LESS_THAN_OP && LA412_0 <= LESS_THAN_OR_EQUALS_OP)||LA412_0==MINUS_SIGN||LA412_0==NOT_EQUAL_OP||LA412_0==PLUS_SIGN||LA412_0==SOLIDUS||LA412_0==SQL92_RESERVED_ALL||(LA412_0 >= SQL92_RESERVED_AND && LA412_0 <= SQL92_RESERVED_ANY)||LA412_0==SQL92_RESERVED_BETWEEN||LA412_0==SQL92_RESERVED_DEFAULT||LA412_0==SQL92_RESERVED_DISTINCT||(LA412_0 >= SQL92_RESERVED_EXISTS && LA412_0 <= SQL92_RESERVED_FALSE)||LA412_0==SQL92_RESERVED_IN||(LA412_0 >= SQL92_RESERVED_LIKE && LA412_0 <= SQL92_RESERVED_NULL)||LA412_0==SQL92_RESERVED_OR||LA412_0==SQL92_RESERVED_PRIOR||LA412_0==SQL92_RESERVED_TRUE||LA412_0==UNSIGNED_INTEGER||LA412_0==CASCATED_ELEMENT||LA412_0==DATETIME_OP||LA412_0==DBTIMEZONE_VK||LA412_0==DIV_VK||LA412_0==DOT_ASTERISK||(LA412_0 >= IS_A_SET && LA412_0 <= IS_PRESENT)||LA412_0==KEEP_VK||(LA412_0 >= LIKE2_VK && LA412_0 <= LIKEC_VK)||LA412_0==MAXVALUE_VK||LA412_0==MEMBER_VK||LA412_0==MINVALUE_VK||LA412_0==MODEL_EXPRESSION||LA412_0==MOD_VK||LA412_0==NEW_VK||LA412_0==NOT_BETWEEN||(LA412_0 >= NOT_IN && LA412_0 <= NOT_LIKE)||LA412_0==OUTER_JOIN_SIGN||(LA412_0 >= PERCENT_FOUND_VK && LA412_0 <= PERCENT_ROWCOUNT_VK)||LA412_0==PIPE_VK||LA412_0==SEARCHED_CASE||LA412_0==SESSIONTIMEZONE_VK||LA412_0==SIMPLE_CASE||LA412_0==SOME_VK||LA412_0==STANDARD_FUNCTION||LA412_0==SUBMULTISET_VK||LA412_0==SUBQUERY||LA412_0==UNARY_OPERATOR||LA412_0==VECTOR_EXPR) ) {
							alt412=1;
						}

						switch (alt412) {
						case 1 :
							// PLSQLPrinter.g:1807:24: expression_element
							{
							pushFollow(FOLLOW_expression_element_in_expression_element17102);
							expression_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt412 >= 1 ) break loop412;
							EarlyExitException eee = new EarlyExitException(412, input);
							throw eee;
						}
						cnt412++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1808:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 41 :
					// PLSQLPrinter.g:1810:10: ^( DATETIME_OP expression_element datetime_element )
					{
					match(input,DATETIME_OP,FOLLOW_DATETIME_OP_in_expression_element17131); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element17133);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_datetime_element_in_expression_element17135);
					datetime_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1811:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 42 :
					// PLSQLPrinter.g:1812:10: model_expression
					{
					pushFollow(FOLLOW_model_expression_in_expression_element17161);
					model_expression();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1813:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 43 :
					// PLSQLPrinter.g:1814:10: ^( KEEP_VK expression_element DENSE_RANK_VK ( FIRST_VK | LAST_VK ) order_by_clause ( over_clause )? )
					{
					match(input,KEEP_VK,FOLLOW_KEEP_VK_in_expression_element17187); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element17189);
					expression_element();
					state._fsp--;

					match(input,DENSE_RANK_VK,FOLLOW_DENSE_RANK_VK_in_expression_element17191); 
					// PLSQLPrinter.g:1814:53: ( FIRST_VK | LAST_VK )
					int alt413=2;
					int LA413_0 = input.LA(1);
					if ( (LA413_0==FIRST_VK) ) {
						alt413=1;
					}
					else if ( (LA413_0==LAST_VK) ) {
						alt413=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 413, 0, input);
						throw nvae;
					}

					switch (alt413) {
						case 1 :
							// PLSQLPrinter.g:1814:54: FIRST_VK
							{
							match(input,FIRST_VK,FOLLOW_FIRST_VK_in_expression_element17194); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1814:63: LAST_VK
							{
							match(input,LAST_VK,FOLLOW_LAST_VK_in_expression_element17196); 
							}
							break;

					}

					pushFollow(FOLLOW_order_by_clause_in_expression_element17199);
					order_by_clause();
					state._fsp--;

					// PLSQLPrinter.g:1814:88: ( over_clause )?
					int alt414=2;
					int LA414_0 = input.LA(1);
					if ( (LA414_0==OVER_VK) ) {
						alt414=1;
					}
					switch (alt414) {
						case 1 :
							// PLSQLPrinter.g:1814:88: over_clause
							{
							pushFollow(FOLLOW_over_clause_in_expression_element17201);
							over_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1815:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 44 :
					// PLSQLPrinter.g:1817:10: ^( DOT_ASTERISK tableview_name )
					{
					match(input,DOT_ASTERISK,FOLLOW_DOT_ASTERISK_in_expression_element17230); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_tableview_name_in_expression_element17232);
					tableview_name();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1818:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 45 :
					// PLSQLPrinter.g:1819:10: ^( ( PERCENT_FOUND_VK | PERCENT_NOTFOUND_VK | PERCENT_ROWCOUNT_VK | PERCENT_ISOPEN_VK ) cursor_name )
					{
					// PLSQLPrinter.g:1819:12: ( PERCENT_FOUND_VK | PERCENT_NOTFOUND_VK | PERCENT_ROWCOUNT_VK | PERCENT_ISOPEN_VK )
					int alt415=4;
					switch ( input.LA(1) ) {
					case PERCENT_FOUND_VK:
						{
						alt415=1;
						}
						break;
					case PERCENT_NOTFOUND_VK:
						{
						alt415=2;
						}
						break;
					case PERCENT_ROWCOUNT_VK:
						{
						alt415=3;
						}
						break;
					case PERCENT_ISOPEN_VK:
						{
						alt415=4;
						}
						break;
					default:
						NoViableAltException nvae =
							new NoViableAltException("", 415, 0, input);
						throw nvae;
					}
					switch (alt415) {
						case 1 :
							// PLSQLPrinter.g:1819:13: PERCENT_FOUND_VK
							{
							match(input,PERCENT_FOUND_VK,FOLLOW_PERCENT_FOUND_VK_in_expression_element17260); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1819:30: PERCENT_NOTFOUND_VK
							{
							match(input,PERCENT_NOTFOUND_VK,FOLLOW_PERCENT_NOTFOUND_VK_in_expression_element17262); 
							}
							break;
						case 3 :
							// PLSQLPrinter.g:1819:50: PERCENT_ROWCOUNT_VK
							{
							match(input,PERCENT_ROWCOUNT_VK,FOLLOW_PERCENT_ROWCOUNT_VK_in_expression_element17264); 
							}
							break;
						case 4 :
							// PLSQLPrinter.g:1819:70: PERCENT_ISOPEN_VK
							{
							match(input,PERCENT_ISOPEN_VK,FOLLOW_PERCENT_ISOPEN_VK_in_expression_element17266); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_cursor_name_in_expression_element17269);
					cursor_name();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1820:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 46 :
					// PLSQLPrinter.g:1821:10: ^( OUTER_JOIN_SIGN expression_element )
					{
					match(input,OUTER_JOIN_SIGN,FOLLOW_OUTER_JOIN_SIGN_in_expression_element17296); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element17298);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1822:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 47 :
					// PLSQLPrinter.g:1824:10: case_statement
					{
					pushFollow(FOLLOW_case_statement_in_expression_element17325);
					case_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1825:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 48 :
					// PLSQLPrinter.g:1826:10: constant
					{
					pushFollow(FOLLOW_constant_in_expression_element17350);
					constant();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1827:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 49 :
					// PLSQLPrinter.g:1828:10: general_element
					{
					pushFollow(FOLLOW_general_element_in_expression_element17375);
					general_element();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1829:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;
				case 50 :
					// PLSQLPrinter.g:1830:10: subquery
					{
					pushFollow(FOLLOW_subquery_in_expression_element17400);
					subquery();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1831:5: -> template( \"not implemented: expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: expression_element");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "expression_element"


	public static class in_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "in_elements"
	// PLSQLPrinter.g:1834:1: in_elements : ( subquery -> template( \"not implemented: in_elements\"| expression_list -> template( \"not implemented: in_elements\");
	public final PLSQLPrinter.in_elements_return in_elements() throws RecognitionException {
		PLSQLPrinter.in_elements_return retval = new PLSQLPrinter.in_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1835:5: ( subquery -> template( \"not implemented: in_elements\"| expression_list -> template( \"not implemented: in_elements\")
			int alt417=2;
			int LA417_0 = input.LA(1);
			if ( (LA417_0==SUBQUERY) ) {
				alt417=1;
			}
			else if ( (LA417_0==EXPR_LIST) ) {
				alt417=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 417, 0, input);
				throw nvae;
			}

			switch (alt417) {
				case 1 :
					// PLSQLPrinter.g:1835:10: subquery
					{
					pushFollow(FOLLOW_subquery_in_in_elements17434);
					subquery();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1836:5: -> template( \"not implemented: in_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: in_elements");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1837:10: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_in_elements17459);
					expression_list();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1838:5: -> template( \"not implemented: in_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: in_elements");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "in_elements"


	public static class datetime_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "datetime_element"
	// PLSQLPrinter.g:1841:1: datetime_element : ( ^( AT_VK expression_element ( LOCAL_VK | TIME_VK expression ) ) -> template( \"not implemented: datetime_element\"| ^( DAY_VK SECOND_VK ( expression )* ) -> template( \"not implemented: datetime_element\"| ^( YEAR_VK MONTH_VK expression ) -> template( \"not implemented: datetime_element\");
	public final PLSQLPrinter.datetime_element_return datetime_element() throws RecognitionException {
		PLSQLPrinter.datetime_element_return retval = new PLSQLPrinter.datetime_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1842:5: ( ^( AT_VK expression_element ( LOCAL_VK | TIME_VK expression ) ) -> template( \"not implemented: datetime_element\"| ^( DAY_VK SECOND_VK ( expression )* ) -> template( \"not implemented: datetime_element\"| ^( YEAR_VK MONTH_VK expression ) -> template( \"not implemented: datetime_element\")
			int alt420=3;
			switch ( input.LA(1) ) {
			case AT_VK:
				{
				alt420=1;
				}
				break;
			case DAY_VK:
				{
				alt420=2;
				}
				break;
			case YEAR_VK:
				{
				alt420=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 420, 0, input);
				throw nvae;
			}
			switch (alt420) {
				case 1 :
					// PLSQLPrinter.g:1842:10: ^( AT_VK expression_element ( LOCAL_VK | TIME_VK expression ) )
					{
					match(input,AT_VK,FOLLOW_AT_VK_in_datetime_element17494); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_datetime_element17496);
					expression_element();
					state._fsp--;

					// PLSQLPrinter.g:1842:37: ( LOCAL_VK | TIME_VK expression )
					int alt418=2;
					int LA418_0 = input.LA(1);
					if ( (LA418_0==LOCAL_VK) ) {
						alt418=1;
					}
					else if ( (LA418_0==TIME_VK) ) {
						alt418=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 418, 0, input);
						throw nvae;
					}

					switch (alt418) {
						case 1 :
							// PLSQLPrinter.g:1842:38: LOCAL_VK
							{
							match(input,LOCAL_VK,FOLLOW_LOCAL_VK_in_datetime_element17499); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1842:47: TIME_VK expression
							{
							match(input,TIME_VK,FOLLOW_TIME_VK_in_datetime_element17501); 
							pushFollow(FOLLOW_expression_in_datetime_element17503);
							expression();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1843:5: -> template( \"not implemented: datetime_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: datetime_element");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1844:10: ^( DAY_VK SECOND_VK ( expression )* )
					{
					match(input,DAY_VK,FOLLOW_DAY_VK_in_datetime_element17531); 
					match(input, Token.DOWN, null); 
					match(input,SECOND_VK,FOLLOW_SECOND_VK_in_datetime_element17533); 
					// PLSQLPrinter.g:1844:29: ( expression )*
					loop419:
					while (true) {
						int alt419=2;
						int LA419_0 = input.LA(1);
						if ( (LA419_0==EXPR||LA419_0==LOGIC_EXPR) ) {
							alt419=1;
						}

						switch (alt419) {
						case 1 :
							// PLSQLPrinter.g:1844:29: expression
							{
							pushFollow(FOLLOW_expression_in_datetime_element17535);
							expression();
							state._fsp--;

							}
							break;

						default :
							break loop419;
						}
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1845:5: -> template( \"not implemented: datetime_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: datetime_element");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1846:10: ^( YEAR_VK MONTH_VK expression )
					{
					match(input,YEAR_VK,FOLLOW_YEAR_VK_in_datetime_element17563); 
					match(input, Token.DOWN, null); 
					match(input,MONTH_VK,FOLLOW_MONTH_VK_in_datetime_element17565); 
					pushFollow(FOLLOW_expression_in_datetime_element17567);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1847:5: -> template( \"not implemented: datetime_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: datetime_element");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "datetime_element"


	public static class model_expression_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_expression"
	// PLSQLPrinter.g:1850:1: model_expression : ^( MODEL_EXPRESSION expression_element ( model_expression_element )+ ) -> template( \"not implemented: model_expression\";
	public final PLSQLPrinter.model_expression_return model_expression() throws RecognitionException {
		PLSQLPrinter.model_expression_return retval = new PLSQLPrinter.model_expression_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1851:5: ( ^( MODEL_EXPRESSION expression_element ( model_expression_element )+ ) -> template( \"not implemented: model_expression\")
			// PLSQLPrinter.g:1851:10: ^( MODEL_EXPRESSION expression_element ( model_expression_element )+ )
			{
			match(input,MODEL_EXPRESSION,FOLLOW_MODEL_EXPRESSION_in_model_expression17603); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_element_in_model_expression17605);
			expression_element();
			state._fsp--;

			// PLSQLPrinter.g:1851:48: ( model_expression_element )+
			int cnt421=0;
			loop421:
			while (true) {
				int alt421=2;
				int LA421_0 = input.LA(1);
				if ( (LA421_0==SQL92_RESERVED_ANY||LA421_0==EXPR||(LA421_0 >= FOR_MULTI_COLUMN && LA421_0 <= FOR_SINGLE_COLUMN)||LA421_0==LOGIC_EXPR) ) {
					alt421=1;
				}

				switch (alt421) {
				case 1 :
					// PLSQLPrinter.g:1851:48: model_expression_element
					{
					pushFollow(FOLLOW_model_expression_element_in_model_expression17607);
					model_expression_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt421 >= 1 ) break loop421;
					EarlyExitException eee = new EarlyExitException(421, input);
					throw eee;
				}
				cnt421++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1852:5: -> template( \"not implemented: model_expression\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: model_expression");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_expression"


	public static class model_expression_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_expression_element"
	// PLSQLPrinter.g:1855:1: model_expression_element : ( SQL92_RESERVED_ANY -> template( \"not implemented: model_expression_element\"| expression -> template( \"not implemented: model_expression_element\"| ^( FOR_SINGLE_COLUMN column_name for_single_column_element ( for_like_part )? ) -> template( \"not implemented: model_expression_element\"| ^( FOR_MULTI_COLUMN ( column_name )+ ^( SQL92_RESERVED_IN ( subquery | ( expression_list )+ ) ) ) -> template( \"not implemented: model_expression_element\");
	public final PLSQLPrinter.model_expression_element_return model_expression_element() throws RecognitionException {
		PLSQLPrinter.model_expression_element_return retval = new PLSQLPrinter.model_expression_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1856:5: ( SQL92_RESERVED_ANY -> template( \"not implemented: model_expression_element\"| expression -> template( \"not implemented: model_expression_element\"| ^( FOR_SINGLE_COLUMN column_name for_single_column_element ( for_like_part )? ) -> template( \"not implemented: model_expression_element\"| ^( FOR_MULTI_COLUMN ( column_name )+ ^( SQL92_RESERVED_IN ( subquery | ( expression_list )+ ) ) ) -> template( \"not implemented: model_expression_element\")
			int alt426=4;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_ANY:
				{
				alt426=1;
				}
				break;
			case EXPR:
			case LOGIC_EXPR:
				{
				alt426=2;
				}
				break;
			case FOR_SINGLE_COLUMN:
				{
				alt426=3;
				}
				break;
			case FOR_MULTI_COLUMN:
				{
				alt426=4;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 426, 0, input);
				throw nvae;
			}
			switch (alt426) {
				case 1 :
					// PLSQLPrinter.g:1856:10: SQL92_RESERVED_ANY
					{
					match(input,SQL92_RESERVED_ANY,FOLLOW_SQL92_RESERVED_ANY_in_model_expression_element17643); 
					// TEMPLATE REWRITE
					// 1857:5: -> template( \"not implemented: model_expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: model_expression_element");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1858:10: expression
					{
					pushFollow(FOLLOW_expression_in_model_expression_element17668);
					expression();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1859:5: -> template( \"not implemented: model_expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: model_expression_element");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1860:10: ^( FOR_SINGLE_COLUMN column_name for_single_column_element ( for_like_part )? )
					{
					match(input,FOR_SINGLE_COLUMN,FOLLOW_FOR_SINGLE_COLUMN_in_model_expression_element17694); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_column_name_in_model_expression_element17696);
					column_name();
					state._fsp--;

					pushFollow(FOLLOW_for_single_column_element_in_model_expression_element17698);
					for_single_column_element();
					state._fsp--;

					// PLSQLPrinter.g:1860:68: ( for_like_part )?
					int alt422=2;
					int LA422_0 = input.LA(1);
					if ( (LA422_0==SQL92_RESERVED_LIKE) ) {
						alt422=1;
					}
					switch (alt422) {
						case 1 :
							// PLSQLPrinter.g:1860:68: for_like_part
							{
							pushFollow(FOLLOW_for_like_part_in_model_expression_element17700);
							for_like_part();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1861:5: -> template( \"not implemented: model_expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: model_expression_element");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1862:10: ^( FOR_MULTI_COLUMN ( column_name )+ ^( SQL92_RESERVED_IN ( subquery | ( expression_list )+ ) ) )
					{
					match(input,FOR_MULTI_COLUMN,FOLLOW_FOR_MULTI_COLUMN_in_model_expression_element17728); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1862:29: ( column_name )+
					int cnt423=0;
					loop423:
					while (true) {
						int alt423=2;
						int LA423_0 = input.LA(1);
						if ( (LA423_0==COLUMN_NAME) ) {
							alt423=1;
						}

						switch (alt423) {
						case 1 :
							// PLSQLPrinter.g:1862:29: column_name
							{
							pushFollow(FOLLOW_column_name_in_model_expression_element17730);
							column_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt423 >= 1 ) break loop423;
							EarlyExitException eee = new EarlyExitException(423, input);
							throw eee;
						}
						cnt423++;
					}

					match(input,SQL92_RESERVED_IN,FOLLOW_SQL92_RESERVED_IN_in_model_expression_element17734); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1862:62: ( subquery | ( expression_list )+ )
					int alt425=2;
					int LA425_0 = input.LA(1);
					if ( (LA425_0==SUBQUERY) ) {
						alt425=1;
					}
					else if ( (LA425_0==EXPR_LIST) ) {
						alt425=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 425, 0, input);
						throw nvae;
					}

					switch (alt425) {
						case 1 :
							// PLSQLPrinter.g:1862:63: subquery
							{
							pushFollow(FOLLOW_subquery_in_model_expression_element17737);
							subquery();
							state._fsp--;

							}
							break;
						case 2 :
							// PLSQLPrinter.g:1862:72: ( expression_list )+
							{
							// PLSQLPrinter.g:1862:72: ( expression_list )+
							int cnt424=0;
							loop424:
							while (true) {
								int alt424=2;
								int LA424_0 = input.LA(1);
								if ( (LA424_0==EXPR_LIST) ) {
									alt424=1;
								}

								switch (alt424) {
								case 1 :
									// PLSQLPrinter.g:1862:72: expression_list
									{
									pushFollow(FOLLOW_expression_list_in_model_expression_element17739);
									expression_list();
									state._fsp--;

									}
									break;

								default :
									if ( cnt424 >= 1 ) break loop424;
									EarlyExitException eee = new EarlyExitException(424, input);
									throw eee;
								}
								cnt424++;
							}

							}
							break;

					}

					match(input, Token.UP, null); 

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1863:5: -> template( \"not implemented: model_expression_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: model_expression_element");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_expression_element"


	public static class for_single_column_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "for_single_column_element"
	// PLSQLPrinter.g:1866:1: for_single_column_element : ( ^( SQL92_RESERVED_IN expression_list ) -> template( \"not implemented: for_single_column_element\"| ^( SQL92_RESERVED_FROM expression ) -> template( \"not implemented: for_single_column_element\"| ^( SQL92_RESERVED_TO expression ) -> template( \"not implemented: for_single_column_element\"| ^( ( INCREMENT_VK | DECREMENT_VK ) expression ) -> template( \"not implemented: for_single_column_element\");
	public final PLSQLPrinter.for_single_column_element_return for_single_column_element() throws RecognitionException {
		PLSQLPrinter.for_single_column_element_return retval = new PLSQLPrinter.for_single_column_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1867:5: ( ^( SQL92_RESERVED_IN expression_list ) -> template( \"not implemented: for_single_column_element\"| ^( SQL92_RESERVED_FROM expression ) -> template( \"not implemented: for_single_column_element\"| ^( SQL92_RESERVED_TO expression ) -> template( \"not implemented: for_single_column_element\"| ^( ( INCREMENT_VK | DECREMENT_VK ) expression ) -> template( \"not implemented: for_single_column_element\")
			int alt428=4;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_IN:
				{
				alt428=1;
				}
				break;
			case SQL92_RESERVED_FROM:
				{
				alt428=2;
				}
				break;
			case SQL92_RESERVED_TO:
				{
				alt428=3;
				}
				break;
			case DECREMENT_VK:
			case INCREMENT_VK:
				{
				alt428=4;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 428, 0, input);
				throw nvae;
			}
			switch (alt428) {
				case 1 :
					// PLSQLPrinter.g:1867:10: ^( SQL92_RESERVED_IN expression_list )
					{
					match(input,SQL92_RESERVED_IN,FOLLOW_SQL92_RESERVED_IN_in_for_single_column_element17778); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_list_in_for_single_column_element17780);
					expression_list();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1868:5: -> template( \"not implemented: for_single_column_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: for_single_column_element");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1869:10: ^( SQL92_RESERVED_FROM expression )
					{
					match(input,SQL92_RESERVED_FROM,FOLLOW_SQL92_RESERVED_FROM_in_for_single_column_element17807); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_for_single_column_element17809);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1870:5: -> template( \"not implemented: for_single_column_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: for_single_column_element");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1871:10: ^( SQL92_RESERVED_TO expression )
					{
					match(input,SQL92_RESERVED_TO,FOLLOW_SQL92_RESERVED_TO_in_for_single_column_element17837); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_for_single_column_element17839);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1872:5: -> template( \"not implemented: for_single_column_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: for_single_column_element");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1873:10: ^( ( INCREMENT_VK | DECREMENT_VK ) expression )
					{
					// PLSQLPrinter.g:1873:12: ( INCREMENT_VK | DECREMENT_VK )
					int alt427=2;
					int LA427_0 = input.LA(1);
					if ( (LA427_0==INCREMENT_VK) ) {
						alt427=1;
					}
					else if ( (LA427_0==DECREMENT_VK) ) {
						alt427=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 427, 0, input);
						throw nvae;
					}

					switch (alt427) {
						case 1 :
							// PLSQLPrinter.g:1873:13: INCREMENT_VK
							{
							match(input,INCREMENT_VK,FOLLOW_INCREMENT_VK_in_for_single_column_element17868); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1873:26: DECREMENT_VK
							{
							match(input,DECREMENT_VK,FOLLOW_DECREMENT_VK_in_for_single_column_element17870); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_for_single_column_element17873);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1874:5: -> template( \"not implemented: for_single_column_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: for_single_column_element");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "for_single_column_element"


	public static class for_like_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "for_like_part"
	// PLSQLPrinter.g:1877:1: for_like_part : ^( SQL92_RESERVED_LIKE expression ) -> template( \"not implemented: for_like_part\";
	public final PLSQLPrinter.for_like_part_return for_like_part() throws RecognitionException {
		PLSQLPrinter.for_like_part_return retval = new PLSQLPrinter.for_like_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1878:5: ( ^( SQL92_RESERVED_LIKE expression ) -> template( \"not implemented: for_like_part\")
			// PLSQLPrinter.g:1878:10: ^( SQL92_RESERVED_LIKE expression )
			{
			match(input,SQL92_RESERVED_LIKE,FOLLOW_SQL92_RESERVED_LIKE_in_for_like_part17910); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_for_like_part17912);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1879:5: -> template( \"not implemented: for_like_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: for_like_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "for_like_part"


	public static class case_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "case_statement"
	// PLSQLPrinter.g:1882:1: case_statement : ( ^( SIMPLE_CASE ( label_name )* expression ( case_when_part )+ ( case_else_part )? ) -> template( \"not implemented: case_statement\"| ^( SEARCHED_CASE ( label_name )* ( case_when_part )+ ( case_else_part )? ) -> template( \"not implemented: case_statement\");
	public final PLSQLPrinter.case_statement_return case_statement() throws RecognitionException {
		PLSQLPrinter.case_statement_return retval = new PLSQLPrinter.case_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1883:5: ( ^( SIMPLE_CASE ( label_name )* expression ( case_when_part )+ ( case_else_part )? ) -> template( \"not implemented: case_statement\"| ^( SEARCHED_CASE ( label_name )* ( case_when_part )+ ( case_else_part )? ) -> template( \"not implemented: case_statement\")
			int alt435=2;
			int LA435_0 = input.LA(1);
			if ( (LA435_0==SIMPLE_CASE) ) {
				alt435=1;
			}
			else if ( (LA435_0==SEARCHED_CASE) ) {
				alt435=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 435, 0, input);
				throw nvae;
			}

			switch (alt435) {
				case 1 :
					// PLSQLPrinter.g:1883:10: ^( SIMPLE_CASE ( label_name )* expression ( case_when_part )+ ( case_else_part )? )
					{
					match(input,SIMPLE_CASE,FOLLOW_SIMPLE_CASE_in_case_statement17948); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1883:24: ( label_name )*
					loop429:
					while (true) {
						int alt429=2;
						int LA429_0 = input.LA(1);
						if ( (LA429_0==LABEL_NAME) ) {
							alt429=1;
						}

						switch (alt429) {
						case 1 :
							// PLSQLPrinter.g:1883:24: label_name
							{
							pushFollow(FOLLOW_label_name_in_case_statement17950);
							label_name();
							state._fsp--;

							}
							break;

						default :
							break loop429;
						}
					}

					pushFollow(FOLLOW_expression_in_case_statement17953);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1883:47: ( case_when_part )+
					int cnt430=0;
					loop430:
					while (true) {
						int alt430=2;
						int LA430_0 = input.LA(1);
						if ( (LA430_0==SQL92_RESERVED_WHEN) ) {
							alt430=1;
						}

						switch (alt430) {
						case 1 :
							// PLSQLPrinter.g:1883:47: case_when_part
							{
							pushFollow(FOLLOW_case_when_part_in_case_statement17955);
							case_when_part();
							state._fsp--;

							}
							break;

						default :
							if ( cnt430 >= 1 ) break loop430;
							EarlyExitException eee = new EarlyExitException(430, input);
							throw eee;
						}
						cnt430++;
					}

					// PLSQLPrinter.g:1883:63: ( case_else_part )?
					int alt431=2;
					int LA431_0 = input.LA(1);
					if ( (LA431_0==SQL92_RESERVED_ELSE) ) {
						alt431=1;
					}
					switch (alt431) {
						case 1 :
							// PLSQLPrinter.g:1883:63: case_else_part
							{
							pushFollow(FOLLOW_case_else_part_in_case_statement17958);
							case_else_part();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1884:5: -> template( \"not implemented: case_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: case_statement");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1885:10: ^( SEARCHED_CASE ( label_name )* ( case_when_part )+ ( case_else_part )? )
					{
					match(input,SEARCHED_CASE,FOLLOW_SEARCHED_CASE_in_case_statement17988); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1885:26: ( label_name )*
					loop432:
					while (true) {
						int alt432=2;
						int LA432_0 = input.LA(1);
						if ( (LA432_0==LABEL_NAME) ) {
							alt432=1;
						}

						switch (alt432) {
						case 1 :
							// PLSQLPrinter.g:1885:26: label_name
							{
							pushFollow(FOLLOW_label_name_in_case_statement17990);
							label_name();
							state._fsp--;

							}
							break;

						default :
							break loop432;
						}
					}

					// PLSQLPrinter.g:1885:38: ( case_when_part )+
					int cnt433=0;
					loop433:
					while (true) {
						int alt433=2;
						int LA433_0 = input.LA(1);
						if ( (LA433_0==SQL92_RESERVED_WHEN) ) {
							alt433=1;
						}

						switch (alt433) {
						case 1 :
							// PLSQLPrinter.g:1885:38: case_when_part
							{
							pushFollow(FOLLOW_case_when_part_in_case_statement17993);
							case_when_part();
							state._fsp--;

							}
							break;

						default :
							if ( cnt433 >= 1 ) break loop433;
							EarlyExitException eee = new EarlyExitException(433, input);
							throw eee;
						}
						cnt433++;
					}

					// PLSQLPrinter.g:1885:54: ( case_else_part )?
					int alt434=2;
					int LA434_0 = input.LA(1);
					if ( (LA434_0==SQL92_RESERVED_ELSE) ) {
						alt434=1;
					}
					switch (alt434) {
						case 1 :
							// PLSQLPrinter.g:1885:54: case_else_part
							{
							pushFollow(FOLLOW_case_else_part_in_case_statement17996);
							case_else_part();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1886:5: -> template( \"not implemented: case_statement\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: case_statement");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "case_statement"


	public static class case_when_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "case_when_part"
	// PLSQLPrinter.g:1891:1: case_when_part : ^( SQL92_RESERVED_WHEN expression ( seq_of_statements | expression ) ) -> template( \"not implemented: case_when_part\";
	public final PLSQLPrinter.case_when_part_return case_when_part() throws RecognitionException {
		PLSQLPrinter.case_when_part_return retval = new PLSQLPrinter.case_when_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1892:5: ( ^( SQL92_RESERVED_WHEN expression ( seq_of_statements | expression ) ) -> template( \"not implemented: case_when_part\")
			// PLSQLPrinter.g:1892:10: ^( SQL92_RESERVED_WHEN expression ( seq_of_statements | expression ) )
			{
			match(input,SQL92_RESERVED_WHEN,FOLLOW_SQL92_RESERVED_WHEN_in_case_when_part18036); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_case_when_part18038);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:1892:43: ( seq_of_statements | expression )
			int alt436=2;
			int LA436_0 = input.LA(1);
			if ( (LA436_0==STATEMENTS) ) {
				alt436=1;
			}
			else if ( (LA436_0==EXPR||LA436_0==LOGIC_EXPR) ) {
				alt436=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 436, 0, input);
				throw nvae;
			}

			switch (alt436) {
				case 1 :
					// PLSQLPrinter.g:1892:44: seq_of_statements
					{
					pushFollow(FOLLOW_seq_of_statements_in_case_when_part18041);
					seq_of_statements();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1892:62: expression
					{
					pushFollow(FOLLOW_expression_in_case_when_part18043);
					expression();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1893:5: -> template( \"not implemented: case_when_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: case_when_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "case_when_part"


	public static class case_else_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "case_else_part"
	// PLSQLPrinter.g:1896:1: case_else_part : ^( SQL92_RESERVED_ELSE ( seq_of_statements | expression ) ) -> template( \"not implemented: case_else_part\";
	public final PLSQLPrinter.case_else_part_return case_else_part() throws RecognitionException {
		PLSQLPrinter.case_else_part_return retval = new PLSQLPrinter.case_else_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1897:5: ( ^( SQL92_RESERVED_ELSE ( seq_of_statements | expression ) ) -> template( \"not implemented: case_else_part\")
			// PLSQLPrinter.g:1897:10: ^( SQL92_RESERVED_ELSE ( seq_of_statements | expression ) )
			{
			match(input,SQL92_RESERVED_ELSE,FOLLOW_SQL92_RESERVED_ELSE_in_case_else_part18080); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1897:32: ( seq_of_statements | expression )
			int alt437=2;
			int LA437_0 = input.LA(1);
			if ( (LA437_0==STATEMENTS) ) {
				alt437=1;
			}
			else if ( (LA437_0==EXPR||LA437_0==LOGIC_EXPR) ) {
				alt437=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 437, 0, input);
				throw nvae;
			}

			switch (alt437) {
				case 1 :
					// PLSQLPrinter.g:1897:33: seq_of_statements
					{
					pushFollow(FOLLOW_seq_of_statements_in_case_else_part18083);
					seq_of_statements();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1897:51: expression
					{
					pushFollow(FOLLOW_expression_in_case_else_part18085);
					expression();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1898:5: -> template( \"not implemented: case_else_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: case_else_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "case_else_part"


	public static class standard_function_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "standard_function"
	// PLSQLPrinter.g:1902:1: standard_function : ( ^( FUNCTION_ENABLING_OVER function_argument ( over_clause )? ) -> template( \"not implemented: standard_function\"| ^( FUNCTION_ENABLING_USING function_argument ( using_clause )? ) -> template( \"not implemented: standard_function\"| ^( COUNT_VK ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE | SQL92_RESERVED_ALL )? ( ASTERISK | expression ) ( over_clause )? ) -> template( \"not implemented: standard_function\"| ^( ( CAST_VK | XMLCAST_VK ) ( subquery | expression ) type_spec ) -> template( \"not implemented: standard_function\"| ^( CHR_VK expression NCHAR_CS_VK ) -> template( \"not implemented: standard_function\"| ^( COLLECT_VK ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )? column_name ( collect_order_by_part )? ) -> template( \"not implemented: standard_function\"| ^( FUNCTION_ENABLING_WITHIN_OR_OVER function_argument ( within_clause | over_clause )+ ) -> template( \"not implemented: standard_function\"| ^( DECOMPOSE_VK expression ( CANONICAL_VK | COMPATIBILITY_VK )? ) -> template( \"not implemented: standard_function\"| ^( EXTRACT_VK ID expression ) -> template( \"not implemented: standard_function\"| ^( ( FIRST_VALUE_VK | LAST_VALUE_VK ) expression ( NULLS_VK )? over_clause ) -> template( \"not implemented: standard_function\"| ^( PREDICTION_FUNCTION ( expression )+ ( cost_matrix_clause )? ( using_clause )? ) -> template( \"not implemented: standard_function\"| ^( TRANSLATE_VK expression ( CHAR_CS_VK | NCHAR_CS_VK )? ( expression )* ) -> template( \"not implemented: standard_function\"| ^( TREAT_VK expression ( REF_VK )? type_spec ) -> template( \"not implemented: standard_function\"| ^( TRIM_VK ( LEADING_VK | TRAILING_VK | BOTH_VK )? expression_element ( expression_element )? ) -> template( \"not implemented: standard_function\"| ^( XMLAGG_VK expression ( order_by_clause )? ) -> template( \"not implemented: standard_function\"| ^( ( XMLCOLATTVAL_VK | XMLFOREST_VK ) ( xml_multiuse_expression_element )+ ) -> template( \"not implemented: standard_function\"| ^( XMLEXISTS_VK expression ( xml_passing_clause )? ) -> template( \"not implemented: standard_function\"| ^( XMLPARSE_VK ( DOCUMENT_VK | CONTENT_VK ) expression ( WELLFORMED_VK )? ) -> template( \"not implemented: standard_function\"| ^( XMLQUERY_VK expression ( xml_passing_clause )? ( SQL92_RESERVED_NULL )? ) -> template( \"not implemented: standard_function\"| ^( XMLROOT_VK expression xml_param_version_part ( xmlroot_param_standalone_part )? ) -> template( \"not implemented: standard_function\"| ^( XMLTABLE_VK ( xml_namespaces_clause )? expression ( xml_passing_clause )? ( xml_table_column )* ) -> template( \"not implemented: standard_function\"| ^( XMLELEMENT_VK ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )? ( NAME_VK | EVALNAME_VK )? expression ( xml_attributes_clause )? ( expression ( alias )? )* ) -> template( \"not implemented: standard_function\"| ^( XMLPI_VK ( NAME_VK ( char_set_name )? ID | EVALNAME_VK expression ) ( expression )? ) -> template( \"not implemented: standard_function\"| ^( XMLSERIALIZE_VK ( DOCUMENT_VK | CONTENT_VK ) expression ( type_spec )? ( xmlserialize_param_enconding_part )? ( xml_param_version_part )? ( xmlserialize_param_ident_part )? ( ( HIDE_VK | SHOW_VK ) DEFAULTS_VK )? ) -> template( \"not implemented: standard_function\");
	public final PLSQLPrinter.standard_function_return standard_function() throws RecognitionException {
		PLSQLPrinter.standard_function_return retval = new PLSQLPrinter.standard_function_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1903:5: ( ^( FUNCTION_ENABLING_OVER function_argument ( over_clause )? ) -> template( \"not implemented: standard_function\"| ^( FUNCTION_ENABLING_USING function_argument ( using_clause )? ) -> template( \"not implemented: standard_function\"| ^( COUNT_VK ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE | SQL92_RESERVED_ALL )? ( ASTERISK | expression ) ( over_clause )? ) -> template( \"not implemented: standard_function\"| ^( ( CAST_VK | XMLCAST_VK ) ( subquery | expression ) type_spec ) -> template( \"not implemented: standard_function\"| ^( CHR_VK expression NCHAR_CS_VK ) -> template( \"not implemented: standard_function\"| ^( COLLECT_VK ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )? column_name ( collect_order_by_part )? ) -> template( \"not implemented: standard_function\"| ^( FUNCTION_ENABLING_WITHIN_OR_OVER function_argument ( within_clause | over_clause )+ ) -> template( \"not implemented: standard_function\"| ^( DECOMPOSE_VK expression ( CANONICAL_VK | COMPATIBILITY_VK )? ) -> template( \"not implemented: standard_function\"| ^( EXTRACT_VK ID expression ) -> template( \"not implemented: standard_function\"| ^( ( FIRST_VALUE_VK | LAST_VALUE_VK ) expression ( NULLS_VK )? over_clause ) -> template( \"not implemented: standard_function\"| ^( PREDICTION_FUNCTION ( expression )+ ( cost_matrix_clause )? ( using_clause )? ) -> template( \"not implemented: standard_function\"| ^( TRANSLATE_VK expression ( CHAR_CS_VK | NCHAR_CS_VK )? ( expression )* ) -> template( \"not implemented: standard_function\"| ^( TREAT_VK expression ( REF_VK )? type_spec ) -> template( \"not implemented: standard_function\"| ^( TRIM_VK ( LEADING_VK | TRAILING_VK | BOTH_VK )? expression_element ( expression_element )? ) -> template( \"not implemented: standard_function\"| ^( XMLAGG_VK expression ( order_by_clause )? ) -> template( \"not implemented: standard_function\"| ^( ( XMLCOLATTVAL_VK | XMLFOREST_VK ) ( xml_multiuse_expression_element )+ ) -> template( \"not implemented: standard_function\"| ^( XMLEXISTS_VK expression ( xml_passing_clause )? ) -> template( \"not implemented: standard_function\"| ^( XMLPARSE_VK ( DOCUMENT_VK | CONTENT_VK ) expression ( WELLFORMED_VK )? ) -> template( \"not implemented: standard_function\"| ^( XMLQUERY_VK expression ( xml_passing_clause )? ( SQL92_RESERVED_NULL )? ) -> template( \"not implemented: standard_function\"| ^( XMLROOT_VK expression xml_param_version_part ( xmlroot_param_standalone_part )? ) -> template( \"not implemented: standard_function\"| ^( XMLTABLE_VK ( xml_namespaces_clause )? expression ( xml_passing_clause )? ( xml_table_column )* ) -> template( \"not implemented: standard_function\"| ^( XMLELEMENT_VK ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )? ( NAME_VK | EVALNAME_VK )? expression ( xml_attributes_clause )? ( expression ( alias )? )* ) -> template( \"not implemented: standard_function\"| ^( XMLPI_VK ( NAME_VK ( char_set_name )? ID | EVALNAME_VK expression ) ( expression )? ) -> template( \"not implemented: standard_function\"| ^( XMLSERIALIZE_VK ( DOCUMENT_VK | CONTENT_VK ) expression ( type_spec )? ( xmlserialize_param_enconding_part )? ( xml_param_version_part )? ( xmlserialize_param_ident_part )? ( ( HIDE_VK | SHOW_VK ) DEFAULTS_VK )? ) -> template( \"not implemented: standard_function\")
			int alt486=24;
			switch ( input.LA(1) ) {
			case FUNCTION_ENABLING_OVER:
				{
				alt486=1;
				}
				break;
			case FUNCTION_ENABLING_USING:
				{
				alt486=2;
				}
				break;
			case COUNT_VK:
				{
				alt486=3;
				}
				break;
			case CAST_VK:
			case XMLCAST_VK:
				{
				alt486=4;
				}
				break;
			case CHR_VK:
				{
				alt486=5;
				}
				break;
			case COLLECT_VK:
				{
				alt486=6;
				}
				break;
			case FUNCTION_ENABLING_WITHIN_OR_OVER:
				{
				alt486=7;
				}
				break;
			case DECOMPOSE_VK:
				{
				alt486=8;
				}
				break;
			case EXTRACT_VK:
				{
				alt486=9;
				}
				break;
			case FIRST_VALUE_VK:
			case LAST_VALUE_VK:
				{
				alt486=10;
				}
				break;
			case PREDICTION_FUNCTION:
				{
				alt486=11;
				}
				break;
			case TRANSLATE_VK:
				{
				alt486=12;
				}
				break;
			case TREAT_VK:
				{
				alt486=13;
				}
				break;
			case TRIM_VK:
				{
				alt486=14;
				}
				break;
			case XMLAGG_VK:
				{
				alt486=15;
				}
				break;
			case XMLCOLATTVAL_VK:
			case XMLFOREST_VK:
				{
				alt486=16;
				}
				break;
			case XMLEXISTS_VK:
				{
				alt486=17;
				}
				break;
			case XMLPARSE_VK:
				{
				alt486=18;
				}
				break;
			case XMLQUERY_VK:
				{
				alt486=19;
				}
				break;
			case XMLROOT_VK:
				{
				alt486=20;
				}
				break;
			case XMLTABLE_VK:
				{
				alt486=21;
				}
				break;
			case XMLELEMENT_VK:
				{
				alt486=22;
				}
				break;
			case XMLPI_VK:
				{
				alt486=23;
				}
				break;
			case XMLSERIALIZE_VK:
				{
				alt486=24;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 486, 0, input);
				throw nvae;
			}
			switch (alt486) {
				case 1 :
					// PLSQLPrinter.g:1903:10: ^( FUNCTION_ENABLING_OVER function_argument ( over_clause )? )
					{
					match(input,FUNCTION_ENABLING_OVER,FOLLOW_FUNCTION_ENABLING_OVER_in_standard_function18123); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_function_argument_in_standard_function18125);
					function_argument();
					state._fsp--;

					// PLSQLPrinter.g:1903:53: ( over_clause )?
					int alt438=2;
					int LA438_0 = input.LA(1);
					if ( (LA438_0==OVER_VK) ) {
						alt438=1;
					}
					switch (alt438) {
						case 1 :
							// PLSQLPrinter.g:1903:53: over_clause
							{
							pushFollow(FOLLOW_over_clause_in_standard_function18127);
							over_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1904:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1905:10: ^( FUNCTION_ENABLING_USING function_argument ( using_clause )? )
					{
					match(input,FUNCTION_ENABLING_USING,FOLLOW_FUNCTION_ENABLING_USING_in_standard_function18155); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_function_argument_in_standard_function18157);
					function_argument();
					state._fsp--;

					// PLSQLPrinter.g:1905:54: ( using_clause )?
					int alt439=2;
					int LA439_0 = input.LA(1);
					if ( (LA439_0==PLSQL_NON_RESERVED_USING) ) {
						alt439=1;
					}
					switch (alt439) {
						case 1 :
							// PLSQLPrinter.g:1905:54: using_clause
							{
							pushFollow(FOLLOW_using_clause_in_standard_function18159);
							using_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1906:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1907:10: ^( COUNT_VK ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE | SQL92_RESERVED_ALL )? ( ASTERISK | expression ) ( over_clause )? )
					{
					match(input,COUNT_VK,FOLLOW_COUNT_VK_in_standard_function18187); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1907:21: ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE | SQL92_RESERVED_ALL )?
					int alt440=4;
					switch ( input.LA(1) ) {
						case SQL92_RESERVED_DISTINCT:
							{
							alt440=1;
							}
							break;
						case SQL92_RESERVED_UNIQUE:
							{
							alt440=2;
							}
							break;
						case SQL92_RESERVED_ALL:
							{
							alt440=3;
							}
							break;
					}
					switch (alt440) {
						case 1 :
							// PLSQLPrinter.g:1907:22: SQL92_RESERVED_DISTINCT
							{
							match(input,SQL92_RESERVED_DISTINCT,FOLLOW_SQL92_RESERVED_DISTINCT_in_standard_function18190); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1907:46: SQL92_RESERVED_UNIQUE
							{
							match(input,SQL92_RESERVED_UNIQUE,FOLLOW_SQL92_RESERVED_UNIQUE_in_standard_function18192); 
							}
							break;
						case 3 :
							// PLSQLPrinter.g:1907:68: SQL92_RESERVED_ALL
							{
							match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_standard_function18194); 
							}
							break;

					}

					// PLSQLPrinter.g:1907:89: ( ASTERISK | expression )
					int alt441=2;
					int LA441_0 = input.LA(1);
					if ( (LA441_0==ASTERISK) ) {
						alt441=1;
					}
					else if ( (LA441_0==EXPR||LA441_0==LOGIC_EXPR) ) {
						alt441=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 441, 0, input);
						throw nvae;
					}

					switch (alt441) {
						case 1 :
							// PLSQLPrinter.g:1907:91: ASTERISK
							{
							match(input,ASTERISK,FOLLOW_ASTERISK_in_standard_function18200); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1907:102: expression
							{
							pushFollow(FOLLOW_expression_in_standard_function18204);
							expression();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1907:115: ( over_clause )?
					int alt442=2;
					int LA442_0 = input.LA(1);
					if ( (LA442_0==OVER_VK) ) {
						alt442=1;
					}
					switch (alt442) {
						case 1 :
							// PLSQLPrinter.g:1907:115: over_clause
							{
							pushFollow(FOLLOW_over_clause_in_standard_function18208);
							over_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1908:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1909:10: ^( ( CAST_VK | XMLCAST_VK ) ( subquery | expression ) type_spec )
					{
					// PLSQLPrinter.g:1909:12: ( CAST_VK | XMLCAST_VK )
					int alt443=2;
					int LA443_0 = input.LA(1);
					if ( (LA443_0==CAST_VK) ) {
						alt443=1;
					}
					else if ( (LA443_0==XMLCAST_VK) ) {
						alt443=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 443, 0, input);
						throw nvae;
					}

					switch (alt443) {
						case 1 :
							// PLSQLPrinter.g:1909:13: CAST_VK
							{
							match(input,CAST_VK,FOLLOW_CAST_VK_in_standard_function18237); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1909:21: XMLCAST_VK
							{
							match(input,XMLCAST_VK,FOLLOW_XMLCAST_VK_in_standard_function18239); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1909:33: ( subquery | expression )
					int alt444=2;
					int LA444_0 = input.LA(1);
					if ( (LA444_0==SUBQUERY) ) {
						alt444=1;
					}
					else if ( (LA444_0==EXPR||LA444_0==LOGIC_EXPR) ) {
						alt444=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 444, 0, input);
						throw nvae;
					}

					switch (alt444) {
						case 1 :
							// PLSQLPrinter.g:1909:34: subquery
							{
							pushFollow(FOLLOW_subquery_in_standard_function18243);
							subquery();
							state._fsp--;

							}
							break;
						case 2 :
							// PLSQLPrinter.g:1909:43: expression
							{
							pushFollow(FOLLOW_expression_in_standard_function18245);
							expression();
							state._fsp--;

							}
							break;

					}

					pushFollow(FOLLOW_type_spec_in_standard_function18248);
					type_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1910:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:1911:10: ^( CHR_VK expression NCHAR_CS_VK )
					{
					match(input,CHR_VK,FOLLOW_CHR_VK_in_standard_function18275); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18277);
					expression();
					state._fsp--;

					match(input,NCHAR_CS_VK,FOLLOW_NCHAR_CS_VK_in_standard_function18279); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1912:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:1913:10: ^( COLLECT_VK ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )? column_name ( collect_order_by_part )? )
					{
					match(input,COLLECT_VK,FOLLOW_COLLECT_VK_in_standard_function18306); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1913:23: ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )?
					int alt445=3;
					int LA445_0 = input.LA(1);
					if ( (LA445_0==SQL92_RESERVED_DISTINCT) ) {
						alt445=1;
					}
					else if ( (LA445_0==SQL92_RESERVED_UNIQUE) ) {
						alt445=2;
					}
					switch (alt445) {
						case 1 :
							// PLSQLPrinter.g:1913:24: SQL92_RESERVED_DISTINCT
							{
							match(input,SQL92_RESERVED_DISTINCT,FOLLOW_SQL92_RESERVED_DISTINCT_in_standard_function18309); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1913:48: SQL92_RESERVED_UNIQUE
							{
							match(input,SQL92_RESERVED_UNIQUE,FOLLOW_SQL92_RESERVED_UNIQUE_in_standard_function18311); 
							}
							break;

					}

					pushFollow(FOLLOW_column_name_in_standard_function18315);
					column_name();
					state._fsp--;

					// PLSQLPrinter.g:1913:84: ( collect_order_by_part )?
					int alt446=2;
					int LA446_0 = input.LA(1);
					if ( (LA446_0==SQL92_RESERVED_ORDER) ) {
						alt446=1;
					}
					switch (alt446) {
						case 1 :
							// PLSQLPrinter.g:1913:84: collect_order_by_part
							{
							pushFollow(FOLLOW_collect_order_by_part_in_standard_function18317);
							collect_order_by_part();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1914:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:1915:10: ^( FUNCTION_ENABLING_WITHIN_OR_OVER function_argument ( within_clause | over_clause )+ )
					{
					match(input,FUNCTION_ENABLING_WITHIN_OR_OVER,FOLLOW_FUNCTION_ENABLING_WITHIN_OR_OVER_in_standard_function18345); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_function_argument_in_standard_function18347);
					function_argument();
					state._fsp--;

					// PLSQLPrinter.g:1915:63: ( within_clause | over_clause )+
					int cnt447=0;
					loop447:
					while (true) {
						int alt447=3;
						int LA447_0 = input.LA(1);
						if ( (LA447_0==WITHIN_VK) ) {
							alt447=1;
						}
						else if ( (LA447_0==OVER_VK) ) {
							alt447=2;
						}

						switch (alt447) {
						case 1 :
							// PLSQLPrinter.g:1915:64: within_clause
							{
							pushFollow(FOLLOW_within_clause_in_standard_function18350);
							within_clause();
							state._fsp--;

							}
							break;
						case 2 :
							// PLSQLPrinter.g:1915:78: over_clause
							{
							pushFollow(FOLLOW_over_clause_in_standard_function18352);
							over_clause();
							state._fsp--;

							}
							break;

						default :
							if ( cnt447 >= 1 ) break loop447;
							EarlyExitException eee = new EarlyExitException(447, input);
							throw eee;
						}
						cnt447++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1916:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:1917:10: ^( DECOMPOSE_VK expression ( CANONICAL_VK | COMPATIBILITY_VK )? )
					{
					match(input,DECOMPOSE_VK,FOLLOW_DECOMPOSE_VK_in_standard_function18382); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18384);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1917:36: ( CANONICAL_VK | COMPATIBILITY_VK )?
					int alt448=3;
					int LA448_0 = input.LA(1);
					if ( (LA448_0==CANONICAL_VK) ) {
						alt448=1;
					}
					else if ( (LA448_0==COMPATIBILITY_VK) ) {
						alt448=2;
					}
					switch (alt448) {
						case 1 :
							// PLSQLPrinter.g:1917:37: CANONICAL_VK
							{
							match(input,CANONICAL_VK,FOLLOW_CANONICAL_VK_in_standard_function18387); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1917:50: COMPATIBILITY_VK
							{
							match(input,COMPATIBILITY_VK,FOLLOW_COMPATIBILITY_VK_in_standard_function18389); 
							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1918:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:1919:10: ^( EXTRACT_VK ID expression )
					{
					match(input,EXTRACT_VK,FOLLOW_EXTRACT_VK_in_standard_function18419); 
					match(input, Token.DOWN, null); 
					match(input,ID,FOLLOW_ID_in_standard_function18421); 
					pushFollow(FOLLOW_expression_in_standard_function18423);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1920:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:1921:10: ^( ( FIRST_VALUE_VK | LAST_VALUE_VK ) expression ( NULLS_VK )? over_clause )
					{
					// PLSQLPrinter.g:1921:12: ( FIRST_VALUE_VK | LAST_VALUE_VK )
					int alt449=2;
					int LA449_0 = input.LA(1);
					if ( (LA449_0==FIRST_VALUE_VK) ) {
						alt449=1;
					}
					else if ( (LA449_0==LAST_VALUE_VK) ) {
						alt449=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 449, 0, input);
						throw nvae;
					}

					switch (alt449) {
						case 1 :
							// PLSQLPrinter.g:1921:13: FIRST_VALUE_VK
							{
							match(input,FIRST_VALUE_VK,FOLLOW_FIRST_VALUE_VK_in_standard_function18451); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1921:28: LAST_VALUE_VK
							{
							match(input,LAST_VALUE_VK,FOLLOW_LAST_VALUE_VK_in_standard_function18453); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18456);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1921:54: ( NULLS_VK )?
					int alt450=2;
					int LA450_0 = input.LA(1);
					if ( (LA450_0==NULLS_VK) ) {
						alt450=1;
					}
					switch (alt450) {
						case 1 :
							// PLSQLPrinter.g:1921:54: NULLS_VK
							{
							match(input,NULLS_VK,FOLLOW_NULLS_VK_in_standard_function18458); 
							}
							break;

					}

					pushFollow(FOLLOW_over_clause_in_standard_function18461);
					over_clause();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1922:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:1923:10: ^( PREDICTION_FUNCTION ( expression )+ ( cost_matrix_clause )? ( using_clause )? )
					{
					match(input,PREDICTION_FUNCTION,FOLLOW_PREDICTION_FUNCTION_in_standard_function18489); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1923:32: ( expression )+
					int cnt451=0;
					loop451:
					while (true) {
						int alt451=2;
						int LA451_0 = input.LA(1);
						if ( (LA451_0==EXPR||LA451_0==LOGIC_EXPR) ) {
							alt451=1;
						}

						switch (alt451) {
						case 1 :
							// PLSQLPrinter.g:1923:32: expression
							{
							pushFollow(FOLLOW_expression_in_standard_function18491);
							expression();
							state._fsp--;

							}
							break;

						default :
							if ( cnt451 >= 1 ) break loop451;
							EarlyExitException eee = new EarlyExitException(451, input);
							throw eee;
						}
						cnt451++;
					}

					// PLSQLPrinter.g:1923:44: ( cost_matrix_clause )?
					int alt452=2;
					int LA452_0 = input.LA(1);
					if ( (LA452_0==COST_VK) ) {
						alt452=1;
					}
					switch (alt452) {
						case 1 :
							// PLSQLPrinter.g:1923:44: cost_matrix_clause
							{
							pushFollow(FOLLOW_cost_matrix_clause_in_standard_function18494);
							cost_matrix_clause();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1923:64: ( using_clause )?
					int alt453=2;
					int LA453_0 = input.LA(1);
					if ( (LA453_0==PLSQL_NON_RESERVED_USING) ) {
						alt453=1;
					}
					switch (alt453) {
						case 1 :
							// PLSQLPrinter.g:1923:64: using_clause
							{
							pushFollow(FOLLOW_using_clause_in_standard_function18497);
							using_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1924:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:1925:10: ^( TRANSLATE_VK expression ( CHAR_CS_VK | NCHAR_CS_VK )? ( expression )* )
					{
					match(input,TRANSLATE_VK,FOLLOW_TRANSLATE_VK_in_standard_function18525); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18527);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1925:36: ( CHAR_CS_VK | NCHAR_CS_VK )?
					int alt454=3;
					int LA454_0 = input.LA(1);
					if ( (LA454_0==CHAR_CS_VK) ) {
						alt454=1;
					}
					else if ( (LA454_0==NCHAR_CS_VK) ) {
						alt454=2;
					}
					switch (alt454) {
						case 1 :
							// PLSQLPrinter.g:1925:37: CHAR_CS_VK
							{
							match(input,CHAR_CS_VK,FOLLOW_CHAR_CS_VK_in_standard_function18530); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1925:48: NCHAR_CS_VK
							{
							match(input,NCHAR_CS_VK,FOLLOW_NCHAR_CS_VK_in_standard_function18532); 
							}
							break;

					}

					// PLSQLPrinter.g:1925:62: ( expression )*
					loop455:
					while (true) {
						int alt455=2;
						int LA455_0 = input.LA(1);
						if ( (LA455_0==EXPR||LA455_0==LOGIC_EXPR) ) {
							alt455=1;
						}

						switch (alt455) {
						case 1 :
							// PLSQLPrinter.g:1925:62: expression
							{
							pushFollow(FOLLOW_expression_in_standard_function18536);
							expression();
							state._fsp--;

							}
							break;

						default :
							break loop455;
						}
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1926:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 13 :
					// PLSQLPrinter.g:1927:10: ^( TREAT_VK expression ( REF_VK )? type_spec )
					{
					match(input,TREAT_VK,FOLLOW_TREAT_VK_in_standard_function18564); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18566);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1927:32: ( REF_VK )?
					int alt456=2;
					int LA456_0 = input.LA(1);
					if ( (LA456_0==REF_VK) ) {
						alt456=1;
					}
					switch (alt456) {
						case 1 :
							// PLSQLPrinter.g:1927:32: REF_VK
							{
							match(input,REF_VK,FOLLOW_REF_VK_in_standard_function18568); 
							}
							break;

					}

					pushFollow(FOLLOW_type_spec_in_standard_function18571);
					type_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1928:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 14 :
					// PLSQLPrinter.g:1929:10: ^( TRIM_VK ( LEADING_VK | TRAILING_VK | BOTH_VK )? expression_element ( expression_element )? )
					{
					match(input,TRIM_VK,FOLLOW_TRIM_VK_in_standard_function18598); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1929:20: ( LEADING_VK | TRAILING_VK | BOTH_VK )?
					int alt457=4;
					switch ( input.LA(1) ) {
						case LEADING_VK:
							{
							alt457=1;
							}
							break;
						case TRAILING_VK:
							{
							alt457=2;
							}
							break;
						case BOTH_VK:
							{
							alt457=3;
							}
							break;
					}
					switch (alt457) {
						case 1 :
							// PLSQLPrinter.g:1929:21: LEADING_VK
							{
							match(input,LEADING_VK,FOLLOW_LEADING_VK_in_standard_function18601); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1929:32: TRAILING_VK
							{
							match(input,TRAILING_VK,FOLLOW_TRAILING_VK_in_standard_function18603); 
							}
							break;
						case 3 :
							// PLSQLPrinter.g:1929:44: BOTH_VK
							{
							match(input,BOTH_VK,FOLLOW_BOTH_VK_in_standard_function18605); 
							}
							break;

					}

					pushFollow(FOLLOW_expression_element_in_standard_function18609);
					expression_element();
					state._fsp--;

					// PLSQLPrinter.g:1929:73: ( expression_element )?
					int alt458=2;
					int LA458_0 = input.LA(1);
					if ( (LA458_0==APPROXIMATE_NUM_LIT||LA458_0==ASTERISK||LA458_0==CHAR_STRING||LA458_0==CONCATENATION_OP||(LA458_0 >= EQUALS_OP && LA458_0 <= EXACT_NUM_LIT)||(LA458_0 >= GREATER_THAN_OP && LA458_0 <= GREATER_THAN_OR_EQUALS_OP)||(LA458_0 >= LESS_THAN_OP && LA458_0 <= LESS_THAN_OR_EQUALS_OP)||LA458_0==MINUS_SIGN||LA458_0==NOT_EQUAL_OP||LA458_0==PLUS_SIGN||LA458_0==SOLIDUS||LA458_0==SQL92_RESERVED_ALL||(LA458_0 >= SQL92_RESERVED_AND && LA458_0 <= SQL92_RESERVED_ANY)||LA458_0==SQL92_RESERVED_BETWEEN||LA458_0==SQL92_RESERVED_DEFAULT||LA458_0==SQL92_RESERVED_DISTINCT||(LA458_0 >= SQL92_RESERVED_EXISTS && LA458_0 <= SQL92_RESERVED_FALSE)||LA458_0==SQL92_RESERVED_IN||(LA458_0 >= SQL92_RESERVED_LIKE && LA458_0 <= SQL92_RESERVED_NULL)||LA458_0==SQL92_RESERVED_OR||LA458_0==SQL92_RESERVED_PRIOR||LA458_0==SQL92_RESERVED_TRUE||LA458_0==UNSIGNED_INTEGER||LA458_0==CASCATED_ELEMENT||LA458_0==DATETIME_OP||LA458_0==DBTIMEZONE_VK||LA458_0==DIV_VK||LA458_0==DOT_ASTERISK||(LA458_0 >= IS_A_SET && LA458_0 <= IS_PRESENT)||LA458_0==KEEP_VK||(LA458_0 >= LIKE2_VK && LA458_0 <= LIKEC_VK)||LA458_0==MAXVALUE_VK||LA458_0==MEMBER_VK||LA458_0==MINVALUE_VK||LA458_0==MODEL_EXPRESSION||LA458_0==MOD_VK||LA458_0==NEW_VK||LA458_0==NOT_BETWEEN||(LA458_0 >= NOT_IN && LA458_0 <= NOT_LIKE)||LA458_0==OUTER_JOIN_SIGN||(LA458_0 >= PERCENT_FOUND_VK && LA458_0 <= PERCENT_ROWCOUNT_VK)||LA458_0==PIPE_VK||LA458_0==SEARCHED_CASE||LA458_0==SESSIONTIMEZONE_VK||LA458_0==SIMPLE_CASE||LA458_0==SOME_VK||LA458_0==STANDARD_FUNCTION||LA458_0==SUBMULTISET_VK||LA458_0==SUBQUERY||LA458_0==UNARY_OPERATOR||LA458_0==VECTOR_EXPR) ) {
						alt458=1;
					}
					switch (alt458) {
						case 1 :
							// PLSQLPrinter.g:1929:73: expression_element
							{
							pushFollow(FOLLOW_expression_element_in_standard_function18611);
							expression_element();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1930:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 15 :
					// PLSQLPrinter.g:1932:10: ^( XMLAGG_VK expression ( order_by_clause )? )
					{
					match(input,XMLAGG_VK,FOLLOW_XMLAGG_VK_in_standard_function18641); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18643);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1932:33: ( order_by_clause )?
					int alt459=2;
					int LA459_0 = input.LA(1);
					if ( (LA459_0==SQL92_RESERVED_ORDER) ) {
						alt459=1;
					}
					switch (alt459) {
						case 1 :
							// PLSQLPrinter.g:1932:33: order_by_clause
							{
							pushFollow(FOLLOW_order_by_clause_in_standard_function18645);
							order_by_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1933:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 16 :
					// PLSQLPrinter.g:1934:10: ^( ( XMLCOLATTVAL_VK | XMLFOREST_VK ) ( xml_multiuse_expression_element )+ )
					{
					// PLSQLPrinter.g:1934:12: ( XMLCOLATTVAL_VK | XMLFOREST_VK )
					int alt460=2;
					int LA460_0 = input.LA(1);
					if ( (LA460_0==XMLCOLATTVAL_VK) ) {
						alt460=1;
					}
					else if ( (LA460_0==XMLFOREST_VK) ) {
						alt460=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 460, 0, input);
						throw nvae;
					}

					switch (alt460) {
						case 1 :
							// PLSQLPrinter.g:1934:13: XMLCOLATTVAL_VK
							{
							match(input,XMLCOLATTVAL_VK,FOLLOW_XMLCOLATTVAL_VK_in_standard_function18674); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1934:29: XMLFOREST_VK
							{
							match(input,XMLFOREST_VK,FOLLOW_XMLFOREST_VK_in_standard_function18676); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1934:43: ( xml_multiuse_expression_element )+
					int cnt461=0;
					loop461:
					while (true) {
						int alt461=2;
						int LA461_0 = input.LA(1);
						if ( (LA461_0==XML_ELEMENT) ) {
							alt461=1;
						}

						switch (alt461) {
						case 1 :
							// PLSQLPrinter.g:1934:43: xml_multiuse_expression_element
							{
							pushFollow(FOLLOW_xml_multiuse_expression_element_in_standard_function18679);
							xml_multiuse_expression_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt461 >= 1 ) break loop461;
							EarlyExitException eee = new EarlyExitException(461, input);
							throw eee;
						}
						cnt461++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1935:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 17 :
					// PLSQLPrinter.g:1936:10: ^( XMLEXISTS_VK expression ( xml_passing_clause )? )
					{
					match(input,XMLEXISTS_VK,FOLLOW_XMLEXISTS_VK_in_standard_function18707); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18709);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1936:36: ( xml_passing_clause )?
					int alt462=2;
					int LA462_0 = input.LA(1);
					if ( (LA462_0==PASSING_VK) ) {
						alt462=1;
					}
					switch (alt462) {
						case 1 :
							// PLSQLPrinter.g:1936:36: xml_passing_clause
							{
							pushFollow(FOLLOW_xml_passing_clause_in_standard_function18711);
							xml_passing_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1937:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 18 :
					// PLSQLPrinter.g:1938:10: ^( XMLPARSE_VK ( DOCUMENT_VK | CONTENT_VK ) expression ( WELLFORMED_VK )? )
					{
					match(input,XMLPARSE_VK,FOLLOW_XMLPARSE_VK_in_standard_function18739); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1938:24: ( DOCUMENT_VK | CONTENT_VK )
					int alt463=2;
					int LA463_0 = input.LA(1);
					if ( (LA463_0==DOCUMENT_VK) ) {
						alt463=1;
					}
					else if ( (LA463_0==CONTENT_VK) ) {
						alt463=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 463, 0, input);
						throw nvae;
					}

					switch (alt463) {
						case 1 :
							// PLSQLPrinter.g:1938:25: DOCUMENT_VK
							{
							match(input,DOCUMENT_VK,FOLLOW_DOCUMENT_VK_in_standard_function18742); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1938:37: CONTENT_VK
							{
							match(input,CONTENT_VK,FOLLOW_CONTENT_VK_in_standard_function18744); 
							}
							break;

					}

					pushFollow(FOLLOW_expression_in_standard_function18747);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1938:60: ( WELLFORMED_VK )?
					int alt464=2;
					int LA464_0 = input.LA(1);
					if ( (LA464_0==WELLFORMED_VK) ) {
						alt464=1;
					}
					switch (alt464) {
						case 1 :
							// PLSQLPrinter.g:1938:60: WELLFORMED_VK
							{
							match(input,WELLFORMED_VK,FOLLOW_WELLFORMED_VK_in_standard_function18749); 
							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1939:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 19 :
					// PLSQLPrinter.g:1940:10: ^( XMLQUERY_VK expression ( xml_passing_clause )? ( SQL92_RESERVED_NULL )? )
					{
					match(input,XMLQUERY_VK,FOLLOW_XMLQUERY_VK_in_standard_function18777); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18779);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1940:35: ( xml_passing_clause )?
					int alt465=2;
					int LA465_0 = input.LA(1);
					if ( (LA465_0==PASSING_VK) ) {
						alt465=1;
					}
					switch (alt465) {
						case 1 :
							// PLSQLPrinter.g:1940:35: xml_passing_clause
							{
							pushFollow(FOLLOW_xml_passing_clause_in_standard_function18781);
							xml_passing_clause();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1940:55: ( SQL92_RESERVED_NULL )?
					int alt466=2;
					int LA466_0 = input.LA(1);
					if ( (LA466_0==SQL92_RESERVED_NULL) ) {
						alt466=1;
					}
					switch (alt466) {
						case 1 :
							// PLSQLPrinter.g:1940:55: SQL92_RESERVED_NULL
							{
							match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_standard_function18784); 
							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1941:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 20 :
					// PLSQLPrinter.g:1942:10: ^( XMLROOT_VK expression xml_param_version_part ( xmlroot_param_standalone_part )? )
					{
					match(input,XMLROOT_VK,FOLLOW_XMLROOT_VK_in_standard_function18812); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18814);
					expression();
					state._fsp--;

					pushFollow(FOLLOW_xml_param_version_part_in_standard_function18816);
					xml_param_version_part();
					state._fsp--;

					// PLSQLPrinter.g:1942:57: ( xmlroot_param_standalone_part )?
					int alt467=2;
					int LA467_0 = input.LA(1);
					if ( (LA467_0==STANDALONE_VK) ) {
						alt467=1;
					}
					switch (alt467) {
						case 1 :
							// PLSQLPrinter.g:1942:57: xmlroot_param_standalone_part
							{
							pushFollow(FOLLOW_xmlroot_param_standalone_part_in_standard_function18818);
							xmlroot_param_standalone_part();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1943:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 21 :
					// PLSQLPrinter.g:1944:10: ^( XMLTABLE_VK ( xml_namespaces_clause )? expression ( xml_passing_clause )? ( xml_table_column )* )
					{
					match(input,XMLTABLE_VK,FOLLOW_XMLTABLE_VK_in_standard_function18846); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1944:24: ( xml_namespaces_clause )?
					int alt468=2;
					int LA468_0 = input.LA(1);
					if ( (LA468_0==XMLNAMESPACES_VK) ) {
						alt468=1;
					}
					switch (alt468) {
						case 1 :
							// PLSQLPrinter.g:1944:24: xml_namespaces_clause
							{
							pushFollow(FOLLOW_xml_namespaces_clause_in_standard_function18848);
							xml_namespaces_clause();
							state._fsp--;

							}
							break;

					}

					pushFollow(FOLLOW_expression_in_standard_function18851);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1944:58: ( xml_passing_clause )?
					int alt469=2;
					int LA469_0 = input.LA(1);
					if ( (LA469_0==PASSING_VK) ) {
						alt469=1;
					}
					switch (alt469) {
						case 1 :
							// PLSQLPrinter.g:1944:58: xml_passing_clause
							{
							pushFollow(FOLLOW_xml_passing_clause_in_standard_function18853);
							xml_passing_clause();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1944:78: ( xml_table_column )*
					loop470:
					while (true) {
						int alt470=2;
						int LA470_0 = input.LA(1);
						if ( (LA470_0==XML_COLUMN) ) {
							alt470=1;
						}

						switch (alt470) {
						case 1 :
							// PLSQLPrinter.g:1944:78: xml_table_column
							{
							pushFollow(FOLLOW_xml_table_column_in_standard_function18856);
							xml_table_column();
							state._fsp--;

							}
							break;

						default :
							break loop470;
						}
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1945:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 22 :
					// PLSQLPrinter.g:1946:10: ^( XMLELEMENT_VK ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )? ( NAME_VK | EVALNAME_VK )? expression ( xml_attributes_clause )? ( expression ( alias )? )* )
					{
					match(input,XMLELEMENT_VK,FOLLOW_XMLELEMENT_VK_in_standard_function18884); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1947:13: ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )?
					int alt471=3;
					int LA471_0 = input.LA(1);
					if ( (LA471_0==ENTITYESCAPING_VK) ) {
						alt471=1;
					}
					else if ( (LA471_0==NOENTITYESCAPING_VK) ) {
						alt471=2;
					}
					switch (alt471) {
						case 1 :
							// PLSQLPrinter.g:1947:14: ENTITYESCAPING_VK
							{
							match(input,ENTITYESCAPING_VK,FOLLOW_ENTITYESCAPING_VK_in_standard_function18899); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1947:32: NOENTITYESCAPING_VK
							{
							match(input,NOENTITYESCAPING_VK,FOLLOW_NOENTITYESCAPING_VK_in_standard_function18901); 
							}
							break;

					}

					// PLSQLPrinter.g:1948:13: ( NAME_VK | EVALNAME_VK )?
					int alt472=3;
					int LA472_0 = input.LA(1);
					if ( (LA472_0==NAME_VK) ) {
						alt472=1;
					}
					else if ( (LA472_0==EVALNAME_VK) ) {
						alt472=2;
					}
					switch (alt472) {
						case 1 :
							// PLSQLPrinter.g:1948:14: NAME_VK
							{
							match(input,NAME_VK,FOLLOW_NAME_VK_in_standard_function18918); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1948:22: EVALNAME_VK
							{
							match(input,EVALNAME_VK,FOLLOW_EVALNAME_VK_in_standard_function18920); 
							}
							break;

					}

					pushFollow(FOLLOW_expression_in_standard_function18924);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1949:13: ( xml_attributes_clause )?
					int alt473=2;
					int LA473_0 = input.LA(1);
					if ( (LA473_0==XMLATTRIBUTES_VK) ) {
						alt473=1;
					}
					switch (alt473) {
						case 1 :
							// PLSQLPrinter.g:1949:13: xml_attributes_clause
							{
							pushFollow(FOLLOW_xml_attributes_clause_in_standard_function18938);
							xml_attributes_clause();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1949:36: ( expression ( alias )? )*
					loop475:
					while (true) {
						int alt475=2;
						int LA475_0 = input.LA(1);
						if ( (LA475_0==EXPR||LA475_0==LOGIC_EXPR) ) {
							alt475=1;
						}

						switch (alt475) {
						case 1 :
							// PLSQLPrinter.g:1949:37: expression ( alias )?
							{
							pushFollow(FOLLOW_expression_in_standard_function18942);
							expression();
							state._fsp--;

							// PLSQLPrinter.g:1949:48: ( alias )?
							int alt474=2;
							int LA474_0 = input.LA(1);
							if ( (LA474_0==ALIAS) ) {
								alt474=1;
							}
							switch (alt474) {
								case 1 :
									// PLSQLPrinter.g:1949:48: alias
									{
									pushFollow(FOLLOW_alias_in_standard_function18944);
									alias();
									state._fsp--;

									}
									break;

							}

							}
							break;

						default :
							break loop475;
						}
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1951:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 23 :
					// PLSQLPrinter.g:1952:10: ^( XMLPI_VK ( NAME_VK ( char_set_name )? ID | EVALNAME_VK expression ) ( expression )? )
					{
					match(input,XMLPI_VK,FOLLOW_XMLPI_VK_in_standard_function18983); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1953:17: ( NAME_VK ( char_set_name )? ID | EVALNAME_VK expression )
					int alt477=2;
					int LA477_0 = input.LA(1);
					if ( (LA477_0==NAME_VK) ) {
						alt477=1;
					}
					else if ( (LA477_0==EVALNAME_VK) ) {
						alt477=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 477, 0, input);
						throw nvae;
					}

					switch (alt477) {
						case 1 :
							// PLSQLPrinter.g:1953:22: NAME_VK ( char_set_name )? ID
							{
							match(input,NAME_VK,FOLLOW_NAME_VK_in_standard_function19006); 
							// PLSQLPrinter.g:1953:30: ( char_set_name )?
							int alt476=2;
							int LA476_0 = input.LA(1);
							if ( (LA476_0==CHAR_SET_NAME) ) {
								alt476=1;
							}
							switch (alt476) {
								case 1 :
									// PLSQLPrinter.g:1953:30: char_set_name
									{
									pushFollow(FOLLOW_char_set_name_in_standard_function19008);
									char_set_name();
									state._fsp--;

									}
									break;

							}

							match(input,ID,FOLLOW_ID_in_standard_function19011); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1954:22: EVALNAME_VK expression
							{
							match(input,EVALNAME_VK,FOLLOW_EVALNAME_VK_in_standard_function19034); 
							pushFollow(FOLLOW_expression_in_standard_function19036);
							expression();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1956:17: ( expression )?
					int alt478=2;
					int LA478_0 = input.LA(1);
					if ( (LA478_0==EXPR||LA478_0==LOGIC_EXPR) ) {
						alt478=1;
					}
					switch (alt478) {
						case 1 :
							// PLSQLPrinter.g:1956:17: expression
							{
							pushFollow(FOLLOW_expression_in_standard_function19072);
							expression();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1958:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;
				case 24 :
					// PLSQLPrinter.g:1959:10: ^( XMLSERIALIZE_VK ( DOCUMENT_VK | CONTENT_VK ) expression ( type_spec )? ( xmlserialize_param_enconding_part )? ( xml_param_version_part )? ( xmlserialize_param_ident_part )? ( ( HIDE_VK | SHOW_VK ) DEFAULTS_VK )? )
					{
					match(input,XMLSERIALIZE_VK,FOLLOW_XMLSERIALIZE_VK_in_standard_function19109); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1960:17: ( DOCUMENT_VK | CONTENT_VK )
					int alt479=2;
					int LA479_0 = input.LA(1);
					if ( (LA479_0==DOCUMENT_VK) ) {
						alt479=1;
					}
					else if ( (LA479_0==CONTENT_VK) ) {
						alt479=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 479, 0, input);
						throw nvae;
					}

					switch (alt479) {
						case 1 :
							// PLSQLPrinter.g:1960:18: DOCUMENT_VK
							{
							match(input,DOCUMENT_VK,FOLLOW_DOCUMENT_VK_in_standard_function19128); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1960:30: CONTENT_VK
							{
							match(input,CONTENT_VK,FOLLOW_CONTENT_VK_in_standard_function19130); 
							}
							break;

					}

					pushFollow(FOLLOW_expression_in_standard_function19149);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1961:28: ( type_spec )?
					int alt480=2;
					int LA480_0 = input.LA(1);
					if ( (LA480_0==CUSTOM_TYPE||LA480_0==INTERVAL_DATATYPE||LA480_0==NATIVE_DATATYPE) ) {
						alt480=1;
					}
					switch (alt480) {
						case 1 :
							// PLSQLPrinter.g:1961:28: type_spec
							{
							pushFollow(FOLLOW_type_spec_in_standard_function19151);
							type_spec();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1962:17: ( xmlserialize_param_enconding_part )?
					int alt481=2;
					int LA481_0 = input.LA(1);
					if ( (LA481_0==ENCODING_VK) ) {
						alt481=1;
					}
					switch (alt481) {
						case 1 :
							// PLSQLPrinter.g:1962:17: xmlserialize_param_enconding_part
							{
							pushFollow(FOLLOW_xmlserialize_param_enconding_part_in_standard_function19170);
							xmlserialize_param_enconding_part();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1963:17: ( xml_param_version_part )?
					int alt482=2;
					int LA482_0 = input.LA(1);
					if ( (LA482_0==VERSION_VK) ) {
						alt482=1;
					}
					switch (alt482) {
						case 1 :
							// PLSQLPrinter.g:1963:17: xml_param_version_part
							{
							pushFollow(FOLLOW_xml_param_version_part_in_standard_function19189);
							xml_param_version_part();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1964:17: ( xmlserialize_param_ident_part )?
					int alt483=2;
					int LA483_0 = input.LA(1);
					if ( (LA483_0==INDENT_VK||LA483_0==NO_VK) ) {
						alt483=1;
					}
					switch (alt483) {
						case 1 :
							// PLSQLPrinter.g:1964:17: xmlserialize_param_ident_part
							{
							pushFollow(FOLLOW_xmlserialize_param_ident_part_in_standard_function19208);
							xmlserialize_param_ident_part();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1965:17: ( ( HIDE_VK | SHOW_VK ) DEFAULTS_VK )?
					int alt485=2;
					int LA485_0 = input.LA(1);
					if ( (LA485_0==HIDE_VK||LA485_0==SHOW_VK) ) {
						alt485=1;
					}
					switch (alt485) {
						case 1 :
							// PLSQLPrinter.g:1965:18: ( HIDE_VK | SHOW_VK ) DEFAULTS_VK
							{
							// PLSQLPrinter.g:1965:18: ( HIDE_VK | SHOW_VK )
							int alt484=2;
							int LA484_0 = input.LA(1);
							if ( (LA484_0==HIDE_VK) ) {
								alt484=1;
							}
							else if ( (LA484_0==SHOW_VK) ) {
								alt484=2;
							}

							else {
								NoViableAltException nvae =
									new NoViableAltException("", 484, 0, input);
								throw nvae;
							}

							switch (alt484) {
								case 1 :
									// PLSQLPrinter.g:1965:19: HIDE_VK
									{
									match(input,HIDE_VK,FOLLOW_HIDE_VK_in_standard_function19229); 
									}
									break;
								case 2 :
									// PLSQLPrinter.g:1965:27: SHOW_VK
									{
									match(input,SHOW_VK,FOLLOW_SHOW_VK_in_standard_function19231); 
									}
									break;

							}

							match(input,DEFAULTS_VK,FOLLOW_DEFAULTS_VK_in_standard_function19234); 
							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1967:5: -> template( \"not implemented: standard_function\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: standard_function");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "standard_function"


	public static class over_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "over_clause"
	// PLSQLPrinter.g:1970:1: over_clause : ^( OVER_VK ( query_partition_clause )? ( order_by_clause ( windowing_clause )? )? ) -> template( \"not implemented: over_clause\";
	public final PLSQLPrinter.over_clause_return over_clause() throws RecognitionException {
		PLSQLPrinter.over_clause_return retval = new PLSQLPrinter.over_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1971:5: ( ^( OVER_VK ( query_partition_clause )? ( order_by_clause ( windowing_clause )? )? ) -> template( \"not implemented: over_clause\")
			// PLSQLPrinter.g:1971:10: ^( OVER_VK ( query_partition_clause )? ( order_by_clause ( windowing_clause )? )? )
			{
			match(input,OVER_VK,FOLLOW_OVER_VK_in_over_clause19281); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1971:20: ( query_partition_clause )?
				int alt487=2;
				int LA487_0 = input.LA(1);
				if ( (LA487_0==PARTITION_VK) ) {
					alt487=1;
				}
				switch (alt487) {
					case 1 :
						// PLSQLPrinter.g:1971:20: query_partition_clause
						{
						pushFollow(FOLLOW_query_partition_clause_in_over_clause19283);
						query_partition_clause();
						state._fsp--;

						}
						break;

				}

				// PLSQLPrinter.g:1971:44: ( order_by_clause ( windowing_clause )? )?
				int alt489=2;
				int LA489_0 = input.LA(1);
				if ( (LA489_0==SQL92_RESERVED_ORDER) ) {
					alt489=1;
				}
				switch (alt489) {
					case 1 :
						// PLSQLPrinter.g:1971:45: order_by_clause ( windowing_clause )?
						{
						pushFollow(FOLLOW_order_by_clause_in_over_clause19287);
						order_by_clause();
						state._fsp--;

						// PLSQLPrinter.g:1971:61: ( windowing_clause )?
						int alt488=2;
						int LA488_0 = input.LA(1);
						if ( (LA488_0==RANGE_VK||LA488_0==ROWS_VK) ) {
							alt488=1;
						}
						switch (alt488) {
							case 1 :
								// PLSQLPrinter.g:1971:61: windowing_clause
								{
								pushFollow(FOLLOW_windowing_clause_in_over_clause19289);
								windowing_clause();
								state._fsp--;

								}
								break;

						}

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1972:5: -> template( \"not implemented: over_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: over_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "over_clause"


	public static class windowing_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "windowing_clause"
	// PLSQLPrinter.g:1975:1: windowing_clause : ^( ( ROWS_VK | RANGE_VK ) ( ^( SQL92_RESERVED_BETWEEN windowing_elements windowing_elements ) | ( windowing_elements )+ ) ) -> template( \"not implemented: windowing_clause\";
	public final PLSQLPrinter.windowing_clause_return windowing_clause() throws RecognitionException {
		PLSQLPrinter.windowing_clause_return retval = new PLSQLPrinter.windowing_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1976:5: ( ^( ( ROWS_VK | RANGE_VK ) ( ^( SQL92_RESERVED_BETWEEN windowing_elements windowing_elements ) | ( windowing_elements )+ ) ) -> template( \"not implemented: windowing_clause\")
			// PLSQLPrinter.g:1976:10: ^( ( ROWS_VK | RANGE_VK ) ( ^( SQL92_RESERVED_BETWEEN windowing_elements windowing_elements ) | ( windowing_elements )+ ) )
			{
			// PLSQLPrinter.g:1976:12: ( ROWS_VK | RANGE_VK )
			int alt490=2;
			int LA490_0 = input.LA(1);
			if ( (LA490_0==ROWS_VK) ) {
				alt490=1;
			}
			else if ( (LA490_0==RANGE_VK) ) {
				alt490=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 490, 0, input);
				throw nvae;
			}

			switch (alt490) {
				case 1 :
					// PLSQLPrinter.g:1976:13: ROWS_VK
					{
					match(input,ROWS_VK,FOLLOW_ROWS_VK_in_windowing_clause19329); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1976:21: RANGE_VK
					{
					match(input,RANGE_VK,FOLLOW_RANGE_VK_in_windowing_clause19331); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1977:13: ( ^( SQL92_RESERVED_BETWEEN windowing_elements windowing_elements ) | ( windowing_elements )+ )
			int alt492=2;
			int LA492_0 = input.LA(1);
			if ( (LA492_0==SQL92_RESERVED_BETWEEN) ) {
				alt492=1;
			}
			else if ( (LA492_0==CURRENT_VK||LA492_0==FOLLOWING_VK||LA492_0==PRECEDING_VK||LA492_0==UNBOUNDED_VK) ) {
				alt492=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 492, 0, input);
				throw nvae;
			}

			switch (alt492) {
				case 1 :
					// PLSQLPrinter.g:1977:18: ^( SQL92_RESERVED_BETWEEN windowing_elements windowing_elements )
					{
					match(input,SQL92_RESERVED_BETWEEN,FOLLOW_SQL92_RESERVED_BETWEEN_in_windowing_clause19352); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_windowing_elements_in_windowing_clause19354);
					windowing_elements();
					state._fsp--;

					pushFollow(FOLLOW_windowing_elements_in_windowing_clause19356);
					windowing_elements();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1978:18: ( windowing_elements )+
					{
					// PLSQLPrinter.g:1978:18: ( windowing_elements )+
					int cnt491=0;
					loop491:
					while (true) {
						int alt491=2;
						int LA491_0 = input.LA(1);
						if ( (LA491_0==CURRENT_VK||LA491_0==FOLLOWING_VK||LA491_0==PRECEDING_VK||LA491_0==UNBOUNDED_VK) ) {
							alt491=1;
						}

						switch (alt491) {
						case 1 :
							// PLSQLPrinter.g:1978:18: windowing_elements
							{
							pushFollow(FOLLOW_windowing_elements_in_windowing_clause19376);
							windowing_elements();
							state._fsp--;

							}
							break;

						default :
							if ( cnt491 >= 1 ) break loop491;
							EarlyExitException eee = new EarlyExitException(491, input);
							throw eee;
						}
						cnt491++;
					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1981:5: -> template( \"not implemented: windowing_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: windowing_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "windowing_clause"


	public static class windowing_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "windowing_elements"
	// PLSQLPrinter.g:1984:1: windowing_elements : ( ^( UNBOUNDED_VK PRECEDING_VK ) -> template( \"not implemented: windowing_elements\"| ^( CURRENT_VK ROW_VK ) -> template( \"not implemented: windowing_elements\"| ^( ( PRECEDING_VK | FOLLOWING_VK ) expression ) -> template( \"not implemented: windowing_elements\");
	public final PLSQLPrinter.windowing_elements_return windowing_elements() throws RecognitionException {
		PLSQLPrinter.windowing_elements_return retval = new PLSQLPrinter.windowing_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1985:5: ( ^( UNBOUNDED_VK PRECEDING_VK ) -> template( \"not implemented: windowing_elements\"| ^( CURRENT_VK ROW_VK ) -> template( \"not implemented: windowing_elements\"| ^( ( PRECEDING_VK | FOLLOWING_VK ) expression ) -> template( \"not implemented: windowing_elements\")
			int alt494=3;
			switch ( input.LA(1) ) {
			case UNBOUNDED_VK:
				{
				alt494=1;
				}
				break;
			case CURRENT_VK:
				{
				alt494=2;
				}
				break;
			case FOLLOWING_VK:
			case PRECEDING_VK:
				{
				alt494=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 494, 0, input);
				throw nvae;
			}
			switch (alt494) {
				case 1 :
					// PLSQLPrinter.g:1985:10: ^( UNBOUNDED_VK PRECEDING_VK )
					{
					match(input,UNBOUNDED_VK,FOLLOW_UNBOUNDED_VK_in_windowing_elements19436); 
					match(input, Token.DOWN, null); 
					match(input,PRECEDING_VK,FOLLOW_PRECEDING_VK_in_windowing_elements19438); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1986:5: -> template( \"not implemented: windowing_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: windowing_elements");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1987:10: ^( CURRENT_VK ROW_VK )
					{
					match(input,CURRENT_VK,FOLLOW_CURRENT_VK_in_windowing_elements19465); 
					match(input, Token.DOWN, null); 
					match(input,ROW_VK,FOLLOW_ROW_VK_in_windowing_elements19467); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1988:5: -> template( \"not implemented: windowing_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: windowing_elements");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1989:10: ^( ( PRECEDING_VK | FOLLOWING_VK ) expression )
					{
					// PLSQLPrinter.g:1989:12: ( PRECEDING_VK | FOLLOWING_VK )
					int alt493=2;
					int LA493_0 = input.LA(1);
					if ( (LA493_0==PRECEDING_VK) ) {
						alt493=1;
					}
					else if ( (LA493_0==FOLLOWING_VK) ) {
						alt493=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 493, 0, input);
						throw nvae;
					}

					switch (alt493) {
						case 1 :
							// PLSQLPrinter.g:1989:13: PRECEDING_VK
							{
							match(input,PRECEDING_VK,FOLLOW_PRECEDING_VK_in_windowing_elements19495); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1989:26: FOLLOWING_VK
							{
							match(input,FOLLOWING_VK,FOLLOW_FOLLOWING_VK_in_windowing_elements19497); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_windowing_elements19500);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1990:5: -> template( \"not implemented: windowing_elements\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: windowing_elements");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "windowing_elements"


	public static class using_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "using_clause"
	// PLSQLPrinter.g:1993:1: using_clause : ^( PLSQL_NON_RESERVED_USING ( using_element )+ ) -> template( \"not implemented: using_clause\";
	public final PLSQLPrinter.using_clause_return using_clause() throws RecognitionException {
		PLSQLPrinter.using_clause_return retval = new PLSQLPrinter.using_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1994:5: ( ^( PLSQL_NON_RESERVED_USING ( using_element )+ ) -> template( \"not implemented: using_clause\")
			// PLSQLPrinter.g:1994:10: ^( PLSQL_NON_RESERVED_USING ( using_element )+ )
			{
			match(input,PLSQL_NON_RESERVED_USING,FOLLOW_PLSQL_NON_RESERVED_USING_in_using_clause19536); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1994:37: ( using_element )+
			int cnt495=0;
			loop495:
			while (true) {
				int alt495=2;
				int LA495_0 = input.LA(1);
				if ( (LA495_0==ASTERISK||LA495_0==ELEMENT) ) {
					alt495=1;
				}

				switch (alt495) {
				case 1 :
					// PLSQLPrinter.g:1994:37: using_element
					{
					pushFollow(FOLLOW_using_element_in_using_clause19538);
					using_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt495 >= 1 ) break loop495;
					EarlyExitException eee = new EarlyExitException(495, input);
					throw eee;
				}
				cnt495++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1995:5: -> template( \"not implemented: using_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: using_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "using_clause"


	public static class using_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "using_element"
	// PLSQLPrinter.g:1998:1: using_element : ( ^( ELEMENT ( SQL92_RESERVED_IN )? ( OUT_VK )? expression ( alias )? ) -> template( \"not implemented: using_element\"| ASTERISK -> template( \"not implemented: using_element\");
	public final PLSQLPrinter.using_element_return using_element() throws RecognitionException {
		PLSQLPrinter.using_element_return retval = new PLSQLPrinter.using_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1999:5: ( ^( ELEMENT ( SQL92_RESERVED_IN )? ( OUT_VK )? expression ( alias )? ) -> template( \"not implemented: using_element\"| ASTERISK -> template( \"not implemented: using_element\")
			int alt499=2;
			int LA499_0 = input.LA(1);
			if ( (LA499_0==ELEMENT) ) {
				alt499=1;
			}
			else if ( (LA499_0==ASTERISK) ) {
				alt499=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 499, 0, input);
				throw nvae;
			}

			switch (alt499) {
				case 1 :
					// PLSQLPrinter.g:1999:10: ^( ELEMENT ( SQL92_RESERVED_IN )? ( OUT_VK )? expression ( alias )? )
					{
					match(input,ELEMENT,FOLLOW_ELEMENT_in_using_element19575); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1999:20: ( SQL92_RESERVED_IN )?
					int alt496=2;
					int LA496_0 = input.LA(1);
					if ( (LA496_0==SQL92_RESERVED_IN) ) {
						alt496=1;
					}
					switch (alt496) {
						case 1 :
							// PLSQLPrinter.g:1999:20: SQL92_RESERVED_IN
							{
							match(input,SQL92_RESERVED_IN,FOLLOW_SQL92_RESERVED_IN_in_using_element19577); 
							}
							break;

					}

					// PLSQLPrinter.g:1999:39: ( OUT_VK )?
					int alt497=2;
					int LA497_0 = input.LA(1);
					if ( (LA497_0==OUT_VK) ) {
						alt497=1;
					}
					switch (alt497) {
						case 1 :
							// PLSQLPrinter.g:1999:39: OUT_VK
							{
							match(input,OUT_VK,FOLLOW_OUT_VK_in_using_element19580); 
							}
							break;

					}

					pushFollow(FOLLOW_expression_in_using_element19583);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1999:58: ( alias )?
					int alt498=2;
					int LA498_0 = input.LA(1);
					if ( (LA498_0==ALIAS) ) {
						alt498=1;
					}
					switch (alt498) {
						case 1 :
							// PLSQLPrinter.g:1999:58: alias
							{
							pushFollow(FOLLOW_alias_in_using_element19585);
							alias();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2000:5: -> template( \"not implemented: using_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: using_element");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2001:10: ASTERISK
					{
					match(input,ASTERISK,FOLLOW_ASTERISK_in_using_element19612); 
					// TEMPLATE REWRITE
					// 2002:5: -> template( \"not implemented: using_element\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: using_element");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "using_element"


	public static class collect_order_by_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "collect_order_by_part"
	// PLSQLPrinter.g:2005:1: collect_order_by_part : ^( SQL92_RESERVED_ORDER expression ) -> template( \"not implemented: collect_order_by_part\";
	public final PLSQLPrinter.collect_order_by_part_return collect_order_by_part() throws RecognitionException {
		PLSQLPrinter.collect_order_by_part_return retval = new PLSQLPrinter.collect_order_by_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2006:5: ( ^( SQL92_RESERVED_ORDER expression ) -> template( \"not implemented: collect_order_by_part\")
			// PLSQLPrinter.g:2006:10: ^( SQL92_RESERVED_ORDER expression )
			{
			match(input,SQL92_RESERVED_ORDER,FOLLOW_SQL92_RESERVED_ORDER_in_collect_order_by_part19647); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_collect_order_by_part19649);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2007:5: -> template( \"not implemented: collect_order_by_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: collect_order_by_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "collect_order_by_part"


	public static class within_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "within_clause"
	// PLSQLPrinter.g:2010:1: within_clause : ^( WITHIN_VK order_by_clause ) -> template( \"not implemented: within_clause\";
	public final PLSQLPrinter.within_clause_return within_clause() throws RecognitionException {
		PLSQLPrinter.within_clause_return retval = new PLSQLPrinter.within_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2011:5: ( ^( WITHIN_VK order_by_clause ) -> template( \"not implemented: within_clause\")
			// PLSQLPrinter.g:2011:10: ^( WITHIN_VK order_by_clause )
			{
			match(input,WITHIN_VK,FOLLOW_WITHIN_VK_in_within_clause19685); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_order_by_clause_in_within_clause19687);
			order_by_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2012:5: -> template( \"not implemented: within_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: within_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "within_clause"


	public static class cost_matrix_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "cost_matrix_clause"
	// PLSQLPrinter.g:2015:1: cost_matrix_clause : ^( COST_VK ( PLSQL_NON_RESERVED_MODEL ( AUTO_VK )? | ( cost_class_name )+ expression_list ) ) -> template( \"not implemented: cost_matrix_clause\";
	public final PLSQLPrinter.cost_matrix_clause_return cost_matrix_clause() throws RecognitionException {
		PLSQLPrinter.cost_matrix_clause_return retval = new PLSQLPrinter.cost_matrix_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2016:5: ( ^( COST_VK ( PLSQL_NON_RESERVED_MODEL ( AUTO_VK )? | ( cost_class_name )+ expression_list ) ) -> template( \"not implemented: cost_matrix_clause\")
			// PLSQLPrinter.g:2016:10: ^( COST_VK ( PLSQL_NON_RESERVED_MODEL ( AUTO_VK )? | ( cost_class_name )+ expression_list ) )
			{
			match(input,COST_VK,FOLLOW_COST_VK_in_cost_matrix_clause19723); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2017:13: ( PLSQL_NON_RESERVED_MODEL ( AUTO_VK )? | ( cost_class_name )+ expression_list )
			int alt502=2;
			int LA502_0 = input.LA(1);
			if ( (LA502_0==PLSQL_NON_RESERVED_MODEL) ) {
				alt502=1;
			}
			else if ( (LA502_0==COST_CLASS_NAME) ) {
				alt502=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 502, 0, input);
				throw nvae;
			}

			switch (alt502) {
				case 1 :
					// PLSQLPrinter.g:2017:18: PLSQL_NON_RESERVED_MODEL ( AUTO_VK )?
					{
					match(input,PLSQL_NON_RESERVED_MODEL,FOLLOW_PLSQL_NON_RESERVED_MODEL_in_cost_matrix_clause19742); 
					// PLSQLPrinter.g:2017:43: ( AUTO_VK )?
					int alt500=2;
					int LA500_0 = input.LA(1);
					if ( (LA500_0==AUTO_VK) ) {
						alt500=1;
					}
					switch (alt500) {
						case 1 :
							// PLSQLPrinter.g:2017:43: AUTO_VK
							{
							match(input,AUTO_VK,FOLLOW_AUTO_VK_in_cost_matrix_clause19744); 
							}
							break;

					}

					}
					break;
				case 2 :
					// PLSQLPrinter.g:2018:18: ( cost_class_name )+ expression_list
					{
					// PLSQLPrinter.g:2018:18: ( cost_class_name )+
					int cnt501=0;
					loop501:
					while (true) {
						int alt501=2;
						int LA501_0 = input.LA(1);
						if ( (LA501_0==COST_CLASS_NAME) ) {
							alt501=1;
						}

						switch (alt501) {
						case 1 :
							// PLSQLPrinter.g:2018:18: cost_class_name
							{
							pushFollow(FOLLOW_cost_class_name_in_cost_matrix_clause19764);
							cost_class_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt501 >= 1 ) break loop501;
							EarlyExitException eee = new EarlyExitException(501, input);
							throw eee;
						}
						cnt501++;
					}

					pushFollow(FOLLOW_expression_list_in_cost_matrix_clause19767);
					expression_list();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2021:5: -> template( \"not implemented: cost_matrix_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: cost_matrix_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cost_matrix_clause"


	public static class xml_passing_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_passing_clause"
	// PLSQLPrinter.g:2024:1: xml_passing_clause : ^( PASSING_VK ( VALUE_VK )? expression ( alias )? ( expression ( alias )? )? ) -> template( \"not implemented: xml_passing_clause\";
	public final PLSQLPrinter.xml_passing_clause_return xml_passing_clause() throws RecognitionException {
		PLSQLPrinter.xml_passing_clause_return retval = new PLSQLPrinter.xml_passing_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2025:5: ( ^( PASSING_VK ( VALUE_VK )? expression ( alias )? ( expression ( alias )? )? ) -> template( \"not implemented: xml_passing_clause\")
			// PLSQLPrinter.g:2025:10: ^( PASSING_VK ( VALUE_VK )? expression ( alias )? ( expression ( alias )? )? )
			{
			match(input,PASSING_VK,FOLLOW_PASSING_VK_in_xml_passing_clause19826); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2025:23: ( VALUE_VK )?
			int alt503=2;
			int LA503_0 = input.LA(1);
			if ( (LA503_0==VALUE_VK) ) {
				alt503=1;
			}
			switch (alt503) {
				case 1 :
					// PLSQLPrinter.g:2025:23: VALUE_VK
					{
					match(input,VALUE_VK,FOLLOW_VALUE_VK_in_xml_passing_clause19828); 
					}
					break;

			}

			pushFollow(FOLLOW_expression_in_xml_passing_clause19831);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:2025:44: ( alias )?
			int alt504=2;
			int LA504_0 = input.LA(1);
			if ( (LA504_0==ALIAS) ) {
				alt504=1;
			}
			switch (alt504) {
				case 1 :
					// PLSQLPrinter.g:2025:44: alias
					{
					pushFollow(FOLLOW_alias_in_xml_passing_clause19833);
					alias();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2025:51: ( expression ( alias )? )?
			int alt506=2;
			int LA506_0 = input.LA(1);
			if ( (LA506_0==EXPR||LA506_0==LOGIC_EXPR) ) {
				alt506=1;
			}
			switch (alt506) {
				case 1 :
					// PLSQLPrinter.g:2025:52: expression ( alias )?
					{
					pushFollow(FOLLOW_expression_in_xml_passing_clause19837);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:2025:63: ( alias )?
					int alt505=2;
					int LA505_0 = input.LA(1);
					if ( (LA505_0==ALIAS) ) {
						alt505=1;
					}
					switch (alt505) {
						case 1 :
							// PLSQLPrinter.g:2025:63: alias
							{
							pushFollow(FOLLOW_alias_in_xml_passing_clause19839);
							alias();
							state._fsp--;

							}
							break;

					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2026:5: -> template( \"not implemented: xml_passing_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: xml_passing_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_passing_clause"


	public static class xml_attributes_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_attributes_clause"
	// PLSQLPrinter.g:2029:1: xml_attributes_clause : ^( XMLATTRIBUTES_VK ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )? ( SCHEMACHECK_VK | NOSCHEMACHECK_VK )? ( xml_multiuse_expression_element )+ ) -> template( \"not implemented: xml_attributes_clause\";
	public final PLSQLPrinter.xml_attributes_clause_return xml_attributes_clause() throws RecognitionException {
		PLSQLPrinter.xml_attributes_clause_return retval = new PLSQLPrinter.xml_attributes_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2030:5: ( ^( XMLATTRIBUTES_VK ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )? ( SCHEMACHECK_VK | NOSCHEMACHECK_VK )? ( xml_multiuse_expression_element )+ ) -> template( \"not implemented: xml_attributes_clause\")
			// PLSQLPrinter.g:2030:10: ^( XMLATTRIBUTES_VK ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )? ( SCHEMACHECK_VK | NOSCHEMACHECK_VK )? ( xml_multiuse_expression_element )+ )
			{
			match(input,XMLATTRIBUTES_VK,FOLLOW_XMLATTRIBUTES_VK_in_xml_attributes_clause19878); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2031:13: ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )?
			int alt507=3;
			int LA507_0 = input.LA(1);
			if ( (LA507_0==ENTITYESCAPING_VK) ) {
				alt507=1;
			}
			else if ( (LA507_0==NOENTITYESCAPING_VK) ) {
				alt507=2;
			}
			switch (alt507) {
				case 1 :
					// PLSQLPrinter.g:2031:14: ENTITYESCAPING_VK
					{
					match(input,ENTITYESCAPING_VK,FOLLOW_ENTITYESCAPING_VK_in_xml_attributes_clause19893); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2031:32: NOENTITYESCAPING_VK
					{
					match(input,NOENTITYESCAPING_VK,FOLLOW_NOENTITYESCAPING_VK_in_xml_attributes_clause19895); 
					}
					break;

			}

			// PLSQLPrinter.g:2032:13: ( SCHEMACHECK_VK | NOSCHEMACHECK_VK )?
			int alt508=3;
			int LA508_0 = input.LA(1);
			if ( (LA508_0==SCHEMACHECK_VK) ) {
				alt508=1;
			}
			else if ( (LA508_0==NOSCHEMACHECK_VK) ) {
				alt508=2;
			}
			switch (alt508) {
				case 1 :
					// PLSQLPrinter.g:2032:14: SCHEMACHECK_VK
					{
					match(input,SCHEMACHECK_VK,FOLLOW_SCHEMACHECK_VK_in_xml_attributes_clause19912); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2032:29: NOSCHEMACHECK_VK
					{
					match(input,NOSCHEMACHECK_VK,FOLLOW_NOSCHEMACHECK_VK_in_xml_attributes_clause19914); 
					}
					break;

			}

			// PLSQLPrinter.g:2033:13: ( xml_multiuse_expression_element )+
			int cnt509=0;
			loop509:
			while (true) {
				int alt509=2;
				int LA509_0 = input.LA(1);
				if ( (LA509_0==XML_ELEMENT) ) {
					alt509=1;
				}

				switch (alt509) {
				case 1 :
					// PLSQLPrinter.g:2033:13: xml_multiuse_expression_element
					{
					pushFollow(FOLLOW_xml_multiuse_expression_element_in_xml_attributes_clause19930);
					xml_multiuse_expression_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt509 >= 1 ) break loop509;
					EarlyExitException eee = new EarlyExitException(509, input);
					throw eee;
				}
				cnt509++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2035:5: -> template( \"not implemented: xml_attributes_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: xml_attributes_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_attributes_clause"


	public static class xml_namespaces_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_namespaces_clause"
	// PLSQLPrinter.g:2038:1: xml_namespaces_clause : ^( XMLNAMESPACES_VK ( expression ( alias )? )* ( xml_general_default_part )? ) -> template( \"not implemented: xml_namespaces_clause\";
	public final PLSQLPrinter.xml_namespaces_clause_return xml_namespaces_clause() throws RecognitionException {
		PLSQLPrinter.xml_namespaces_clause_return retval = new PLSQLPrinter.xml_namespaces_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2039:5: ( ^( XMLNAMESPACES_VK ( expression ( alias )? )* ( xml_general_default_part )? ) -> template( \"not implemented: xml_namespaces_clause\")
			// PLSQLPrinter.g:2039:10: ^( XMLNAMESPACES_VK ( expression ( alias )? )* ( xml_general_default_part )? )
			{
			match(input,XMLNAMESPACES_VK,FOLLOW_XMLNAMESPACES_VK_in_xml_namespaces_clause19976); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:2040:13: ( expression ( alias )? )*
				loop511:
				while (true) {
					int alt511=2;
					int LA511_0 = input.LA(1);
					if ( (LA511_0==EXPR||LA511_0==LOGIC_EXPR) ) {
						alt511=1;
					}

					switch (alt511) {
					case 1 :
						// PLSQLPrinter.g:2040:14: expression ( alias )?
						{
						pushFollow(FOLLOW_expression_in_xml_namespaces_clause19991);
						expression();
						state._fsp--;

						// PLSQLPrinter.g:2040:25: ( alias )?
						int alt510=2;
						int LA510_0 = input.LA(1);
						if ( (LA510_0==ALIAS) ) {
							alt510=1;
						}
						switch (alt510) {
							case 1 :
								// PLSQLPrinter.g:2040:25: alias
								{
								pushFollow(FOLLOW_alias_in_xml_namespaces_clause19993);
								alias();
								state._fsp--;

								}
								break;

						}

						}
						break;

					default :
						break loop511;
					}
				}

				// PLSQLPrinter.g:2040:34: ( xml_general_default_part )?
				int alt512=2;
				int LA512_0 = input.LA(1);
				if ( (LA512_0==SQL92_RESERVED_DEFAULT) ) {
					alt512=1;
				}
				switch (alt512) {
					case 1 :
						// PLSQLPrinter.g:2040:34: xml_general_default_part
						{
						pushFollow(FOLLOW_xml_general_default_part_in_xml_namespaces_clause19998);
						xml_general_default_part();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 2042:5: -> template( \"not implemented: xml_namespaces_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: xml_namespaces_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_namespaces_clause"


	public static class xml_table_column_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_table_column"
	// PLSQLPrinter.g:2045:1: xml_table_column : ^( XML_COLUMN xml_column_name ( ORDINALITY_VK | type_spec ( expression )? ( xml_general_default_part )? ) ) -> template( \"not implemented: xml_table_column\";
	public final PLSQLPrinter.xml_table_column_return xml_table_column() throws RecognitionException {
		PLSQLPrinter.xml_table_column_return retval = new PLSQLPrinter.xml_table_column_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2046:5: ( ^( XML_COLUMN xml_column_name ( ORDINALITY_VK | type_spec ( expression )? ( xml_general_default_part )? ) ) -> template( \"not implemented: xml_table_column\")
			// PLSQLPrinter.g:2046:10: ^( XML_COLUMN xml_column_name ( ORDINALITY_VK | type_spec ( expression )? ( xml_general_default_part )? ) )
			{
			match(input,XML_COLUMN,FOLLOW_XML_COLUMN_in_xml_table_column20044); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_xml_column_name_in_xml_table_column20046);
			xml_column_name();
			state._fsp--;

			// PLSQLPrinter.g:2046:39: ( ORDINALITY_VK | type_spec ( expression )? ( xml_general_default_part )? )
			int alt515=2;
			int LA515_0 = input.LA(1);
			if ( (LA515_0==ORDINALITY_VK) ) {
				alt515=1;
			}
			else if ( (LA515_0==CUSTOM_TYPE||LA515_0==INTERVAL_DATATYPE||LA515_0==NATIVE_DATATYPE) ) {
				alt515=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 515, 0, input);
				throw nvae;
			}

			switch (alt515) {
				case 1 :
					// PLSQLPrinter.g:2046:40: ORDINALITY_VK
					{
					match(input,ORDINALITY_VK,FOLLOW_ORDINALITY_VK_in_xml_table_column20049); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2046:54: type_spec ( expression )? ( xml_general_default_part )?
					{
					pushFollow(FOLLOW_type_spec_in_xml_table_column20051);
					type_spec();
					state._fsp--;

					// PLSQLPrinter.g:2046:64: ( expression )?
					int alt513=2;
					int LA513_0 = input.LA(1);
					if ( (LA513_0==EXPR||LA513_0==LOGIC_EXPR) ) {
						alt513=1;
					}
					switch (alt513) {
						case 1 :
							// PLSQLPrinter.g:2046:64: expression
							{
							pushFollow(FOLLOW_expression_in_xml_table_column20053);
							expression();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:2046:76: ( xml_general_default_part )?
					int alt514=2;
					int LA514_0 = input.LA(1);
					if ( (LA514_0==SQL92_RESERVED_DEFAULT) ) {
						alt514=1;
					}
					switch (alt514) {
						case 1 :
							// PLSQLPrinter.g:2046:76: xml_general_default_part
							{
							pushFollow(FOLLOW_xml_general_default_part_in_xml_table_column20056);
							xml_general_default_part();
							state._fsp--;

							}
							break;

					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2047:5: -> template( \"not implemented: xml_table_column\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: xml_table_column");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_table_column"


	public static class xml_general_default_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_general_default_part"
	// PLSQLPrinter.g:2050:1: xml_general_default_part : ^( SQL92_RESERVED_DEFAULT expression ) -> template( \"not implemented: xml_general_default_part\";
	public final PLSQLPrinter.xml_general_default_part_return xml_general_default_part() throws RecognitionException {
		PLSQLPrinter.xml_general_default_part_return retval = new PLSQLPrinter.xml_general_default_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2051:5: ( ^( SQL92_RESERVED_DEFAULT expression ) -> template( \"not implemented: xml_general_default_part\")
			// PLSQLPrinter.g:2051:10: ^( SQL92_RESERVED_DEFAULT expression )
			{
			match(input,SQL92_RESERVED_DEFAULT,FOLLOW_SQL92_RESERVED_DEFAULT_in_xml_general_default_part20095); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_xml_general_default_part20097);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2052:5: -> template( \"not implemented: xml_general_default_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: xml_general_default_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_general_default_part"


	public static class xml_multiuse_expression_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_multiuse_expression_element"
	// PLSQLPrinter.g:2055:1: xml_multiuse_expression_element : ^( XML_ELEMENT expression ( xml_alias )? ) -> template( \"not implemented: xml_multiuse_expression_element\";
	public final PLSQLPrinter.xml_multiuse_expression_element_return xml_multiuse_expression_element() throws RecognitionException {
		PLSQLPrinter.xml_multiuse_expression_element_return retval = new PLSQLPrinter.xml_multiuse_expression_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2056:5: ( ^( XML_ELEMENT expression ( xml_alias )? ) -> template( \"not implemented: xml_multiuse_expression_element\")
			// PLSQLPrinter.g:2056:10: ^( XML_ELEMENT expression ( xml_alias )? )
			{
			match(input,XML_ELEMENT,FOLLOW_XML_ELEMENT_in_xml_multiuse_expression_element20133); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_xml_multiuse_expression_element20135);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:2056:35: ( xml_alias )?
			int alt516=2;
			int LA516_0 = input.LA(1);
			if ( (LA516_0==XML_ALIAS) ) {
				alt516=1;
			}
			switch (alt516) {
				case 1 :
					// PLSQLPrinter.g:2056:35: xml_alias
					{
					pushFollow(FOLLOW_xml_alias_in_xml_multiuse_expression_element20137);
					xml_alias();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2057:5: -> template( \"not implemented: xml_multiuse_expression_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: xml_multiuse_expression_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_multiuse_expression_element"


	public static class xml_alias_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_alias"
	// PLSQLPrinter.g:2060:1: xml_alias : ( ^( XML_ALIAS ID ) -> template( \"not implemented: xml_alias\"| ^( XML_ALIAS ^( EVALNAME_VK expression ) ) -> template( \"not implemented: xml_alias\");
	public final PLSQLPrinter.xml_alias_return xml_alias() throws RecognitionException {
		PLSQLPrinter.xml_alias_return retval = new PLSQLPrinter.xml_alias_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2061:5: ( ^( XML_ALIAS ID ) -> template( \"not implemented: xml_alias\"| ^( XML_ALIAS ^( EVALNAME_VK expression ) ) -> template( \"not implemented: xml_alias\")
			int alt517=2;
			int LA517_0 = input.LA(1);
			if ( (LA517_0==XML_ALIAS) ) {
				int LA517_1 = input.LA(2);
				if ( (LA517_1==DOWN) ) {
					int LA517_2 = input.LA(3);
					if ( (LA517_2==ID) ) {
						alt517=1;
					}
					else if ( (LA517_2==EVALNAME_VK) ) {
						alt517=2;
					}

					else {
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 517, 2, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 517, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 517, 0, input);
				throw nvae;
			}

			switch (alt517) {
				case 1 :
					// PLSQLPrinter.g:2061:10: ^( XML_ALIAS ID )
					{
					match(input,XML_ALIAS,FOLLOW_XML_ALIAS_in_xml_alias20174); 
					match(input, Token.DOWN, null); 
					match(input,ID,FOLLOW_ID_in_xml_alias20176); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2062:5: -> template( \"not implemented: xml_alias\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: xml_alias");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2063:10: ^( XML_ALIAS ^( EVALNAME_VK expression ) )
					{
					match(input,XML_ALIAS,FOLLOW_XML_ALIAS_in_xml_alias20203); 
					match(input, Token.DOWN, null); 
					match(input,EVALNAME_VK,FOLLOW_EVALNAME_VK_in_xml_alias20206); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_xml_alias20208);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2064:5: -> template( \"not implemented: xml_alias\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: xml_alias");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_alias"


	public static class xml_param_version_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_param_version_part"
	// PLSQLPrinter.g:2067:1: xml_param_version_part : ^( VERSION_VK ( NO_VK VALUE_VK | expression ) ) -> template( \"not implemented: xml_param_version_part\";
	public final PLSQLPrinter.xml_param_version_part_return xml_param_version_part() throws RecognitionException {
		PLSQLPrinter.xml_param_version_part_return retval = new PLSQLPrinter.xml_param_version_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2068:5: ( ^( VERSION_VK ( NO_VK VALUE_VK | expression ) ) -> template( \"not implemented: xml_param_version_part\")
			// PLSQLPrinter.g:2068:10: ^( VERSION_VK ( NO_VK VALUE_VK | expression ) )
			{
			match(input,VERSION_VK,FOLLOW_VERSION_VK_in_xml_param_version_part20245); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2068:23: ( NO_VK VALUE_VK | expression )
			int alt518=2;
			int LA518_0 = input.LA(1);
			if ( (LA518_0==NO_VK) ) {
				alt518=1;
			}
			else if ( (LA518_0==EXPR||LA518_0==LOGIC_EXPR) ) {
				alt518=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 518, 0, input);
				throw nvae;
			}

			switch (alt518) {
				case 1 :
					// PLSQLPrinter.g:2068:24: NO_VK VALUE_VK
					{
					match(input,NO_VK,FOLLOW_NO_VK_in_xml_param_version_part20248); 
					match(input,VALUE_VK,FOLLOW_VALUE_VK_in_xml_param_version_part20250); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2068:39: expression
					{
					pushFollow(FOLLOW_expression_in_xml_param_version_part20252);
					expression();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2069:5: -> template( \"not implemented: xml_param_version_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: xml_param_version_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_param_version_part"


	public static class xmlroot_param_standalone_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xmlroot_param_standalone_part"
	// PLSQLPrinter.g:2072:1: xmlroot_param_standalone_part : ^( STANDALONE_VK ( YES_VK | NO_VK ( VALUE_VK )? ) ) -> template( \"not implemented: xmlroot_param_standalone_part\";
	public final PLSQLPrinter.xmlroot_param_standalone_part_return xmlroot_param_standalone_part() throws RecognitionException {
		PLSQLPrinter.xmlroot_param_standalone_part_return retval = new PLSQLPrinter.xmlroot_param_standalone_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2073:5: ( ^( STANDALONE_VK ( YES_VK | NO_VK ( VALUE_VK )? ) ) -> template( \"not implemented: xmlroot_param_standalone_part\")
			// PLSQLPrinter.g:2073:10: ^( STANDALONE_VK ( YES_VK | NO_VK ( VALUE_VK )? ) )
			{
			match(input,STANDALONE_VK,FOLLOW_STANDALONE_VK_in_xmlroot_param_standalone_part20289); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2073:26: ( YES_VK | NO_VK ( VALUE_VK )? )
			int alt520=2;
			int LA520_0 = input.LA(1);
			if ( (LA520_0==YES_VK) ) {
				alt520=1;
			}
			else if ( (LA520_0==NO_VK) ) {
				alt520=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 520, 0, input);
				throw nvae;
			}

			switch (alt520) {
				case 1 :
					// PLSQLPrinter.g:2073:27: YES_VK
					{
					match(input,YES_VK,FOLLOW_YES_VK_in_xmlroot_param_standalone_part20292); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2073:34: NO_VK ( VALUE_VK )?
					{
					match(input,NO_VK,FOLLOW_NO_VK_in_xmlroot_param_standalone_part20294); 
					// PLSQLPrinter.g:2073:40: ( VALUE_VK )?
					int alt519=2;
					int LA519_0 = input.LA(1);
					if ( (LA519_0==VALUE_VK) ) {
						alt519=1;
					}
					switch (alt519) {
						case 1 :
							// PLSQLPrinter.g:2073:40: VALUE_VK
							{
							match(input,VALUE_VK,FOLLOW_VALUE_VK_in_xmlroot_param_standalone_part20296); 
							}
							break;

					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2074:5: -> template( \"not implemented: xmlroot_param_standalone_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: xmlroot_param_standalone_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xmlroot_param_standalone_part"


	public static class xmlserialize_param_enconding_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xmlserialize_param_enconding_part"
	// PLSQLPrinter.g:2077:1: xmlserialize_param_enconding_part : ^( ENCODING_VK expression ) -> template( \"not implemented: xmlserialize_param_enconding_part\";
	public final PLSQLPrinter.xmlserialize_param_enconding_part_return xmlserialize_param_enconding_part() throws RecognitionException {
		PLSQLPrinter.xmlserialize_param_enconding_part_return retval = new PLSQLPrinter.xmlserialize_param_enconding_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2078:5: ( ^( ENCODING_VK expression ) -> template( \"not implemented: xmlserialize_param_enconding_part\")
			// PLSQLPrinter.g:2078:10: ^( ENCODING_VK expression )
			{
			match(input,ENCODING_VK,FOLLOW_ENCODING_VK_in_xmlserialize_param_enconding_part20334); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_xmlserialize_param_enconding_part20336);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2079:5: -> template( \"not implemented: xmlserialize_param_enconding_part\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: xmlserialize_param_enconding_part");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xmlserialize_param_enconding_part"


	public static class xmlserialize_param_ident_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xmlserialize_param_ident_part"
	// PLSQLPrinter.g:2082:1: xmlserialize_param_ident_part : ( NO_VK INDENT_VK -> template( \"not implemented: xmlserialize_param_ident_part\"| ^( INDENT_VK ( expression )? ) -> template( \"not implemented: xmlserialize_param_ident_part\");
	public final PLSQLPrinter.xmlserialize_param_ident_part_return xmlserialize_param_ident_part() throws RecognitionException {
		PLSQLPrinter.xmlserialize_param_ident_part_return retval = new PLSQLPrinter.xmlserialize_param_ident_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2083:5: ( NO_VK INDENT_VK -> template( \"not implemented: xmlserialize_param_ident_part\"| ^( INDENT_VK ( expression )? ) -> template( \"not implemented: xmlserialize_param_ident_part\")
			int alt522=2;
			int LA522_0 = input.LA(1);
			if ( (LA522_0==NO_VK) ) {
				alt522=1;
			}
			else if ( (LA522_0==INDENT_VK) ) {
				alt522=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 522, 0, input);
				throw nvae;
			}

			switch (alt522) {
				case 1 :
					// PLSQLPrinter.g:2083:10: NO_VK INDENT_VK
					{
					match(input,NO_VK,FOLLOW_NO_VK_in_xmlserialize_param_ident_part20371); 
					match(input,INDENT_VK,FOLLOW_INDENT_VK_in_xmlserialize_param_ident_part20373); 
					// TEMPLATE REWRITE
					// 2084:5: -> template( \"not implemented: xmlserialize_param_ident_part\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: xmlserialize_param_ident_part");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2085:10: ^( INDENT_VK ( expression )? )
					{
					match(input,INDENT_VK,FOLLOW_INDENT_VK_in_xmlserialize_param_ident_part20399); 
					if ( input.LA(1)==Token.DOWN ) {
						match(input, Token.DOWN, null); 
						// PLSQLPrinter.g:2085:22: ( expression )?
						int alt521=2;
						int LA521_0 = input.LA(1);
						if ( (LA521_0==EXPR||LA521_0==LOGIC_EXPR) ) {
							alt521=1;
						}
						switch (alt521) {
							case 1 :
								// PLSQLPrinter.g:2085:22: expression
								{
								pushFollow(FOLLOW_expression_in_xmlserialize_param_ident_part20401);
								expression();
								state._fsp--;

								}
								break;

						}

						match(input, Token.UP, null); 
					}

					// TEMPLATE REWRITE
					// 2086:5: -> template( \"not implemented: xmlserialize_param_ident_part\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: xmlserialize_param_ident_part");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xmlserialize_param_ident_part"


	public static class partition_extension_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "partition_extension_clause"
	// PLSQLPrinter.g:2093:1: partition_extension_clause : ^( ( SUBPARTITION_VK | PARTITION_VK ) expression_list ) -> template( \"not implemented: partition_extension_clause\";
	public final PLSQLPrinter.partition_extension_clause_return partition_extension_clause() throws RecognitionException {
		PLSQLPrinter.partition_extension_clause_return retval = new PLSQLPrinter.partition_extension_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2094:5: ( ^( ( SUBPARTITION_VK | PARTITION_VK ) expression_list ) -> template( \"not implemented: partition_extension_clause\")
			// PLSQLPrinter.g:2094:10: ^( ( SUBPARTITION_VK | PARTITION_VK ) expression_list )
			{
			// PLSQLPrinter.g:2094:12: ( SUBPARTITION_VK | PARTITION_VK )
			int alt523=2;
			int LA523_0 = input.LA(1);
			if ( (LA523_0==SUBPARTITION_VK) ) {
				alt523=1;
			}
			else if ( (LA523_0==PARTITION_VK) ) {
				alt523=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 523, 0, input);
				throw nvae;
			}

			switch (alt523) {
				case 1 :
					// PLSQLPrinter.g:2094:13: SUBPARTITION_VK
					{
					match(input,SUBPARTITION_VK,FOLLOW_SUBPARTITION_VK_in_partition_extension_clause20443); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2094:29: PARTITION_VK
					{
					match(input,PARTITION_VK,FOLLOW_PARTITION_VK_in_partition_extension_clause20445); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_list_in_partition_extension_clause20448);
			expression_list();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2095:5: -> template( \"not implemented: partition_extension_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: partition_extension_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "partition_extension_clause"


	public static class alias_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alias"
	// PLSQLPrinter.g:2098:1: alias : ^( ALIAS ( char_set_name )? ID ) -> template( \"not implemented: alias\";
	public final PLSQLPrinter.alias_return alias() throws RecognitionException {
		PLSQLPrinter.alias_return retval = new PLSQLPrinter.alias_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2099:5: ( ^( ALIAS ( char_set_name )? ID ) -> template( \"not implemented: alias\")
			// PLSQLPrinter.g:2099:10: ^( ALIAS ( char_set_name )? ID )
			{
			match(input,ALIAS,FOLLOW_ALIAS_in_alias20484); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2099:18: ( char_set_name )?
			int alt524=2;
			int LA524_0 = input.LA(1);
			if ( (LA524_0==CHAR_SET_NAME) ) {
				alt524=1;
			}
			switch (alt524) {
				case 1 :
					// PLSQLPrinter.g:2099:18: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_alias20486);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_alias20489); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2100:5: -> template( \"not implemented: alias\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: alias");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alias"


	public static class where_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "where_clause"
	// PLSQLPrinter.g:2103:1: where_clause : ^( SQL92_RESERVED_WHERE expression ) -> template( \"not implemented: where_clause\";
	public final PLSQLPrinter.where_clause_return where_clause() throws RecognitionException {
		PLSQLPrinter.where_clause_return retval = new PLSQLPrinter.where_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2104:5: ( ^( SQL92_RESERVED_WHERE expression ) -> template( \"not implemented: where_clause\")
			// PLSQLPrinter.g:2104:10: ^( SQL92_RESERVED_WHERE expression )
			{
			match(input,SQL92_RESERVED_WHERE,FOLLOW_SQL92_RESERVED_WHERE_in_where_clause20525); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_where_clause20527);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2105:5: -> template( \"not implemented: where_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: where_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "where_clause"


	public static class into_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "into_clause"
	// PLSQLPrinter.g:2108:1: into_clause : ( ^( SQL92_RESERVED_INTO ( general_element )+ ) -> template( \"not implemented: into_clause\"| ^( BULK_VK ( general_element )+ ) -> template( \"not implemented: into_clause\");
	public final PLSQLPrinter.into_clause_return into_clause() throws RecognitionException {
		PLSQLPrinter.into_clause_return retval = new PLSQLPrinter.into_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2109:5: ( ^( SQL92_RESERVED_INTO ( general_element )+ ) -> template( \"not implemented: into_clause\"| ^( BULK_VK ( general_element )+ ) -> template( \"not implemented: into_clause\")
			int alt527=2;
			int LA527_0 = input.LA(1);
			if ( (LA527_0==SQL92_RESERVED_INTO) ) {
				alt527=1;
			}
			else if ( (LA527_0==BULK_VK) ) {
				alt527=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 527, 0, input);
				throw nvae;
			}

			switch (alt527) {
				case 1 :
					// PLSQLPrinter.g:2109:10: ^( SQL92_RESERVED_INTO ( general_element )+ )
					{
					match(input,SQL92_RESERVED_INTO,FOLLOW_SQL92_RESERVED_INTO_in_into_clause20563); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:2109:32: ( general_element )+
					int cnt525=0;
					loop525:
					while (true) {
						int alt525=2;
						int LA525_0 = input.LA(1);
						if ( (LA525_0==CASCATED_ELEMENT) ) {
							alt525=1;
						}

						switch (alt525) {
						case 1 :
							// PLSQLPrinter.g:2109:32: general_element
							{
							pushFollow(FOLLOW_general_element_in_into_clause20565);
							general_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt525 >= 1 ) break loop525;
							EarlyExitException eee = new EarlyExitException(525, input);
							throw eee;
						}
						cnt525++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2110:5: -> template( \"not implemented: into_clause\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: into_clause");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2111:10: ^( BULK_VK ( general_element )+ )
					{
					match(input,BULK_VK,FOLLOW_BULK_VK_in_into_clause20594); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:2111:20: ( general_element )+
					int cnt526=0;
					loop526:
					while (true) {
						int alt526=2;
						int LA526_0 = input.LA(1);
						if ( (LA526_0==CASCATED_ELEMENT) ) {
							alt526=1;
						}

						switch (alt526) {
						case 1 :
							// PLSQLPrinter.g:2111:20: general_element
							{
							pushFollow(FOLLOW_general_element_in_into_clause20596);
							general_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt526 >= 1 ) break loop526;
							EarlyExitException eee = new EarlyExitException(526, input);
							throw eee;
						}
						cnt526++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2112:5: -> template( \"not implemented: into_clause\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: into_clause");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "into_clause"


	public static class xml_column_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_column_name"
	// PLSQLPrinter.g:2119:1: xml_column_name : ^( XML_COLUMN_NAME ( char_set_name )? ID ) -> template( \"not implemented: xml_column_name\";
	public final PLSQLPrinter.xml_column_name_return xml_column_name() throws RecognitionException {
		PLSQLPrinter.xml_column_name_return retval = new PLSQLPrinter.xml_column_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2120:5: ( ^( XML_COLUMN_NAME ( char_set_name )? ID ) -> template( \"not implemented: xml_column_name\")
			// PLSQLPrinter.g:2120:10: ^( XML_COLUMN_NAME ( char_set_name )? ID )
			{
			match(input,XML_COLUMN_NAME,FOLLOW_XML_COLUMN_NAME_in_xml_column_name20638); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2120:28: ( char_set_name )?
			int alt528=2;
			int LA528_0 = input.LA(1);
			if ( (LA528_0==CHAR_SET_NAME) ) {
				alt528=1;
			}
			switch (alt528) {
				case 1 :
					// PLSQLPrinter.g:2120:28: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_xml_column_name20640);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_xml_column_name20643); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2121:5: -> template( \"not implemented: xml_column_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: xml_column_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_column_name"


	public static class cost_class_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "cost_class_name"
	// PLSQLPrinter.g:2124:1: cost_class_name : ^( COST_CLASS_NAME ( char_set_name )? ID ) -> template( \"not implemented: cost_class_name\";
	public final PLSQLPrinter.cost_class_name_return cost_class_name() throws RecognitionException {
		PLSQLPrinter.cost_class_name_return retval = new PLSQLPrinter.cost_class_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2125:5: ( ^( COST_CLASS_NAME ( char_set_name )? ID ) -> template( \"not implemented: cost_class_name\")
			// PLSQLPrinter.g:2125:10: ^( COST_CLASS_NAME ( char_set_name )? ID )
			{
			match(input,COST_CLASS_NAME,FOLLOW_COST_CLASS_NAME_in_cost_class_name20679); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2125:28: ( char_set_name )?
			int alt529=2;
			int LA529_0 = input.LA(1);
			if ( (LA529_0==CHAR_SET_NAME) ) {
				alt529=1;
			}
			switch (alt529) {
				case 1 :
					// PLSQLPrinter.g:2125:28: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_cost_class_name20681);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_cost_class_name20684); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2126:5: -> template( \"not implemented: cost_class_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: cost_class_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cost_class_name"


	public static class attribute_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "attribute_name"
	// PLSQLPrinter.g:2129:1: attribute_name : ^( ATTRIBUTE_NAME ( char_set_name )? ID ) -> template( \"not implemented: attribute_name\";
	public final PLSQLPrinter.attribute_name_return attribute_name() throws RecognitionException {
		PLSQLPrinter.attribute_name_return retval = new PLSQLPrinter.attribute_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2130:5: ( ^( ATTRIBUTE_NAME ( char_set_name )? ID ) -> template( \"not implemented: attribute_name\")
			// PLSQLPrinter.g:2130:10: ^( ATTRIBUTE_NAME ( char_set_name )? ID )
			{
			match(input,ATTRIBUTE_NAME,FOLLOW_ATTRIBUTE_NAME_in_attribute_name20720); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2130:27: ( char_set_name )?
			int alt530=2;
			int LA530_0 = input.LA(1);
			if ( (LA530_0==CHAR_SET_NAME) ) {
				alt530=1;
			}
			switch (alt530) {
				case 1 :
					// PLSQLPrinter.g:2130:27: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_attribute_name20722);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_attribute_name20725); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2131:5: -> template( \"not implemented: attribute_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: attribute_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "attribute_name"


	public static class savepoint_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "savepoint_name"
	// PLSQLPrinter.g:2134:1: savepoint_name : ^( SAVEPOINT_NAME ( char_set_name )? ID ) -> template( \"not implemented: savepoint_name\";
	public final PLSQLPrinter.savepoint_name_return savepoint_name() throws RecognitionException {
		PLSQLPrinter.savepoint_name_return retval = new PLSQLPrinter.savepoint_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2135:5: ( ^( SAVEPOINT_NAME ( char_set_name )? ID ) -> template( \"not implemented: savepoint_name\")
			// PLSQLPrinter.g:2135:10: ^( SAVEPOINT_NAME ( char_set_name )? ID )
			{
			match(input,SAVEPOINT_NAME,FOLLOW_SAVEPOINT_NAME_in_savepoint_name20761); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2135:27: ( char_set_name )?
			int alt531=2;
			int LA531_0 = input.LA(1);
			if ( (LA531_0==CHAR_SET_NAME) ) {
				alt531=1;
			}
			switch (alt531) {
				case 1 :
					// PLSQLPrinter.g:2135:27: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_savepoint_name20763);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_savepoint_name20766); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2136:5: -> template( \"not implemented: savepoint_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: savepoint_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "savepoint_name"


	public static class rollback_segment_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "rollback_segment_name"
	// PLSQLPrinter.g:2139:1: rollback_segment_name : ^( ROLLBACK_SEGMENT_NAME ( char_set_name )? ID ) -> template( \"not implemented: rollback_segment_name\";
	public final PLSQLPrinter.rollback_segment_name_return rollback_segment_name() throws RecognitionException {
		PLSQLPrinter.rollback_segment_name_return retval = new PLSQLPrinter.rollback_segment_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2140:5: ( ^( ROLLBACK_SEGMENT_NAME ( char_set_name )? ID ) -> template( \"not implemented: rollback_segment_name\")
			// PLSQLPrinter.g:2140:10: ^( ROLLBACK_SEGMENT_NAME ( char_set_name )? ID )
			{
			match(input,ROLLBACK_SEGMENT_NAME,FOLLOW_ROLLBACK_SEGMENT_NAME_in_rollback_segment_name20802); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2140:34: ( char_set_name )?
			int alt532=2;
			int LA532_0 = input.LA(1);
			if ( (LA532_0==CHAR_SET_NAME) ) {
				alt532=1;
			}
			switch (alt532) {
				case 1 :
					// PLSQLPrinter.g:2140:34: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_rollback_segment_name20804);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_rollback_segment_name20807); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2141:5: -> template( \"not implemented: rollback_segment_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: rollback_segment_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "rollback_segment_name"


	public static class table_var_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "table_var_name"
	// PLSQLPrinter.g:2145:1: table_var_name : ^( TABLE_VAR_NAME ( char_set_name )? ID ) -> template( \"not implemented: table_var_name\";
	public final PLSQLPrinter.table_var_name_return table_var_name() throws RecognitionException {
		PLSQLPrinter.table_var_name_return retval = new PLSQLPrinter.table_var_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2146:5: ( ^( TABLE_VAR_NAME ( char_set_name )? ID ) -> template( \"not implemented: table_var_name\")
			// PLSQLPrinter.g:2146:10: ^( TABLE_VAR_NAME ( char_set_name )? ID )
			{
			match(input,TABLE_VAR_NAME,FOLLOW_TABLE_VAR_NAME_in_table_var_name20844); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2146:27: ( char_set_name )?
			int alt533=2;
			int LA533_0 = input.LA(1);
			if ( (LA533_0==CHAR_SET_NAME) ) {
				alt533=1;
			}
			switch (alt533) {
				case 1 :
					// PLSQLPrinter.g:2146:27: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_table_var_name20846);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_table_var_name20849); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2147:5: -> template( \"not implemented: table_var_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: table_var_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_var_name"


	public static class schema_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "schema_name"
	// PLSQLPrinter.g:2150:1: schema_name : ^( SCHEMA_NAME ( char_set_name )? ID ) -> template( \"not implemented: schema_name\";
	public final PLSQLPrinter.schema_name_return schema_name() throws RecognitionException {
		PLSQLPrinter.schema_name_return retval = new PLSQLPrinter.schema_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2151:5: ( ^( SCHEMA_NAME ( char_set_name )? ID ) -> template( \"not implemented: schema_name\")
			// PLSQLPrinter.g:2151:10: ^( SCHEMA_NAME ( char_set_name )? ID )
			{
			match(input,SCHEMA_NAME,FOLLOW_SCHEMA_NAME_in_schema_name20885); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2151:24: ( char_set_name )?
			int alt534=2;
			int LA534_0 = input.LA(1);
			if ( (LA534_0==CHAR_SET_NAME) ) {
				alt534=1;
			}
			switch (alt534) {
				case 1 :
					// PLSQLPrinter.g:2151:24: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_schema_name20887);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_schema_name20890); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2152:5: -> template( \"not implemented: schema_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: schema_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "schema_name"


	public static class routine_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "routine_name"
	// PLSQLPrinter.g:2155:1: routine_name : ^( ROUTINE_NAME ( char_set_name )? ( ID )+ ( link_name )? ) -> template( \"not implemented: routine_name\";
	public final PLSQLPrinter.routine_name_return routine_name() throws RecognitionException {
		PLSQLPrinter.routine_name_return retval = new PLSQLPrinter.routine_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2156:5: ( ^( ROUTINE_NAME ( char_set_name )? ( ID )+ ( link_name )? ) -> template( \"not implemented: routine_name\")
			// PLSQLPrinter.g:2156:10: ^( ROUTINE_NAME ( char_set_name )? ( ID )+ ( link_name )? )
			{
			match(input,ROUTINE_NAME,FOLLOW_ROUTINE_NAME_in_routine_name20926); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2156:25: ( char_set_name )?
			int alt535=2;
			int LA535_0 = input.LA(1);
			if ( (LA535_0==CHAR_SET_NAME) ) {
				alt535=1;
			}
			switch (alt535) {
				case 1 :
					// PLSQLPrinter.g:2156:25: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_routine_name20928);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2156:40: ( ID )+
			int cnt536=0;
			loop536:
			while (true) {
				int alt536=2;
				int LA536_0 = input.LA(1);
				if ( (LA536_0==ID) ) {
					alt536=1;
				}

				switch (alt536) {
				case 1 :
					// PLSQLPrinter.g:2156:40: ID
					{
					match(input,ID,FOLLOW_ID_in_routine_name20931); 
					}
					break;

				default :
					if ( cnt536 >= 1 ) break loop536;
					EarlyExitException eee = new EarlyExitException(536, input);
					throw eee;
				}
				cnt536++;
			}

			// PLSQLPrinter.g:2156:44: ( link_name )?
			int alt537=2;
			int LA537_0 = input.LA(1);
			if ( (LA537_0==LINK_NAME) ) {
				alt537=1;
			}
			switch (alt537) {
				case 1 :
					// PLSQLPrinter.g:2156:44: link_name
					{
					pushFollow(FOLLOW_link_name_in_routine_name20934);
					link_name();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2157:5: -> template( \"not implemented: routine_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: routine_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "routine_name"


	public static class package_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "package_name"
	// PLSQLPrinter.g:2160:1: package_name : ^( PACKAGE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: package_name\";
	public final PLSQLPrinter.package_name_return package_name() throws RecognitionException {
		PLSQLPrinter.package_name_return retval = new PLSQLPrinter.package_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2161:5: ( ^( PACKAGE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: package_name\")
			// PLSQLPrinter.g:2161:10: ^( PACKAGE_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,PACKAGE_NAME,FOLLOW_PACKAGE_NAME_in_package_name20971); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2161:25: ( char_set_name )?
			int alt538=2;
			int LA538_0 = input.LA(1);
			if ( (LA538_0==CHAR_SET_NAME) ) {
				alt538=1;
			}
			switch (alt538) {
				case 1 :
					// PLSQLPrinter.g:2161:25: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_package_name20973);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2161:40: ( ID )+
			int cnt539=0;
			loop539:
			while (true) {
				int alt539=2;
				int LA539_0 = input.LA(1);
				if ( (LA539_0==ID) ) {
					alt539=1;
				}

				switch (alt539) {
				case 1 :
					// PLSQLPrinter.g:2161:40: ID
					{
					match(input,ID,FOLLOW_ID_in_package_name20976); 
					}
					break;

				default :
					if ( cnt539 >= 1 ) break loop539;
					EarlyExitException eee = new EarlyExitException(539, input);
					throw eee;
				}
				cnt539++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2162:5: -> template( \"not implemented: package_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: package_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "package_name"


	public static class implementation_type_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "implementation_type_name"
	// PLSQLPrinter.g:2165:1: implementation_type_name : ^( IMPLEMENTATION_TYPE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: implementation_type_name\";
	public final PLSQLPrinter.implementation_type_name_return implementation_type_name() throws RecognitionException {
		PLSQLPrinter.implementation_type_name_return retval = new PLSQLPrinter.implementation_type_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2166:5: ( ^( IMPLEMENTATION_TYPE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: implementation_type_name\")
			// PLSQLPrinter.g:2166:10: ^( IMPLEMENTATION_TYPE_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,IMPLEMENTATION_TYPE_NAME,FOLLOW_IMPLEMENTATION_TYPE_NAME_in_implementation_type_name21013); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2166:37: ( char_set_name )?
			int alt540=2;
			int LA540_0 = input.LA(1);
			if ( (LA540_0==CHAR_SET_NAME) ) {
				alt540=1;
			}
			switch (alt540) {
				case 1 :
					// PLSQLPrinter.g:2166:37: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_implementation_type_name21015);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2166:52: ( ID )+
			int cnt541=0;
			loop541:
			while (true) {
				int alt541=2;
				int LA541_0 = input.LA(1);
				if ( (LA541_0==ID) ) {
					alt541=1;
				}

				switch (alt541) {
				case 1 :
					// PLSQLPrinter.g:2166:52: ID
					{
					match(input,ID,FOLLOW_ID_in_implementation_type_name21018); 
					}
					break;

				default :
					if ( cnt541 >= 1 ) break loop541;
					EarlyExitException eee = new EarlyExitException(541, input);
					throw eee;
				}
				cnt541++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2167:5: -> template( \"not implemented: implementation_type_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: implementation_type_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "implementation_type_name"


	public static class parameter_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "parameter_name"
	// PLSQLPrinter.g:2170:1: parameter_name : ^( PARAMETER_NAME ( char_set_name )? ID ) -> parameter_name(name=$ID.text);
	public final PLSQLPrinter.parameter_name_return parameter_name() throws RecognitionException {
		PLSQLPrinter.parameter_name_return retval = new PLSQLPrinter.parameter_name_return();
		retval.start = input.LT(1);

		CommonTree ID30=null;

		try {
			// PLSQLPrinter.g:2171:5: ( ^( PARAMETER_NAME ( char_set_name )? ID ) -> parameter_name(name=$ID.text))
			// PLSQLPrinter.g:2171:10: ^( PARAMETER_NAME ( char_set_name )? ID )
			{
			match(input,PARAMETER_NAME,FOLLOW_PARAMETER_NAME_in_parameter_name21055); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2171:27: ( char_set_name )?
			int alt542=2;
			int LA542_0 = input.LA(1);
			if ( (LA542_0==CHAR_SET_NAME) ) {
				alt542=1;
			}
			switch (alt542) {
				case 1 :
					// PLSQLPrinter.g:2171:27: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_parameter_name21057);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			ID30=(CommonTree)match(input,ID,FOLLOW_ID_in_parameter_name21060); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2172:5: -> parameter_name(name=$ID.text)
			{
				retval.st = templateLib.getInstanceOf("parameter_name",new STAttrMap().put("name", (ID30!=null?ID30.getText():null)));
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "parameter_name"


	public static class reference_model_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "reference_model_name"
	// PLSQLPrinter.g:2175:1: reference_model_name : ^( REFERENCE_MODEL_NAME ( char_set_name )? ID ) -> template( \"not implemented: reference_model_name\";
	public final PLSQLPrinter.reference_model_name_return reference_model_name() throws RecognitionException {
		PLSQLPrinter.reference_model_name_return retval = new PLSQLPrinter.reference_model_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2176:5: ( ^( REFERENCE_MODEL_NAME ( char_set_name )? ID ) -> template( \"not implemented: reference_model_name\")
			// PLSQLPrinter.g:2176:10: ^( REFERENCE_MODEL_NAME ( char_set_name )? ID )
			{
			match(input,REFERENCE_MODEL_NAME,FOLLOW_REFERENCE_MODEL_NAME_in_reference_model_name21097); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2176:33: ( char_set_name )?
			int alt543=2;
			int LA543_0 = input.LA(1);
			if ( (LA543_0==CHAR_SET_NAME) ) {
				alt543=1;
			}
			switch (alt543) {
				case 1 :
					// PLSQLPrinter.g:2176:33: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_reference_model_name21099);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_reference_model_name21102); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2177:5: -> template( \"not implemented: reference_model_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: reference_model_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "reference_model_name"


	public static class main_model_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "main_model_name"
	// PLSQLPrinter.g:2180:1: main_model_name : ^( MAIN_MODEL_NAME ( char_set_name )? ID ) -> template( \"not implemented: main_model_name\";
	public final PLSQLPrinter.main_model_name_return main_model_name() throws RecognitionException {
		PLSQLPrinter.main_model_name_return retval = new PLSQLPrinter.main_model_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2181:5: ( ^( MAIN_MODEL_NAME ( char_set_name )? ID ) -> template( \"not implemented: main_model_name\")
			// PLSQLPrinter.g:2181:10: ^( MAIN_MODEL_NAME ( char_set_name )? ID )
			{
			match(input,MAIN_MODEL_NAME,FOLLOW_MAIN_MODEL_NAME_in_main_model_name21138); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2181:28: ( char_set_name )?
			int alt544=2;
			int LA544_0 = input.LA(1);
			if ( (LA544_0==CHAR_SET_NAME) ) {
				alt544=1;
			}
			switch (alt544) {
				case 1 :
					// PLSQLPrinter.g:2181:28: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_main_model_name21140);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_main_model_name21143); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2182:5: -> template( \"not implemented: main_model_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: main_model_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "main_model_name"


	public static class query_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "query_name"
	// PLSQLPrinter.g:2185:1: query_name : ^( QUERY_NAME ( char_set_name )? ID ) -> template( \"not implemented: query_name\";
	public final PLSQLPrinter.query_name_return query_name() throws RecognitionException {
		PLSQLPrinter.query_name_return retval = new PLSQLPrinter.query_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2186:5: ( ^( QUERY_NAME ( char_set_name )? ID ) -> template( \"not implemented: query_name\")
			// PLSQLPrinter.g:2186:10: ^( QUERY_NAME ( char_set_name )? ID )
			{
			match(input,QUERY_NAME,FOLLOW_QUERY_NAME_in_query_name21179); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2186:23: ( char_set_name )?
			int alt545=2;
			int LA545_0 = input.LA(1);
			if ( (LA545_0==CHAR_SET_NAME) ) {
				alt545=1;
			}
			switch (alt545) {
				case 1 :
					// PLSQLPrinter.g:2186:23: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_query_name21181);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_query_name21184); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2187:5: -> template( \"not implemented: query_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: query_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "query_name"


	public static class constraint_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "constraint_name"
	// PLSQLPrinter.g:2190:1: constraint_name : ^( CONSTRAINT_NAME ( char_set_name )? ( ID )+ ( link_name )? ) -> template( \"not implemented: constraint_name\";
	public final PLSQLPrinter.constraint_name_return constraint_name() throws RecognitionException {
		PLSQLPrinter.constraint_name_return retval = new PLSQLPrinter.constraint_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2191:5: ( ^( CONSTRAINT_NAME ( char_set_name )? ( ID )+ ( link_name )? ) -> template( \"not implemented: constraint_name\")
			// PLSQLPrinter.g:2191:10: ^( CONSTRAINT_NAME ( char_set_name )? ( ID )+ ( link_name )? )
			{
			match(input,CONSTRAINT_NAME,FOLLOW_CONSTRAINT_NAME_in_constraint_name21220); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2191:28: ( char_set_name )?
			int alt546=2;
			int LA546_0 = input.LA(1);
			if ( (LA546_0==CHAR_SET_NAME) ) {
				alt546=1;
			}
			switch (alt546) {
				case 1 :
					// PLSQLPrinter.g:2191:28: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_constraint_name21222);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2191:43: ( ID )+
			int cnt547=0;
			loop547:
			while (true) {
				int alt547=2;
				int LA547_0 = input.LA(1);
				if ( (LA547_0==ID) ) {
					alt547=1;
				}

				switch (alt547) {
				case 1 :
					// PLSQLPrinter.g:2191:43: ID
					{
					match(input,ID,FOLLOW_ID_in_constraint_name21225); 
					}
					break;

				default :
					if ( cnt547 >= 1 ) break loop547;
					EarlyExitException eee = new EarlyExitException(547, input);
					throw eee;
				}
				cnt547++;
			}

			// PLSQLPrinter.g:2191:47: ( link_name )?
			int alt548=2;
			int LA548_0 = input.LA(1);
			if ( (LA548_0==LINK_NAME) ) {
				alt548=1;
			}
			switch (alt548) {
				case 1 :
					// PLSQLPrinter.g:2191:47: link_name
					{
					pushFollow(FOLLOW_link_name_in_constraint_name21228);
					link_name();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2192:5: -> template( \"not implemented: constraint_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: constraint_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "constraint_name"


	public static class label_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "label_name"
	// PLSQLPrinter.g:2195:1: label_name : ^( LABEL_NAME ID ) -> string_literal(val=$ID.text);
	public final PLSQLPrinter.label_name_return label_name() throws RecognitionException {
		PLSQLPrinter.label_name_return retval = new PLSQLPrinter.label_name_return();
		retval.start = input.LT(1);

		CommonTree ID31=null;

		try {
			// PLSQLPrinter.g:2196:5: ( ^( LABEL_NAME ID ) -> string_literal(val=$ID.text))
			// PLSQLPrinter.g:2196:10: ^( LABEL_NAME ID )
			{
			match(input,LABEL_NAME,FOLLOW_LABEL_NAME_in_label_name21265); 
			match(input, Token.DOWN, null); 
			ID31=(CommonTree)match(input,ID,FOLLOW_ID_in_label_name21267); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2196:27: -> string_literal(val=$ID.text)
			{
				retval.st = templateLib.getInstanceOf("string_literal",new STAttrMap().put("val", (ID31!=null?ID31.getText():null)));
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "label_name"


	public static class type_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "type_name"
	// PLSQLPrinter.g:2199:1: type_name : ^( TYPE_NAME ( ID )+ ) -> template( \"not implemented: type_name\";
	public final PLSQLPrinter.type_name_return type_name() throws RecognitionException {
		PLSQLPrinter.type_name_return retval = new PLSQLPrinter.type_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2200:5: ( ^( TYPE_NAME ( ID )+ ) -> template( \"not implemented: type_name\")
			// PLSQLPrinter.g:2200:10: ^( TYPE_NAME ( ID )+ )
			{
			match(input,TYPE_NAME,FOLLOW_TYPE_NAME_in_type_name21298); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2200:22: ( ID )+
			int cnt549=0;
			loop549:
			while (true) {
				int alt549=2;
				int LA549_0 = input.LA(1);
				if ( (LA549_0==ID) ) {
					alt549=1;
				}

				switch (alt549) {
				case 1 :
					// PLSQLPrinter.g:2200:22: ID
					{
					match(input,ID,FOLLOW_ID_in_type_name21300); 
					}
					break;

				default :
					if ( cnt549 >= 1 ) break loop549;
					EarlyExitException eee = new EarlyExitException(549, input);
					throw eee;
				}
				cnt549++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2201:5: -> template( \"not implemented: type_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: type_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "type_name"


	public static class sequence_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "sequence_name"
	// PLSQLPrinter.g:2204:1: sequence_name : ^( SEQUENCE_NAME ( ID )+ ) -> template( \"not implemented: sequence_name\";
	public final PLSQLPrinter.sequence_name_return sequence_name() throws RecognitionException {
		PLSQLPrinter.sequence_name_return retval = new PLSQLPrinter.sequence_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2205:5: ( ^( SEQUENCE_NAME ( ID )+ ) -> template( \"not implemented: sequence_name\")
			// PLSQLPrinter.g:2205:10: ^( SEQUENCE_NAME ( ID )+ )
			{
			match(input,SEQUENCE_NAME,FOLLOW_SEQUENCE_NAME_in_sequence_name21337); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2205:26: ( ID )+
			int cnt550=0;
			loop550:
			while (true) {
				int alt550=2;
				int LA550_0 = input.LA(1);
				if ( (LA550_0==ID) ) {
					alt550=1;
				}

				switch (alt550) {
				case 1 :
					// PLSQLPrinter.g:2205:26: ID
					{
					match(input,ID,FOLLOW_ID_in_sequence_name21339); 
					}
					break;

				default :
					if ( cnt550 >= 1 ) break loop550;
					EarlyExitException eee = new EarlyExitException(550, input);
					throw eee;
				}
				cnt550++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2206:5: -> template( \"not implemented: sequence_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: sequence_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sequence_name"


	public static class exception_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "exception_name"
	// PLSQLPrinter.g:2209:1: exception_name : ^( EXCEPTION_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: exception_name\";
	public final PLSQLPrinter.exception_name_return exception_name() throws RecognitionException {
		PLSQLPrinter.exception_name_return retval = new PLSQLPrinter.exception_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2210:5: ( ^( EXCEPTION_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: exception_name\")
			// PLSQLPrinter.g:2210:10: ^( EXCEPTION_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,EXCEPTION_NAME,FOLLOW_EXCEPTION_NAME_in_exception_name21376); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2210:27: ( char_set_name )?
			int alt551=2;
			int LA551_0 = input.LA(1);
			if ( (LA551_0==CHAR_SET_NAME) ) {
				alt551=1;
			}
			switch (alt551) {
				case 1 :
					// PLSQLPrinter.g:2210:27: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_exception_name21378);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2210:42: ( ID )+
			int cnt552=0;
			loop552:
			while (true) {
				int alt552=2;
				int LA552_0 = input.LA(1);
				if ( (LA552_0==ID) ) {
					alt552=1;
				}

				switch (alt552) {
				case 1 :
					// PLSQLPrinter.g:2210:42: ID
					{
					match(input,ID,FOLLOW_ID_in_exception_name21381); 
					}
					break;

				default :
					if ( cnt552 >= 1 ) break loop552;
					EarlyExitException eee = new EarlyExitException(552, input);
					throw eee;
				}
				cnt552++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2211:5: -> template( \"not implemented: exception_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: exception_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exception_name"


	public static class function_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "function_name"
	// PLSQLPrinter.g:2214:1: function_name : ^( FUNCTION_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: function_name\";
	public final PLSQLPrinter.function_name_return function_name() throws RecognitionException {
		PLSQLPrinter.function_name_return retval = new PLSQLPrinter.function_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2215:5: ( ^( FUNCTION_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: function_name\")
			// PLSQLPrinter.g:2215:10: ^( FUNCTION_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,FUNCTION_NAME,FOLLOW_FUNCTION_NAME_in_function_name21418); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2215:26: ( char_set_name )?
			int alt553=2;
			int LA553_0 = input.LA(1);
			if ( (LA553_0==CHAR_SET_NAME) ) {
				alt553=1;
			}
			switch (alt553) {
				case 1 :
					// PLSQLPrinter.g:2215:26: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_function_name21420);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2215:41: ( ID )+
			int cnt554=0;
			loop554:
			while (true) {
				int alt554=2;
				int LA554_0 = input.LA(1);
				if ( (LA554_0==ID) ) {
					alt554=1;
				}

				switch (alt554) {
				case 1 :
					// PLSQLPrinter.g:2215:41: ID
					{
					match(input,ID,FOLLOW_ID_in_function_name21423); 
					}
					break;

				default :
					if ( cnt554 >= 1 ) break loop554;
					EarlyExitException eee = new EarlyExitException(554, input);
					throw eee;
				}
				cnt554++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2216:5: -> template( \"not implemented: function_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: function_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "function_name"


	public static class procedure_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "procedure_name"
	// PLSQLPrinter.g:2219:1: procedure_name : ^( PROCEDURE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: procedure_name\";
	public final PLSQLPrinter.procedure_name_return procedure_name() throws RecognitionException {
		PLSQLPrinter.procedure_name_return retval = new PLSQLPrinter.procedure_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2220:5: ( ^( PROCEDURE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: procedure_name\")
			// PLSQLPrinter.g:2220:10: ^( PROCEDURE_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,PROCEDURE_NAME,FOLLOW_PROCEDURE_NAME_in_procedure_name21460); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2220:27: ( char_set_name )?
			int alt555=2;
			int LA555_0 = input.LA(1);
			if ( (LA555_0==CHAR_SET_NAME) ) {
				alt555=1;
			}
			switch (alt555) {
				case 1 :
					// PLSQLPrinter.g:2220:27: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_procedure_name21462);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2220:42: ( ID )+
			int cnt556=0;
			loop556:
			while (true) {
				int alt556=2;
				int LA556_0 = input.LA(1);
				if ( (LA556_0==ID) ) {
					alt556=1;
				}

				switch (alt556) {
				case 1 :
					// PLSQLPrinter.g:2220:42: ID
					{
					match(input,ID,FOLLOW_ID_in_procedure_name21465); 
					}
					break;

				default :
					if ( cnt556 >= 1 ) break loop556;
					EarlyExitException eee = new EarlyExitException(556, input);
					throw eee;
				}
				cnt556++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2221:5: -> template( \"not implemented: procedure_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: procedure_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "procedure_name"


	public static class trigger_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "trigger_name"
	// PLSQLPrinter.g:2224:1: trigger_name : ^( TRIGGER_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: trigger_name\";
	public final PLSQLPrinter.trigger_name_return trigger_name() throws RecognitionException {
		PLSQLPrinter.trigger_name_return retval = new PLSQLPrinter.trigger_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2225:5: ( ^( TRIGGER_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: trigger_name\")
			// PLSQLPrinter.g:2225:10: ^( TRIGGER_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,TRIGGER_NAME,FOLLOW_TRIGGER_NAME_in_trigger_name21502); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2225:25: ( char_set_name )?
			int alt557=2;
			int LA557_0 = input.LA(1);
			if ( (LA557_0==CHAR_SET_NAME) ) {
				alt557=1;
			}
			switch (alt557) {
				case 1 :
					// PLSQLPrinter.g:2225:25: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_trigger_name21504);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2225:40: ( ID )+
			int cnt558=0;
			loop558:
			while (true) {
				int alt558=2;
				int LA558_0 = input.LA(1);
				if ( (LA558_0==ID) ) {
					alt558=1;
				}

				switch (alt558) {
				case 1 :
					// PLSQLPrinter.g:2225:40: ID
					{
					match(input,ID,FOLLOW_ID_in_trigger_name21507); 
					}
					break;

				default :
					if ( cnt558 >= 1 ) break loop558;
					EarlyExitException eee = new EarlyExitException(558, input);
					throw eee;
				}
				cnt558++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2226:5: -> template( \"not implemented: trigger_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: trigger_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "trigger_name"


	public static class variable_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "variable_name"
	// PLSQLPrinter.g:2229:1: variable_name : ( ^( HOSTED_VARIABLE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: variable_name\"| ^( VARIABLE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: variable_name\");
	public final PLSQLPrinter.variable_name_return variable_name() throws RecognitionException {
		PLSQLPrinter.variable_name_return retval = new PLSQLPrinter.variable_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2230:5: ( ^( HOSTED_VARIABLE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: variable_name\"| ^( VARIABLE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: variable_name\")
			int alt563=2;
			int LA563_0 = input.LA(1);
			if ( (LA563_0==HOSTED_VARIABLE_NAME) ) {
				alt563=1;
			}
			else if ( (LA563_0==VARIABLE_NAME) ) {
				alt563=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 563, 0, input);
				throw nvae;
			}

			switch (alt563) {
				case 1 :
					// PLSQLPrinter.g:2230:10: ^( HOSTED_VARIABLE_NAME ( char_set_name )? ( ID )+ )
					{
					match(input,HOSTED_VARIABLE_NAME,FOLLOW_HOSTED_VARIABLE_NAME_in_variable_name21544); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:2230:33: ( char_set_name )?
					int alt559=2;
					int LA559_0 = input.LA(1);
					if ( (LA559_0==CHAR_SET_NAME) ) {
						alt559=1;
					}
					switch (alt559) {
						case 1 :
							// PLSQLPrinter.g:2230:33: char_set_name
							{
							pushFollow(FOLLOW_char_set_name_in_variable_name21546);
							char_set_name();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:2230:48: ( ID )+
					int cnt560=0;
					loop560:
					while (true) {
						int alt560=2;
						int LA560_0 = input.LA(1);
						if ( (LA560_0==ID) ) {
							alt560=1;
						}

						switch (alt560) {
						case 1 :
							// PLSQLPrinter.g:2230:48: ID
							{
							match(input,ID,FOLLOW_ID_in_variable_name21549); 
							}
							break;

						default :
							if ( cnt560 >= 1 ) break loop560;
							EarlyExitException eee = new EarlyExitException(560, input);
							throw eee;
						}
						cnt560++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2231:5: -> template( \"not implemented: variable_name\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: variable_name");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2232:10: ^( VARIABLE_NAME ( char_set_name )? ( ID )+ )
					{
					match(input,VARIABLE_NAME,FOLLOW_VARIABLE_NAME_in_variable_name21577); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:2232:26: ( char_set_name )?
					int alt561=2;
					int LA561_0 = input.LA(1);
					if ( (LA561_0==CHAR_SET_NAME) ) {
						alt561=1;
					}
					switch (alt561) {
						case 1 :
							// PLSQLPrinter.g:2232:26: char_set_name
							{
							pushFollow(FOLLOW_char_set_name_in_variable_name21579);
							char_set_name();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:2232:41: ( ID )+
					int cnt562=0;
					loop562:
					while (true) {
						int alt562=2;
						int LA562_0 = input.LA(1);
						if ( (LA562_0==ID) ) {
							alt562=1;
						}

						switch (alt562) {
						case 1 :
							// PLSQLPrinter.g:2232:41: ID
							{
							match(input,ID,FOLLOW_ID_in_variable_name21582); 
							}
							break;

						default :
							if ( cnt562 >= 1 ) break loop562;
							EarlyExitException eee = new EarlyExitException(562, input);
							throw eee;
						}
						cnt562++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2233:5: -> template( \"not implemented: variable_name\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: variable_name");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "variable_name"


	public static class index_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "index_name"
	// PLSQLPrinter.g:2236:1: index_name : ^( INDEX_NAME ( char_set_name )? ID ) -> template( \"not implemented: index_name\";
	public final PLSQLPrinter.index_name_return index_name() throws RecognitionException {
		PLSQLPrinter.index_name_return retval = new PLSQLPrinter.index_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2237:5: ( ^( INDEX_NAME ( char_set_name )? ID ) -> template( \"not implemented: index_name\")
			// PLSQLPrinter.g:2237:10: ^( INDEX_NAME ( char_set_name )? ID )
			{
			match(input,INDEX_NAME,FOLLOW_INDEX_NAME_in_index_name21619); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2237:23: ( char_set_name )?
			int alt564=2;
			int LA564_0 = input.LA(1);
			if ( (LA564_0==CHAR_SET_NAME) ) {
				alt564=1;
			}
			switch (alt564) {
				case 1 :
					// PLSQLPrinter.g:2237:23: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_index_name21621);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_index_name21624); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2238:5: -> template( \"not implemented: index_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: index_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "index_name"


	public static class cursor_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "cursor_name"
	// PLSQLPrinter.g:2241:1: cursor_name : ^( CURSOR_NAME ( char_set_name )? ID ) -> template( \"not implemented: cursor_name\";
	public final PLSQLPrinter.cursor_name_return cursor_name() throws RecognitionException {
		PLSQLPrinter.cursor_name_return retval = new PLSQLPrinter.cursor_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2242:5: ( ^( CURSOR_NAME ( char_set_name )? ID ) -> template( \"not implemented: cursor_name\")
			// PLSQLPrinter.g:2242:10: ^( CURSOR_NAME ( char_set_name )? ID )
			{
			match(input,CURSOR_NAME,FOLLOW_CURSOR_NAME_in_cursor_name21660); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2242:24: ( char_set_name )?
			int alt565=2;
			int LA565_0 = input.LA(1);
			if ( (LA565_0==CHAR_SET_NAME) ) {
				alt565=1;
			}
			switch (alt565) {
				case 1 :
					// PLSQLPrinter.g:2242:24: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_cursor_name21662);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_cursor_name21665); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2243:5: -> template( \"not implemented: cursor_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: cursor_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cursor_name"


	public static class record_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "record_name"
	// PLSQLPrinter.g:2246:1: record_name : ^( RECORD_NAME ( char_set_name )? ID ) -> template( \"not implemented: record_name\";
	public final PLSQLPrinter.record_name_return record_name() throws RecognitionException {
		PLSQLPrinter.record_name_return retval = new PLSQLPrinter.record_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2247:5: ( ^( RECORD_NAME ( char_set_name )? ID ) -> template( \"not implemented: record_name\")
			// PLSQLPrinter.g:2247:10: ^( RECORD_NAME ( char_set_name )? ID )
			{
			match(input,RECORD_NAME,FOLLOW_RECORD_NAME_in_record_name21701); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2247:24: ( char_set_name )?
			int alt566=2;
			int LA566_0 = input.LA(1);
			if ( (LA566_0==CHAR_SET_NAME) ) {
				alt566=1;
			}
			switch (alt566) {
				case 1 :
					// PLSQLPrinter.g:2247:24: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_record_name21703);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_record_name21706); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2248:5: -> template( \"not implemented: record_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: record_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "record_name"


	public static class collection_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "collection_name"
	// PLSQLPrinter.g:2251:1: collection_name : ^( COLLECTION_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: collection_name\";
	public final PLSQLPrinter.collection_name_return collection_name() throws RecognitionException {
		PLSQLPrinter.collection_name_return retval = new PLSQLPrinter.collection_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2252:5: ( ^( COLLECTION_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: collection_name\")
			// PLSQLPrinter.g:2252:10: ^( COLLECTION_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,COLLECTION_NAME,FOLLOW_COLLECTION_NAME_in_collection_name21742); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2252:28: ( char_set_name )?
			int alt567=2;
			int LA567_0 = input.LA(1);
			if ( (LA567_0==CHAR_SET_NAME) ) {
				alt567=1;
			}
			switch (alt567) {
				case 1 :
					// PLSQLPrinter.g:2252:28: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_collection_name21744);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2252:43: ( ID )+
			int cnt568=0;
			loop568:
			while (true) {
				int alt568=2;
				int LA568_0 = input.LA(1);
				if ( (LA568_0==ID) ) {
					alt568=1;
				}

				switch (alt568) {
				case 1 :
					// PLSQLPrinter.g:2252:43: ID
					{
					match(input,ID,FOLLOW_ID_in_collection_name21747); 
					}
					break;

				default :
					if ( cnt568 >= 1 ) break loop568;
					EarlyExitException eee = new EarlyExitException(568, input);
					throw eee;
				}
				cnt568++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2253:5: -> template( \"not implemented: collection_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: collection_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "collection_name"


	public static class link_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "link_name"
	// PLSQLPrinter.g:2256:1: link_name : ^( LINK_NAME ( char_set_name )? ID ) -> template( \"not implemented: link_name\";
	public final PLSQLPrinter.link_name_return link_name() throws RecognitionException {
		PLSQLPrinter.link_name_return retval = new PLSQLPrinter.link_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2257:5: ( ^( LINK_NAME ( char_set_name )? ID ) -> template( \"not implemented: link_name\")
			// PLSQLPrinter.g:2257:10: ^( LINK_NAME ( char_set_name )? ID )
			{
			match(input,LINK_NAME,FOLLOW_LINK_NAME_in_link_name21784); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2257:22: ( char_set_name )?
			int alt569=2;
			int LA569_0 = input.LA(1);
			if ( (LA569_0==CHAR_SET_NAME) ) {
				alt569=1;
			}
			switch (alt569) {
				case 1 :
					// PLSQLPrinter.g:2257:22: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_link_name21786);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_link_name21789); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2258:5: -> template( \"not implemented: link_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: link_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "link_name"


	public static class column_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "column_name"
	// PLSQLPrinter.g:2261:1: column_name : ^( COLUMN_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: column_name\";
	public final PLSQLPrinter.column_name_return column_name() throws RecognitionException {
		PLSQLPrinter.column_name_return retval = new PLSQLPrinter.column_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2262:5: ( ^( COLUMN_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: column_name\")
			// PLSQLPrinter.g:2262:10: ^( COLUMN_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,COLUMN_NAME,FOLLOW_COLUMN_NAME_in_column_name21825); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2262:24: ( char_set_name )?
			int alt570=2;
			int LA570_0 = input.LA(1);
			if ( (LA570_0==CHAR_SET_NAME) ) {
				alt570=1;
			}
			switch (alt570) {
				case 1 :
					// PLSQLPrinter.g:2262:24: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_column_name21827);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2262:39: ( ID )+
			int cnt571=0;
			loop571:
			while (true) {
				int alt571=2;
				int LA571_0 = input.LA(1);
				if ( (LA571_0==ID) ) {
					alt571=1;
				}

				switch (alt571) {
				case 1 :
					// PLSQLPrinter.g:2262:39: ID
					{
					match(input,ID,FOLLOW_ID_in_column_name21830); 
					}
					break;

				default :
					if ( cnt571 >= 1 ) break loop571;
					EarlyExitException eee = new EarlyExitException(571, input);
					throw eee;
				}
				cnt571++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2263:5: -> template( \"not implemented: column_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: column_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "column_name"


	public static class tableview_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "tableview_name"
	// PLSQLPrinter.g:2266:1: tableview_name : ^( TABLEVIEW_NAME ( char_set_name )? ( ID )+ ( link_name )? ( partition_extension_clause )? ) -> template( \"not implemented: tableview_name\";
	public final PLSQLPrinter.tableview_name_return tableview_name() throws RecognitionException {
		PLSQLPrinter.tableview_name_return retval = new PLSQLPrinter.tableview_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2267:5: ( ^( TABLEVIEW_NAME ( char_set_name )? ( ID )+ ( link_name )? ( partition_extension_clause )? ) -> template( \"not implemented: tableview_name\")
			// PLSQLPrinter.g:2267:10: ^( TABLEVIEW_NAME ( char_set_name )? ( ID )+ ( link_name )? ( partition_extension_clause )? )
			{
			match(input,TABLEVIEW_NAME,FOLLOW_TABLEVIEW_NAME_in_tableview_name21867); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2267:27: ( char_set_name )?
			int alt572=2;
			int LA572_0 = input.LA(1);
			if ( (LA572_0==CHAR_SET_NAME) ) {
				alt572=1;
			}
			switch (alt572) {
				case 1 :
					// PLSQLPrinter.g:2267:27: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_tableview_name21869);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2267:42: ( ID )+
			int cnt573=0;
			loop573:
			while (true) {
				int alt573=2;
				int LA573_0 = input.LA(1);
				if ( (LA573_0==ID) ) {
					alt573=1;
				}

				switch (alt573) {
				case 1 :
					// PLSQLPrinter.g:2267:42: ID
					{
					match(input,ID,FOLLOW_ID_in_tableview_name21872); 
					}
					break;

				default :
					if ( cnt573 >= 1 ) break loop573;
					EarlyExitException eee = new EarlyExitException(573, input);
					throw eee;
				}
				cnt573++;
			}

			// PLSQLPrinter.g:2267:46: ( link_name )?
			int alt574=2;
			int LA574_0 = input.LA(1);
			if ( (LA574_0==LINK_NAME) ) {
				alt574=1;
			}
			switch (alt574) {
				case 1 :
					// PLSQLPrinter.g:2267:46: link_name
					{
					pushFollow(FOLLOW_link_name_in_tableview_name21875);
					link_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2267:57: ( partition_extension_clause )?
			int alt575=2;
			int LA575_0 = input.LA(1);
			if ( (LA575_0==PARTITION_VK||LA575_0==SUBPARTITION_VK) ) {
				alt575=1;
			}
			switch (alt575) {
				case 1 :
					// PLSQLPrinter.g:2267:57: partition_extension_clause
					{
					pushFollow(FOLLOW_partition_extension_clause_in_tableview_name21878);
					partition_extension_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2268:5: -> template( \"not implemented: tableview_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: tableview_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "tableview_name"


	public static class char_set_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "char_set_name"
	// PLSQLPrinter.g:2271:1: char_set_name : ^( CHAR_SET_NAME ( ID )+ ) -> template( \"not implemented: char_set_name\";
	public final PLSQLPrinter.char_set_name_return char_set_name() throws RecognitionException {
		PLSQLPrinter.char_set_name_return retval = new PLSQLPrinter.char_set_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2272:5: ( ^( CHAR_SET_NAME ( ID )+ ) -> template( \"not implemented: char_set_name\")
			// PLSQLPrinter.g:2272:10: ^( CHAR_SET_NAME ( ID )+ )
			{
			match(input,CHAR_SET_NAME,FOLLOW_CHAR_SET_NAME_in_char_set_name21915); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2272:26: ( ID )+
			int cnt576=0;
			loop576:
			while (true) {
				int alt576=2;
				int LA576_0 = input.LA(1);
				if ( (LA576_0==ID) ) {
					alt576=1;
				}

				switch (alt576) {
				case 1 :
					// PLSQLPrinter.g:2272:26: ID
					{
					match(input,ID,FOLLOW_ID_in_char_set_name21917); 
					}
					break;

				default :
					if ( cnt576 >= 1 ) break loop576;
					EarlyExitException eee = new EarlyExitException(576, input);
					throw eee;
				}
				cnt576++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2273:5: -> template( \"not implemented: char_set_name\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: char_set_name");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "char_set_name"


	public static class function_argument_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "function_argument"
	// PLSQLPrinter.g:2280:1: function_argument : ^( ARGUMENTS ( argument )* ) -> template( \"not implemented: function_argument\";
	public final PLSQLPrinter.function_argument_return function_argument() throws RecognitionException {
		PLSQLPrinter.function_argument_return retval = new PLSQLPrinter.function_argument_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2281:5: ( ^( ARGUMENTS ( argument )* ) -> template( \"not implemented: function_argument\")
			// PLSQLPrinter.g:2281:10: ^( ARGUMENTS ( argument )* )
			{
			match(input,ARGUMENTS,FOLLOW_ARGUMENTS_in_function_argument21958); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:2281:22: ( argument )*
				loop577:
				while (true) {
					int alt577=2;
					int LA577_0 = input.LA(1);
					if ( (LA577_0==ARGUMENT) ) {
						alt577=1;
					}

					switch (alt577) {
					case 1 :
						// PLSQLPrinter.g:2281:22: argument
						{
						pushFollow(FOLLOW_argument_in_function_argument21960);
						argument();
						state._fsp--;

						}
						break;

					default :
						break loop577;
					}
				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 2282:5: -> template( \"not implemented: function_argument\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: function_argument");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "function_argument"


	public static class argument_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "argument"
	// PLSQLPrinter.g:2285:1: argument : ^( ARGUMENT expression ( parameter_name )? ) -> template( \"not implemented: argument\";
	public final PLSQLPrinter.argument_return argument() throws RecognitionException {
		PLSQLPrinter.argument_return retval = new PLSQLPrinter.argument_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2286:5: ( ^( ARGUMENT expression ( parameter_name )? ) -> template( \"not implemented: argument\")
			// PLSQLPrinter.g:2286:10: ^( ARGUMENT expression ( parameter_name )? )
			{
			match(input,ARGUMENT,FOLLOW_ARGUMENT_in_argument21997); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_argument21999);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:2286:32: ( parameter_name )?
			int alt578=2;
			int LA578_0 = input.LA(1);
			if ( (LA578_0==PARAMETER_NAME) ) {
				alt578=1;
			}
			switch (alt578) {
				case 1 :
					// PLSQLPrinter.g:2286:32: parameter_name
					{
					pushFollow(FOLLOW_parameter_name_in_argument22001);
					parameter_name();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2287:5: -> template( \"not implemented: argument\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: argument");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "argument"


	public static class type_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "type_spec"
	// PLSQLPrinter.g:2290:1: type_spec : ( ^( CUSTOM_TYPE type_name ( REF_VK )? ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK )? ) -> template( \"not implemented: type_spec\"| native_datatype_spec -> { $native_datatype_spec.st; }| ^( INTERVAL_DATATYPE ( YEAR_VK | DAY_VK ) ( MONTH_VK | SECOND_VK ) ( expression )* ) -> template( \"not implemented: type_spec\");
	public final PLSQLPrinter.type_spec_return type_spec() throws RecognitionException {
		PLSQLPrinter.type_spec_return retval = new PLSQLPrinter.type_spec_return();
		retval.start = input.LT(1);

		TreeRuleReturnScope native_datatype_spec32 =null;

		try {
			// PLSQLPrinter.g:2291:5: ( ^( CUSTOM_TYPE type_name ( REF_VK )? ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK )? ) -> template( \"not implemented: type_spec\"| native_datatype_spec -> { $native_datatype_spec.st; }| ^( INTERVAL_DATATYPE ( YEAR_VK | DAY_VK ) ( MONTH_VK | SECOND_VK ) ( expression )* ) -> template( \"not implemented: type_spec\")
			int alt584=3;
			switch ( input.LA(1) ) {
			case CUSTOM_TYPE:
				{
				alt584=1;
				}
				break;
			case NATIVE_DATATYPE:
				{
				alt584=2;
				}
				break;
			case INTERVAL_DATATYPE:
				{
				alt584=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 584, 0, input);
				throw nvae;
			}
			switch (alt584) {
				case 1 :
					// PLSQLPrinter.g:2291:11: ^( CUSTOM_TYPE type_name ( REF_VK )? ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK )? )
					{
					match(input,CUSTOM_TYPE,FOLLOW_CUSTOM_TYPE_in_type_spec22039); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_type_name_in_type_spec22041);
					type_name();
					state._fsp--;

					// PLSQLPrinter.g:2291:35: ( REF_VK )?
					int alt579=2;
					int LA579_0 = input.LA(1);
					if ( (LA579_0==REF_VK) ) {
						alt579=1;
					}
					switch (alt579) {
						case 1 :
							// PLSQLPrinter.g:2291:35: REF_VK
							{
							match(input,REF_VK,FOLLOW_REF_VK_in_type_spec22043); 
							}
							break;

					}

					// PLSQLPrinter.g:2291:43: ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK )?
					int alt580=3;
					int LA580_0 = input.LA(1);
					if ( (LA580_0==PERCENT_ROWTYPE_VK) ) {
						alt580=1;
					}
					else if ( (LA580_0==PERCENT_TYPE_VK) ) {
						alt580=2;
					}
					switch (alt580) {
						case 1 :
							// PLSQLPrinter.g:2291:44: PERCENT_ROWTYPE_VK
							{
							match(input,PERCENT_ROWTYPE_VK,FOLLOW_PERCENT_ROWTYPE_VK_in_type_spec22047); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:2291:63: PERCENT_TYPE_VK
							{
							match(input,PERCENT_TYPE_VK,FOLLOW_PERCENT_TYPE_VK_in_type_spec22049); 
							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2292:5: -> template( \"not implemented: type_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: type_spec");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2293:10: native_datatype_spec
					{
					pushFollow(FOLLOW_native_datatype_spec_in_type_spec22077);
					native_datatype_spec32=native_datatype_spec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 2293:31: -> { $native_datatype_spec.st; }
					{
						retval.st =  (native_datatype_spec32!=null?((StringTemplate)native_datatype_spec32.getTemplate()):null); ;
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:2294:10: ^( INTERVAL_DATATYPE ( YEAR_VK | DAY_VK ) ( MONTH_VK | SECOND_VK ) ( expression )* )
					{
					match(input,INTERVAL_DATATYPE,FOLLOW_INTERVAL_DATATYPE_in_type_spec22093); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:2294:30: ( YEAR_VK | DAY_VK )
					int alt581=2;
					int LA581_0 = input.LA(1);
					if ( (LA581_0==YEAR_VK) ) {
						alt581=1;
					}
					else if ( (LA581_0==DAY_VK) ) {
						alt581=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 581, 0, input);
						throw nvae;
					}

					switch (alt581) {
						case 1 :
							// PLSQLPrinter.g:2294:31: YEAR_VK
							{
							match(input,YEAR_VK,FOLLOW_YEAR_VK_in_type_spec22096); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:2294:39: DAY_VK
							{
							match(input,DAY_VK,FOLLOW_DAY_VK_in_type_spec22098); 
							}
							break;

					}

					// PLSQLPrinter.g:2294:47: ( MONTH_VK | SECOND_VK )
					int alt582=2;
					int LA582_0 = input.LA(1);
					if ( (LA582_0==MONTH_VK) ) {
						alt582=1;
					}
					else if ( (LA582_0==SECOND_VK) ) {
						alt582=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 582, 0, input);
						throw nvae;
					}

					switch (alt582) {
						case 1 :
							// PLSQLPrinter.g:2294:48: MONTH_VK
							{
							match(input,MONTH_VK,FOLLOW_MONTH_VK_in_type_spec22102); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:2294:57: SECOND_VK
							{
							match(input,SECOND_VK,FOLLOW_SECOND_VK_in_type_spec22104); 
							}
							break;

					}

					// PLSQLPrinter.g:2294:68: ( expression )*
					loop583:
					while (true) {
						int alt583=2;
						int LA583_0 = input.LA(1);
						if ( (LA583_0==EXPR||LA583_0==LOGIC_EXPR) ) {
							alt583=1;
						}

						switch (alt583) {
						case 1 :
							// PLSQLPrinter.g:2294:68: expression
							{
							pushFollow(FOLLOW_expression_in_type_spec22107);
							expression();
							state._fsp--;

							}
							break;

						default :
							break loop583;
						}
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2295:5: -> template( \"not implemented: type_spec\"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: type_spec");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "type_spec"


	public static class type_precision_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "type_precision"
	// PLSQLPrinter.g:2298:1: type_precision : ^( PRECISION size1= constant (size2= constant )? (precision_char= CHAR_VK |precision_byte= BYTE_VK )? ) -> base_type_spec_precision(size1=$size1.stsize2=$size2.stis_byte=$precision_byte != nullis_char=$precision_char != null);
	public final PLSQLPrinter.type_precision_return type_precision() throws RecognitionException {
		PLSQLPrinter.type_precision_return retval = new PLSQLPrinter.type_precision_return();
		retval.start = input.LT(1);

		CommonTree precision_char=null;
		CommonTree precision_byte=null;
		TreeRuleReturnScope size1 =null;
		TreeRuleReturnScope size2 =null;

		try {
			// PLSQLPrinter.g:2299:5: ( ^( PRECISION size1= constant (size2= constant )? (precision_char= CHAR_VK |precision_byte= BYTE_VK )? ) -> base_type_spec_precision(size1=$size1.stsize2=$size2.stis_byte=$precision_byte != nullis_char=$precision_char != null))
			// PLSQLPrinter.g:2299:10: ^( PRECISION size1= constant (size2= constant )? (precision_char= CHAR_VK |precision_byte= BYTE_VK )? )
			{
			match(input,PRECISION,FOLLOW_PRECISION_in_type_precision22144); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_constant_in_type_precision22148);
			size1=constant();
			state._fsp--;

			// PLSQLPrinter.g:2299:42: (size2= constant )?
			int alt585=2;
			int LA585_0 = input.LA(1);
			if ( (LA585_0==APPROXIMATE_NUM_LIT||LA585_0==CHAR_STRING||LA585_0==EXACT_NUM_LIT||LA585_0==MINUS_SIGN||LA585_0==SQL92_RESERVED_DEFAULT||LA585_0==SQL92_RESERVED_FALSE||LA585_0==SQL92_RESERVED_NULL||LA585_0==SQL92_RESERVED_TRUE||LA585_0==UNSIGNED_INTEGER||LA585_0==DBTIMEZONE_VK||LA585_0==MAXVALUE_VK||LA585_0==MINVALUE_VK||LA585_0==SESSIONTIMEZONE_VK) ) {
				alt585=1;
			}
			switch (alt585) {
				case 1 :
					// PLSQLPrinter.g:2299:42: size2= constant
					{
					pushFollow(FOLLOW_constant_in_type_precision22152);
					size2=constant();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2299:53: (precision_char= CHAR_VK |precision_byte= BYTE_VK )?
			int alt586=3;
			int LA586_0 = input.LA(1);
			if ( (LA586_0==CHAR_VK) ) {
				alt586=1;
			}
			else if ( (LA586_0==BYTE_VK) ) {
				alt586=2;
			}
			switch (alt586) {
				case 1 :
					// PLSQLPrinter.g:2299:54: precision_char= CHAR_VK
					{
					precision_char=(CommonTree)match(input,CHAR_VK,FOLLOW_CHAR_VK_in_type_precision22158); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2299:77: precision_byte= BYTE_VK
					{
					precision_byte=(CommonTree)match(input,BYTE_VK,FOLLOW_BYTE_VK_in_type_precision22162); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2300:5: -> base_type_spec_precision(size1=$size1.stsize2=$size2.stis_byte=$precision_byte != nullis_char=$precision_char != null)
			{
				retval.st = templateLib.getInstanceOf("base_type_spec_precision",new STAttrMap().put("size1", (size1!=null?((StringTemplate)size1.getTemplate()):null)).put("size2", (size2!=null?((StringTemplate)size2.getTemplate()):null)).put("is_byte", precision_byte != null).put("is_char", precision_char != null));
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "type_precision"


	public static class native_datatype_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "native_datatype_spec"
	// PLSQLPrinter.g:2305:1: native_datatype_spec : ^( NATIVE_DATATYPE ( BFILE_VK | BINARY_FLOAT_VK | BINARY_INTEGER_VK | BLOB_VK | BOOLEAN_VK | CHARACTER_VK | CHAR_VK | CLOB_VK | DATE_VK | SQL92_RESERVED_DATE | DAY_VK | DECIMAL_VK | DEC_VK | DOUBLE_VK | DOUBLE_VK PRECISION_VK | DSINTERVAL_UNCONSTRAINED_VK | FLOAT_VK | HOUR_VK | INTEGER_VK | INT_VK | LONG_VK | LONG_VK RAW_VK | MINUTE_VK | MLSLABEL_VK | MONTH_VK | NATURALN_VK | NATURAL_VK | NCHAR_VK | NCLOB_VK | NUMBER_VK | NUMERIC_VK | NVARCHAR2_VK | PLS_INTEGER_VK | POSITIVEN_VK | POSITIVE_VK | RAW_VK | REAL_VK | ROWID_VK | SECOND_VK | SIGNTYPE_VK | SIMPLE_INTEGER_VK | SMALLINT_VK | STRING_VK | TIMESTAMP_LTZ_UNCONSTRAINED_VK | TIMESTAMP_TZ_UNCONSTRAINED_VK | TIMESTAMP_UNCONSTRAINED_VK | TIMESTAMP_VK | TIMEZONE_ABBR_VK | TIMEZONE_HOUR_VK | TIMEZONE_MINUTE_VK | TIMEZONE_REGION_VK | UROWID_VK | VARCHAR2_VK | VARCHAR_VK | YEAR_VK | YMINTERVAL_UNCONSTRAINED_VK ) (prec= type_precision )? (is_tz= TIME_VK (is_tz_local= LOCAL_VK )? )? ) -> base_type_spec(baseName=typeBaseNameprecision=$prec.stis_with_time_zone=$is_tz != nullis_time_zone_local=$is_tz_local != null);
	public final PLSQLPrinter.native_datatype_spec_return native_datatype_spec() throws RecognitionException {
		PLSQLPrinter.native_datatype_spec_return retval = new PLSQLPrinter.native_datatype_spec_return();
		retval.start = input.LT(1);

		CommonTree is_tz=null;
		CommonTree is_tz_local=null;
		TreeRuleReturnScope prec =null;

		 String typeBaseName = null; 
		try {
			// PLSQLPrinter.g:2307:5: ( ^( NATIVE_DATATYPE ( BFILE_VK | BINARY_FLOAT_VK | BINARY_INTEGER_VK | BLOB_VK | BOOLEAN_VK | CHARACTER_VK | CHAR_VK | CLOB_VK | DATE_VK | SQL92_RESERVED_DATE | DAY_VK | DECIMAL_VK | DEC_VK | DOUBLE_VK | DOUBLE_VK PRECISION_VK | DSINTERVAL_UNCONSTRAINED_VK | FLOAT_VK | HOUR_VK | INTEGER_VK | INT_VK | LONG_VK | LONG_VK RAW_VK | MINUTE_VK | MLSLABEL_VK | MONTH_VK | NATURALN_VK | NATURAL_VK | NCHAR_VK | NCLOB_VK | NUMBER_VK | NUMERIC_VK | NVARCHAR2_VK | PLS_INTEGER_VK | POSITIVEN_VK | POSITIVE_VK | RAW_VK | REAL_VK | ROWID_VK | SECOND_VK | SIGNTYPE_VK | SIMPLE_INTEGER_VK | SMALLINT_VK | STRING_VK | TIMESTAMP_LTZ_UNCONSTRAINED_VK | TIMESTAMP_TZ_UNCONSTRAINED_VK | TIMESTAMP_UNCONSTRAINED_VK | TIMESTAMP_VK | TIMEZONE_ABBR_VK | TIMEZONE_HOUR_VK | TIMEZONE_MINUTE_VK | TIMEZONE_REGION_VK | UROWID_VK | VARCHAR2_VK | VARCHAR_VK | YEAR_VK | YMINTERVAL_UNCONSTRAINED_VK ) (prec= type_precision )? (is_tz= TIME_VK (is_tz_local= LOCAL_VK )? )? ) -> base_type_spec(baseName=typeBaseNameprecision=$prec.stis_with_time_zone=$is_tz != nullis_time_zone_local=$is_tz_local != null))
			// PLSQLPrinter.g:2307:10: ^( NATIVE_DATATYPE ( BFILE_VK | BINARY_FLOAT_VK | BINARY_INTEGER_VK | BLOB_VK | BOOLEAN_VK | CHARACTER_VK | CHAR_VK | CLOB_VK | DATE_VK | SQL92_RESERVED_DATE | DAY_VK | DECIMAL_VK | DEC_VK | DOUBLE_VK | DOUBLE_VK PRECISION_VK | DSINTERVAL_UNCONSTRAINED_VK | FLOAT_VK | HOUR_VK | INTEGER_VK | INT_VK | LONG_VK | LONG_VK RAW_VK | MINUTE_VK | MLSLABEL_VK | MONTH_VK | NATURALN_VK | NATURAL_VK | NCHAR_VK | NCLOB_VK | NUMBER_VK | NUMERIC_VK | NVARCHAR2_VK | PLS_INTEGER_VK | POSITIVEN_VK | POSITIVE_VK | RAW_VK | REAL_VK | ROWID_VK | SECOND_VK | SIGNTYPE_VK | SIMPLE_INTEGER_VK | SMALLINT_VK | STRING_VK | TIMESTAMP_LTZ_UNCONSTRAINED_VK | TIMESTAMP_TZ_UNCONSTRAINED_VK | TIMESTAMP_UNCONSTRAINED_VK | TIMESTAMP_VK | TIMEZONE_ABBR_VK | TIMEZONE_HOUR_VK | TIMEZONE_MINUTE_VK | TIMEZONE_REGION_VK | UROWID_VK | VARCHAR2_VK | VARCHAR_VK | YEAR_VK | YMINTERVAL_UNCONSTRAINED_VK ) (prec= type_precision )? (is_tz= TIME_VK (is_tz_local= LOCAL_VK )? )? )
			{
			match(input,NATIVE_DATATYPE,FOLLOW_NATIVE_DATATYPE_in_native_datatype_spec22225); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2308:5: ( BFILE_VK | BINARY_FLOAT_VK | BINARY_INTEGER_VK | BLOB_VK | BOOLEAN_VK | CHARACTER_VK | CHAR_VK | CLOB_VK | DATE_VK | SQL92_RESERVED_DATE | DAY_VK | DECIMAL_VK | DEC_VK | DOUBLE_VK | DOUBLE_VK PRECISION_VK | DSINTERVAL_UNCONSTRAINED_VK | FLOAT_VK | HOUR_VK | INTEGER_VK | INT_VK | LONG_VK | LONG_VK RAW_VK | MINUTE_VK | MLSLABEL_VK | MONTH_VK | NATURALN_VK | NATURAL_VK | NCHAR_VK | NCLOB_VK | NUMBER_VK | NUMERIC_VK | NVARCHAR2_VK | PLS_INTEGER_VK | POSITIVEN_VK | POSITIVE_VK | RAW_VK | REAL_VK | ROWID_VK | SECOND_VK | SIGNTYPE_VK | SIMPLE_INTEGER_VK | SMALLINT_VK | STRING_VK | TIMESTAMP_LTZ_UNCONSTRAINED_VK | TIMESTAMP_TZ_UNCONSTRAINED_VK | TIMESTAMP_UNCONSTRAINED_VK | TIMESTAMP_VK | TIMEZONE_ABBR_VK | TIMEZONE_HOUR_VK | TIMEZONE_MINUTE_VK | TIMEZONE_REGION_VK | UROWID_VK | VARCHAR2_VK | VARCHAR_VK | YEAR_VK | YMINTERVAL_UNCONSTRAINED_VK )
			int alt587=56;
			switch ( input.LA(1) ) {
			case BFILE_VK:
				{
				alt587=1;
				}
				break;
			case BINARY_FLOAT_VK:
				{
				alt587=2;
				}
				break;
			case BINARY_INTEGER_VK:
				{
				alt587=3;
				}
				break;
			case BLOB_VK:
				{
				alt587=4;
				}
				break;
			case BOOLEAN_VK:
				{
				alt587=5;
				}
				break;
			case CHARACTER_VK:
				{
				alt587=6;
				}
				break;
			case CHAR_VK:
				{
				alt587=7;
				}
				break;
			case CLOB_VK:
				{
				alt587=8;
				}
				break;
			case DATE_VK:
				{
				alt587=9;
				}
				break;
			case SQL92_RESERVED_DATE:
				{
				alt587=10;
				}
				break;
			case DAY_VK:
				{
				alt587=11;
				}
				break;
			case DECIMAL_VK:
				{
				alt587=12;
				}
				break;
			case DEC_VK:
				{
				alt587=13;
				}
				break;
			case DOUBLE_VK:
				{
				int LA587_14 = input.LA(2);
				if ( (LA587_14==PRECISION_VK) ) {
					alt587=15;
				}
				else if ( (LA587_14==UP||LA587_14==PRECISION||LA587_14==TIME_VK) ) {
					alt587=14;
				}

				else {
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 587, 14, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case DSINTERVAL_UNCONSTRAINED_VK:
				{
				alt587=16;
				}
				break;
			case FLOAT_VK:
				{
				alt587=17;
				}
				break;
			case HOUR_VK:
				{
				alt587=18;
				}
				break;
			case INTEGER_VK:
				{
				alt587=19;
				}
				break;
			case INT_VK:
				{
				alt587=20;
				}
				break;
			case LONG_VK:
				{
				int LA587_20 = input.LA(2);
				if ( (LA587_20==RAW_VK) ) {
					alt587=22;
				}
				else if ( (LA587_20==UP||LA587_20==PRECISION||LA587_20==TIME_VK) ) {
					alt587=21;
				}

				else {
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 587, 20, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case MINUTE_VK:
				{
				alt587=23;
				}
				break;
			case MLSLABEL_VK:
				{
				alt587=24;
				}
				break;
			case MONTH_VK:
				{
				alt587=25;
				}
				break;
			case NATURALN_VK:
				{
				alt587=26;
				}
				break;
			case NATURAL_VK:
				{
				alt587=27;
				}
				break;
			case NCHAR_VK:
				{
				alt587=28;
				}
				break;
			case NCLOB_VK:
				{
				alt587=29;
				}
				break;
			case NUMBER_VK:
				{
				alt587=30;
				}
				break;
			case NUMERIC_VK:
				{
				alt587=31;
				}
				break;
			case NVARCHAR2_VK:
				{
				alt587=32;
				}
				break;
			case PLS_INTEGER_VK:
				{
				alt587=33;
				}
				break;
			case POSITIVEN_VK:
				{
				alt587=34;
				}
				break;
			case POSITIVE_VK:
				{
				alt587=35;
				}
				break;
			case RAW_VK:
				{
				alt587=36;
				}
				break;
			case REAL_VK:
				{
				alt587=37;
				}
				break;
			case ROWID_VK:
				{
				alt587=38;
				}
				break;
			case SECOND_VK:
				{
				alt587=39;
				}
				break;
			case SIGNTYPE_VK:
				{
				alt587=40;
				}
				break;
			case SIMPLE_INTEGER_VK:
				{
				alt587=41;
				}
				break;
			case SMALLINT_VK:
				{
				alt587=42;
				}
				break;
			case STRING_VK:
				{
				alt587=43;
				}
				break;
			case TIMESTAMP_LTZ_UNCONSTRAINED_VK:
				{
				alt587=44;
				}
				break;
			case TIMESTAMP_TZ_UNCONSTRAINED_VK:
				{
				alt587=45;
				}
				break;
			case TIMESTAMP_UNCONSTRAINED_VK:
				{
				alt587=46;
				}
				break;
			case TIMESTAMP_VK:
				{
				alt587=47;
				}
				break;
			case TIMEZONE_ABBR_VK:
				{
				alt587=48;
				}
				break;
			case TIMEZONE_HOUR_VK:
				{
				alt587=49;
				}
				break;
			case TIMEZONE_MINUTE_VK:
				{
				alt587=50;
				}
				break;
			case TIMEZONE_REGION_VK:
				{
				alt587=51;
				}
				break;
			case UROWID_VK:
				{
				alt587=52;
				}
				break;
			case VARCHAR2_VK:
				{
				alt587=53;
				}
				break;
			case VARCHAR_VK:
				{
				alt587=54;
				}
				break;
			case YEAR_VK:
				{
				alt587=55;
				}
				break;
			case YMINTERVAL_UNCONSTRAINED_VK:
				{
				alt587=56;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 587, 0, input);
				throw nvae;
			}
			switch (alt587) {
				case 1 :
					// PLSQLPrinter.g:2308:10: BFILE_VK
					{
					match(input,BFILE_VK,FOLLOW_BFILE_VK_in_native_datatype_spec22236); 
					 typeBaseName = "bfile"; 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2309:10: BINARY_FLOAT_VK
					{
					match(input,BINARY_FLOAT_VK,FOLLOW_BINARY_FLOAT_VK_in_native_datatype_spec22249); 
					 typeBaseName = "binary_float"; 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:2310:10: BINARY_INTEGER_VK
					{
					match(input,BINARY_INTEGER_VK,FOLLOW_BINARY_INTEGER_VK_in_native_datatype_spec22262); 
					 typeBaseName = "binary_integer"; 
					}
					break;
				case 4 :
					// PLSQLPrinter.g:2311:10: BLOB_VK
					{
					match(input,BLOB_VK,FOLLOW_BLOB_VK_in_native_datatype_spec22275); 
					 typeBaseName = "blob"; 
					}
					break;
				case 5 :
					// PLSQLPrinter.g:2312:10: BOOLEAN_VK
					{
					match(input,BOOLEAN_VK,FOLLOW_BOOLEAN_VK_in_native_datatype_spec22288); 
					 typeBaseName = "boolean"; 
					}
					break;
				case 6 :
					// PLSQLPrinter.g:2313:10: CHARACTER_VK
					{
					match(input,CHARACTER_VK,FOLLOW_CHARACTER_VK_in_native_datatype_spec22301); 
					 typeBaseName = "character"; 
					}
					break;
				case 7 :
					// PLSQLPrinter.g:2314:10: CHAR_VK
					{
					match(input,CHAR_VK,FOLLOW_CHAR_VK_in_native_datatype_spec22315); 
					 typeBaseName = "char"; 
					}
					break;
				case 8 :
					// PLSQLPrinter.g:2315:10: CLOB_VK
					{
					match(input,CLOB_VK,FOLLOW_CLOB_VK_in_native_datatype_spec22328); 
					 typeBaseName = "clob"; 
					}
					break;
				case 9 :
					// PLSQLPrinter.g:2316:10: DATE_VK
					{
					match(input,DATE_VK,FOLLOW_DATE_VK_in_native_datatype_spec22341); 
					 typeBaseName = "date"; 
					}
					break;
				case 10 :
					// PLSQLPrinter.g:2317:10: SQL92_RESERVED_DATE
					{
					match(input,SQL92_RESERVED_DATE,FOLLOW_SQL92_RESERVED_DATE_in_native_datatype_spec22354); 
					 typeBaseName = "date"; 
					}
					break;
				case 11 :
					// PLSQLPrinter.g:2318:10: DAY_VK
					{
					match(input,DAY_VK,FOLLOW_DAY_VK_in_native_datatype_spec22367); 
					}
					break;
				case 12 :
					// PLSQLPrinter.g:2319:10: DECIMAL_VK
					{
					match(input,DECIMAL_VK,FOLLOW_DECIMAL_VK_in_native_datatype_spec22378); 
					 typeBaseName = "decimal"; 
					}
					break;
				case 13 :
					// PLSQLPrinter.g:2320:10: DEC_VK
					{
					match(input,DEC_VK,FOLLOW_DEC_VK_in_native_datatype_spec22392); 
					 typeBaseName = "dec"; 
					}
					break;
				case 14 :
					// PLSQLPrinter.g:2321:10: DOUBLE_VK
					{
					match(input,DOUBLE_VK,FOLLOW_DOUBLE_VK_in_native_datatype_spec22405); 
					 typeBaseName = "double"; 
					}
					break;
				case 15 :
					// PLSQLPrinter.g:2322:10: DOUBLE_VK PRECISION_VK
					{
					match(input,DOUBLE_VK,FOLLOW_DOUBLE_VK_in_native_datatype_spec22418); 
					match(input,PRECISION_VK,FOLLOW_PRECISION_VK_in_native_datatype_spec22420); 
					 typeBaseName = "double precision"; 
					}
					break;
				case 16 :
					// PLSQLPrinter.g:2323:10: DSINTERVAL_UNCONSTRAINED_VK
					{
					match(input,DSINTERVAL_UNCONSTRAINED_VK,FOLLOW_DSINTERVAL_UNCONSTRAINED_VK_in_native_datatype_spec22433); 
					}
					break;
				case 17 :
					// PLSQLPrinter.g:2324:10: FLOAT_VK
					{
					match(input,FLOAT_VK,FOLLOW_FLOAT_VK_in_native_datatype_spec22444); 
					 typeBaseName = "float"; 
					}
					break;
				case 18 :
					// PLSQLPrinter.g:2325:10: HOUR_VK
					{
					match(input,HOUR_VK,FOLLOW_HOUR_VK_in_native_datatype_spec22457); 
					}
					break;
				case 19 :
					// PLSQLPrinter.g:2326:10: INTEGER_VK
					{
					match(input,INTEGER_VK,FOLLOW_INTEGER_VK_in_native_datatype_spec22468); 
					 typeBaseName = "integer"; 
					}
					break;
				case 20 :
					// PLSQLPrinter.g:2327:10: INT_VK
					{
					match(input,INT_VK,FOLLOW_INT_VK_in_native_datatype_spec22481); 
					 typeBaseName = "int"; 
					}
					break;
				case 21 :
					// PLSQLPrinter.g:2328:10: LONG_VK
					{
					match(input,LONG_VK,FOLLOW_LONG_VK_in_native_datatype_spec22494); 
					 typeBaseName = "long"; 
					}
					break;
				case 22 :
					// PLSQLPrinter.g:2329:10: LONG_VK RAW_VK
					{
					match(input,LONG_VK,FOLLOW_LONG_VK_in_native_datatype_spec22507); 
					match(input,RAW_VK,FOLLOW_RAW_VK_in_native_datatype_spec22509); 
					 typeBaseName = "long raw"; 
					}
					break;
				case 23 :
					// PLSQLPrinter.g:2330:10: MINUTE_VK
					{
					match(input,MINUTE_VK,FOLLOW_MINUTE_VK_in_native_datatype_spec22522); 
					}
					break;
				case 24 :
					// PLSQLPrinter.g:2331:10: MLSLABEL_VK
					{
					match(input,MLSLABEL_VK,FOLLOW_MLSLABEL_VK_in_native_datatype_spec22533); 
					}
					break;
				case 25 :
					// PLSQLPrinter.g:2332:10: MONTH_VK
					{
					match(input,MONTH_VK,FOLLOW_MONTH_VK_in_native_datatype_spec22544); 
					}
					break;
				case 26 :
					// PLSQLPrinter.g:2333:10: NATURALN_VK
					{
					match(input,NATURALN_VK,FOLLOW_NATURALN_VK_in_native_datatype_spec22555); 
					}
					break;
				case 27 :
					// PLSQLPrinter.g:2334:10: NATURAL_VK
					{
					match(input,NATURAL_VK,FOLLOW_NATURAL_VK_in_native_datatype_spec22566); 
					}
					break;
				case 28 :
					// PLSQLPrinter.g:2335:10: NCHAR_VK
					{
					match(input,NCHAR_VK,FOLLOW_NCHAR_VK_in_native_datatype_spec22577); 
					 typeBaseName = "nchar"; 
					}
					break;
				case 29 :
					// PLSQLPrinter.g:2336:10: NCLOB_VK
					{
					match(input,NCLOB_VK,FOLLOW_NCLOB_VK_in_native_datatype_spec22590); 
					 typeBaseName = "nclob"; 
					}
					break;
				case 30 :
					// PLSQLPrinter.g:2337:10: NUMBER_VK
					{
					match(input,NUMBER_VK,FOLLOW_NUMBER_VK_in_native_datatype_spec22603); 
					 typeBaseName = "number"; 
					}
					break;
				case 31 :
					// PLSQLPrinter.g:2338:10: NUMERIC_VK
					{
					match(input,NUMERIC_VK,FOLLOW_NUMERIC_VK_in_native_datatype_spec22616); 
					 typeBaseName = "numeric"; 
					}
					break;
				case 32 :
					// PLSQLPrinter.g:2339:10: NVARCHAR2_VK
					{
					match(input,NVARCHAR2_VK,FOLLOW_NVARCHAR2_VK_in_native_datatype_spec22629); 
					 typeBaseName = "nvarchar2"; 
					}
					break;
				case 33 :
					// PLSQLPrinter.g:2340:10: PLS_INTEGER_VK
					{
					match(input,PLS_INTEGER_VK,FOLLOW_PLS_INTEGER_VK_in_native_datatype_spec22642); 
					 typeBaseName = "pls_integer"; 
					}
					break;
				case 34 :
					// PLSQLPrinter.g:2341:10: POSITIVEN_VK
					{
					match(input,POSITIVEN_VK,FOLLOW_POSITIVEN_VK_in_native_datatype_spec22655); 
					}
					break;
				case 35 :
					// PLSQLPrinter.g:2342:10: POSITIVE_VK
					{
					match(input,POSITIVE_VK,FOLLOW_POSITIVE_VK_in_native_datatype_spec22666); 
					}
					break;
				case 36 :
					// PLSQLPrinter.g:2343:10: RAW_VK
					{
					match(input,RAW_VK,FOLLOW_RAW_VK_in_native_datatype_spec22677); 
					 typeBaseName = "raw"; 
					}
					break;
				case 37 :
					// PLSQLPrinter.g:2344:10: REAL_VK
					{
					match(input,REAL_VK,FOLLOW_REAL_VK_in_native_datatype_spec22690); 
					}
					break;
				case 38 :
					// PLSQLPrinter.g:2345:10: ROWID_VK
					{
					match(input,ROWID_VK,FOLLOW_ROWID_VK_in_native_datatype_spec22701); 
					 typeBaseName = "rowid"; 
					}
					break;
				case 39 :
					// PLSQLPrinter.g:2346:10: SECOND_VK
					{
					match(input,SECOND_VK,FOLLOW_SECOND_VK_in_native_datatype_spec22714); 
					}
					break;
				case 40 :
					// PLSQLPrinter.g:2347:10: SIGNTYPE_VK
					{
					match(input,SIGNTYPE_VK,FOLLOW_SIGNTYPE_VK_in_native_datatype_spec22725); 
					}
					break;
				case 41 :
					// PLSQLPrinter.g:2348:10: SIMPLE_INTEGER_VK
					{
					match(input,SIMPLE_INTEGER_VK,FOLLOW_SIMPLE_INTEGER_VK_in_native_datatype_spec22736); 
					}
					break;
				case 42 :
					// PLSQLPrinter.g:2349:10: SMALLINT_VK
					{
					match(input,SMALLINT_VK,FOLLOW_SMALLINT_VK_in_native_datatype_spec22747); 
					 typeBaseName = "smallint"; 
					}
					break;
				case 43 :
					// PLSQLPrinter.g:2350:10: STRING_VK
					{
					match(input,STRING_VK,FOLLOW_STRING_VK_in_native_datatype_spec22760); 
					}
					break;
				case 44 :
					// PLSQLPrinter.g:2351:10: TIMESTAMP_LTZ_UNCONSTRAINED_VK
					{
					match(input,TIMESTAMP_LTZ_UNCONSTRAINED_VK,FOLLOW_TIMESTAMP_LTZ_UNCONSTRAINED_VK_in_native_datatype_spec22771); 
					}
					break;
				case 45 :
					// PLSQLPrinter.g:2352:10: TIMESTAMP_TZ_UNCONSTRAINED_VK
					{
					match(input,TIMESTAMP_TZ_UNCONSTRAINED_VK,FOLLOW_TIMESTAMP_TZ_UNCONSTRAINED_VK_in_native_datatype_spec22782); 
					}
					break;
				case 46 :
					// PLSQLPrinter.g:2353:10: TIMESTAMP_UNCONSTRAINED_VK
					{
					match(input,TIMESTAMP_UNCONSTRAINED_VK,FOLLOW_TIMESTAMP_UNCONSTRAINED_VK_in_native_datatype_spec22793); 
					}
					break;
				case 47 :
					// PLSQLPrinter.g:2354:10: TIMESTAMP_VK
					{
					match(input,TIMESTAMP_VK,FOLLOW_TIMESTAMP_VK_in_native_datatype_spec22804); 
					 typeBaseName = "timestamp"; 
					}
					break;
				case 48 :
					// PLSQLPrinter.g:2355:10: TIMEZONE_ABBR_VK
					{
					match(input,TIMEZONE_ABBR_VK,FOLLOW_TIMEZONE_ABBR_VK_in_native_datatype_spec22817); 
					}
					break;
				case 49 :
					// PLSQLPrinter.g:2356:10: TIMEZONE_HOUR_VK
					{
					match(input,TIMEZONE_HOUR_VK,FOLLOW_TIMEZONE_HOUR_VK_in_native_datatype_spec22828); 
					}
					break;
				case 50 :
					// PLSQLPrinter.g:2357:10: TIMEZONE_MINUTE_VK
					{
					match(input,TIMEZONE_MINUTE_VK,FOLLOW_TIMEZONE_MINUTE_VK_in_native_datatype_spec22839); 
					}
					break;
				case 51 :
					// PLSQLPrinter.g:2358:10: TIMEZONE_REGION_VK
					{
					match(input,TIMEZONE_REGION_VK,FOLLOW_TIMEZONE_REGION_VK_in_native_datatype_spec22850); 
					}
					break;
				case 52 :
					// PLSQLPrinter.g:2359:10: UROWID_VK
					{
					match(input,UROWID_VK,FOLLOW_UROWID_VK_in_native_datatype_spec22861); 
					 typeBaseName = "urowid"; 
					}
					break;
				case 53 :
					// PLSQLPrinter.g:2360:10: VARCHAR2_VK
					{
					match(input,VARCHAR2_VK,FOLLOW_VARCHAR2_VK_in_native_datatype_spec22874); 
					 typeBaseName = "varchar2"; 
					}
					break;
				case 54 :
					// PLSQLPrinter.g:2361:10: VARCHAR_VK
					{
					match(input,VARCHAR_VK,FOLLOW_VARCHAR_VK_in_native_datatype_spec22887); 
					 typeBaseName = "varchar"; 
					}
					break;
				case 55 :
					// PLSQLPrinter.g:2362:10: YEAR_VK
					{
					match(input,YEAR_VK,FOLLOW_YEAR_VK_in_native_datatype_spec22900); 
					}
					break;
				case 56 :
					// PLSQLPrinter.g:2363:10: YMINTERVAL_UNCONSTRAINED_VK
					{
					match(input,YMINTERVAL_UNCONSTRAINED_VK,FOLLOW_YMINTERVAL_UNCONSTRAINED_VK_in_native_datatype_spec22911); 
					}
					break;

			}

			// PLSQLPrinter.g:2364:9: (prec= type_precision )?
			int alt588=2;
			int LA588_0 = input.LA(1);
			if ( (LA588_0==PRECISION) ) {
				alt588=1;
			}
			switch (alt588) {
				case 1 :
					// PLSQLPrinter.g:2364:9: prec= type_precision
					{
					pushFollow(FOLLOW_type_precision_in_native_datatype_spec22920);
					prec=type_precision();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2365:5: (is_tz= TIME_VK (is_tz_local= LOCAL_VK )? )?
			int alt590=2;
			int LA590_0 = input.LA(1);
			if ( (LA590_0==TIME_VK) ) {
				alt590=1;
			}
			switch (alt590) {
				case 1 :
					// PLSQLPrinter.g:2365:6: is_tz= TIME_VK (is_tz_local= LOCAL_VK )?
					{
					is_tz=(CommonTree)match(input,TIME_VK,FOLLOW_TIME_VK_in_native_datatype_spec22930); 
					// PLSQLPrinter.g:2365:31: (is_tz_local= LOCAL_VK )?
					int alt589=2;
					int LA589_0 = input.LA(1);
					if ( (LA589_0==LOCAL_VK) ) {
						alt589=1;
					}
					switch (alt589) {
						case 1 :
							// PLSQLPrinter.g:2365:31: is_tz_local= LOCAL_VK
							{
							is_tz_local=(CommonTree)match(input,LOCAL_VK,FOLLOW_LOCAL_VK_in_native_datatype_spec22934); 
							}
							break;

					}

					}
					break;

			}

			match(input, Token.UP, null); 

			 if (typeBaseName == null) { typeBaseName = "Unsupported datatype"; } 
			// TEMPLATE REWRITE
			// 2368:5: -> base_type_spec(baseName=typeBaseNameprecision=$prec.stis_with_time_zone=$is_tz != nullis_time_zone_local=$is_tz_local != null)
			{
				retval.st = templateLib.getInstanceOf("base_type_spec",new STAttrMap().put("baseName", typeBaseName).put("precision", (prec!=null?((StringTemplate)prec.getTemplate()):null)).put("is_with_time_zone", is_tz != null).put("is_time_zone_local", is_tz_local != null));
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "native_datatype_spec"


	public static class general_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "general_element"
	// PLSQLPrinter.g:2374:1: general_element : ^( CASCATED_ELEMENT ( ^( ANY_ELEMENT ID ) | function_argument )+ ) -> template( \"not implemented: general_element\";
	public final PLSQLPrinter.general_element_return general_element() throws RecognitionException {
		PLSQLPrinter.general_element_return retval = new PLSQLPrinter.general_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2375:5: ( ^( CASCATED_ELEMENT ( ^( ANY_ELEMENT ID ) | function_argument )+ ) -> template( \"not implemented: general_element\")
			// PLSQLPrinter.g:2375:10: ^( CASCATED_ELEMENT ( ^( ANY_ELEMENT ID ) | function_argument )+ )
			{
			match(input,CASCATED_ELEMENT,FOLLOW_CASCATED_ELEMENT_in_general_element23004); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2376:13: ( ^( ANY_ELEMENT ID ) | function_argument )+
			int cnt591=0;
			loop591:
			while (true) {
				int alt591=3;
				int LA591_0 = input.LA(1);
				if ( (LA591_0==ANY_ELEMENT) ) {
					alt591=1;
				}
				else if ( (LA591_0==ARGUMENTS) ) {
					alt591=2;
				}

				switch (alt591) {
				case 1 :
					// PLSQLPrinter.g:2377:15: ^( ANY_ELEMENT ID )
					{
					match(input,ANY_ELEMENT,FOLLOW_ANY_ELEMENT_in_general_element23035); 
					match(input, Token.DOWN, null); 
					match(input,ID,FOLLOW_ID_in_general_element23037); 
					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:2378:17: function_argument
					{
					pushFollow(FOLLOW_function_argument_in_general_element23056);
					function_argument();
					state._fsp--;

					}
					break;

				default :
					if ( cnt591 >= 1 ) break loop591;
					EarlyExitException eee = new EarlyExitException(591, input);
					throw eee;
				}
				cnt591++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2381:5: -> template( \"not implemented: general_element\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: general_element");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "general_element"


	public static class constant_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "constant"
	// PLSQLPrinter.g:2388:1: constant : (v1= UNSIGNED_INTEGER -> string_literal(val=$v1.text)| ^( MINUS_SIGN v2= UNSIGNED_INTEGER ) -> string_literal(val=\"-\" + $v2.text)| EXACT_NUM_LIT -> string_literal(val=$EXACT_NUM_LIT.text)| APPROXIMATE_NUM_LIT -> string_literal(val=$APPROXIMATE_NUM_LIT.text)| CHAR_STRING -> string_literal(val=$CHAR_STRING.text)| SQL92_RESERVED_NULL -> string_literal(val=\"null\")| SQL92_RESERVED_TRUE -> string_literal(val=\"true\")| SQL92_RESERVED_FALSE -> string_literal(val=\"false\")| DBTIMEZONE_VK -> string_literal(val=\"dbtimezone\")| SESSIONTIMEZONE_VK -> string_literal(val=\"sessiontimezone\")| MINVALUE_VK -> string_literal(val=\"minvalue\")| MAXVALUE_VK -> string_literal(val=\"maxvalue\")| SQL92_RESERVED_DEFAULT -> string_literal(val=\"default\"));
	public final PLSQLPrinter.constant_return constant() throws RecognitionException {
		PLSQLPrinter.constant_return retval = new PLSQLPrinter.constant_return();
		retval.start = input.LT(1);

		CommonTree v1=null;
		CommonTree v2=null;
		CommonTree EXACT_NUM_LIT33=null;
		CommonTree APPROXIMATE_NUM_LIT34=null;
		CommonTree CHAR_STRING35=null;

		try {
			// PLSQLPrinter.g:2389:5: (v1= UNSIGNED_INTEGER -> string_literal(val=$v1.text)| ^( MINUS_SIGN v2= UNSIGNED_INTEGER ) -> string_literal(val=\"-\" + $v2.text)| EXACT_NUM_LIT -> string_literal(val=$EXACT_NUM_LIT.text)| APPROXIMATE_NUM_LIT -> string_literal(val=$APPROXIMATE_NUM_LIT.text)| CHAR_STRING -> string_literal(val=$CHAR_STRING.text)| SQL92_RESERVED_NULL -> string_literal(val=\"null\")| SQL92_RESERVED_TRUE -> string_literal(val=\"true\")| SQL92_RESERVED_FALSE -> string_literal(val=\"false\")| DBTIMEZONE_VK -> string_literal(val=\"dbtimezone\")| SESSIONTIMEZONE_VK -> string_literal(val=\"sessiontimezone\")| MINVALUE_VK -> string_literal(val=\"minvalue\")| MAXVALUE_VK -> string_literal(val=\"maxvalue\")| SQL92_RESERVED_DEFAULT -> string_literal(val=\"default\"))
			int alt592=13;
			switch ( input.LA(1) ) {
			case UNSIGNED_INTEGER:
				{
				alt592=1;
				}
				break;
			case MINUS_SIGN:
				{
				alt592=2;
				}
				break;
			case EXACT_NUM_LIT:
				{
				alt592=3;
				}
				break;
			case APPROXIMATE_NUM_LIT:
				{
				alt592=4;
				}
				break;
			case CHAR_STRING:
				{
				alt592=5;
				}
				break;
			case SQL92_RESERVED_NULL:
				{
				alt592=6;
				}
				break;
			case SQL92_RESERVED_TRUE:
				{
				alt592=7;
				}
				break;
			case SQL92_RESERVED_FALSE:
				{
				alt592=8;
				}
				break;
			case DBTIMEZONE_VK:
				{
				alt592=9;
				}
				break;
			case SESSIONTIMEZONE_VK:
				{
				alt592=10;
				}
				break;
			case MINVALUE_VK:
				{
				alt592=11;
				}
				break;
			case MAXVALUE_VK:
				{
				alt592=12;
				}
				break;
			case SQL92_RESERVED_DEFAULT:
				{
				alt592=13;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 592, 0, input);
				throw nvae;
			}
			switch (alt592) {
				case 1 :
					// PLSQLPrinter.g:2389:10: v1= UNSIGNED_INTEGER
					{
					v1=(CommonTree)match(input,UNSIGNED_INTEGER,FOLLOW_UNSIGNED_INTEGER_in_constant23123); 
					// TEMPLATE REWRITE
					// 2389:30: -> string_literal(val=$v1.text)
					{
						retval.st = templateLib.getInstanceOf("string_literal",new STAttrMap().put("val", (v1!=null?v1.getText():null)));
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2390:10: ^( MINUS_SIGN v2= UNSIGNED_INTEGER )
					{
					match(input,MINUS_SIGN,FOLLOW_MINUS_SIGN_in_constant23144); 
					match(input, Token.DOWN, null); 
					v2=(CommonTree)match(input,UNSIGNED_INTEGER,FOLLOW_UNSIGNED_INTEGER_in_constant23148); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2390:44: -> string_literal(val=\"-\" + $v2.text)
					{
						retval.st = templateLib.getInstanceOf("string_literal",new STAttrMap().put("val", "-" + (v2!=null?v2.getText():null)));
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:2391:10: EXACT_NUM_LIT
					{
					EXACT_NUM_LIT33=(CommonTree)match(input,EXACT_NUM_LIT,FOLLOW_EXACT_NUM_LIT_in_constant23169); 
					// TEMPLATE REWRITE
					// 2391:24: -> string_literal(val=$EXACT_NUM_LIT.text)
					{
						retval.st = templateLib.getInstanceOf("string_literal",new STAttrMap().put("val", (EXACT_NUM_LIT33!=null?EXACT_NUM_LIT33.getText():null)));
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:2392:10: APPROXIMATE_NUM_LIT
					{
					APPROXIMATE_NUM_LIT34=(CommonTree)match(input,APPROXIMATE_NUM_LIT,FOLLOW_APPROXIMATE_NUM_LIT_in_constant23189); 
					// TEMPLATE REWRITE
					// 2392:30: -> string_literal(val=$APPROXIMATE_NUM_LIT.text)
					{
						retval.st = templateLib.getInstanceOf("string_literal",new STAttrMap().put("val", (APPROXIMATE_NUM_LIT34!=null?APPROXIMATE_NUM_LIT34.getText():null)));
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:2393:10: CHAR_STRING
					{
					CHAR_STRING35=(CommonTree)match(input,CHAR_STRING,FOLLOW_CHAR_STRING_in_constant23209); 
					// TEMPLATE REWRITE
					// 2393:22: -> string_literal(val=$CHAR_STRING.text)
					{
						retval.st = templateLib.getInstanceOf("string_literal",new STAttrMap().put("val", (CHAR_STRING35!=null?CHAR_STRING35.getText():null)));
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:2394:10: SQL92_RESERVED_NULL
					{
					match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_constant23229); 
					// TEMPLATE REWRITE
					// 2394:30: -> string_literal(val=\"null\")
					{
						retval.st = templateLib.getInstanceOf("string_literal",new STAttrMap().put("val", "null"));
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:2395:10: SQL92_RESERVED_TRUE
					{
					match(input,SQL92_RESERVED_TRUE,FOLLOW_SQL92_RESERVED_TRUE_in_constant23249); 
					// TEMPLATE REWRITE
					// 2395:30: -> string_literal(val=\"true\")
					{
						retval.st = templateLib.getInstanceOf("string_literal",new STAttrMap().put("val", "true"));
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:2396:10: SQL92_RESERVED_FALSE
					{
					match(input,SQL92_RESERVED_FALSE,FOLLOW_SQL92_RESERVED_FALSE_in_constant23269); 
					// TEMPLATE REWRITE
					// 2396:31: -> string_literal(val=\"false\")
					{
						retval.st = templateLib.getInstanceOf("string_literal",new STAttrMap().put("val", "false"));
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:2397:10: DBTIMEZONE_VK
					{
					match(input,DBTIMEZONE_VK,FOLLOW_DBTIMEZONE_VK_in_constant23289); 
					// TEMPLATE REWRITE
					// 2397:25: -> string_literal(val=\"dbtimezone\")
					{
						retval.st = templateLib.getInstanceOf("string_literal",new STAttrMap().put("val", "dbtimezone"));
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:2398:10: SESSIONTIMEZONE_VK
					{
					match(input,SESSIONTIMEZONE_VK,FOLLOW_SESSIONTIMEZONE_VK_in_constant23310); 
					// TEMPLATE REWRITE
					// 2398:29: -> string_literal(val=\"sessiontimezone\")
					{
						retval.st = templateLib.getInstanceOf("string_literal",new STAttrMap().put("val", "sessiontimezone"));
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:2399:10: MINVALUE_VK
					{
					match(input,MINVALUE_VK,FOLLOW_MINVALUE_VK_in_constant23330); 
					// TEMPLATE REWRITE
					// 2399:22: -> string_literal(val=\"minvalue\")
					{
						retval.st = templateLib.getInstanceOf("string_literal",new STAttrMap().put("val", "minvalue"));
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:2400:10: MAXVALUE_VK
					{
					match(input,MAXVALUE_VK,FOLLOW_MAXVALUE_VK_in_constant23350); 
					// TEMPLATE REWRITE
					// 2400:22: -> string_literal(val=\"maxvalue\")
					{
						retval.st = templateLib.getInstanceOf("string_literal",new STAttrMap().put("val", "maxvalue"));
					}



					}
					break;
				case 13 :
					// PLSQLPrinter.g:2401:10: SQL92_RESERVED_DEFAULT
					{
					match(input,SQL92_RESERVED_DEFAULT,FOLLOW_SQL92_RESERVED_DEFAULT_in_constant23370); 
					// TEMPLATE REWRITE
					// 2401:33: -> string_literal(val=\"default\")
					{
						retval.st = templateLib.getInstanceOf("string_literal",new STAttrMap().put("val", "default"));
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "constant"


	public static class id_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "id"
	// PLSQLPrinter.g:2406:1: id : ( char_set_name )? ID -> template( \"not implemented: id\";
	public final PLSQLPrinter.id_return id() throws RecognitionException {
		PLSQLPrinter.id_return retval = new PLSQLPrinter.id_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2407:5: ( ( char_set_name )? ID -> template( \"not implemented: id\")
			// PLSQLPrinter.g:2407:10: ( char_set_name )? ID
			{
			// PLSQLPrinter.g:2407:10: ( char_set_name )?
			int alt593=2;
			int LA593_0 = input.LA(1);
			if ( (LA593_0==CHAR_SET_NAME) ) {
				alt593=1;
			}
			switch (alt593) {
				case 1 :
					// PLSQLPrinter.g:2407:10: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_id23401);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_id23404); 
			// TEMPLATE REWRITE
			// 2408:5: -> template( \"not implemented: id\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: id");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "id"

	// Delegated rules


	protected DFA326 dfa326 = new DFA326(this);
	static final String DFA326_eotS =
		"\16\uffff";
	static final String DFA326_eofS =
		"\16\uffff";
	static final String DFA326_minS =
		"\1\u00ca\1\2\1\uffff\1\u0103\1\2\1\u00f6\1\2\1\3\1\u018e\1\u0103\1\3\2"+
		"\uffff\1\u018e";
	static final String DFA326_maxS =
		"\1\u0314\1\2\1\uffff\1\u0103\1\2\1\u018e\1\2\2\u018e\1\u02e8\1\u018e\2"+
		"\uffff\1\u018e";
	static final String DFA326_acceptS =
		"\2\uffff\1\3\10\uffff\1\1\1\2\1\uffff";
	static final String DFA326_specialS =
		"\16\uffff}>";
	static final String[] DFA326_transitionS = {
			"\1\1\u0249\uffff\1\2",
			"\1\3",
			"",
			"\1\4",
			"\1\5",
			"\1\6\u0097\uffff\1\7",
			"\1\10",
			"\1\11\u018a\uffff\1\7",
			"\1\12",
			"\1\14\144\uffff\1\13\141\uffff\1\13\u011d\uffff\1\14",
			"\1\15\u018a\uffff\1\12",
			"",
			"",
			"\1\7"
	};

	static final short[] DFA326_eot = DFA.unpackEncodedString(DFA326_eotS);
	static final short[] DFA326_eof = DFA.unpackEncodedString(DFA326_eofS);
	static final char[] DFA326_min = DFA.unpackEncodedStringToUnsignedChars(DFA326_minS);
	static final char[] DFA326_max = DFA.unpackEncodedStringToUnsignedChars(DFA326_maxS);
	static final short[] DFA326_accept = DFA.unpackEncodedString(DFA326_acceptS);
	static final short[] DFA326_special = DFA.unpackEncodedString(DFA326_specialS);
	static final short[][] DFA326_transition;

	static {
		int numStates = DFA326_transitionS.length;
		DFA326_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA326_transition[i] = DFA.unpackEncodedString(DFA326_transitionS[i]);
		}
	}

	protected class DFA326 extends DFA {

		public DFA326(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 326;
			this.eot = DFA326_eot;
			this.eof = DFA326_eof;
			this.min = DFA326_min;
			this.max = DFA326_max;
			this.accept = DFA326_accept;
			this.special = DFA326_special;
			this.transition = DFA326_transition;
		}
		@Override
		public String getDescription() {
			return "1405:1: update_set_elements : ( ^( ASSIGN column_name expression ) -> template( \"not implemented: update_set_elements\"| ^( ASSIGN ( column_name )+ subquery ) -> template( \"not implemented: update_set_elements\"| ^( VALUE_VK ( char_set_name )? ID expression ) -> template( \"not implemented: update_set_elements\");";
		}
	}

	public static final BitSet FOLLOW_COMPILATION_UNIT_in_compilation_unit69 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_unit_statement_in_compilation_unit73 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x9000000000000000L,0x000000000000000FL,0x0000001FE0000000L,0x00000000000FC000L});
	public static final BitSet FOLLOW_SQL_SCRIPT_in_sql_script112 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_unit_statement_in_sql_script116 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x9000000000000000L,0x000000000000000FL,0x0000001FE0000000L,0x00000000000FC000L});
	public static final BitSet FOLLOW_SET_SERVEROUTPUT_in_serveroutput_declaration155 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ON_in_serveroutput_declaration158 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_OFF_VK_in_serveroutput_declaration160 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_alter_function_in_unit_statement196 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_package_in_unit_statement221 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_procedure_in_unit_statement246 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_sequence_in_unit_statement271 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_trigger_in_unit_statement296 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_type_in_unit_statement321 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_function_body_in_unit_statement346 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_procedure_body_in_unit_statement361 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_package_in_unit_statement386 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_sequence_in_unit_statement411 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_trigger_in_unit_statement436 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_type_in_unit_statement461 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_function_in_unit_statement486 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_package_in_unit_statement511 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_procedure_in_unit_statement536 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_sequence_in_unit_statement561 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_trigger_in_unit_statement586 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_type_in_unit_statement611 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_FUNCTION_in_drop_function650 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_function_name_in_drop_function652 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_FUNCTION_in_alter_function688 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_function_name_in_alter_function690 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_DEBUG_VK_in_alter_function692 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_REUSE_VK_in_alter_function695 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_compiler_parameters_clause_in_alter_function698 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CREATE_FUNCTION_in_create_function_body735 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REPLACE_VK_in_create_function_body737 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_FUNCTION_NAME_in_create_function_body741 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ID_in_create_function_body745 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_type_spec_in_create_function_body751 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PARAMETERS_in_create_function_body754 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_in_create_function_body758 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_invoker_rights_clause_in_create_function_body776 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000202000080000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000010001000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_parallel_enable_clause_in_create_function_body781 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000202000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000010001000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_result_cache_clause_in_create_function_body786 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000202000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_DETERMINISTIC_VK_in_create_function_body789 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000202000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_PIPELINED_VK_in_create_function_body792 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000202000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_USING_MODE_in_create_function_body813 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_AGGREGATE_VK_in_create_function_body815 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_implementation_type_name_in_create_function_body818 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CALL_MODE_in_create_function_body853 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_call_spec_in_create_function_body855 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BODY_MODE_in_create_function_body890 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_declare_spec_in_create_function_body892 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000041920000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060002L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_body_in_create_function_body895 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PARALLEL_ENABLE_VK_in_parallel_enable_clause1061 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_partition_by_clause_in_parallel_enable_clause1063 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PARTITION_VK_in_partition_by_clause1100 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_partition_by_clause1102 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ANY_in_partition_by_clause1122 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_HASH_VK_in_partition_by_clause1142 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_COLUMNS_in_partition_by_clause1145 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_partition_by_clause1147 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_RANGE_VK_in_partition_by_clause1170 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_COLUMNS_in_partition_by_clause1173 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_partition_by_clause1175 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_streaming_clause_in_partition_by_clause1207 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RESULT_CACHE_VK_in_result_cache_clause1253 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_relies_on_part_in_result_cache_clause1255 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RELIES_ON_VK_in_relies_on_part1292 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_tableview_name_in_relies_on_part1294 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_STREAMING_CLAUSE_in_streaming_clause1331 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ORDER_in_streaming_clause1334 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CLUSTER_VK_in_streaming_clause1336 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_streaming_clause1339 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_COLUMNS_in_streaming_clause1342 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_streaming_clause1344 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_DROP_PACKAGE_in_drop_package1387 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_package_name_in_drop_package1389 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_BODY_VK_in_drop_package1391 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_PACKAGE_in_alter_package1428 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_package_name_in_alter_package1430 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L,0x0040000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L,0x0000000100000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_DEBUG_VK_in_alter_package1432 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L,0x0000000100000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_REUSE_VK_in_alter_package1435 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PACKAGE_VK_in_alter_package1456 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_BODY_VK_in_alter_package1458 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_SPECIFICATION_VK_in_alter_package1460 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_compiler_parameters_clause_in_alter_package1464 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CREATE_PACKAGE_SPEC_in_create_package1501 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REPLACE_VK_in_create_package1503 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_package_name_in_create_package1506 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L,0x0000040000000000L,0x0000000100000000L,0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000060102L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_invoker_rights_clause_in_create_package1508 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L,0x0000000100000000L,0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000060102L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_package_obj_spec_in_create_package1511 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L,0x0000000100000000L,0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000060102L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_CREATE_PACKAGE_BODY_in_create_package1540 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REPLACE_VK_in_create_package1542 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_package_name_in_create_package1545 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000041920000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060000L,0x0000000000000000L,0x0003020100000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_package_obj_body_in_create_package1547 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000041920000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060000L,0x0000000000000000L,0x0003020100000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_seq_of_statements_in_create_package1550 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_variable_declaration_in_package_obj_spec1588 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subtype_declaration_in_package_obj_spec1614 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cursor_declaration_in_package_obj_spec1640 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_exception_declaration_in_package_obj_spec1666 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_record_declaration_in_package_obj_spec1692 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_declaration_in_package_obj_spec1718 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_procedure_spec_in_package_obj_spec1744 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_spec_in_package_obj_spec1770 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pragma_declaration_in_package_obj_spec1796 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PROCEDURE_SPEC_in_procedure_spec1832 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_procedure_name_in_procedure_spec1834 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PARAMETERS_in_procedure_spec1837 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_in_procedure_spec1839 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_CALL_MODE_in_procedure_spec1857 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_call_spec_in_procedure_spec1859 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FUNCTION_SPEC_in_function_spec1904 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_function_name_in_function_spec1906 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_type_spec_in_function_spec1909 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_SELF_VK_in_function_spec1911 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PARAMETERS_in_function_spec1915 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_in_function_spec1917 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_invoker_rights_clause_in_function_spec1933 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000200000080000L,0x0000000000000000L,0x0000080000000008L,0x0000000000000000L,0x0000000000000000L,0x0000010001000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_parallel_enable_clause_in_function_spec1936 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000080000000008L,0x0000000000000000L,0x0000000000000000L,0x0000010001000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_result_cache_clause_in_function_spec1939 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000080000000008L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_DETERMINISTIC_VK_in_function_spec1942 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000080000000008L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_PIPELINED_VK_in_function_spec1945 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000080000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_CALL_MODE_in_function_spec1966 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_call_spec_in_function_spec1968 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_USING_MODE_in_function_spec1989 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_AGGREGATE_VK_in_function_spec1991 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_implementation_type_name_in_function_spec1994 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXTERNAL_VK_in_function_spec2015 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_function_spec2017 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_variable_declaration_in_package_obj_body2078 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subtype_declaration_in_package_obj_body2105 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cursor_declaration_in_package_obj_body2132 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_exception_declaration_in_package_obj_body2159 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_record_declaration_in_package_obj_body2186 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_declaration_in_package_obj_body2212 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_procedure_body_in_package_obj_body2238 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_function_body_in_package_obj_body2264 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_type_in_package_obj_body2290 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_PROCEDURE_in_drop_procedure2331 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_procedure_name_in_drop_procedure2333 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_PROCEDURE_in_alter_procedure2369 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_procedure_name_in_alter_procedure2371 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_DEBUG_VK_in_alter_procedure2373 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_REUSE_VK_in_alter_procedure2376 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_compiler_parameters_clause_in_alter_procedure2379 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CREATE_PROCEDURE_in_create_procedure_body2416 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REPLACE_VK_in_create_procedure_body2418 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_procedure_name_in_create_procedure_body2421 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PARAMETERS_in_create_procedure_body2424 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_in_create_procedure_body2426 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_invoker_rights_clause_in_create_procedure_body2430 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000202000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_EXTERNAL_VK_in_create_procedure_body2450 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CALL_MODE_in_create_procedure_body2470 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_call_spec_in_create_procedure_body2472 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BODY_MODE_in_create_procedure_body2493 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_declare_spec_in_create_procedure_body2495 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000041920000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060002L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_body_in_create_procedure_body2498 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DROP_TRIGGER_in_drop_trigger2562 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_trigger_name_in_drop_trigger2564 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_TRIGGER_in_alter_trigger2600 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_trigger_name_in_alter_trigger2602 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000400L,0x0000000002000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000104000000L});
	public static final BitSet FOLLOW_ENABLE_VK_in_alter_trigger2623 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DISABLE_VK_in_alter_trigger2625 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RENAME_VK_in_alter_trigger2646 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_trigger_name_in_alter_trigger2648 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DEBUG_VK_in_alter_trigger2668 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_REUSE_VK_in_alter_trigger2671 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_compiler_parameters_clause_in_alter_trigger2674 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CREATE_TRIGGER_in_create_trigger2734 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REPLACE_VK_in_create_trigger2736 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_trigger_name_in_create_trigger2739 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000402000000000L,0x0000000000003000L,0x0020000002000040L,0x0000000000000000L,0x0400000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_simple_dml_trigger_in_create_trigger2755 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000402000000000L,0x0000000000003000L,0x0020000002000040L,0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_compound_dml_trigger_in_create_trigger2758 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000402000000000L,0x0000000000002000L,0x0020000002000040L,0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_non_dml_trigger_in_create_trigger2761 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000402000000000L,0x0000000000002000L,0x0020000002000040L});
	public static final BitSet FOLLOW_trigger_follows_clause_in_create_trigger2776 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000402000000000L,0x0000000000002000L,0x0000000002000040L});
	public static final BitSet FOLLOW_ENABLE_VK_in_create_trigger2780 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000402000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_DISABLE_VK_in_create_trigger2782 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000402000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_trigger_when_clause_in_create_trigger2786 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000402000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_trigger_body_in_create_trigger2789 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FOLLOWS_VK_in_trigger_follows_clause2825 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_trigger_name_in_trigger_follows_clause2827 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WHEN_in_trigger_when_clause2864 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_trigger_when_clause2866 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SIMPLE_DML_in_simple_dml_trigger2903 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_BEFORE_VK_in_simple_dml_trigger2906 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000200L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_AFTER_VK_in_simple_dml_trigger2908 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000200L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_INSTEAD_VK_in_simple_dml_trigger2910 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000200L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_FOR_EACH_ROW_in_simple_dml_trigger2913 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_referencing_clause_in_simple_dml_trigger2916 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_dml_event_clause_in_simple_dml_trigger2919 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COMPOUND_DML_in_compound_dml_trigger2955 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_referencing_clause_in_compound_dml_trigger2957 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_dml_event_clause_in_compound_dml_trigger2960 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NON_DML_in_non_dml_trigger2996 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_BEFORE_VK_in_non_dml_trigger2999 = new BitSet(new long[]{0x0000000000000000L,0x0201002000000000L,0x0000000000800008L,0x0000000000040810L,0x0031000000000020L,0x0020000000000080L,0x0000000000000000L,0x0008000000001800L,0x0000000000000000L,0x0008000004000000L,0x0000000000002040L,0x0000040080000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_AFTER_VK_in_non_dml_trigger3001 = new BitSet(new long[]{0x0000000000000000L,0x0201002000000000L,0x0000000000800008L,0x0000000000040810L,0x0031000000000020L,0x0020000000000080L,0x0000000000000000L,0x0008000000001800L,0x0000000000000000L,0x0008000004000000L,0x0000000000002040L,0x0000040080000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_non_dml_event_in_non_dml_trigger3004 = new BitSet(new long[]{0x0000000000000000L,0x0201002000000000L,0x0000000000800008L,0x0000000000040810L,0x0031000000000020L,0x0020000000000080L,0x0000000000000000L,0x0008000000001800L,0x0000000000000000L,0x000C000004000000L,0x0000000000002040L,0x0000040080000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_DATABASE_VK_in_non_dml_trigger3008 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_schema_name_in_non_dml_trigger3010 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
	public static final BitSet FOLLOW_SCHEMA_VK_in_non_dml_trigger3013 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COMPOUND_VK_in_trigger_body3050 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_trigger_name_in_trigger_body3052 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0030000000000000L,0x0000000003000000L,0x0000041920000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060002L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_declare_spec_in_trigger_body3054 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0030000000000000L,0x0000000003000000L,0x0000041920000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060002L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_timing_point_section_in_trigger_body3057 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0030000000000000L,0x0000000003000000L});
	public static final BitSet FOLLOW_CALL_VK_in_trigger_body3085 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_routine_name_in_trigger_body3087 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_function_argument_in_trigger_body3089 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BODY_MODE_in_trigger_body3118 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_block_in_trigger_body3120 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BEFORE_STATEMENT_in_timing_point_section3156 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_block_in_timing_point_section3158 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BEFORE_EACH_ROW_in_timing_point_section3185 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_block_in_timing_point_section3187 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_AFTER_STATEMENT_in_timing_point_section3214 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_block_in_timing_point_section3216 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_AFTER_EACH_ROW_in_timing_point_section3243 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_block_in_timing_point_section3245 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALTER_in_non_dml_event3280 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ANALYZE_VK_in_non_dml_event3305 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ASSOCIATE_VK_in_non_dml_event3330 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
	public static final BitSet FOLLOW_STATISTICS_VK_in_non_dml_event3332 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AUDIT_VK_in_non_dml_event3357 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COMMENT_VK_in_non_dml_event3382 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_CREATE_in_non_dml_event3407 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DISASSOCIATE_VK_in_non_dml_event3432 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
	public static final BitSet FOLLOW_STATISTICS_VK_in_non_dml_event3434 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DROP_in_non_dml_event3459 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_GRANT_in_non_dml_event3484 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOAUDIT_VK_in_non_dml_event3509 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RENAME_VK_in_non_dml_event3534 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_REVOKE_in_non_dml_event3559 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TRUNCATE_VK_in_non_dml_event3584 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DDL_VK_in_non_dml_event3609 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STARTUP_VK_in_non_dml_event3634 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SHUTDOWN_VK_in_non_dml_event3659 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DB_ROLE_CHANGE_VK_in_non_dml_event3684 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LOGON_VK_in_non_dml_event3709 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LOGOFF_VK_in_non_dml_event3734 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SERVERERROR_VK_in_non_dml_event3759 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SUSPEND_VK_in_non_dml_event3784 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DATABASE_VK_in_non_dml_event3809 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SCHEMA_VK_in_non_dml_event3834 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FOLLOWS_VK_in_non_dml_event3859 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DML_EVENT_in_dml_event_clause3894 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_dml_event_element_in_dml_event_clause3896 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ON_in_dml_event_clause3900 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_tableview_name_in_dml_event_clause3902 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0002000000000000L});
	public static final BitSet FOLLOW_dml_event_nested_clause_in_dml_event_clause3904 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DML_EVENT_ELEMENT_in_dml_event_element3944 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DELETE_in_dml_event_element3947 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_INSERT_in_dml_event_element3949 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UPDATE_in_dml_event_element3951 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_COLUMNS_in_dml_event_element3955 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_dml_event_element3957 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_NESTED_VK_in_dml_event_nested_clause3995 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_tableview_name_in_dml_event_nested_clause3997 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_REFERENCING_VK_in_referencing_clause4033 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_referencing_element_in_referencing_clause4035 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000020000800L});
	public static final BitSet FOLLOW_NEW_VK_in_referencing_element4073 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_OLD_VK_in_referencing_element4075 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PARENT_VK_in_referencing_element4077 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_referencing_element4080 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DROP_TYPE_in_drop_type4121 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_name_in_drop_type4123 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L,0x0000000000000000L,0x0080000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_BODY_VK_in_drop_type4125 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_FORCE_VK_in_drop_type4128 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_VALIDATE_VK_in_drop_type4131 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_TYPE_in_alter_type4168 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_name_in_alter_type4170 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2C00000000000000L,0x0000000000000000L,0x0000000000000800L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_REPLACE_VK_in_alter_type4191 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_OBJECT_MEMBERS_in_alter_type4194 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_element_spec_in_alter_type4196 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_invoker_rights_clause_in_alter_type4200 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_ATTRIBUTE_in_alter_type4222 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ADD_VK_in_alter_type4225 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_MODIFY_VK_in_alter_type4227 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DROP_in_alter_type4229 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ATTRIBUTES_in_alter_type4233 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_attribute_definition_in_alter_type4235 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_ALTER_METHOD_in_alter_type4258 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alter_method_element_in_alter_type4260 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_alter_collection_clauses_in_alter_type4281 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_modifier_clause_in_alter_type4300 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_COMPILE_VK_in_alter_type4320 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SPECIFICATION_VK_in_alter_type4323 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_BODY_VK_in_alter_type4325 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_DEBUG_VK_in_alter_type4329 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_REUSE_VK_in_alter_type4332 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_compiler_parameters_clause_in_alter_type4335 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_dependent_handling_clause_in_alter_type4366 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_METHOD_ELEMENT_in_alter_method_element4414 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ADD_VK_in_alter_method_element4417 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000240000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DROP_in_alter_method_element4419 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000240000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_map_order_function_spec_in_alter_method_element4422 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_subprogram_spec_in_alter_method_element4425 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ATTRIBUTE_in_attribute_definition4462 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_attribute_name_in_attribute_definition4464 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_attribute_definition4466 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_COLLECTION_in_alter_collection_clauses4503 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_TYPE_VK_in_alter_collection_clauses4524 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_spec_in_alter_collection_clauses4526 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_LIMIT_VK_in_alter_collection_clauses4547 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_alter_collection_clauses4549 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DEPENDENT_HANDLING_in_dependent_handling_clause4610 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_INVALIDATE_VK_in_dependent_handling_clause4630 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CASCADE_VK_in_dependent_handling_clause4650 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CONVERT_VK_in_dependent_handling_clause4678 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NOT_in_dependent_handling_clause4705 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_INCLUDING_VK_in_dependent_handling_clause4708 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXCEPTIONS_VK_in_dependent_exceptions_part4808 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_FORCE_VK_in_dependent_exceptions_part4810 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_tableview_name_in_dependent_exceptions_part4813 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CREATE_TYPE_BODY_in_create_type4851 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REPLACE_VK_in_create_type4853 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_type_name_in_create_type4856 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_TYPE_BODY_ELEMENTS_in_create_type4859 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_body_elements_in_create_type4861 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000240000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_CREATE_TYPE_SPEC_in_create_type4890 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REPLACE_VK_in_create_type4892 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_type_name_in_create_type4895 = new BitSet(new long[]{0x0000000000008008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_CHAR_STRING_in_create_type4897 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_object_type_def_in_create_type4900 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_OBJECT_TYPE_DEF_in_object_type_def4937 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_object_as_part_in_object_type_def4940 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L,0x0000000000000000L,0x0000000000000000L,0x0010000000000000L,0x0000000400000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_object_under_part_in_object_type_def4942 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L,0x0000000000000000L,0x0000000000000000L,0x0010000000000000L,0x0000000400000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_invoker_rights_clause_in_object_type_def4945 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010000000000000L,0x0000000400000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_sqlj_object_type_in_object_type_def4961 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_modifier_clause_in_object_type_def4964 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_OBJECT_MEMBERS_in_object_type_def4968 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_element_spec_in_object_type_def4970 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_OBJECT_AS_in_object_as_part5010 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_OBJECT_VK_in_object_as_part5013 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_varray_type_def_in_object_as_part5015 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_nested_table_type_def_in_object_as_part5017 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_UNDER_VK_in_object_under_part5054 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_spec_in_object_under_part5056 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NESTED_TABLE_TYPE_DEF_in_nested_table_type_def5092 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_spec_in_nested_table_type_def5094 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_nested_table_type_def5096 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_table_indexed_by_part_in_nested_table_type_def5099 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_JAVA_VK_in_sqlj_object_type5136 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_sqlj_object_type5138 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_SQLDATA_VK_in_sqlj_object_type5141 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CUSTOMDATUM_VK_in_sqlj_object_type5143 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ORADATA_VK_in_sqlj_object_type5145 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_map_order_func_declaration_in_type_body_elements5181 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subprog_decl_in_type_in_type_body_elements5206 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MAP_VK_in_map_order_func_declaration5242 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ORDER_in_map_order_func_declaration5244 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_create_function_body_in_map_order_func_declaration5247 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MEMBER_VK_in_subprog_decl_in_type5284 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_STATIC_VK_in_subprog_decl_in_type5286 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_create_procedure_body_in_subprog_decl_in_type5306 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_create_function_body_in_subprog_decl_in_type5325 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_constructor_declaration_in_subprog_decl_in_type5344 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CONSTRUCTOR_VK_in_constructor_declaration5403 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_spec_in_constructor_declaration5405 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0001000000000000L,0x0000000020000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_FINAL_VK_in_constructor_declaration5407 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_INSTANTIABLE_VK_in_constructor_declaration5410 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PARAMETERS_in_constructor_declaration5414 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_elements_parameter_in_constructor_declaration5416 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_CALL_MODE_in_constructor_declaration5439 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_call_spec_in_constructor_declaration5441 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BODY_MODE_in_constructor_declaration5462 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_declare_spec_in_constructor_declaration5464 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000041920000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060002L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_body_in_constructor_declaration5467 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MODIFIER_in_modifier_clause5531 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NOT_in_modifier_clause5533 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0001000000000000L,0x0000000020000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_INSTANTIABLE_VK_in_modifier_clause5537 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FINAL_VK_in_modifier_clause5539 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_OVERRIDING_VK_in_modifier_clause5541 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXTERNAL_VK_in_sqlj_object_type_attr5578 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_sqlj_object_type_attr5580 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ELEMENT_SPEC_in_element_spec5616 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_element_spec_options_in_element_spec5618 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x0000000000040000L,0x0000800000000000L,0x0000000000000000L,0x0000000400240000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_modifier_clause_in_element_spec5621 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_pragma_clause_in_element_spec5624 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_subprogram_spec_in_element_spec_options5660 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_constructor_spec_in_element_spec_options5685 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_map_order_function_spec_in_element_spec_options5710 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FIELD_SPEC_in_element_spec_options5736 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_id_in_element_spec_options5738 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_element_spec_options5740 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_sqlj_object_type_attr_in_element_spec_options5742 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MEMBER_VK_in_subprogram_spec5780 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_STATIC_VK_in_subprogram_spec5782 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_procedure_spec_in_subprogram_spec5802 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_function_spec_in_subprogram_spec5821 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CONSTRUCTOR_SPEC_in_constructor_spec5880 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_spec_in_constructor_spec5882 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0001000000000000L,0x0000000020000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_FINAL_VK_in_constructor_spec5884 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_INSTANTIABLE_VK_in_constructor_spec5887 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PARAMETERS_in_constructor_spec5891 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_elements_parameter_in_constructor_spec5893 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_constructor_call_mode_in_constructor_spec5897 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CALL_MODE_in_constructor_call_mode5934 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_call_spec_in_constructor_call_mode5936 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MAP_VK_in_map_order_function_spec5973 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ORDER_in_map_order_function_spec5975 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_function_spec_in_map_order_function_spec5978 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PRAGMA_VK_in_pragma_clause6014 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_pragma_elements_in_pragma_clause6016 = new BitSet(new long[]{0x0000000000000008L,0x0020000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_id_in_pragma_elements6052 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DEFAULT_in_pragma_elements6077 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PARAMETER_in_type_elements_parameter6112 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_name_in_type_elements_parameter6114 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_type_elements_parameter6116 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DROP_SEQUENCE_in_drop_sequence6157 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_sequence_name_in_drop_sequence6159 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_SEQUENCE_in_alter_sequence6195 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_sequence_name_in_alter_sequence6197 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L,0x0000400000000000L,0x0000000000000000L,0x0000000000100000L,0x0B50000008080000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1800000000000000L});
	public static final BitSet FOLLOW_sequence_spec_in_alter_sequence6199 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L,0x0000400000000000L,0x0000000000000000L,0x0000000000100000L,0x0B50000008080000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1800000000000000L});
	public static final BitSet FOLLOW_CREATE_SEQUENCE_in_create_sequence6236 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_sequence_name_in_create_sequence6238 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L,0x0000400000000000L,0x0000000000000000L,0x0000000000100000L,0x0B50000008080000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1800000000000000L});
	public static final BitSet FOLLOW_sequence_spec_in_create_sequence6240 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L,0x0000400000000000L,0x0000000000000000L,0x0000000000100000L,0x0B50000008080000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1800000000000000L});
	public static final BitSet FOLLOW_START_VK_in_sequence_spec6279 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6281 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_INCREMENT_VK_in_sequence_spec6308 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6310 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MAXVALUE_VK_in_sequence_spec6337 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6339 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MINVALUE_VK_in_sequence_spec6366 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6368 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CACHE_VK_in_sequence_spec6395 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6397 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NOMAXVALUE_VK_in_sequence_spec6423 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOMINVALUE_VK_in_sequence_spec6448 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CYCLE_VK_in_sequence_spec6473 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOCYCLE_VK_in_sequence_spec6498 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOCACHE_VK_in_sequence_spec6523 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ORDER_VK_in_sequence_spec6548 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOORDER_VK_in_sequence_spec6573 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AUTHID_VK_in_invoker_rights_clause6614 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CURRENT_USER_VK_in_invoker_rights_clause6617 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DEFINER_VK_in_invoker_rights_clause6619 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COMPILER_PARAMETER_in_compiler_parameters_clause6656 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ASSIGN_in_compiler_parameters_clause6659 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_id_in_compiler_parameters_clause6661 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_compiler_parameters_clause6663 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_LANGUAGE_VK_in_call_spec6700 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_java_spec_in_call_spec6704 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_c_spec_in_call_spec6708 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_JAVA_VK_in_java_spec6748 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CHAR_STRING_in_java_spec6750 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_C_VK_in_c_spec6786 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CHAR_STRING_in_c_spec6788 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_CONTEXT_VK_in_c_spec6791 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_LIBRARY_VK_in_c_spec6795 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_id_in_c_spec6797 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_c_agent_in_clause_in_c_spec6800 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_c_parameters_clause_in_c_spec6803 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_AGENT_VK_in_c_agent_in_clause6840 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_c_agent_in_clause6842 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_PARAMETERS_VK_in_c_parameters_clause6879 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_THREE_DOTS_in_c_parameters_clause6882 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_c_parameters_clause6884 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_PARAMETER_in_parameter6924 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_name_in_parameter6926 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x1000200000000000L,0x0000000000000000L,0x0000000110000000L,0x0000020000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_IN_in_parameter6929 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x1000200000000000L,0x0000000000000000L,0x0000000110000000L,0x0000020000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_OUT_VK_in_parameter6931 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x1000200000000000L,0x0000000000000000L,0x0000000110000000L,0x0000020000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_INOUT_VK_in_parameter6933 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x1000200000000000L,0x0000000000000000L,0x0000000110000000L,0x0000020000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_type_spec_in_parameter6937 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_default_value_part_in_parameter6940 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DEFAULT_VALUE_in_default_value_part7038 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_default_value_part7040 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_variable_declaration_in_declare_spec7081 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subtype_declaration_in_declare_spec7107 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cursor_declaration_in_declare_spec7133 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_exception_declaration_in_declare_spec7159 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pragma_declaration_in_declare_spec7185 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_record_declaration_in_declare_spec7211 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_declaration_in_declare_spec7237 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_procedure_body_in_declare_spec7263 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_function_body_in_declare_spec7289 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_type_in_declare_spec7315 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VARIABLE_DECLARE_in_variable_declaration7351 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_variable_name_in_variable_declaration7353 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_variable_declaration7355 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x1000000000010000L});
	public static final BitSet FOLLOW_CONSTANT_VK_in_variable_declaration7357 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_variable_declaration7360 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_default_value_part_in_variable_declaration7363 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SUBTYPE_DECLARE_in_subtype_declaration7406 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_name_in_subtype_declaration7408 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_subtype_declaration7410 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_subtype_declaration7412 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_subtype_range_in_subtype_declaration7415 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RANGE_VK_in_subtype_range7454 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_subtype_range7456 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CURSOR_DECLARE_in_cursor_declaration7494 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_cursor_name_in_cursor_declaration7496 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L,0x0000000004000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_type_spec_in_cursor_declaration7498 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_select_statement_in_cursor_declaration7501 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PARAMETERS_in_cursor_declaration7505 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_spec_in_cursor_declaration7507 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_PARAMETER_in_parameter_spec7546 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_name_in_parameter_spec7548 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_parameter_spec7550 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_default_value_part_in_parameter_spec7553 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXCEPTION_DECLARE_in_exception_declaration7591 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_exception_name_in_exception_declaration7593 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PRAGMA_DECLARE_in_pragma_declaration7642 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SERIALLY_REUSABLE_VK_in_pragma_declaration7662 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_AUTONOMOUS_TRANSACTION_VK_in_pragma_declaration7682 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXCEPTION_INIT_VK_in_pragma_declaration7702 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_exception_name_in_pragma_declaration7704 = new BitSet(new long[]{0x0000200008008040L,0x4020000000000000L,0x0000080040002000L,0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008080000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_constant_in_pragma_declaration7706 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_INLINE_VK_in_pragma_declaration7727 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_id_in_pragma_declaration7729 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_pragma_declaration7731 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RESTRICT_REFERENCES_VK_in_pragma_declaration7752 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DEFAULT_in_pragma_declaration7754 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_id_in_pragma_declaration7757 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_record_type_dec_in_record_declaration7817 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_record_var_dec_in_record_declaration7842 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RECORD_TYPE_DECLARE_in_record_type_dec7880 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_name_in_record_type_dec7882 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000400000000000L,0x0000000100000000L,0x0000020000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_REF_VK_in_record_type_dec7884 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000400000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_record_type_dec7887 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_FIELDS_in_record_type_dec7891 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_field_spec_in_record_type_dec7893 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_FIELD_SPEC_in_field_spec7931 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_field_spec7933 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x1000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_field_spec7935 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_field_spec7938 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_default_value_part_in_field_spec7941 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RECORD_VAR_DECLARE_in_record_var_dec7978 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_record_name_in_record_var_dec7980 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_type_name_in_record_var_dec7982 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000006000000000L});
	public static final BitSet FOLLOW_PERCENT_ROWTYPE_VK_in_record_var_dec7985 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PERCENT_TYPE_VK_in_record_var_dec7987 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_table_type_dec_in_table_declaration8025 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_var_dec_in_table_declaration8050 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TABLE_TYPE_DECLARE_in_table_type_dec8085 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_name_in_table_type_dec8087 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000004002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_varray_type_def_in_table_type_dec8107 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_table_type_dec8126 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_TABLE_in_table_type_dec8130 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_spec_in_table_type_dec8132 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_table_indexed_by_part_in_table_type_dec8134 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_INDEXED_BY_in_table_indexed_by_part8195 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_spec_in_table_indexed_by_part8197 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_varray_type_def8232 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_VARR_ARRAY_DEF_in_varray_type_def8236 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_varray_type_def8238 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_varray_type_def8240 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_TABLE_VAR_DECLARE_in_table_var_dec8276 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_table_var_name_in_table_var_dec8278 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_table_var_dec8280 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_STATEMENTS_in_seq_of_statements8321 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_statement_in_seq_of_statements8325 = new BitSet(new long[]{0x0000000000000008L,0x8040000000000024L,0x0000000200002084L,0x1004001400000400L,0x0000000000400080L,0x0240006000000000L,0x0080000000000000L,0x0000000001008000L,0x0000020000002000L,0x4021004080000800L,0x0000000000020500L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_label_declaration_in_statement8360 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_assignment_statement_in_statement8375 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_continue_statement_in_statement8390 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_exit_statement_in_statement8405 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_goto_statement_in_statement8420 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_if_statement_in_statement8435 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_loop_statement_in_statement8450 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_forall_statement_in_statement8465 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_null_statement_in_statement8480 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_raise_statement_in_statement8495 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_return_statement_in_statement8510 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pipe_row_statement_in_statement8525 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_case_statement_in_statement8540 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sql_statement_in_statement8555 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_general_element_in_statement8570 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_body_in_statement8585 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_statement8600 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LABEL_DECLARE_in_label_declaration8625 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_label_declaration8627 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ASSIGN_in_assignment_statement8664 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_general_element_in_assignment_statement8666 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_assignment_statement8668 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CONTINUE_VK_in_continue_statement8704 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_continue_statement8706 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_general_when_in_continue_statement8709 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WHEN_in_general_when8746 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_general_when8748 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXIT_VK_in_exit_statement8784 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_exit_statement8786 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_general_when_in_exit_statement8789 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_GOTO_in_goto_statement8826 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_goto_statement8828 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_IF_in_if_statement8864 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_if_statement8866 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_if_statement8868 = new BitSet(new long[]{0x0080000000000008L,0x0400000000000000L});
	public static final BitSet FOLLOW_elsif_part_in_if_statement8870 = new BitSet(new long[]{0x0080000000000008L,0x0400000000000000L});
	public static final BitSet FOLLOW_else_part_in_if_statement8873 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_NON_RESERVED_ELSIF_in_elsif_part8910 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_elsif_part8912 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_elsif_part8914 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ELSE_in_else_part8950 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_seq_of_statements_in_else_part8952 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_WHILE_LOOP_in_loop_statement8988 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_loop_statement8990 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0100000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_loop_statement8993 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_loop_statement8995 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FOR_LOOP_in_loop_statement9022 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_loop_statement9024 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0000000000000000L,0x0100000000800000L,0x0000000000000000L,0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_cursor_loop_param_in_loop_statement9027 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_loop_statement9029 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_LOOP_VK_in_loop_statement9056 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_loop_statement9058 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_loop_statement9061 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_INDEXED_FOR_in_cursor_loop_param9099 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_index_name_in_cursor_loop_param9101 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_REVERSE_VK_in_cursor_loop_param9103 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_SIMPLE_BOUND_in_cursor_loop_param9107 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_cursor_loop_param9109 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_cursor_loop_param9111 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CURSOR_BASED_FOR_in_cursor_loop_param9139 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_record_name_in_cursor_loop_param9141 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_cursor_name_in_cursor_loop_param9143 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_expression_list_in_cursor_loop_param9145 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SELECT_BASED_FOR_in_cursor_loop_param9173 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_record_name_in_cursor_loop_param9175 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_select_statement_in_cursor_loop_param9177 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FORALL_VK_in_forall_statement9215 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_index_name_in_forall_statement9217 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L,0x0000000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_bounds_clause_in_forall_statement9219 = new BitSet(new long[]{0x0000000000000000L,0x8040000000000020L,0x0000000200000080L,0x1000000000000000L,0x0000000000000080L,0x0000002000000000L,0x0000000000000000L,0x0000000001000000L,0x0000000000002000L,0x4001004000000000L,0x0000000000000500L});
	public static final BitSet FOLLOW_sql_statement_in_forall_statement9221 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_EXCEPTIONS_VK_in_forall_statement9223 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SIMPLE_BOUND_in_bounds_clause9260 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_bounds_clause9262 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_bounds_clause9264 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_INDICES_BOUND_in_bounds_clause9291 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_collection_name_in_bounds_clause9293 = new BitSet(new long[]{0x0000000000000008L,0x0000080000000000L});
	public static final BitSet FOLLOW_between_bound_in_bounds_clause9295 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_VALUES_BOUND_in_bounds_clause9323 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_index_name_in_bounds_clause9325 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_BETWEEN_in_between_bound9362 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_between_bound9364 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_between_bound9366 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_null_statement9401 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RAISE_VK_in_raise_statement9436 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_exception_name_in_raise_statement9438 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RETURN_VK_in_return_statement9475 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_return_statement9477 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BODY_in_body9514 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_body9516 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_body9519 = new BitSet(new long[]{0x0000000000000008L,0x1000000000000000L});
	public static final BitSet FOLLOW_exception_clause_in_body9521 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_EXCEPTION_in_exception_clause9572 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_exception_handler_in_exception_clause9574 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WHEN_in_exception_handler9611 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_exception_name_in_exception_handler9613 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_exception_handler9616 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BLOCK_in_block9654 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_declare_spec_in_block9656 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000041920000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060002L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_body_in_block9659 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_execute_immediate_in_sql_statement9698 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_data_manipulation_language_statements_in_sql_statement9723 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cursor_manipulation_statements_in_sql_statement9748 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_transaction_control_statements_in_sql_statement9773 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXECUTE_VK_in_execute_immediate9808 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_execute_immediate9810 = new BitSet(new long[]{0x0800000000000008L,0x0000000000000000L,0x0000000000000200L,0x0000040000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_into_clause_in_execute_immediate9827 = new BitSet(new long[]{0x0800000000000008L});
	public static final BitSet FOLLOW_using_clause_in_execute_immediate9829 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_using_clause_in_execute_immediate9847 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_dynamic_returning_clause_in_execute_immediate9849 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_dynamic_returning_clause_in_execute_immediate9867 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DYNAMIC_RETURN_in_dynamic_returning_clause9926 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_into_clause_in_dynamic_returning_clause9928 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_merge_statement_in_data_manipulation_language_statements9967 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_lock_table_statement_in_data_manipulation_language_statements9992 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_select_statement_in_data_manipulation_language_statements10017 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_update_statement_in_data_manipulation_language_statements10043 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_delete_statement_in_data_manipulation_language_statements10069 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_insert_statement_in_data_manipulation_language_statements10094 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SELECT_STATEMENT_in_select_statement10129 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_subquery_factoring_clause_in_select_statement10131 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_subquery_in_select_statement10134 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040001L});
	public static final BitSet FOLLOW_for_update_clause_in_select_statement10136 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040001L});
	public static final BitSet FOLLOW_order_by_clause_in_select_statement10139 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WITH_in_subquery_factoring_clause10179 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_factoring_element_in_subquery_factoring_clause10181 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_FACTORING_in_factoring_element10218 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_query_name_in_factoring_element10220 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_subquery_in_factoring_element10222 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SUBQUERY_in_subquery10258 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_subquery_basic_elements_in_subquery10260 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000040L,0x0000000080000100L});
	public static final BitSet FOLLOW_subquery_operation_part_in_subquery10262 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000040L,0x0000000080000100L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UNION_in_subquery_operation_part10300 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_INTERSECT_in_subquery_operation_part10302 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_MINUS_in_subquery_operation_part10304 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_subquery_operation_part10307 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000001000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_subquery_basic_elements_in_subquery_operation_part10310 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_query_block_in_subquery_basic_elements10345 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subquery_in_subquery_basic_elements10370 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_SELECT_in_query_block10405 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_from_clause_in_query_block10420 = new BitSet(new long[]{0x0000000000000100L,0x0100001000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DISTINCT_in_query_block10436 = new BitSet(new long[]{0x0000000000000100L,0x0000001000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UNIQUE_in_query_block10438 = new BitSet(new long[]{0x0000000000000100L,0x0000001000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_query_block10442 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_ASTERISK_in_query_block10463 = new BitSet(new long[]{0x0100000000000008L,0x0000000000000000L,0x0000002000000210L,0x0000040000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_SELECT_LIST_in_query_block10483 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_selected_element_in_query_block10485 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_into_clause_in_query_block10515 = new BitSet(new long[]{0x0100000000000008L,0x0000000000000000L,0x0000002000000010L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_where_clause_in_query_block10518 = new BitSet(new long[]{0x0100000000000008L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_hierarchical_query_clause_in_query_block10521 = new BitSet(new long[]{0x0100000000000008L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_group_by_clause_in_query_block10537 = new BitSet(new long[]{0x0100000000000008L});
	public static final BitSet FOLLOW_model_clause_in_query_block10540 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SELECT_ITEM_in_selected_element10586 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_selected_element10588 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_alias_in_selected_element10590 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_FROM_in_from_clause10627 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_table_ref_in_from_clause10629 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_TABLE_REF_in_table_ref10666 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_table_ref_aux_in_table_ref10668 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_join_clause_in_table_ref10670 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_TABLE_REF_ELEMENT_in_table_ref_aux10707 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_table_ref_aux10709 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000600000000000L});
	public static final BitSet FOLLOW_dml_table_expression_clause_in_table_ref_aux10712 = new BitSet(new long[]{0x0000000000000008L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000001000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000800L});
	public static final BitSet FOLLOW_ONLY_VK_in_table_ref_aux10714 = new BitSet(new long[]{0x0000000000000008L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000800L});
	public static final BitSet FOLLOW_pivot_clause_in_table_ref_aux10717 = new BitSet(new long[]{0x0000000000000008L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000800L});
	public static final BitSet FOLLOW_unpivot_clause_in_table_ref_aux10720 = new BitSet(new long[]{0x0000000000000008L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_flashback_query_clause_in_table_ref_aux10723 = new BitSet(new long[]{0x0000000000000008L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_JOIN_DEF_in_join_clause10760 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CROSS_VK_in_join_clause10763 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L,0x8000000008000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_NATURAL_VK_in_join_clause10765 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L,0x8000000008000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_INNER_VK_in_join_clause10770 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_FULL_VK_in_join_clause10772 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_LEFT_VK_in_join_clause10774 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_RIGHT_VK_in_join_clause10776 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_table_ref_aux_in_join_clause10780 = new BitSet(new long[]{0x0800000000000008L,0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_query_partition_clause_in_join_clause10782 = new BitSet(new long[]{0x0800000000000008L,0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_join_on_part_in_join_clause10786 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_join_using_part_in_join_clause10788 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ON_in_join_on_part10827 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_join_on_part10829 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_NON_RESERVED_USING_in_join_using_part10866 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_join_using_part10868 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_PARTITION_VK_in_query_partition_clause10905 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_subquery_in_query_partition_clause10908 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_list_in_query_partition_clause10910 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_query_partition_clause10912 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_VERSIONS_VK_in_flashback_query_clause10951 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_AS_in_flashback_query_clause10953 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SCN_VK_in_flashback_query_clause10957 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_TIMESTAMP_VK_in_flashback_query_clause10959 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_flashback_query_clause10963 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PIVOT_VK_in_pivot_clause11000 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_XML_VK_in_pivot_clause11002 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_pivot_element_in_pivot_clause11005 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_pivot_for_clause_in_pivot_clause11008 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_pivot_in_clause_in_pivot_clause11010 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PIVOT_ELEMENT_in_pivot_element11046 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_pivot_element11048 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_pivot_element11051 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_FOR_in_pivot_for_clause11087 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_pivot_for_clause11089 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_IN_in_pivot_in_clause11126 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_subquery_in_pivot_in_clause11142 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ANY_MODE_in_pivot_in_clause11158 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ANY_in_pivot_in_clause11160 = new BitSet(new long[]{0x0000000000000008L,0x0000008000000000L});
	public static final BitSet FOLLOW_ELEMENTS_MODE_in_pivot_in_clause11178 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_pivot_in_clause_element_in_pivot_in_clause11180 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_PIVOT_IN_ELEMENT_in_pivot_in_clause_element11237 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_pivot_in_clause_element11239 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000030000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_pivot_in_clause_element11243 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_list_in_pivot_in_clause_element11245 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_UNPIVOT_VK_in_unpivot_clause11282 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_INCLUDE_VK_in_unpivot_clause11286 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_EXCLUDE_VK_in_unpivot_clause11288 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_NULLS_VK_in_unpivot_clause11291 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_column_name_in_unpivot_clause11296 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_pivot_for_clause_in_unpivot_clause11299 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_unpivot_in_clause_in_unpivot_clause11301 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_IN_in_unpivot_in_clause11337 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_unpivot_in_element_in_unpivot_in_clause11339 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_UNPIVOT_IN_ELEMENT_in_unpivot_in_element11376 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_unpivot_in_element11378 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_PIVOT_ALIAS_in_unpivot_in_element11382 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_unpivot_in_element11385 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_list_in_unpivot_in_element11387 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_HIERARCHICAL_in_hierarchical_query_clause11425 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_start_part_in_hierarchical_query_clause11427 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_CONNECT_in_hierarchical_query_clause11431 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_NOCYCLE_VK_in_hierarchical_query_clause11433 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_hierarchical_query_clause11436 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_START_in_start_part11473 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_start_part11475 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_GROUP_in_group_by_clause11511 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_group_by_element_in_group_by_clause11513 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000020L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_having_clause_in_group_by_clause11516 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_GROUP_BY_ELEMENT_in_group_by_element11553 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_group_by_elements_in_group_by_element11555 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_GROUPING_VK_in_group_by_elements11591 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_groupin_set_in_group_by_elements11593 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_grouping_element_in_group_by_elements11620 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GROUPIN_SET_in_groupin_set11656 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_grouping_element_in_groupin_set11658 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROLLUP_VK_in_grouping_element11695 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CUBE_VK_in_grouping_element11697 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_grouping_element_in_grouping_element11700 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L,0x0000030000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_expression_list_in_grouping_element11727 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_grouping_element11752 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_HAVING_in_having_clause11788 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_having_clause11790 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_NON_RESERVED_MODEL_in_model_clause11826 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_main_model_in_model_clause11828 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000008000L,0x0000000000000000L,0x0000000000000000L,0x0000000080100000L});
	public static final BitSet FOLLOW_cell_reference_options_in_model_clause11830 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000008000L,0x0000000000000000L,0x0000000000000000L,0x0000000080100000L});
	public static final BitSet FOLLOW_return_rows_clause_in_model_clause11833 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_reference_model_in_model_clause11836 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_set_in_cell_reference_options11873 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_NAV_VK_in_cell_reference_options11879 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UNIQUE_in_cell_reference_options11892 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_DIMENSION_VK_in_cell_reference_options11895 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SINGLE_VK_in_cell_reference_options11897 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RETURN_VK_in_return_rows_clause11934 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UPDATED_VK_in_return_rows_clause11937 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_return_rows_clause11939 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_REFERENCE_VK_in_reference_model11976 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_reference_model_name_in_reference_model11978 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_subquery_in_reference_model11980 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_model_column_clauses_in_reference_model11982 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000008000L});
	public static final BitSet FOLLOW_cell_reference_options_in_reference_model11984 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000008000L});
	public static final BitSet FOLLOW_MAIN_MODEL_in_main_model12021 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_main_model_name_in_main_model12023 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_model_column_clauses_in_main_model12026 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_model_rules_clause_in_main_model12028 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000008000L});
	public static final BitSet FOLLOW_cell_reference_options_in_main_model12030 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000008000L});
	public static final BitSet FOLLOW_MODEL_COLUMN_in_model_column_clauses12067 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_DIMENSION_VK_in_model_column_clauses12070 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_model_column_list_in_model_column_clauses12072 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MEASURES_VK_in_model_column_clauses12076 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_model_column_list_in_model_column_clauses12078 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_model_column_partition_part_in_model_column_clauses12081 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PARTITION_VK_in_model_column_partition_part12118 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_model_column_list_in_model_column_partition_part12120 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MODEL_COLUMNS_in_model_column_list12156 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_model_column_in_model_column_list12158 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_MODEL_COLUMN_in_model_column12195 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_model_column12197 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_model_column12200 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MODEL_RULES_in_model_rules_clause12237 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_model_rules_element_in_model_rules_clause12239 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_model_rules_part_in_model_rules_clause12242 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RULES_VK_in_model_rules_part12279 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UPDATE_in_model_rules_part12295 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_UPSERT_VK_in_model_rules_part12297 = new BitSet(new long[]{0x0000000000000008L,0x0000001000000000L,0x0000000000000000L,0x0000000000100000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_model_rules_part12299 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_AUTOMATIC_VK_in_model_rules_part12318 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
	public static final BitSet FOLLOW_SEQUENTIAL_VK_in_model_rules_part12320 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
	public static final BitSet FOLLOW_model_iterate_clause_in_model_rules_part12337 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MODEL_RULE_in_model_rules_element12383 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ASSIGN_in_model_rules_element12399 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_model_expression_in_model_rules_element12401 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_model_rules_element12403 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UPDATE_in_model_rules_element12420 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_UPSERT_VK_in_model_rules_element12422 = new BitSet(new long[]{0x0000000000000008L,0x0000001000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_model_rules_element12424 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_order_by_clause_in_model_rules_element12442 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ITERATE_VK_in_model_iterate_clause12488 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_model_iterate_clause12490 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_until_part_in_model_iterate_clause12492 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_UNTIL_VK_in_until_part12529 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_until_part12531 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ORDER_in_order_by_clause12567 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SIBLINGS_VK_in_order_by_clause12569 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ORDER_BY_ELEMENTS_in_order_by_clause12573 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_order_by_elements_in_order_by_clause12575 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_ORDER_BY_ELEMENT_in_order_by_elements12613 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_order_by_elements12615 = new BitSet(new long[]{0x0000000000000008L,0x0080020000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ASC_in_order_by_elements12618 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DESC_in_order_by_elements12620 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_NULLS_VK_in_order_by_elements12625 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_FIRST_VK_in_order_by_elements12628 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_LAST_VK_in_order_by_elements12630 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_FOR_in_for_update_clause12669 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_for_update_of_part_in_for_update_clause12671 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000200L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_for_update_options_in_for_update_clause12674 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_OF_in_for_update_of_part12711 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_for_update_of_part12713 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_SKIP_VK_in_for_update_options12749 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_NOWAIT_in_for_update_options12774 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_WAIT_VK_in_for_update_options12800 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_for_update_options12802 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UPDATE_in_update_statement12840 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_general_table_ref_in_update_statement12842 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_update_set_clause_in_update_statement12856 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_where_clause_in_update_statement12870 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_static_returning_clause_in_update_statement12873 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_error_logging_clause_in_update_statement12876 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SET_VK_in_update_set_clause12923 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_update_set_elements_in_update_set_clause12925 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_ASSIGN_in_update_set_elements12962 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_update_set_elements12964 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_update_set_elements12966 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ASSIGN_in_update_set_elements12993 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_update_set_elements12995 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_subquery_in_update_set_elements12998 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_VALUE_VK_in_update_set_elements13025 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_update_set_elements13027 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_update_set_elements13030 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_update_set_elements13032 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DELETE_in_delete_statement13070 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_general_table_ref_in_delete_statement13072 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_where_clause_in_delete_statement13086 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_static_returning_clause_in_delete_statement13089 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_error_logging_clause_in_delete_statement13092 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_INSERT_in_insert_statement13129 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_single_table_insert_in_insert_statement13144 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_multi_table_insert_in_insert_statement13159 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SINGLE_TABLE_MODE_in_single_table_insert13216 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_insert_into_clause_in_single_table_insert13218 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_values_clause_in_single_table_insert13221 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_static_returning_clause_in_single_table_insert13223 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_select_statement_in_single_table_insert13227 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_error_logging_clause_in_single_table_insert13230 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MULTI_TABLE_MODE_in_multi_table_insert13267 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_select_statement_in_multi_table_insert13269 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_conditional_insert_clause_in_multi_table_insert13272 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_multi_table_element_in_multi_table_insert13274 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_TABLE_ELEMENT_in_multi_table_element13312 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_insert_into_clause_in_multi_table_element13314 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_values_clause_in_multi_table_element13316 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_error_logging_clause_in_multi_table_element13319 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CONDITIONAL_INSERT_in_conditional_insert_clause13356 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_conditional_insert_clause13359 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_FIRST_VK_in_conditional_insert_clause13361 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_conditional_insert_when_part_in_conditional_insert_clause13365 = new BitSet(new long[]{0x0000000000000008L,0x0400000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_conditional_insert_else_part_in_conditional_insert_clause13368 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WHEN_in_conditional_insert_when_part13406 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_conditional_insert_when_part13408 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_multi_table_element_in_conditional_insert_when_part13410 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ELSE_in_conditional_insert_else_part13447 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_multi_table_element_in_conditional_insert_else_part13449 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_INTO_in_insert_into_clause13486 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_general_table_ref_in_insert_into_clause13488 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_COLUMNS_in_insert_into_clause13491 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_insert_into_clause13493 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_VALUES_in_values_clause13531 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_list_in_values_clause13534 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_values_clause13536 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MERGE_VK_in_merge_statement13574 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_merge_statement13576 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_tableview_name_in_merge_statement13579 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_PLSQL_NON_RESERVED_USING_in_merge_statement13595 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_selected_tableview_in_merge_statement13597 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_merge_statement13599 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_merge_update_clause_in_merge_statement13615 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000402000L});
	public static final BitSet FOLLOW_merge_insert_clause_in_merge_statement13618 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_error_logging_clause_in_merge_statement13621 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MERGE_UPDATE_in_merge_update_clause13660 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_merge_element_in_merge_update_clause13662 = new BitSet(new long[]{0x0000000000000008L,0x0040000000000000L,0x0000002000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_where_clause_in_merge_update_clause13665 = new BitSet(new long[]{0x0000000000000008L,0x0040000000000000L});
	public static final BitSet FOLLOW_merge_update_delete_part_in_merge_update_clause13668 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ASSIGN_in_merge_element13705 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_merge_element13707 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_merge_element13709 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DELETE_in_merge_update_delete_part13745 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_where_clause_in_merge_update_delete_part13747 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MERGE_INSERT_in_merge_insert_clause13783 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_COLUMNS_in_merge_insert_clause13786 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_merge_insert_clause13788 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_expression_list_in_merge_insert_clause13792 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_where_clause_in_merge_insert_clause13794 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SELECTED_TABLEVIEW_in_selected_tableview13832 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_selected_tableview13834 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_tableview_name_in_selected_tableview13838 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_select_statement_in_selected_tableview13840 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_LOCK_in_lock_table_statement13879 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_lock_table_element_in_lock_table_statement13881 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000801L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_lock_mode_in_lock_table_statement13884 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000200L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_wait_nowait_part_in_lock_table_statement13886 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_WAIT_VK_in_wait_nowait_part13923 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_wait_nowait_part13925 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_NOWAIT_in_wait_nowait_part13951 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LOCK_TABLE_ELEMENT_in_lock_table_element13988 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_tableview_name_in_lock_table_element13990 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_partition_extension_clause_in_lock_table_element13992 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROW_VK_in_lock_mode14028 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_SHARE_in_lock_mode14030 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ROW_VK_in_lock_mode14055 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_EXCLUSIVE_in_lock_mode14057 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_SHARE_in_lock_mode14082 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UPDATE_in_lock_mode14084 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_SHARE_in_lock_mode14110 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_ROW_VK_in_lock_mode14112 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_EXCLUSIVE_in_lock_mode14114 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_EXCLUSIVE_in_lock_mode14139 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TABLE_REF_in_general_table_ref14177 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_general_table_ref14179 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000600000000000L});
	public static final BitSet FOLLOW_dml_table_expression_clause_in_general_table_ref14182 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_ONLY_VK_in_general_table_ref14184 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_STATIC_RETURNING_in_static_returning_clause14221 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_static_returning_clause14223 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L,0x0000040000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_into_clause_in_static_returning_clause14226 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_LOG_VK_in_error_logging_clause14262 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_error_logging_into_part_in_error_logging_clause14264 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_expression_in_error_logging_clause14267 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_error_logging_reject_part_in_error_logging_clause14270 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_INTO_in_error_logging_into_part14307 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_tableview_name_in_error_logging_into_part14309 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_REJECT_VK_in_error_logging_reject_part14345 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UNLIMITED_VK_in_error_logging_reject_part14348 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_error_logging_reject_part14350 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_TABLE_EXPRESSION_in_dml_table_expression_clause14387 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_COLLECTION_MODE_in_dml_table_expression_clause14404 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_dml_table_expression_clause14406 = new BitSet(new long[]{0x0000000000000008L,0x0000000000008000L});
	public static final BitSet FOLLOW_PLUS_SIGN_in_dml_table_expression_clause14408 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SELECT_MODE_in_dml_table_expression_clause14426 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_select_statement_in_dml_table_expression_clause14428 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_subquery_restriction_clause_in_dml_table_expression_clause14430 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DIRECT_MODE_in_dml_table_expression_clause14448 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_tableview_name_in_dml_table_expression_clause14450 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_sample_clause_in_dml_table_expression_clause14452 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_table_ref_in_dml_table_expression_clause14469 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_general_element_in_dml_table_expression_clause14484 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_standard_function_in_dml_table_expression_clause14499 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_table_ref_in_dml_table_expression_clause14548 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WITH_in_subquery_restriction_clause14583 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_READ_VK_in_subquery_restriction_clause14586 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_CHECK_in_subquery_restriction_clause14588 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_constraint_name_in_subquery_restriction_clause14590 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SAMPLE_VK_in_sample_clause14628 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_BLOCK_VK_in_sample_clause14630 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_sample_clause14633 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_seed_part_in_sample_clause14635 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SEED_VK_in_seed_part14673 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_seed_part14675 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_close_statement_in_cursor_manipulation_statements14716 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_open_statement_in_cursor_manipulation_statements14741 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fetch_statement_in_cursor_manipulation_statements14766 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_open_for_statement_in_cursor_manipulation_statements14791 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CLOSE_VK_in_close_statement14827 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_cursor_name_in_close_statement14829 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_OPEN_VK_in_open_statement14866 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_cursor_name_in_open_statement14868 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_expression_list_in_open_statement14870 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_FETCH_in_fetch_statement14907 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_cursor_name_in_fetch_statement14909 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L,0x0000040000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_INTO_in_fetch_statement14930 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_variable_name_in_fetch_statement14932 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000800L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_BULK_VK_in_fetch_statement14954 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_variable_name_in_fetch_statement14956 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000800L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_OPEN_VK_in_open_for_statement15017 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_variable_name_in_open_for_statement15019 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_expression_in_open_for_statement15022 = new BitSet(new long[]{0x0800000000000008L});
	public static final BitSet FOLLOW_select_statement_in_open_for_statement15024 = new BitSet(new long[]{0x0800000000000008L});
	public static final BitSet FOLLOW_using_clause_in_open_for_statement15027 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_set_transaction_command_in_transaction_control_statements15067 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_constraint_command_in_transaction_control_statements15092 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_commit_statement_in_transaction_control_statements15117 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rollback_statement_in_transaction_control_statements15142 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_savepoint_statement_in_transaction_control_statements15167 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SET_TRANSACTION_in_set_transaction_command15202 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CHAR_STRING_in_set_transaction_command15204 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004000004000L});
	public static final BitSet FOLLOW_READ_VK_in_set_transaction_command15225 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ONLY_VK_in_set_transaction_command15228 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_WRITE_VK_in_set_transaction_command15230 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ISOLATION_VK_in_set_transaction_command15252 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SERIALIZABLE_VK_in_set_transaction_command15255 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COMMITTED_VK_in_set_transaction_command15257 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROLLBACK_VK_in_set_transaction_command15279 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_rollback_segment_name_in_set_transaction_command15281 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SET_CONSTRAINT_in_set_constraint_command15342 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_set_constraint_command15345 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_constraint_name_in_set_constraint_command15347 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000000000020000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_IMMEDIATE_VK_in_set_constraint_command15352 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DEFERRED_VK_in_set_constraint_command15354 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COMMIT_VK_in_commit_statement15392 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_WORK_VK_in_commit_statement15394 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L,0x0080000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
	public static final BitSet FOLLOW_COMMENT_VK_in_commit_statement15416 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_commit_statement15418 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FORCE_VK_in_commit_statement15439 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CORRUPT_XID_VK_in_commit_statement15442 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_commit_statement15444 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CORRUPT_XID_ALL_VK_in_commit_statement15446 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_commit_statement15448 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_commit_statement15450 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_write_clause_in_commit_statement15482 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_WRITE_VK_in_write_clause15528 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_WAIT_VK_in_write_clause15531 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_NOWAIT_in_write_clause15533 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_IMMEDIATE_VK_in_write_clause15538 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BATCH_VK_in_write_clause15540 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROLLBACK_VK_in_rollback_statement15579 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_WORK_VK_in_rollback_statement15581 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000020000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_TO_in_rollback_statement15603 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_savepoint_name_in_rollback_statement15605 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FORCE_VK_in_rollback_statement15626 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CHAR_STRING_in_rollback_statement15628 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SAVEPOINT_VK_in_savepoint_statement15689 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_savepoint_name_in_savepoint_statement15691 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PIPE_ROW_in_pipe_row_statement15732 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_pipe_row_statement15734 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXPR_LIST_in_expression_list15774 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_expression_list15776 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LOGIC_EXPR_in_expression15813 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression15815 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXPR_in_expression15842 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression15844 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_OR_in_expression_element15880 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element15882 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element15884 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_AND_in_expression_element15911 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element15913 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element15915 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NOT_in_expression_element15942 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element15944 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EQUALS_OP_in_expression_element15972 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_NOT_EQUAL_OP_in_expression_element15974 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_LESS_THAN_OP_in_expression_element15976 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_GREATER_THAN_OP_in_expression_element15978 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_LESS_THAN_OR_EQUALS_OP_in_expression_element15980 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_GREATER_THAN_OR_EQUALS_OP_in_expression_element15982 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element15985 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element15987 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NOT_NULL_in_expression_element16015 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16017 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NULL_in_expression_element16044 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16046 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NOT_NAN_in_expression_element16073 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16075 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NAN_in_expression_element16102 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16104 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NOT_PRESENT_in_expression_element16131 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16133 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_PRESENT_in_expression_element16160 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16162 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NOT_INFINITE_in_expression_element16189 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16191 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_INFINITE_in_expression_element16218 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16220 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NOT_A_SET_in_expression_element16247 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16249 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_A_SET_in_expression_element16276 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16278 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NOT_EMPTY_in_expression_element16305 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16307 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_EMPTY_in_expression_element16334 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16336 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NOT_OF_TYPE_in_expression_element16363 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16365 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_expression_element16367 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_IS_OF_TYPE_in_expression_element16395 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16397 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_expression_element16399 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_MEMBER_VK_in_expression_element16429 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SUBMULTISET_VK_in_expression_element16431 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16434 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16436 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NOT_IN_in_expression_element16464 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16466 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_in_elements_in_expression_element16468 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_IN_in_expression_element16495 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16497 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_in_elements_in_expression_element16499 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NOT_BETWEEN_in_expression_element16526 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16528 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16530 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16532 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_BETWEEN_in_expression_element16559 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16561 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16563 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16565 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NOT_LIKE_in_expression_element16592 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16594 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16596 = new BitSet(new long[]{0x00022C018C108148L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16598 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_LIKE_in_expression_element16627 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_LIKEC_VK_in_expression_element16629 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_LIKE2_VK_in_expression_element16631 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_LIKE4_VK_in_expression_element16633 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16636 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16638 = new BitSet(new long[]{0x00022C018C108148L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16640 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CONCATENATION_OP_in_expression_element16669 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16671 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16673 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLUS_SIGN_in_expression_element16700 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16702 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16704 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MINUS_SIGN_in_expression_element16731 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16733 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16735 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ASTERISK_in_expression_element16762 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16764 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16766 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SOLIDUS_in_expression_element16793 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16795 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16797 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MOD_VK_in_expression_element16824 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16826 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16828 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DIV_VK_in_expression_element16855 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16857 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16859 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PIPE_VK_in_expression_element16886 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16888 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16890 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_UNARY_OPERATOR_in_expression_element16918 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16920 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_PRIOR_in_expression_element16947 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16949 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NEW_VK_in_expression_element16976 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_expression_element16978 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DISTINCT_in_expression_element17005 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element17007 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_STANDARD_FUNCTION_in_expression_element17034 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_standard_function_in_expression_element17036 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SOME_VK_in_expression_element17064 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_EXISTS_in_expression_element17066 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_expression_element17068 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ANY_in_expression_element17070 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element17073 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_VECTOR_EXPR_in_expression_element17100 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element17102 = new BitSet(new long[]{0x00022C018C108148L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_DATETIME_OP_in_expression_element17131 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element17133 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L,0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_datetime_element_in_expression_element17135 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_model_expression_in_expression_element17161 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_KEEP_VK_in_expression_element17187 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element17189 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_DENSE_RANK_VK_in_expression_element17191 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_FIRST_VK_in_expression_element17194 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_LAST_VK_in_expression_element17196 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_order_by_clause_in_expression_element17199 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_over_clause_in_expression_element17201 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DOT_ASTERISK_in_expression_element17230 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_tableview_name_in_expression_element17232 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PERCENT_FOUND_VK_in_expression_element17260 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PERCENT_NOTFOUND_VK_in_expression_element17262 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PERCENT_ROWCOUNT_VK_in_expression_element17264 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PERCENT_ISOPEN_VK_in_expression_element17266 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_cursor_name_in_expression_element17269 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_OUTER_JOIN_SIGN_in_expression_element17296 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element17298 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_case_statement_in_expression_element17325 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_constant_in_expression_element17350 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_general_element_in_expression_element17375 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subquery_in_expression_element17400 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subquery_in_in_elements17434 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_list_in_in_elements17459 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_VK_in_datetime_element17494 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_datetime_element17496 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_LOCAL_VK_in_datetime_element17499 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_TIME_VK_in_datetime_element17501 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_datetime_element17503 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DAY_VK_in_datetime_element17531 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SECOND_VK_in_datetime_element17533 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_datetime_element17535 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_YEAR_VK_in_datetime_element17563 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_MONTH_VK_in_datetime_element17565 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_datetime_element17567 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MODEL_EXPRESSION_in_model_expression17603 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_model_expression17605 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0C00010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_model_expression_element_in_model_expression17607 = new BitSet(new long[]{0x0000000000000008L,0x0000008000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0C00010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ANY_in_model_expression_element17643 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_model_expression_element17668 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FOR_SINGLE_COLUMN_in_model_expression_element17694 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_model_expression_element17696 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000020000042L,0x0000000000000000L,0x0200000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_for_single_column_element_in_model_expression_element17698 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_for_like_part_in_model_expression_element17700 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FOR_MULTI_COLUMN_in_model_expression_element17728 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_model_expression_element17730 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_IN_in_model_expression_element17734 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_subquery_in_model_expression_element17737 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_list_in_model_expression_element17739 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_IN_in_for_single_column_element17778 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_list_in_for_single_column_element17780 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_FROM_in_for_single_column_element17807 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_for_single_column_element17809 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_TO_in_for_single_column_element17837 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_for_single_column_element17839 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_INCREMENT_VK_in_for_single_column_element17868 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_DECREMENT_VK_in_for_single_column_element17870 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_for_single_column_element17873 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_LIKE_in_for_like_part17910 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_for_like_part17912 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SIMPLE_CASE_in_case_statement17948 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_case_statement17950 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0100000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_case_statement17953 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_case_when_part_in_case_statement17955 = new BitSet(new long[]{0x0000000000000008L,0x0400000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_case_else_part_in_case_statement17958 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SEARCHED_CASE_in_case_statement17988 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_case_statement17990 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_case_when_part_in_case_statement17993 = new BitSet(new long[]{0x0000000000000008L,0x0400000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_case_else_part_in_case_statement17996 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WHEN_in_case_when_part18036 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_case_when_part18038 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_case_when_part18041 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_case_when_part18043 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ELSE_in_case_else_part18080 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_seq_of_statements_in_case_else_part18083 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_case_else_part18085 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FUNCTION_ENABLING_OVER_in_standard_function18123 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_function_argument_in_standard_function18125 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_over_clause_in_standard_function18127 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FUNCTION_ENABLING_USING_in_standard_function18155 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_function_argument_in_standard_function18157 = new BitSet(new long[]{0x0800000000000008L});
	public static final BitSet FOLLOW_using_clause_in_standard_function18159 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COUNT_VK_in_standard_function18187 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DISTINCT_in_standard_function18190 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UNIQUE_in_standard_function18192 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_standard_function18194 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_ASTERISK_in_standard_function18200 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_expression_in_standard_function18204 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_over_clause_in_standard_function18208 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CAST_VK_in_standard_function18237 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_XMLCAST_VK_in_standard_function18239 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_subquery_in_standard_function18243 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_expression_in_standard_function18245 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_standard_function18248 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CHR_VK_in_standard_function18275 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18277 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_NCHAR_CS_VK_in_standard_function18279 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COLLECT_VK_in_standard_function18306 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DISTINCT_in_standard_function18309 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UNIQUE_in_standard_function18311 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_column_name_in_standard_function18315 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_collect_order_by_part_in_standard_function18317 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FUNCTION_ENABLING_WITHIN_OR_OVER_in_standard_function18345 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_function_argument_in_standard_function18347 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_within_clause_in_standard_function18350 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_over_clause_in_standard_function18352 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_DECOMPOSE_VK_in_standard_function18382 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18384 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_CANONICAL_VK_in_standard_function18387 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COMPATIBILITY_VK_in_standard_function18389 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXTRACT_VK_in_standard_function18419 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ID_in_standard_function18421 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function18423 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FIRST_VALUE_VK_in_standard_function18451 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_LAST_VALUE_VK_in_standard_function18453 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18456 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200004L});
	public static final BitSet FOLLOW_NULLS_VK_in_standard_function18458 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_over_clause_in_standard_function18461 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PREDICTION_FUNCTION_in_standard_function18489 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18491 = new BitSet(new long[]{0x0800000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_cost_matrix_clause_in_standard_function18494 = new BitSet(new long[]{0x0800000000000008L});
	public static final BitSet FOLLOW_using_clause_in_standard_function18497 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_TRANSLATE_VK_in_standard_function18525 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18527 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000200000000400L});
	public static final BitSet FOLLOW_CHAR_CS_VK_in_standard_function18530 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_NCHAR_CS_VK_in_standard_function18532 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function18536 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_TREAT_VK_in_standard_function18564 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18566 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_REF_VK_in_standard_function18568 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_standard_function18571 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_TRIM_VK_in_standard_function18598 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_LEADING_VK_in_standard_function18601 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_TRAILING_VK_in_standard_function18603 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_BOTH_VK_in_standard_function18605 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_standard_function18609 = new BitSet(new long[]{0x00022C018C108148L,0x612008D400008000L,0x0000080040123840L,0x0004000000000000L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000000000L,0xA004001088280038L,0x0000041E00040001L,0x0020000000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_standard_function18611 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLAGG_VK_in_standard_function18641 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18643 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_order_by_clause_in_standard_function18645 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLCOLATTVAL_VK_in_standard_function18674 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_XMLFOREST_VK_in_standard_function18676 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_xml_multiuse_expression_element_in_standard_function18679 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_XMLEXISTS_VK_in_standard_function18707 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18709 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_xml_passing_clause_in_standard_function18711 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLPARSE_VK_in_standard_function18739 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_DOCUMENT_VK_in_standard_function18742 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CONTENT_VK_in_standard_function18744 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function18747 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_WELLFORMED_VK_in_standard_function18749 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLQUERY_VK_in_standard_function18777 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18779 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_xml_passing_clause_in_standard_function18781 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_standard_function18784 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLROOT_VK_in_standard_function18812 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18814 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_xml_param_version_part_in_standard_function18816 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_xmlroot_param_standalone_part_in_standard_function18818 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLTABLE_VK_in_standard_function18846 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_xml_namespaces_clause_in_standard_function18848 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function18851 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
	public static final BitSet FOLLOW_xml_passing_clause_in_standard_function18853 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
	public static final BitSet FOLLOW_xml_table_column_in_standard_function18856 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
	public static final BitSet FOLLOW_XMLELEMENT_VK_in_standard_function18884 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ENTITYESCAPING_VK_in_standard_function18899 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010020000000L,0x0000000000000000L,0x0000008000000400L});
	public static final BitSet FOLLOW_NOENTITYESCAPING_VK_in_standard_function18901 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010020000000L,0x0000000000000000L,0x0000008000000400L});
	public static final BitSet FOLLOW_NAME_VK_in_standard_function18918 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_EVALNAME_VK_in_standard_function18920 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function18924 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_xml_attributes_clause_in_standard_function18938 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function18942 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0200000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_alias_in_standard_function18944 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_XMLPI_VK_in_standard_function18983 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_NAME_VK_in_standard_function19006 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_char_set_name_in_standard_function19008 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_standard_function19011 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_EVALNAME_VK_in_standard_function19034 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function19036 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function19072 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLSERIALIZE_VK_in_standard_function19109 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_DOCUMENT_VK_in_standard_function19128 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CONTENT_VK_in_standard_function19130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function19149 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000004000000L,0x0000000100200100L,0x0000020000000000L,0x0000000000000002L,0x0000000000000000L,0x0000000000001000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_type_spec_in_standard_function19151 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L,0x0000000000200100L,0x0000000000000000L,0x0000000000000002L,0x0000000000000000L,0x0000000000001000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_xmlserialize_param_enconding_part_in_standard_function19170 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200100L,0x0000000000000000L,0x0000000000000002L,0x0000000000000000L,0x0000000000001000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_xml_param_version_part_in_standard_function19189 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200100L,0x0000000000000000L,0x0000000000000002L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_xmlserialize_param_ident_part_in_standard_function19208 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_HIDE_VK_in_standard_function19229 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_SHOW_VK_in_standard_function19231 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_DEFAULTS_VK_in_standard_function19234 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_OVER_VK_in_over_clause19281 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_query_partition_clause_in_over_clause19283 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_order_by_clause_in_over_clause19287 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000001000L});
	public static final BitSet FOLLOW_windowing_clause_in_over_clause19289 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROWS_VK_in_windowing_clause19329 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_RANGE_VK_in_windowing_clause19331 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_BETWEEN_in_windowing_clause19352 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_windowing_elements_in_windowing_clause19354 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0010000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_windowing_elements_in_windowing_clause19356 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_windowing_elements_in_windowing_clause19376 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0010000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_UNBOUNDED_VK_in_windowing_elements19436 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PRECEDING_VK_in_windowing_elements19438 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CURRENT_VK_in_windowing_elements19465 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ROW_VK_in_windowing_elements19467 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PRECEDING_VK_in_windowing_elements19495 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_FOLLOWING_VK_in_windowing_elements19497 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_windowing_elements19500 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_NON_RESERVED_USING_in_using_clause19536 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_using_element_in_using_clause19538 = new BitSet(new long[]{0x0000000000000108L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_ELEMENT_in_using_element19575 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_IN_in_using_element19577 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000080000L});
	public static final BitSet FOLLOW_OUT_VK_in_using_element19580 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_using_element19583 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_alias_in_using_element19585 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ASTERISK_in_using_element19612 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ORDER_in_collect_order_by_part19647 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_collect_order_by_part19649 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_WITHIN_VK_in_within_clause19685 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_order_by_clause_in_within_clause19687 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COST_VK_in_cost_matrix_clause19723 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PLSQL_NON_RESERVED_MODEL_in_cost_matrix_clause19742 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_AUTO_VK_in_cost_matrix_clause19744 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_cost_class_name_in_cost_matrix_clause19764 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_expression_list_in_cost_matrix_clause19767 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PASSING_VK_in_xml_passing_clause19826 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_VALUE_VK_in_xml_passing_clause19828 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_xml_passing_clause19831 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0200000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_alias_in_xml_passing_clause19833 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_xml_passing_clause19837 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_alias_in_xml_passing_clause19839 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLATTRIBUTES_VK_in_xml_attributes_clause19878 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ENTITYESCAPING_VK_in_xml_attributes_clause19893 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L,0x0000000000000000L,0x0002000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_NOENTITYESCAPING_VK_in_xml_attributes_clause19895 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L,0x0000000000000000L,0x0002000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_SCHEMACHECK_VK_in_xml_attributes_clause19912 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_NOSCHEMACHECK_VK_in_xml_attributes_clause19914 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_xml_multiuse_expression_element_in_xml_attributes_clause19930 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_XMLNAMESPACES_VK_in_xml_namespaces_clause19976 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_xml_namespaces_clause19991 = new BitSet(new long[]{0x0000000000000008L,0x0020000000000000L,0x0200000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_alias_in_xml_namespaces_clause19993 = new BitSet(new long[]{0x0000000000000008L,0x0020000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_xml_general_default_part_in_xml_namespaces_clause19998 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XML_COLUMN_in_xml_table_column20044 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_xml_column_name_in_xml_table_column20046 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ORDINALITY_VK_in_xml_table_column20049 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_type_spec_in_xml_table_column20051 = new BitSet(new long[]{0x0000000000000008L,0x0020000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_xml_table_column20053 = new BitSet(new long[]{0x0000000000000008L,0x0020000000000000L});
	public static final BitSet FOLLOW_xml_general_default_part_in_xml_table_column20056 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DEFAULT_in_xml_general_default_part20095 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_xml_general_default_part20097 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XML_ELEMENT_in_xml_multiuse_expression_element20133 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_xml_multiuse_expression_element20135 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_xml_alias_in_xml_multiuse_expression_element20137 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XML_ALIAS_in_xml_alias20174 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ID_in_xml_alias20176 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XML_ALIAS_in_xml_alias20203 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_EVALNAME_VK_in_xml_alias20206 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_xml_alias20208 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_VERSION_VK_in_xml_param_version_part20245 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_NO_VK_in_xml_param_version_part20248 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_VALUE_VK_in_xml_param_version_part20250 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_xml_param_version_part20252 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_STANDALONE_VK_in_xmlroot_param_standalone_part20289 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_YES_VK_in_xmlroot_param_standalone_part20292 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NO_VK_in_xmlroot_param_standalone_part20294 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_VALUE_VK_in_xmlroot_param_standalone_part20296 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ENCODING_VK_in_xmlserialize_param_enconding_part20334 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_xmlserialize_param_enconding_part20336 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NO_VK_in_xmlserialize_param_ident_part20371 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_INDENT_VK_in_xmlserialize_param_ident_part20373 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INDENT_VK_in_xmlserialize_param_ident_part20399 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_xmlserialize_param_ident_part20401 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SUBPARTITION_VK_in_partition_extension_clause20443 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PARTITION_VK_in_partition_extension_clause20445 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_list_in_partition_extension_clause20448 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALIAS_in_alias20484 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_alias20486 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_alias20489 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WHERE_in_where_clause20525 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_where_clause20527 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_INTO_in_into_clause20563 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_general_element_in_into_clause20565 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_BULK_VK_in_into_clause20594 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_general_element_in_into_clause20596 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_XML_COLUMN_NAME_in_xml_column_name20638 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_xml_column_name20640 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_xml_column_name20643 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COST_CLASS_NAME_in_cost_class_name20679 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_cost_class_name20681 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_cost_class_name20684 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ATTRIBUTE_NAME_in_attribute_name20720 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_attribute_name20722 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_attribute_name20725 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SAVEPOINT_NAME_in_savepoint_name20761 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_savepoint_name20763 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_savepoint_name20766 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROLLBACK_SEGMENT_NAME_in_rollback_segment_name20802 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_rollback_segment_name20804 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_rollback_segment_name20807 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_TABLE_VAR_NAME_in_table_var_name20844 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_table_var_name20846 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_table_var_name20849 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SCHEMA_NAME_in_schema_name20885 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_schema_name20887 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_schema_name20890 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROUTINE_NAME_in_routine_name20926 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_routine_name20928 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_routine_name20931 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L,0x0000000000000080L});
	public static final BitSet FOLLOW_link_name_in_routine_name20934 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PACKAGE_NAME_in_package_name20971 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_package_name20973 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_package_name20976 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_IMPLEMENTATION_TYPE_NAME_in_implementation_type_name21013 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_implementation_type_name21015 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_implementation_type_name21018 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_PARAMETER_NAME_in_parameter_name21055 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_parameter_name21057 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_parameter_name21060 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_REFERENCE_MODEL_NAME_in_reference_model_name21097 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_reference_model_name21099 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_reference_model_name21102 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MAIN_MODEL_NAME_in_main_model_name21138 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_main_model_name21140 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_main_model_name21143 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_QUERY_NAME_in_query_name21179 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_query_name21181 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_query_name21184 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CONSTRAINT_NAME_in_constraint_name21220 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_constraint_name21222 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_constraint_name21225 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L,0x0000000000000080L});
	public static final BitSet FOLLOW_link_name_in_constraint_name21228 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_LABEL_NAME_in_label_name21265 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ID_in_label_name21267 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_TYPE_NAME_in_type_name21298 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ID_in_type_name21300 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_SEQUENCE_NAME_in_sequence_name21337 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ID_in_sequence_name21339 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_EXCEPTION_NAME_in_exception_name21376 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_exception_name21378 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_exception_name21381 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_FUNCTION_NAME_in_function_name21418 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_function_name21420 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_function_name21423 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_PROCEDURE_NAME_in_procedure_name21460 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_procedure_name21462 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_procedure_name21465 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_TRIGGER_NAME_in_trigger_name21502 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_trigger_name21504 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_trigger_name21507 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_HOSTED_VARIABLE_NAME_in_variable_name21544 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_variable_name21546 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_variable_name21549 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_VARIABLE_NAME_in_variable_name21577 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_variable_name21579 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_variable_name21582 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_INDEX_NAME_in_index_name21619 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_index_name21621 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_index_name21624 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CURSOR_NAME_in_cursor_name21660 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_cursor_name21662 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_cursor_name21665 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RECORD_NAME_in_record_name21701 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_record_name21703 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_record_name21706 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COLLECTION_NAME_in_collection_name21742 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_collection_name21744 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_collection_name21747 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_LINK_NAME_in_link_name21784 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_link_name21786 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_link_name21789 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COLUMN_NAME_in_column_name21825 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_column_name21827 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_column_name21830 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_TABLEVIEW_NAME_in_tableview_name21867 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_tableview_name21869 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_tableview_name21872 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L,0x0000000000000080L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_link_name_in_tableview_name21875 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_partition_extension_clause_in_tableview_name21878 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CHAR_SET_NAME_in_char_set_name21915 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ID_in_char_set_name21917 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ARGUMENTS_in_function_argument21958 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_argument_in_function_argument21960 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_ARGUMENT_in_argument21997 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_argument21999 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_parameter_name_in_argument22001 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CUSTOM_TYPE_in_type_spec22039 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_name_in_type_spec22041 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000006000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_REF_VK_in_type_spec22043 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000006000000000L});
	public static final BitSet FOLLOW_PERCENT_ROWTYPE_VK_in_type_spec22047 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PERCENT_TYPE_VK_in_type_spec22049 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_native_datatype_spec_in_type_spec22077 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INTERVAL_DATATYPE_in_type_spec22093 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_YEAR_VK_in_type_spec22096 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_DAY_VK_in_type_spec22098 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_MONTH_VK_in_type_spec22102 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_SECOND_VK_in_type_spec22104 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_type_spec22107 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_PRECISION_in_type_precision22144 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_constant_in_type_precision22148 = new BitSet(new long[]{0x0000200008008048L,0x4020000000000000L,0x0000080040002000L,0x0200080000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008080000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_constant_in_type_precision22152 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0200080000000000L});
	public static final BitSet FOLLOW_CHAR_VK_in_type_precision22158 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BYTE_VK_in_type_precision22162 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NATIVE_DATATYPE_in_native_datatype_spec22225 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_BFILE_VK_in_native_datatype_spec22236 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_BINARY_FLOAT_VK_in_native_datatype_spec22249 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_BINARY_INTEGER_VK_in_native_datatype_spec22262 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_BLOB_VK_in_native_datatype_spec22275 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_BOOLEAN_VK_in_native_datatype_spec22288 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_CHARACTER_VK_in_native_datatype_spec22301 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_CHAR_VK_in_native_datatype_spec22315 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_CLOB_VK_in_native_datatype_spec22328 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_DATE_VK_in_native_datatype_spec22341 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DATE_in_native_datatype_spec22354 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_DAY_VK_in_native_datatype_spec22367 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_DECIMAL_VK_in_native_datatype_spec22378 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_DEC_VK_in_native_datatype_spec22392 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_DOUBLE_VK_in_native_datatype_spec22405 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_DOUBLE_VK_in_native_datatype_spec22418 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_PRECISION_VK_in_native_datatype_spec22420 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_DSINTERVAL_UNCONSTRAINED_VK_in_native_datatype_spec22433 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_FLOAT_VK_in_native_datatype_spec22444 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_HOUR_VK_in_native_datatype_spec22457 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_INTEGER_VK_in_native_datatype_spec22468 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_INT_VK_in_native_datatype_spec22481 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_LONG_VK_in_native_datatype_spec22494 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_LONG_VK_in_native_datatype_spec22507 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_RAW_VK_in_native_datatype_spec22509 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_MINUTE_VK_in_native_datatype_spec22522 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_MLSLABEL_VK_in_native_datatype_spec22533 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_MONTH_VK_in_native_datatype_spec22544 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_NATURALN_VK_in_native_datatype_spec22555 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_NATURAL_VK_in_native_datatype_spec22566 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_NCHAR_VK_in_native_datatype_spec22577 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_NCLOB_VK_in_native_datatype_spec22590 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_NUMBER_VK_in_native_datatype_spec22603 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_NUMERIC_VK_in_native_datatype_spec22616 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_NVARCHAR2_VK_in_native_datatype_spec22629 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_PLS_INTEGER_VK_in_native_datatype_spec22642 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_POSITIVEN_VK_in_native_datatype_spec22655 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_POSITIVE_VK_in_native_datatype_spec22666 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_RAW_VK_in_native_datatype_spec22677 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_REAL_VK_in_native_datatype_spec22690 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_ROWID_VK_in_native_datatype_spec22701 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SECOND_VK_in_native_datatype_spec22714 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SIGNTYPE_VK_in_native_datatype_spec22725 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SIMPLE_INTEGER_VK_in_native_datatype_spec22736 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SMALLINT_VK_in_native_datatype_spec22747 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_STRING_VK_in_native_datatype_spec22760 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_TIMESTAMP_LTZ_UNCONSTRAINED_VK_in_native_datatype_spec22771 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_TIMESTAMP_TZ_UNCONSTRAINED_VK_in_native_datatype_spec22782 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_TIMESTAMP_UNCONSTRAINED_VK_in_native_datatype_spec22793 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_TIMESTAMP_VK_in_native_datatype_spec22804 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_TIMEZONE_ABBR_VK_in_native_datatype_spec22817 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_TIMEZONE_HOUR_VK_in_native_datatype_spec22828 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_TIMEZONE_MINUTE_VK_in_native_datatype_spec22839 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_TIMEZONE_REGION_VK_in_native_datatype_spec22850 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_UROWID_VK_in_native_datatype_spec22861 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_VARCHAR2_VK_in_native_datatype_spec22874 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_VARCHAR_VK_in_native_datatype_spec22887 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_YEAR_VK_in_native_datatype_spec22900 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_YMINTERVAL_UNCONSTRAINED_VK_in_native_datatype_spec22911 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_type_precision_in_native_datatype_spec22920 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_TIME_VK_in_native_datatype_spec22930 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_LOCAL_VK_in_native_datatype_spec22934 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CASCATED_ELEMENT_in_general_element23004 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ANY_ELEMENT_in_general_element23035 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ID_in_general_element23037 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_function_argument_in_general_element23056 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000220L});
	public static final BitSet FOLLOW_UNSIGNED_INTEGER_in_constant23123 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MINUS_SIGN_in_constant23144 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UNSIGNED_INTEGER_in_constant23148 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXACT_NUM_LIT_in_constant23169 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_APPROXIMATE_NUM_LIT_in_constant23189 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHAR_STRING_in_constant23209 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_constant23229 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_TRUE_in_constant23249 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_FALSE_in_constant23269 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DBTIMEZONE_VK_in_constant23289 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SESSIONTIMEZONE_VK_in_constant23310 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MINVALUE_VK_in_constant23330 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MAXVALUE_VK_in_constant23350 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DEFAULT_in_constant23370 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_char_set_name_in_id23401 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_id23404 = new BitSet(new long[]{0x0000000000000002L});
}
