// $ANTLR 3.5.2 PLSQLPrinter.g 2014-09-08 11:55:58

/**
 * Oracle(c) PL/SQL 11g Parser  
 *
 * Copyright (c) 2014 Bars Group
 */
package parser;


import org.antlr.runtime.*;
import org.antlr.runtime.tree.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;

import org.antlr.stringtemplate.*;
import org.antlr.stringtemplate.language.*;
import java.util.HashMap;
/**
 * Oracle(c) PL/SQL 11g Parser  
 *
 * Copyright (c) 2014 Bars Group
 */
@SuppressWarnings("all")
public class PLSQLPrinter extends TreeParser {
	public static final String[] tokenNames = new String[] {
		"<invalid>", "<EOR>", "<DOWN>", "<UP>", "A", "AMPERSAND", "APPROXIMATE_NUM_LIT", 
		"ASSIGN_OP", "ASTERISK", "AT_SIGN", "B", "BINDVAR", "BIT_STRING_LIT", 
		"C", "CARRET_OPERATOR_PART", "CHAR_STRING", "CHAR_STRING_PERL", "COLON", 
		"COMMA", "COMMENT", "CONCATENATION_OP", "D", "DELIMITED_ID", "DOUBLE_ASTERISK", 
		"DOUBLE_PERIOD", "E", "EQUALS_OP", "EXACT_NUM_LIT", "EXCLAMATION_OPERATOR_PART", 
		"F", "G", "GREATER_THAN_OP", "GREATER_THAN_OR_EQUALS_OP", "H", "HEX_STRING_LIT", 
		"I", "INTRODUCER", "J", "K", "L", "LEFT_BRACKET", "LEFT_PAREN", "LESS_THAN_OP", 
		"LESS_THAN_OR_EQUALS_OP", "M", "MINUS_SIGN", "N", "NATIONAL_CHAR_STRING_LIT", 
		"NEWLINE", "NOT_EQUAL_OP", "O", "P", "PERCENT", "PERIOD", "PLSQL_NON_RESERVED_CONNECT_BY_ROOT", 
		"PLSQL_NON_RESERVED_ELSIF", "PLSQL_NON_RESERVED_MODEL", "PLSQL_NON_RESERVED_PIVOT", 
		"PLSQL_NON_RESERVED_UNPIVOT", "PLSQL_NON_RESERVED_USING", "PLSQL_RESERVED_CLUSTERS", 
		"PLSQL_RESERVED_COLAUTH", "PLSQL_RESERVED_COMPRESS", "PLSQL_RESERVED_CRASH", 
		"PLSQL_RESERVED_EXCLUSIVE", "PLSQL_RESERVED_IDENTIFIED", "PLSQL_RESERVED_IF", 
		"PLSQL_RESERVED_INDEX", "PLSQL_RESERVED_INDEXES", "PLSQL_RESERVED_LOCK", 
		"PLSQL_RESERVED_MINUS", "PLSQL_RESERVED_MODE", "PLSQL_RESERVED_NOCOMPRESS", 
		"PLSQL_RESERVED_NOWAIT", "PLSQL_RESERVED_RESOURCE", "PLSQL_RESERVED_SHARE", 
		"PLSQL_RESERVED_START", "PLSQL_RESERVED_TABAUTH", "PLSQL_RESERVED_VIEWS", 
		"PLUS_SIGN", "PROMPT", "Q", "QS_ANGLE", "QS_BRACE", "QS_BRACK", "QS_OTHER", 
		"QS_OTHER_CH", "QS_PAREN", "QUESTION_MARK", "QUOTE", "R", "REGULAR_ID", 
		"RIGHT_BRACKET", "RIGHT_PAREN", "S", "SEMICOLON", "SEPARATOR", "SIMPLE_LETTER", 
		"SOLIDUS", "SPACE", "SQL92_RESERVED_ALL", "SQL92_RESERVED_ALTER", "SQL92_RESERVED_AND", 
		"SQL92_RESERVED_ANY", "SQL92_RESERVED_AS", "SQL92_RESERVED_ASC", "SQL92_RESERVED_BEGIN", 
		"SQL92_RESERVED_BETWEEN", "SQL92_RESERVED_BY", "SQL92_RESERVED_CASE", 
		"SQL92_RESERVED_CHECK", "SQL92_RESERVED_CONNECT", "SQL92_RESERVED_CREATE", 
		"SQL92_RESERVED_CURRENT", "SQL92_RESERVED_CURSOR", "SQL92_RESERVED_DATE", 
		"SQL92_RESERVED_DECLARE", "SQL92_RESERVED_DEFAULT", "SQL92_RESERVED_DELETE", 
		"SQL92_RESERVED_DESC", "SQL92_RESERVED_DISTINCT", "SQL92_RESERVED_DROP", 
		"SQL92_RESERVED_ELSE", "SQL92_RESERVED_END", "SQL92_RESERVED_EXCEPTION", 
		"SQL92_RESERVED_EXISTS", "SQL92_RESERVED_FALSE", "SQL92_RESERVED_FETCH", 
		"SQL92_RESERVED_FOR", "SQL92_RESERVED_FROM", "SQL92_RESERVED_GOTO", "SQL92_RESERVED_GRANT", 
		"SQL92_RESERVED_GROUP", "SQL92_RESERVED_HAVING", "SQL92_RESERVED_IN", 
		"SQL92_RESERVED_INSERT", "SQL92_RESERVED_INTERSECT", "SQL92_RESERVED_INTO", 
		"SQL92_RESERVED_IS", "SQL92_RESERVED_LIKE", "SQL92_RESERVED_NOT", "SQL92_RESERVED_NULL", 
		"SQL92_RESERVED_OF", "SQL92_RESERVED_ON", "SQL92_RESERVED_OPTION", "SQL92_RESERVED_OR", 
		"SQL92_RESERVED_ORDER", "SQL92_RESERVED_OVERLAPS", "SQL92_RESERVED_PRIOR", 
		"SQL92_RESERVED_PROCEDURE", "SQL92_RESERVED_PUBLIC", "SQL92_RESERVED_REVOKE", 
		"SQL92_RESERVED_SELECT", "SQL92_RESERVED_SIZE", "SQL92_RESERVED_TABLE", 
		"SQL92_RESERVED_THE", "SQL92_RESERVED_THEN", "SQL92_RESERVED_TO", "SQL92_RESERVED_TRUE", 
		"SQL92_RESERVED_UNION", "SQL92_RESERVED_UNIQUE", "SQL92_RESERVED_UPDATE", 
		"SQL92_RESERVED_VALUES", "SQL92_RESERVED_VIEW", "SQL92_RESERVED_WHEN", 
		"SQL92_RESERVED_WHERE", "SQL92_RESERVED_WITH", "T", "TILDE_OPERATOR_PART", 
		"U", "UNDERSCORE", "UNSIGNED_INTEGER", "V", "VERTICAL_BAR", "W", "X", 
		"Y", "Z", "ZV", "ADD_VK", "AFTER_EACH_ROW", "AFTER_STATEMENT", "AFTER_VK", 
		"AGENT_VK", "AGGREGATE_VK", "ALIAS", "ALTER_ATTRIBUTE", "ALTER_COLLECTION", 
		"ALTER_FUNCTION", "ALTER_METHOD", "ALTER_METHOD_ELEMENT", "ALTER_PACKAGE", 
		"ALTER_PROCEDURE", "ALTER_SEQUENCE", "ALTER_TRIGGER", "ALTER_TYPE", "ANALYZE_VK", 
		"ANY_ELEMENT", "ANY_MODE", "ARGUMENT", "ARGUMENTS", "ASSIGN", "ASSOCIATE_VK", 
		"ATTRIBUTE", "ATTRIBUTES", "ATTRIBUTE_NAME", "AT_VK", "AUDIT_VK", "AUTHID_VK", 
		"AUTOMATIC_VK", "AUTONOMOUS_TRANSACTION_VK", "AUTO_VK", "BATCH_VK", "BEFORE_EACH_ROW", 
		"BEFORE_STATEMENT", "BEFORE_VK", "BFILE_VK", "BINARY_DOUBLE_VK", "BINARY_FLOAT_VK", 
		"BINARY_INTEGER_VK", "BIT_VK", "BLOB_VK", "BLOCK", "BLOCK_VK", "BODY", 
		"BODY_MODE", "BODY_VK", "BOOLEAN_VK", "BOTH_VK", "BREADTH_VK", "BULK_VK", 
		"BYTE_VK", "CACHE_VK", "CALL_MODE", "CALL_VK", "CANONICAL_VK", "CASCADE_VK", 
		"CASCATED_ELEMENT", "CAST_VK", "CHARACTER_VK", "CHAR_CS_VK", "CHAR_SET_NAME", 
		"CHAR_VK", "CHR_VK", "CLOB_VK", "CLOSE_VK", "CLUSTER_VK", "COLLECTION_MODE", 
		"COLLECTION_NAME", "COLLECT_VK", "COLUMNS", "COLUMN_NAME", "COMMENT_VK", 
		"COMMITTED_VK", "COMMIT_VK", "COMPATIBILITY_VK", "COMPILATION_UNIT", "COMPILER_PARAMETER", 
		"COMPILE_VK", "COMPOUND_DML", "COMPOUND_VK", "CONDITIONAL_INSERT", "CONSTANT_VK", 
		"CONSTRAINT_NAME", "CONSTRUCTOR_SPEC", "CONSTRUCTOR_VK", "CONTENT_VK", 
		"CONTEXT_VK", "CONTINUE_VK", "CONVERT_VK", "CORRUPT_XID_ALL_VK", "CORRUPT_XID_VK", 
		"COST_CLASS_NAME", "COST_VK", "COUNT_VK", "CREATE_FUNCTION", "CREATE_PACKAGE_BODY", 
		"CREATE_PACKAGE_SPEC", "CREATE_PROCEDURE", "CREATE_SEQUENCE", "CREATE_TRIGGER", 
		"CREATE_TYPE_BODY", "CREATE_TYPE_SPEC", "CROSS_VK", "CUBE_VK", "CURRENT_USER_VK", 
		"CURRENT_VK", "CURSOR_BASED_FOR", "CURSOR_DECLARE", "CURSOR_NAME", "CUSTOMDATUM_VK", 
		"CUSTOM_TYPE", "CYCLE_VK", "C_VK", "DATABASE_VK", "DATETIME_OP", "DAY_VK", 
		"DBTIMEZONE_VK", "DB_ROLE_CHANGE_VK", "DDL_VK", "DEBUG_VK", "DECIMAL_VK", 
		"DECOMPOSE_VK", "DECREMENT_VK", "DEC_VK", "DEFAULTS_VK", "DEFAULT_VALUE", 
		"DEFERRED_VK", "DEFINER_VK", "DENSE_RANK_VK", "DEPENDENT_HANDLING", "DEPTH_VK", 
		"DETERMINISTIC_VK", "DIMENSION_VK", "DIRECT_MODE", "DISABLE_VK", "DISASSOCIATE_VK", 
		"DIV_VK", "DML_EVENT", "DML_EVENT_ELEMENT", "DOCUMENT_VK", "DOT_ASTERISK", 
		"DOUBLE_VK", "DROP_FUNCTION", "DROP_PACKAGE", "DROP_PROCEDURE", "DROP_SEQUENCE", 
		"DROP_TRIGGER", "DROP_TYPE", "DSINTERVAL_UNCONSTRAINED_VK", "DYNAMIC_RETURN", 
		"ELEMENT", "ELEMENTS_MODE", "ELEMENT_SPEC", "ENABLE_VK", "ENCODING_VK", 
		"ENTITYESCAPING_VK", "EVALNAME_VK", "EXCEPTIONS_VK", "EXCEPTION_DECLARE", 
		"EXCEPTION_INIT_VK", "EXCEPTION_NAME", "EXCLUDE_VK", "EXECUTE_VK", "EXIT_VK", 
		"EXPLAIN_STATEMENT", "EXPR", "EXPR_LIST", "EXTERNAL_MODE", "EXTERNAL_VK", 
		"EXTRACT_VK", "FACTORING", "FIELDS", "FIELD_SPEC", "FINAL_VK", "FIRST_VALUE_VK", 
		"FIRST_VK", "FLOAT_VK", "FOLLOWING_VK", "FOLLOWS_VK", "FORALL_VK", "FORCE_VK", 
		"FOR_EACH_ROW", "FOR_LOOP", "FOR_MULTI_COLUMN", "FOR_SINGLE_COLUMN", "FULL_VK", 
		"FUNCTION_ENABLING_OVER", "FUNCTION_ENABLING_USING", "FUNCTION_ENABLING_WITHIN_OR_OVER", 
		"FUNCTION_NAME", "FUNCTION_SPEC", "GROUPING_VK", "GROUPIN_SET", "GROUP_BY_ELEMENT", 
		"HASH_VK", "HIDE_VK", "HIERARCHICAL", "HOSTED_VARIABLE", "HOSTED_VARIABLE_NAME", 
		"HOSTED_VARIABLE_ROUTINE_CALL", "HOUR_VK", "ID", "IGNORE_VK", "IMMEDIATE_VK", 
		"IMPLEMENTATION_TYPE_NAME", "INCLUDE_VK", "INCLUDING_VK", "INCREMENT_VK", 
		"INDENT_VK", "INDEXED_BY", "INDEXED_FOR", "INDEX_NAME", "INDICES_BOUND", 
		"INLINE_VK", "INNER_VK", "INOUT_VK", "INSTANTIABLE_VK", "INSTEAD_VK", 
		"INTEGER_VK", "INTERVAL_DATATYPE", "INT_VK", "INVALIDATE_VK", "ISOLATION_VK", 
		"IS_A_SET", "IS_EMPTY", "IS_INFINITE", "IS_NAN", "IS_NOT_A_SET", "IS_NOT_EMPTY", 
		"IS_NOT_INFINITE", "IS_NOT_NAN", "IS_NOT_NULL", "IS_NOT_OF_TYPE", "IS_NOT_PRESENT", 
		"IS_NULL", "IS_OF_TYPE", "IS_PRESENT", "ITERATE_VK", "JAVA_VK", "JOIN_DEF", 
		"KEEP_VK", "LABEL_DECLARE", "LABEL_NAME", "LANGUAGE_VK", "LAST_VALUE_VK", 
		"LAST_VK", "LEADING_VK", "LEFT_VK", "LIBRARY_VK", "LIKE2_VK", "LIKE4_VK", 
		"LIKEC_VK", "LIMIT_VK", "LINK_NAME", "LOCAL_VK", "LOCK_TABLE_ELEMENT", 
		"LOGIC_EXPR", "LOGOFF_VK", "LOGON_VK", "LOG_VK", "LONG_VK", "LOOP_VK", 
		"MAIN_MODEL", "MAIN_MODEL_NAME", "MAP_VK", "MAXVALUE_VK", "MEASURES_VK", 
		"MEMBER_VK", "MERGE_INSERT", "MERGE_UPDATE", "MERGE_VK", "MINUTE_VK", 
		"MINVALUE_VK", "MLSLABEL_VK", "MODEL_COLUMN", "MODEL_COLUMNS", "MODEL_EXPRESSION", 
		"MODEL_RULE", "MODEL_RULES", "MODIFIER", "MODIFY_VK", "MOD_VK", "MONTH_VK", 
		"MULTI_TABLE_MODE", "NAME_VK", "NATIVE_DATATYPE", "NATURALN_VK", "NATURAL_VK", 
		"NAV_VK", "NCHAR_CS_VK", "NCHAR_VK", "NCLOB_VK", "NESTED_TABLE_TYPE_DEF", 
		"NESTED_VK", "NEW_VK", "NOAUDIT_VK", "NOCACHE_VK", "NOCOPY_VK", "NOCYCLE_VK", 
		"NOENTITYESCAPING_VK", "NOMAXVALUE_VK", "NOMINVALUE_VK", "NON_DML", "NOORDER_VK", 
		"NOSCHEMACHECK_VK", "NOT_BETWEEN", "NOT_IN", "NOT_LIKE", "NO_VK", "NULLS_VK", 
		"NUMBER_VK", "NUMERIC_VK", "NVARCHAR2_VK", "OBJECT_AS", "OBJECT_MEMBERS", 
		"OBJECT_TYPE_DEF", "OBJECT_VK", "OFF_VK", "OLD_VK", "ONLY_VK", "OPEN_VK", 
		"ORADATA_VK", "ORDER_BY_ELEMENT", "ORDER_BY_ELEMENTS", "ORDINALITY_VK", 
		"OUTER_JOIN_SIGN", "OUT_VK", "OVERRIDING_VK", "OVER_VK", "PACKAGE_NAME", 
		"PACKAGE_VK", "PARALLEL_ENABLE_VK", "PARAMETER", "PARAMETERS", "PARAMETERS_VK", 
		"PARAMETER_NAME", "PARENT_VK", "PARTITION_VK", "PASSING_VK", "PERCENT_FOUND_VK", 
		"PERCENT_ISOPEN_VK", "PERCENT_NOTFOUND_VK", "PERCENT_ROWCOUNT_VK", "PERCENT_ROWTYPE_VK", 
		"PERCENT_TYPE_VK", "PIPELINED_VK", "PIPE_ROW", "PIPE_VK", "PIVOT_ALIAS", 
		"PIVOT_ELEMENT", "PIVOT_IN_ELEMENT", "PIVOT_VK", "PLS_INTEGER_VK", "POSITIVEN_VK", 
		"POSITIVE_VK", "PRAGMA_DECLARE", "PRAGMA_VK", "PRECEDING_VK", "PRECISION", 
		"PRECISION_VK", "PREDICTION_FUNCTION", "PROCEDURE_NAME", "PROCEDURE_SPEC", 
		"QUERY_NAME", "RAISE_VK", "RANGE_VK", "RAW_VK", "READ_VK", "REAL_VK", 
		"RECORD_NAME", "RECORD_TYPE_DECLARE", "RECORD_VAR_DECLARE", "REFERENCE_MODEL_NAME", 
		"REFERENCE_VK", "REFERENCING_VK", "REF_VK", "REJECT_VK", "RELIES_ON_VK", 
		"RENAME_VK", "REPLACE_VK", "RESPECT_VK", "RESTRICT_REFERENCES_VK", "RESULT_CACHE_VK", 
		"RETURN_VK", "REUSE_VK", "REVERSE_VK", "RIGHT_VK", "ROLLBACK_SEGMENT_NAME", 
		"ROLLBACK_VK", "ROLLUP_VK", "ROUTINE_CALL", "ROUTINE_NAME", "ROWID_VK", 
		"ROWS_VK", "ROW_VK", "RULES_VK", "SAMPLE_VK", "SAVEPOINT_NAME", "SAVEPOINT_VK", 
		"SCHEMACHECK_VK", "SCHEMA_NAME", "SCHEMA_VK", "SCN_VK", "SEARCHED_CASE", 
		"SEARCH_VK", "SECOND_VK", "SEED_VK", "SELECTED_TABLEVIEW", "SELECT_BASED_FOR", 
		"SELECT_ITEM", "SELECT_LIST", "SELECT_MODE", "SELECT_STATEMENT", "SELF_VK", 
		"SEQUENCE_NAME", "SEQUENCE_VK", "SEQUENTIAL_VK", "SERIALIZABLE_VK", "SERIALLY_REUSABLE_VK", 
		"SERVERERROR_VK", "SESSIONTIMEZONE_VK", "SET_CONSTRAINT", "SET_SERVEROUTPUT", 
		"SET_TRANSACTION", "SET_VK", "SHOW_VK", "SHUTDOWN_VK", "SIBLINGS_VK", 
		"SIGNTYPE_VK", "SIMPLE_BOUND", "SIMPLE_CASE", "SIMPLE_DML", "SIMPLE_INTEGER_VK", 
		"SINGLE_TABLE_MODE", "SINGLE_VK", "SKIP_VK", "SMALLINT_VK", "SOME_VK", 
		"SPECIFICATION_VK", "SQLDATA_VK", "SQL_SCRIPT", "STANDALONE_VK", "STANDARD_FUNCTION", 
		"STARTUP_VK", "STATEMENTS", "STATIC_RETURNING", "STATIC_VK", "STATISTICS_VK", 
		"STREAMING_CLAUSE", "STRING_VK", "SUBMULTISET_VK", "SUBPARTITION_VK", 
		"SUBQUERY", "SUBTYPE_DECLARE", "SUSPEND_VK", "TABLEVIEW_NAME", "TABLE_ELEMENT", 
		"TABLE_EXPRESSION", "TABLE_REF", "TABLE_REF_ELEMENT", "TABLE_TYPE_DECLARE", 
		"TABLE_VAR_DECLARE", "TABLE_VAR_NAME", "THREE_DOTS", "TIMESTAMP_LTZ_UNCONSTRAINED_VK", 
		"TIMESTAMP_TZ_UNCONSTRAINED_VK", "TIMESTAMP_UNCONSTRAINED_VK", "TIMESTAMP_VK", 
		"TIMEZONE_ABBR_VK", "TIMEZONE_HOUR_VK", "TIMEZONE_MINUTE_VK", "TIMEZONE_REGION_VK", 
		"TIME_VK", "TRAILING_VK", "TRANSLATE_VK", "TREAT_VK", "TRIGGER_NAME", 
		"TRIM_VK", "TRUNCATE_VK", "TYPE_BODY_ELEMENTS", "TYPE_NAME", "TYPE_VK", 
		"UNARY_OPERATOR", "UNBOUNDED_VK", "UNDER_VK", "UNLIMITED_VK", "UNPIVOT_IN_ELEMENT", 
		"UNPIVOT_VK", "UNTIL_VK", "UPDATED_VK", "UPSERT_VK", "UROWID_VK", "USING_MODE", 
		"VALIDATE_VK", "VALUES_BOUND", "VALUE_VK", "VARCHAR2_VK", "VARCHAR_VK", 
		"VARIABLE_DECLARE", "VARIABLE_NAME", "VARR_ARRAY_DEF", "VECTOR_EXPR", 
		"VERSIONS_VK", "VERSION_VK", "WAIT_VK", "WELLFORMED_VK", "WHILE_LOOP", 
		"WITHIN_VK", "WORK_VK", "WRITE_VK", "XMLAGG_VK", "XMLATTRIBUTES_VK", "XMLCAST_VK", 
		"XMLCOLATTVAL_VK", "XMLELEMENT_VK", "XMLEXISTS_VK", "XMLFOREST_VK", "XMLNAMESPACES_VK", 
		"XMLPARSE_VK", "XMLPI_VK", "XMLQUERY_VK", "XMLROOT_VK", "XMLSERIALIZE_VK", 
		"XMLTABLE_VK", "XML_ALIAS", "XML_COLUMN", "XML_COLUMN_NAME", "XML_ELEMENT", 
		"XML_VK", "YEAR_VK", "YES_VK", "YMINTERVAL_UNCONSTRAINED_VK", "DATE_VK", 
		"ORDER_VK", "START_VK"
	};
	public static final int EOF=-1;
	public static final int A=4;
	public static final int AMPERSAND=5;
	public static final int APPROXIMATE_NUM_LIT=6;
	public static final int ASSIGN_OP=7;
	public static final int ASTERISK=8;
	public static final int AT_SIGN=9;
	public static final int B=10;
	public static final int BINDVAR=11;
	public static final int BIT_STRING_LIT=12;
	public static final int C=13;
	public static final int CARRET_OPERATOR_PART=14;
	public static final int CHAR_STRING=15;
	public static final int CHAR_STRING_PERL=16;
	public static final int COLON=17;
	public static final int COMMA=18;
	public static final int COMMENT=19;
	public static final int CONCATENATION_OP=20;
	public static final int D=21;
	public static final int DELIMITED_ID=22;
	public static final int DOUBLE_ASTERISK=23;
	public static final int DOUBLE_PERIOD=24;
	public static final int E=25;
	public static final int EQUALS_OP=26;
	public static final int EXACT_NUM_LIT=27;
	public static final int EXCLAMATION_OPERATOR_PART=28;
	public static final int F=29;
	public static final int G=30;
	public static final int GREATER_THAN_OP=31;
	public static final int GREATER_THAN_OR_EQUALS_OP=32;
	public static final int H=33;
	public static final int HEX_STRING_LIT=34;
	public static final int I=35;
	public static final int INTRODUCER=36;
	public static final int J=37;
	public static final int K=38;
	public static final int L=39;
	public static final int LEFT_BRACKET=40;
	public static final int LEFT_PAREN=41;
	public static final int LESS_THAN_OP=42;
	public static final int LESS_THAN_OR_EQUALS_OP=43;
	public static final int M=44;
	public static final int MINUS_SIGN=45;
	public static final int N=46;
	public static final int NATIONAL_CHAR_STRING_LIT=47;
	public static final int NEWLINE=48;
	public static final int NOT_EQUAL_OP=49;
	public static final int O=50;
	public static final int P=51;
	public static final int PERCENT=52;
	public static final int PERIOD=53;
	public static final int PLSQL_NON_RESERVED_CONNECT_BY_ROOT=54;
	public static final int PLSQL_NON_RESERVED_ELSIF=55;
	public static final int PLSQL_NON_RESERVED_MODEL=56;
	public static final int PLSQL_NON_RESERVED_PIVOT=57;
	public static final int PLSQL_NON_RESERVED_UNPIVOT=58;
	public static final int PLSQL_NON_RESERVED_USING=59;
	public static final int PLSQL_RESERVED_CLUSTERS=60;
	public static final int PLSQL_RESERVED_COLAUTH=61;
	public static final int PLSQL_RESERVED_COMPRESS=62;
	public static final int PLSQL_RESERVED_CRASH=63;
	public static final int PLSQL_RESERVED_EXCLUSIVE=64;
	public static final int PLSQL_RESERVED_IDENTIFIED=65;
	public static final int PLSQL_RESERVED_IF=66;
	public static final int PLSQL_RESERVED_INDEX=67;
	public static final int PLSQL_RESERVED_INDEXES=68;
	public static final int PLSQL_RESERVED_LOCK=69;
	public static final int PLSQL_RESERVED_MINUS=70;
	public static final int PLSQL_RESERVED_MODE=71;
	public static final int PLSQL_RESERVED_NOCOMPRESS=72;
	public static final int PLSQL_RESERVED_NOWAIT=73;
	public static final int PLSQL_RESERVED_RESOURCE=74;
	public static final int PLSQL_RESERVED_SHARE=75;
	public static final int PLSQL_RESERVED_START=76;
	public static final int PLSQL_RESERVED_TABAUTH=77;
	public static final int PLSQL_RESERVED_VIEWS=78;
	public static final int PLUS_SIGN=79;
	public static final int PROMPT=80;
	public static final int Q=81;
	public static final int QS_ANGLE=82;
	public static final int QS_BRACE=83;
	public static final int QS_BRACK=84;
	public static final int QS_OTHER=85;
	public static final int QS_OTHER_CH=86;
	public static final int QS_PAREN=87;
	public static final int QUESTION_MARK=88;
	public static final int QUOTE=89;
	public static final int R=90;
	public static final int REGULAR_ID=91;
	public static final int RIGHT_BRACKET=92;
	public static final int RIGHT_PAREN=93;
	public static final int S=94;
	public static final int SEMICOLON=95;
	public static final int SEPARATOR=96;
	public static final int SIMPLE_LETTER=97;
	public static final int SOLIDUS=98;
	public static final int SPACE=99;
	public static final int SQL92_RESERVED_ALL=100;
	public static final int SQL92_RESERVED_ALTER=101;
	public static final int SQL92_RESERVED_AND=102;
	public static final int SQL92_RESERVED_ANY=103;
	public static final int SQL92_RESERVED_AS=104;
	public static final int SQL92_RESERVED_ASC=105;
	public static final int SQL92_RESERVED_BEGIN=106;
	public static final int SQL92_RESERVED_BETWEEN=107;
	public static final int SQL92_RESERVED_BY=108;
	public static final int SQL92_RESERVED_CASE=109;
	public static final int SQL92_RESERVED_CHECK=110;
	public static final int SQL92_RESERVED_CONNECT=111;
	public static final int SQL92_RESERVED_CREATE=112;
	public static final int SQL92_RESERVED_CURRENT=113;
	public static final int SQL92_RESERVED_CURSOR=114;
	public static final int SQL92_RESERVED_DATE=115;
	public static final int SQL92_RESERVED_DECLARE=116;
	public static final int SQL92_RESERVED_DEFAULT=117;
	public static final int SQL92_RESERVED_DELETE=118;
	public static final int SQL92_RESERVED_DESC=119;
	public static final int SQL92_RESERVED_DISTINCT=120;
	public static final int SQL92_RESERVED_DROP=121;
	public static final int SQL92_RESERVED_ELSE=122;
	public static final int SQL92_RESERVED_END=123;
	public static final int SQL92_RESERVED_EXCEPTION=124;
	public static final int SQL92_RESERVED_EXISTS=125;
	public static final int SQL92_RESERVED_FALSE=126;
	public static final int SQL92_RESERVED_FETCH=127;
	public static final int SQL92_RESERVED_FOR=128;
	public static final int SQL92_RESERVED_FROM=129;
	public static final int SQL92_RESERVED_GOTO=130;
	public static final int SQL92_RESERVED_GRANT=131;
	public static final int SQL92_RESERVED_GROUP=132;
	public static final int SQL92_RESERVED_HAVING=133;
	public static final int SQL92_RESERVED_IN=134;
	public static final int SQL92_RESERVED_INSERT=135;
	public static final int SQL92_RESERVED_INTERSECT=136;
	public static final int SQL92_RESERVED_INTO=137;
	public static final int SQL92_RESERVED_IS=138;
	public static final int SQL92_RESERVED_LIKE=139;
	public static final int SQL92_RESERVED_NOT=140;
	public static final int SQL92_RESERVED_NULL=141;
	public static final int SQL92_RESERVED_OF=142;
	public static final int SQL92_RESERVED_ON=143;
	public static final int SQL92_RESERVED_OPTION=144;
	public static final int SQL92_RESERVED_OR=145;
	public static final int SQL92_RESERVED_ORDER=146;
	public static final int SQL92_RESERVED_OVERLAPS=147;
	public static final int SQL92_RESERVED_PRIOR=148;
	public static final int SQL92_RESERVED_PROCEDURE=149;
	public static final int SQL92_RESERVED_PUBLIC=150;
	public static final int SQL92_RESERVED_REVOKE=151;
	public static final int SQL92_RESERVED_SELECT=152;
	public static final int SQL92_RESERVED_SIZE=153;
	public static final int SQL92_RESERVED_TABLE=154;
	public static final int SQL92_RESERVED_THE=155;
	public static final int SQL92_RESERVED_THEN=156;
	public static final int SQL92_RESERVED_TO=157;
	public static final int SQL92_RESERVED_TRUE=158;
	public static final int SQL92_RESERVED_UNION=159;
	public static final int SQL92_RESERVED_UNIQUE=160;
	public static final int SQL92_RESERVED_UPDATE=161;
	public static final int SQL92_RESERVED_VALUES=162;
	public static final int SQL92_RESERVED_VIEW=163;
	public static final int SQL92_RESERVED_WHEN=164;
	public static final int SQL92_RESERVED_WHERE=165;
	public static final int SQL92_RESERVED_WITH=166;
	public static final int T=167;
	public static final int TILDE_OPERATOR_PART=168;
	public static final int U=169;
	public static final int UNDERSCORE=170;
	public static final int UNSIGNED_INTEGER=171;
	public static final int V=172;
	public static final int VERTICAL_BAR=173;
	public static final int W=174;
	public static final int X=175;
	public static final int Y=176;
	public static final int Z=177;
	public static final int ZV=178;
	public static final int ADD_VK=179;
	public static final int AFTER_EACH_ROW=180;
	public static final int AFTER_STATEMENT=181;
	public static final int AFTER_VK=182;
	public static final int AGENT_VK=183;
	public static final int AGGREGATE_VK=184;
	public static final int ALIAS=185;
	public static final int ALTER_ATTRIBUTE=186;
	public static final int ALTER_COLLECTION=187;
	public static final int ALTER_FUNCTION=188;
	public static final int ALTER_METHOD=189;
	public static final int ALTER_METHOD_ELEMENT=190;
	public static final int ALTER_PACKAGE=191;
	public static final int ALTER_PROCEDURE=192;
	public static final int ALTER_SEQUENCE=193;
	public static final int ALTER_TRIGGER=194;
	public static final int ALTER_TYPE=195;
	public static final int ANALYZE_VK=196;
	public static final int ANY_ELEMENT=197;
	public static final int ANY_MODE=198;
	public static final int ARGUMENT=200;
	public static final int ARGUMENTS=201;
	public static final int ASSIGN=202;
	public static final int ASSOCIATE_VK=203;
	public static final int ATTRIBUTE=205;
	public static final int ATTRIBUTES=206;
	public static final int ATTRIBUTE_NAME=207;
	public static final int AT_VK=209;
	public static final int AUDIT_VK=210;
	public static final int AUTHID_VK=211;
	public static final int AUTOMATIC_VK=212;
	public static final int AUTONOMOUS_TRANSACTION_VK=213;
	public static final int AUTO_VK=214;
	public static final int BATCH_VK=215;
	public static final int BEFORE_EACH_ROW=216;
	public static final int BEFORE_STATEMENT=217;
	public static final int BEFORE_VK=218;
	public static final int BFILE_VK=219;
	public static final int BINARY_DOUBLE_VK=220;
	public static final int BINARY_FLOAT_VK=221;
	public static final int BINARY_INTEGER_VK=222;
	public static final int BIT_VK=224;
	public static final int BLOB_VK=225;
	public static final int BLOCK=226;
	public static final int BLOCK_VK=227;
	public static final int BODY=228;
	public static final int BODY_MODE=229;
	public static final int BODY_VK=230;
	public static final int BOOLEAN_VK=231;
	public static final int BOTH_VK=232;
	public static final int BREADTH_VK=233;
	public static final int BULK_VK=234;
	public static final int BYTE_VK=235;
	public static final int CACHE_VK=236;
	public static final int CALL_MODE=237;
	public static final int CALL_VK=238;
	public static final int CANONICAL_VK=239;
	public static final int CASCADE_VK=241;
	public static final int CASCATED_ELEMENT=242;
	public static final int CAST_VK=243;
	public static final int CHARACTER_VK=244;
	public static final int CHAR_CS_VK=245;
	public static final int CHAR_SET_NAME=246;
	public static final int CHAR_VK=249;
	public static final int CHR_VK=250;
	public static final int CLOB_VK=251;
	public static final int CLOSE_VK=252;
	public static final int CLUSTER_VK=253;
	public static final int COLLECTION_MODE=254;
	public static final int COLLECTION_NAME=255;
	public static final int COLLECT_VK=256;
	public static final int COLUMNS=258;
	public static final int COLUMN_NAME=259;
	public static final int COMMENT_VK=261;
	public static final int COMMITTED_VK=262;
	public static final int COMMIT_VK=263;
	public static final int COMPATIBILITY_VK=264;
	public static final int COMPILATION_UNIT=265;
	public static final int COMPILER_PARAMETER=266;
	public static final int COMPILE_VK=267;
	public static final int COMPOUND_DML=268;
	public static final int COMPOUND_VK=269;
	public static final int CONDITIONAL_INSERT=271;
	public static final int CONSTANT_VK=272;
	public static final int CONSTRAINT_NAME=273;
	public static final int CONSTRUCTOR_SPEC=274;
	public static final int CONSTRUCTOR_VK=275;
	public static final int CONTENT_VK=276;
	public static final int CONTEXT_VK=277;
	public static final int CONTINUE_VK=278;
	public static final int CONVERT_VK=279;
	public static final int CORRUPT_XID_ALL_VK=280;
	public static final int CORRUPT_XID_VK=281;
	public static final int COST_CLASS_NAME=282;
	public static final int COST_VK=283;
	public static final int COUNT_VK=284;
	public static final int CREATE_FUNCTION=285;
	public static final int CREATE_PACKAGE_BODY=286;
	public static final int CREATE_PACKAGE_SPEC=287;
	public static final int CREATE_PROCEDURE=288;
	public static final int CREATE_SEQUENCE=289;
	public static final int CREATE_TRIGGER=290;
	public static final int CREATE_TYPE_BODY=291;
	public static final int CREATE_TYPE_SPEC=292;
	public static final int CROSS_VK=293;
	public static final int CUBE_VK=294;
	public static final int CURRENT_USER_VK=295;
	public static final int CURRENT_VK=296;
	public static final int CURSOR_BASED_FOR=297;
	public static final int CURSOR_DECLARE=298;
	public static final int CURSOR_NAME=299;
	public static final int CUSTOMDATUM_VK=300;
	public static final int CUSTOM_TYPE=301;
	public static final int CYCLE_VK=302;
	public static final int C_VK=303;
	public static final int DATABASE_VK=304;
	public static final int DATETIME_OP=305;
	public static final int DAY_VK=306;
	public static final int DBTIMEZONE_VK=307;
	public static final int DB_ROLE_CHANGE_VK=308;
	public static final int DDL_VK=309;
	public static final int DEBUG_VK=310;
	public static final int DECIMAL_VK=311;
	public static final int DECOMPOSE_VK=312;
	public static final int DECREMENT_VK=313;
	public static final int DEC_VK=314;
	public static final int DEFAULTS_VK=315;
	public static final int DEFAULT_VALUE=316;
	public static final int DEFERRED_VK=317;
	public static final int DEFINER_VK=318;
	public static final int DENSE_RANK_VK=320;
	public static final int DEPENDENT_HANDLING=321;
	public static final int DEPTH_VK=322;
	public static final int DETERMINISTIC_VK=323;
	public static final int DIMENSION_VK=324;
	public static final int DIRECT_MODE=325;
	public static final int DISABLE_VK=326;
	public static final int DISASSOCIATE_VK=327;
	public static final int DIV_VK=328;
	public static final int DML_EVENT=329;
	public static final int DML_EVENT_ELEMENT=330;
	public static final int DOCUMENT_VK=331;
	public static final int DOT_ASTERISK=332;
	public static final int DOUBLE_VK=333;
	public static final int DROP_FUNCTION=334;
	public static final int DROP_PACKAGE=335;
	public static final int DROP_PROCEDURE=336;
	public static final int DROP_SEQUENCE=337;
	public static final int DROP_TRIGGER=338;
	public static final int DROP_TYPE=339;
	public static final int DSINTERVAL_UNCONSTRAINED_VK=340;
	public static final int DYNAMIC_RETURN=341;
	public static final int ELEMENT=342;
	public static final int ELEMENTS_MODE=343;
	public static final int ELEMENT_SPEC=344;
	public static final int ENABLE_VK=345;
	public static final int ENCODING_VK=346;
	public static final int ENTITYESCAPING_VK=347;
	public static final int EVALNAME_VK=349;
	public static final int EXCEPTIONS_VK=351;
	public static final int EXCEPTION_DECLARE=352;
	public static final int EXCEPTION_INIT_VK=353;
	public static final int EXCEPTION_NAME=354;
	public static final int EXCLUDE_VK=356;
	public static final int EXECUTE_VK=357;
	public static final int EXIT_VK=358;
	public static final int EXPLAIN_STATEMENT=359;
	public static final int EXPR=360;
	public static final int EXPR_LIST=361;
	public static final int EXTERNAL_MODE=362;
	public static final int EXTERNAL_VK=363;
	public static final int EXTRACT_VK=364;
	public static final int FACTORING=365;
	public static final int FIELDS=366;
	public static final int FIELD_SPEC=367;
	public static final int FINAL_VK=368;
	public static final int FIRST_VALUE_VK=369;
	public static final int FIRST_VK=370;
	public static final int FLOAT_VK=371;
	public static final int FOLLOWING_VK=372;
	public static final int FOLLOWS_VK=373;
	public static final int FORALL_VK=374;
	public static final int FORCE_VK=375;
	public static final int FOR_EACH_ROW=376;
	public static final int FOR_LOOP=377;
	public static final int FOR_MULTI_COLUMN=378;
	public static final int FOR_SINGLE_COLUMN=379;
	public static final int FULL_VK=380;
	public static final int FUNCTION_ENABLING_OVER=381;
	public static final int FUNCTION_ENABLING_USING=382;
	public static final int FUNCTION_ENABLING_WITHIN_OR_OVER=383;
	public static final int FUNCTION_NAME=384;
	public static final int FUNCTION_SPEC=385;
	public static final int GROUPING_VK=388;
	public static final int GROUPIN_SET=389;
	public static final int GROUP_BY_ELEMENT=390;
	public static final int HASH_VK=391;
	public static final int HIDE_VK=392;
	public static final int HIERARCHICAL=393;
	public static final int HOSTED_VARIABLE=394;
	public static final int HOSTED_VARIABLE_NAME=395;
	public static final int HOSTED_VARIABLE_ROUTINE_CALL=396;
	public static final int HOUR_VK=397;
	public static final int ID=398;
	public static final int IGNORE_VK=399;
	public static final int IMMEDIATE_VK=400;
	public static final int IMPLEMENTATION_TYPE_NAME=401;
	public static final int INCLUDE_VK=402;
	public static final int INCLUDING_VK=403;
	public static final int INCREMENT_VK=404;
	public static final int INDENT_VK=405;
	public static final int INDEXED_BY=406;
	public static final int INDEXED_FOR=407;
	public static final int INDEX_NAME=408;
	public static final int INDICES_BOUND=409;
	public static final int INLINE_VK=410;
	public static final int INNER_VK=411;
	public static final int INOUT_VK=412;
	public static final int INSTANTIABLE_VK=413;
	public static final int INSTEAD_VK=414;
	public static final int INTEGER_VK=415;
	public static final int INTERVAL_DATATYPE=416;
	public static final int INT_VK=418;
	public static final int INVALIDATE_VK=419;
	public static final int ISOLATION_VK=420;
	public static final int IS_A_SET=421;
	public static final int IS_EMPTY=422;
	public static final int IS_INFINITE=423;
	public static final int IS_NAN=424;
	public static final int IS_NOT_A_SET=425;
	public static final int IS_NOT_EMPTY=426;
	public static final int IS_NOT_INFINITE=427;
	public static final int IS_NOT_NAN=428;
	public static final int IS_NOT_NULL=429;
	public static final int IS_NOT_OF_TYPE=430;
	public static final int IS_NOT_PRESENT=431;
	public static final int IS_NULL=432;
	public static final int IS_OF_TYPE=433;
	public static final int IS_PRESENT=434;
	public static final int ITERATE_VK=435;
	public static final int JAVA_VK=436;
	public static final int JOIN_DEF=437;
	public static final int KEEP_VK=438;
	public static final int LABEL_DECLARE=439;
	public static final int LABEL_NAME=440;
	public static final int LANGUAGE_VK=441;
	public static final int LAST_VALUE_VK=442;
	public static final int LAST_VK=443;
	public static final int LEADING_VK=444;
	public static final int LEFT_VK=447;
	public static final int LIBRARY_VK=450;
	public static final int LIKE2_VK=451;
	public static final int LIKE4_VK=452;
	public static final int LIKEC_VK=453;
	public static final int LIMIT_VK=454;
	public static final int LINK_NAME=455;
	public static final int LOCAL_VK=456;
	public static final int LOCK_TABLE_ELEMENT=457;
	public static final int LOGIC_EXPR=458;
	public static final int LOGOFF_VK=459;
	public static final int LOGON_VK=460;
	public static final int LOG_VK=461;
	public static final int LONG_VK=462;
	public static final int LOOP_VK=463;
	public static final int MAIN_MODEL=464;
	public static final int MAIN_MODEL_NAME=465;
	public static final int MAP_VK=466;
	public static final int MAXVALUE_VK=467;
	public static final int MEASURES_VK=468;
	public static final int MEMBER_VK=469;
	public static final int MERGE_INSERT=470;
	public static final int MERGE_UPDATE=471;
	public static final int MERGE_VK=472;
	public static final int MINUTE_VK=474;
	public static final int MINVALUE_VK=475;
	public static final int MLSLABEL_VK=476;
	public static final int MODEL_COLUMN=477;
	public static final int MODEL_COLUMNS=478;
	public static final int MODEL_EXPRESSION=479;
	public static final int MODEL_RULE=480;
	public static final int MODEL_RULES=481;
	public static final int MODIFIER=482;
	public static final int MODIFY_VK=483;
	public static final int MOD_VK=484;
	public static final int MONTH_VK=485;
	public static final int MULTI_TABLE_MODE=486;
	public static final int NAME_VK=487;
	public static final int NATIVE_DATATYPE=489;
	public static final int NATURALN_VK=490;
	public static final int NATURAL_VK=491;
	public static final int NAV_VK=492;
	public static final int NCHAR_CS_VK=493;
	public static final int NCHAR_VK=494;
	public static final int NCLOB_VK=495;
	public static final int NESTED_TABLE_TYPE_DEF=496;
	public static final int NESTED_VK=497;
	public static final int NEW_VK=498;
	public static final int NOAUDIT_VK=499;
	public static final int NOCACHE_VK=500;
	public static final int NOCOPY_VK=501;
	public static final int NOCYCLE_VK=502;
	public static final int NOENTITYESCAPING_VK=503;
	public static final int NOMAXVALUE_VK=504;
	public static final int NOMINVALUE_VK=505;
	public static final int NON_DML=506;
	public static final int NOORDER_VK=507;
	public static final int NOSCHEMACHECK_VK=508;
	public static final int NOT_BETWEEN=509;
	public static final int NOT_IN=511;
	public static final int NOT_LIKE=512;
	public static final int NO_VK=513;
	public static final int NULLS_VK=514;
	public static final int NUMBER_VK=515;
	public static final int NUMERIC_VK=516;
	public static final int NVARCHAR2_VK=517;
	public static final int OBJECT_AS=518;
	public static final int OBJECT_MEMBERS=519;
	public static final int OBJECT_TYPE_DEF=520;
	public static final int OBJECT_VK=521;
	public static final int OFF_VK=522;
	public static final int OLD_VK=523;
	public static final int ONLY_VK=524;
	public static final int OPEN_VK=525;
	public static final int ORADATA_VK=526;
	public static final int ORDER_BY_ELEMENT=527;
	public static final int ORDER_BY_ELEMENTS=528;
	public static final int ORDINALITY_VK=529;
	public static final int OUTER_JOIN_SIGN=530;
	public static final int OUT_VK=531;
	public static final int OVERRIDING_VK=532;
	public static final int OVER_VK=533;
	public static final int PACKAGE_NAME=534;
	public static final int PACKAGE_VK=535;
	public static final int PARALLEL_ENABLE_VK=536;
	public static final int PARAMETER=537;
	public static final int PARAMETERS=538;
	public static final int PARAMETERS_VK=539;
	public static final int PARAMETER_NAME=540;
	public static final int PARENT_VK=541;
	public static final int PARTITION_VK=542;
	public static final int PASSING_VK=543;
	public static final int PERCENT_FOUND_VK=545;
	public static final int PERCENT_ISOPEN_VK=546;
	public static final int PERCENT_NOTFOUND_VK=547;
	public static final int PERCENT_ROWCOUNT_VK=548;
	public static final int PERCENT_ROWTYPE_VK=549;
	public static final int PERCENT_TYPE_VK=550;
	public static final int PIPELINED_VK=552;
	public static final int PIPE_ROW=553;
	public static final int PIPE_VK=554;
	public static final int PIVOT_ALIAS=555;
	public static final int PIVOT_ELEMENT=556;
	public static final int PIVOT_IN_ELEMENT=557;
	public static final int PIVOT_VK=558;
	public static final int PLS_INTEGER_VK=573;
	public static final int POSITIVEN_VK=575;
	public static final int POSITIVE_VK=576;
	public static final int PRAGMA_DECLARE=577;
	public static final int PRAGMA_VK=578;
	public static final int PRECEDING_VK=579;
	public static final int PRECISION=580;
	public static final int PRECISION_VK=581;
	public static final int PREDICTION_FUNCTION=582;
	public static final int PROCEDURE_NAME=583;
	public static final int PROCEDURE_SPEC=584;
	public static final int QUERY_NAME=586;
	public static final int RAISE_VK=587;
	public static final int RANGE_VK=588;
	public static final int RAW_VK=589;
	public static final int READ_VK=590;
	public static final int REAL_VK=591;
	public static final int RECORD_NAME=592;
	public static final int RECORD_TYPE_DECLARE=593;
	public static final int RECORD_VAR_DECLARE=594;
	public static final int REFERENCE_MODEL_NAME=595;
	public static final int REFERENCE_VK=596;
	public static final int REFERENCING_VK=597;
	public static final int REF_VK=598;
	public static final int REJECT_VK=600;
	public static final int RELIES_ON_VK=601;
	public static final int RENAME_VK=602;
	public static final int REPLACE_VK=603;
	public static final int RESPECT_VK=604;
	public static final int RESTRICT_REFERENCES_VK=605;
	public static final int RESULT_CACHE_VK=606;
	public static final int RETURN_VK=607;
	public static final int REUSE_VK=608;
	public static final int REVERSE_VK=609;
	public static final int RIGHT_VK=612;
	public static final int ROLLBACK_SEGMENT_NAME=613;
	public static final int ROLLBACK_VK=614;
	public static final int ROLLUP_VK=615;
	public static final int ROUTINE_CALL=616;
	public static final int ROUTINE_NAME=617;
	public static final int ROWID_VK=618;
	public static final int ROWS_VK=619;
	public static final int ROW_VK=620;
	public static final int RULES_VK=621;
	public static final int SAMPLE_VK=622;
	public static final int SAVEPOINT_NAME=623;
	public static final int SAVEPOINT_VK=624;
	public static final int SCHEMACHECK_VK=625;
	public static final int SCHEMA_NAME=626;
	public static final int SCHEMA_VK=627;
	public static final int SCN_VK=628;
	public static final int SEARCHED_CASE=629;
	public static final int SEARCH_VK=630;
	public static final int SECOND_VK=631;
	public static final int SEED_VK=632;
	public static final int SELECTED_TABLEVIEW=633;
	public static final int SELECT_BASED_FOR=634;
	public static final int SELECT_ITEM=635;
	public static final int SELECT_LIST=636;
	public static final int SELECT_MODE=637;
	public static final int SELECT_STATEMENT=638;
	public static final int SELF_VK=639;
	public static final int SEQUENCE_NAME=641;
	public static final int SEQUENCE_VK=642;
	public static final int SEQUENTIAL_VK=643;
	public static final int SERIALIZABLE_VK=644;
	public static final int SERIALLY_REUSABLE_VK=645;
	public static final int SERVERERROR_VK=646;
	public static final int SESSIONTIMEZONE_VK=647;
	public static final int SET_CONSTRAINT=648;
	public static final int SET_SERVEROUTPUT=649;
	public static final int SET_TRANSACTION=650;
	public static final int SET_VK=651;
	public static final int SHOW_VK=652;
	public static final int SHUTDOWN_VK=653;
	public static final int SIBLINGS_VK=654;
	public static final int SIGNTYPE_VK=655;
	public static final int SIMPLE_BOUND=656;
	public static final int SIMPLE_CASE=657;
	public static final int SIMPLE_DML=658;
	public static final int SIMPLE_INTEGER_VK=659;
	public static final int SINGLE_TABLE_MODE=660;
	public static final int SINGLE_VK=661;
	public static final int SKIP_VK=662;
	public static final int SMALLINT_VK=663;
	public static final int SOME_VK=665;
	public static final int SPECIFICATION_VK=666;
	public static final int SQLDATA_VK=731;
	public static final int SQL_SCRIPT=732;
	public static final int STANDALONE_VK=733;
	public static final int STANDARD_FUNCTION=734;
	public static final int STARTUP_VK=735;
	public static final int STATEMENTS=736;
	public static final int STATIC_RETURNING=737;
	public static final int STATIC_VK=738;
	public static final int STATISTICS_VK=739;
	public static final int STREAMING_CLAUSE=740;
	public static final int STRING_VK=741;
	public static final int SUBMULTISET_VK=742;
	public static final int SUBPARTITION_VK=743;
	public static final int SUBQUERY=744;
	public static final int SUBTYPE_DECLARE=745;
	public static final int SUSPEND_VK=746;
	public static final int TABLEVIEW_NAME=747;
	public static final int TABLE_ELEMENT=748;
	public static final int TABLE_EXPRESSION=749;
	public static final int TABLE_REF=750;
	public static final int TABLE_REF_ELEMENT=751;
	public static final int TABLE_TYPE_DECLARE=752;
	public static final int TABLE_VAR_DECLARE=753;
	public static final int TABLE_VAR_NAME=754;
	public static final int THREE_DOTS=755;
	public static final int TIMESTAMP_LTZ_UNCONSTRAINED_VK=756;
	public static final int TIMESTAMP_TZ_UNCONSTRAINED_VK=757;
	public static final int TIMESTAMP_UNCONSTRAINED_VK=758;
	public static final int TIMESTAMP_VK=759;
	public static final int TIMEZONE_ABBR_VK=760;
	public static final int TIMEZONE_HOUR_VK=761;
	public static final int TIMEZONE_MINUTE_VK=762;
	public static final int TIMEZONE_REGION_VK=763;
	public static final int TIME_VK=764;
	public static final int TRAILING_VK=765;
	public static final int TRANSLATE_VK=766;
	public static final int TREAT_VK=767;
	public static final int TRIGGER_NAME=768;
	public static final int TRIM_VK=769;
	public static final int TRUNCATE_VK=770;
	public static final int TYPE_BODY_ELEMENTS=771;
	public static final int TYPE_NAME=772;
	public static final int TYPE_VK=773;
	public static final int UNARY_OPERATOR=774;
	public static final int UNBOUNDED_VK=775;
	public static final int UNDER_VK=776;
	public static final int UNLIMITED_VK=777;
	public static final int UNPIVOT_IN_ELEMENT=778;
	public static final int UNPIVOT_VK=779;
	public static final int UNTIL_VK=781;
	public static final int UPDATED_VK=782;
	public static final int UPSERT_VK=783;
	public static final int UROWID_VK=784;
	public static final int USING_MODE=785;
	public static final int VALIDATE_VK=786;
	public static final int VALUES_BOUND=787;
	public static final int VALUE_VK=788;
	public static final int VARCHAR2_VK=789;
	public static final int VARCHAR_VK=790;
	public static final int VARIABLE_DECLARE=791;
	public static final int VARIABLE_NAME=792;
	public static final int VARR_ARRAY_DEF=793;
	public static final int VECTOR_EXPR=794;
	public static final int VERSIONS_VK=795;
	public static final int VERSION_VK=796;
	public static final int WAIT_VK=798;
	public static final int WELLFORMED_VK=799;
	public static final int WHILE_LOOP=800;
	public static final int WITHIN_VK=801;
	public static final int WORK_VK=802;
	public static final int WRITE_VK=803;
	public static final int XMLAGG_VK=804;
	public static final int XMLATTRIBUTES_VK=805;
	public static final int XMLCAST_VK=806;
	public static final int XMLCOLATTVAL_VK=807;
	public static final int XMLELEMENT_VK=808;
	public static final int XMLEXISTS_VK=809;
	public static final int XMLFOREST_VK=810;
	public static final int XMLNAMESPACES_VK=811;
	public static final int XMLPARSE_VK=812;
	public static final int XMLPI_VK=813;
	public static final int XMLQUERY_VK=814;
	public static final int XMLROOT_VK=815;
	public static final int XMLSERIALIZE_VK=816;
	public static final int XMLTABLE_VK=817;
	public static final int XML_ALIAS=818;
	public static final int XML_COLUMN=819;
	public static final int XML_COLUMN_NAME=820;
	public static final int XML_ELEMENT=821;
	public static final int XML_VK=822;
	public static final int YEAR_VK=823;
	public static final int YES_VK=824;
	public static final int YMINTERVAL_UNCONSTRAINED_VK=825;
	public static final int DATE_VK=826;
	public static final int ORDER_VK=827;
	public static final int START_VK=828;

	// delegates
	public TreeParser[] getDelegates() {
		return new TreeParser[] {};
	}

	// delegators


	public PLSQLPrinter(TreeNodeStream input) {
		this(input, new RecognizerSharedState());
	}
	public PLSQLPrinter(TreeNodeStream input, RecognizerSharedState state) {
		super(input, state);
	}

	protected StringTemplateGroup templateLib =
	  new StringTemplateGroup("PLSQLPrinterTemplates", AngleBracketTemplateLexer.class);

	public void setTemplateLib(StringTemplateGroup templateLib) {
	  this.templateLib = templateLib;
	}
	public StringTemplateGroup getTemplateLib() {
	  return templateLib;
	}
	/** allows convenient multi-value initialization:
	 *  "new STAttrMap().put(...).put(...)"
	 */
	@SuppressWarnings("serial")
	public static class STAttrMap extends HashMap<String, Object> {
		public STAttrMap put(String attrName, Object value) {
			super.put(attrName, value);
			return this;
		}
	}
	@Override public String[] getTokenNames() { return PLSQLPrinter.tokenNames; }
	@Override public String getGrammarFileName() { return "PLSQLPrinter.g"; }



	  static String[] correctTokenNames = getCorrectTokenNames();

	  static String[] getCorrectTokenNames() {
	    // This is workaround for bug in antlr3 (at least in 3.5.2)
	    java.lang.reflect.Field[] fields = PLSQLPrinter.class.getDeclaredFields();
	    java.util.Map<Integer, String> tokenNamesMap = new java.util.HashMap<Integer, String>();
	    int maxTokenValue = 0;
	    for (java.lang.reflect.Field field: fields) {
	      int mod = field.getModifiers();
	      if (java.lang.reflect.Modifier.isStatic(mod) && java.lang.reflect.Modifier.isFinal(mod) && field.getType() == int.class) {
	        String name = field.getName();
	        int value;
	        try {
	          value = field.getInt(null);
	        } catch (Exception e) {
	          throw new RuntimeException(e);
	        }
	        tokenNamesMap.put(value, name);
	        maxTokenValue = Math.max(maxTokenValue, value);
	      }
	    }
	    String[] result = new String[maxTokenValue + 1];
	    for (int i = 0; i < maxTokenValue; ++i) {
	      if (tokenNamesMap.containsKey(i)) {
	        result[i] = tokenNamesMap.get(i);
	      } else {
	        result[i] = "<none>";
	      }
	    }
	    return result;
	  }
	  
	  
	  public void reportError(RecognitionException e) {
	    // if we've already reported an error and have not matched a token
	    // yet successfully, don't report any errors.
	    if ( state.errorRecovery ) {
	      //System.err.print("[SPURIOUS] ");
	      return;
	    }
	    state.syntaxErrors++; // don't count spurious
	    state.errorRecovery = true;

	    displayRecognitionError(correctTokenNames, e);
	  }



	public static class compilation_unit_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "compilation_unit"
	// PLSQLPrinter.g:74:1: compilation_unit : ^( COMPILATION_UNIT (u+= unit_statement )* ) -> template(statements=$u) <<\n--Compilation unit\n<statements:{v|<v>}; separator=\"\\n\\n\">\n>>;
	public final PLSQLPrinter.compilation_unit_return compilation_unit() throws RecognitionException {
		PLSQLPrinter.compilation_unit_return retval = new PLSQLPrinter.compilation_unit_return();
		retval.start = input.LT(1);

		List<Object> list_u=null;
		RuleReturnScope u = null;
		try {
			// PLSQLPrinter.g:75:5: ( ^( COMPILATION_UNIT (u+= unit_statement )* ) -> template(statements=$u) <<\n--Compilation unit\n<statements:{v|<v>}; separator=\"\\n\\n\">\n>>)
			// PLSQLPrinter.g:75:10: ^( COMPILATION_UNIT (u+= unit_statement )* )
			{
			match(input,COMPILATION_UNIT,FOLLOW_COMPILATION_UNIT_in_compilation_unit69); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:75:30: (u+= unit_statement )*
				loop1:
				while (true) {
					int alt1=2;
					int LA1_0 = input.LA(1);
					if ( (LA1_0==ALTER_FUNCTION||(LA1_0 >= ALTER_PACKAGE && LA1_0 <= ALTER_TYPE)||(LA1_0 >= CREATE_FUNCTION && LA1_0 <= CREATE_TYPE_SPEC)||(LA1_0 >= DROP_FUNCTION && LA1_0 <= DROP_TYPE)) ) {
						alt1=1;
					}

					switch (alt1) {
					case 1 :
						// PLSQLPrinter.g:75:30: u+= unit_statement
						{
						pushFollow(FOLLOW_unit_statement_in_compilation_unit73);
						u=unit_statement();
						state._fsp--;

						if (list_u==null) list_u=new ArrayList<Object>();
						list_u.add(u.getTemplate());
						}
						break;

					default :
						break loop1;
					}
				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 76:5: -> template(statements=$u) <<\n--Compilation unit\n<statements:{v|<v>}; separator=\"\\n\\n\">\n>>
			{
				retval.st = new StringTemplate(templateLib, "\n--Compilation unit\n<statements:{v|<v>}; separator=\"\\n\\n\">\n",new STAttrMap().put("statements", list_u));
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "compilation_unit"


	public static class sql_script_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "sql_script"
	// PLSQLPrinter.g:83:1: sql_script : ^( SQL_SCRIPT (u+= unit_statement )* ) -> template(statements=$u) <<\n--SQL script\n<statements:{v|--script\n<v>}; separator=\"\\n\\n\">\n>>;
	public final PLSQLPrinter.sql_script_return sql_script() throws RecognitionException {
		PLSQLPrinter.sql_script_return retval = new PLSQLPrinter.sql_script_return();
		retval.start = input.LT(1);

		List<Object> list_u=null;
		RuleReturnScope u = null;
		try {
			// PLSQLPrinter.g:84:5: ( ^( SQL_SCRIPT (u+= unit_statement )* ) -> template(statements=$u) <<\n--SQL script\n<statements:{v|--script\n<v>}; separator=\"\\n\\n\">\n>>)
			// PLSQLPrinter.g:84:10: ^( SQL_SCRIPT (u+= unit_statement )* )
			{
			match(input,SQL_SCRIPT,FOLLOW_SQL_SCRIPT_in_sql_script112); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:84:24: (u+= unit_statement )*
				loop2:
				while (true) {
					int alt2=2;
					int LA2_0 = input.LA(1);
					if ( (LA2_0==ALTER_FUNCTION||(LA2_0 >= ALTER_PACKAGE && LA2_0 <= ALTER_TYPE)||(LA2_0 >= CREATE_FUNCTION && LA2_0 <= CREATE_TYPE_SPEC)||(LA2_0 >= DROP_FUNCTION && LA2_0 <= DROP_TYPE)) ) {
						alt2=1;
					}

					switch (alt2) {
					case 1 :
						// PLSQLPrinter.g:84:24: u+= unit_statement
						{
						pushFollow(FOLLOW_unit_statement_in_sql_script116);
						u=unit_statement();
						state._fsp--;

						if (list_u==null) list_u=new ArrayList<Object>();
						list_u.add(u.getTemplate());
						}
						break;

					default :
						break loop2;
					}
				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 85:5: -> template(statements=$u) <<\n--SQL script\n<statements:{v|--script\n<v>}; separator=\"\\n\\n\">\n>>
			{
				retval.st = new StringTemplate(templateLib, "\n--SQL script\n<statements:{v|--script\n<v>}; separator=\"\\n\\n\">\n",new STAttrMap().put("statements", list_u));
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sql_script"


	public static class serveroutput_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "serveroutput_declaration"
	// PLSQLPrinter.g:93:1: serveroutput_declaration : ^( SET_SERVEROUTPUT ( SQL92_RESERVED_ON | OFF_VK ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.serveroutput_declaration_return serveroutput_declaration() throws RecognitionException {
		PLSQLPrinter.serveroutput_declaration_return retval = new PLSQLPrinter.serveroutput_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:94:5: ( ^( SET_SERVEROUTPUT ( SQL92_RESERVED_ON | OFF_VK ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:94:10: ^( SET_SERVEROUTPUT ( SQL92_RESERVED_ON | OFF_VK ) )
			{
			match(input,SET_SERVEROUTPUT,FOLLOW_SET_SERVEROUTPUT_in_serveroutput_declaration155); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:94:29: ( SQL92_RESERVED_ON | OFF_VK )
			int alt3=2;
			int LA3_0 = input.LA(1);
			if ( (LA3_0==SQL92_RESERVED_ON) ) {
				alt3=1;
			}
			else if ( (LA3_0==OFF_VK) ) {
				alt3=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 3, 0, input);
				throw nvae;
			}

			switch (alt3) {
				case 1 :
					// PLSQLPrinter.g:94:30: SQL92_RESERVED_ON
					{
					match(input,SQL92_RESERVED_ON,FOLLOW_SQL92_RESERVED_ON_in_serveroutput_declaration158); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:94:48: OFF_VK
					{
					match(input,OFF_VK,FOLLOW_OFF_VK_in_serveroutput_declaration160); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 95:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "serveroutput_declaration"


	public static class unit_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "unit_statement"
	// PLSQLPrinter.g:98:1: unit_statement : ( alter_function -> template( \"not implemented: \"| alter_package -> template( \"not implemented: \"| alter_procedure -> template( \"not implemented: \"| alter_sequence -> template( \"not implemented: \"| alter_trigger -> template( \"not implemented: \"| alter_type -> template( \"not implemented: \"| create_function_body | create_procedure_body -> template( \"not implemented: \"| create_package -> template( \"not implemented: \"| create_sequence -> template( \"not implemented: \"| create_trigger -> template( \"not implemented: \"| create_type -> template( \"not implemented: \"| drop_function -> template( \"not implemented: \"| drop_package -> template( \"not implemented: \"| drop_procedure -> template( \"not implemented: \"| drop_sequence -> template( \"not implemented: \"| drop_trigger -> template( \"not implemented: \"| drop_type -> template( \"not implemented: \");
	public final PLSQLPrinter.unit_statement_return unit_statement() throws RecognitionException {
		PLSQLPrinter.unit_statement_return retval = new PLSQLPrinter.unit_statement_return();
		retval.start = input.LT(1);

		TreeRuleReturnScope create_function_body1 =null;

		try {
			// PLSQLPrinter.g:99:5: ( alter_function -> template( \"not implemented: \"| alter_package -> template( \"not implemented: \"| alter_procedure -> template( \"not implemented: \"| alter_sequence -> template( \"not implemented: \"| alter_trigger -> template( \"not implemented: \"| alter_type -> template( \"not implemented: \"| create_function_body | create_procedure_body -> template( \"not implemented: \"| create_package -> template( \"not implemented: \"| create_sequence -> template( \"not implemented: \"| create_trigger -> template( \"not implemented: \"| create_type -> template( \"not implemented: \"| drop_function -> template( \"not implemented: \"| drop_package -> template( \"not implemented: \"| drop_procedure -> template( \"not implemented: \"| drop_sequence -> template( \"not implemented: \"| drop_trigger -> template( \"not implemented: \"| drop_type -> template( \"not implemented: \")
			int alt4=18;
			switch ( input.LA(1) ) {
			case ALTER_FUNCTION:
				{
				alt4=1;
				}
				break;
			case ALTER_PACKAGE:
				{
				alt4=2;
				}
				break;
			case ALTER_PROCEDURE:
				{
				alt4=3;
				}
				break;
			case ALTER_SEQUENCE:
				{
				alt4=4;
				}
				break;
			case ALTER_TRIGGER:
				{
				alt4=5;
				}
				break;
			case ALTER_TYPE:
				{
				alt4=6;
				}
				break;
			case CREATE_FUNCTION:
				{
				alt4=7;
				}
				break;
			case CREATE_PROCEDURE:
				{
				alt4=8;
				}
				break;
			case CREATE_PACKAGE_BODY:
			case CREATE_PACKAGE_SPEC:
				{
				alt4=9;
				}
				break;
			case CREATE_SEQUENCE:
				{
				alt4=10;
				}
				break;
			case CREATE_TRIGGER:
				{
				alt4=11;
				}
				break;
			case CREATE_TYPE_BODY:
			case CREATE_TYPE_SPEC:
				{
				alt4=12;
				}
				break;
			case DROP_FUNCTION:
				{
				alt4=13;
				}
				break;
			case DROP_PACKAGE:
				{
				alt4=14;
				}
				break;
			case DROP_PROCEDURE:
				{
				alt4=15;
				}
				break;
			case DROP_SEQUENCE:
				{
				alt4=16;
				}
				break;
			case DROP_TRIGGER:
				{
				alt4=17;
				}
				break;
			case DROP_TYPE:
				{
				alt4=18;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 4, 0, input);
				throw nvae;
			}
			switch (alt4) {
				case 1 :
					// PLSQLPrinter.g:99:10: alter_function
					{
					pushFollow(FOLLOW_alter_function_in_unit_statement196);
					alter_function();
					state._fsp--;

					// TEMPLATE REWRITE
					// 100:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:101:10: alter_package
					{
					pushFollow(FOLLOW_alter_package_in_unit_statement221);
					alter_package();
					state._fsp--;

					// TEMPLATE REWRITE
					// 102:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:103:10: alter_procedure
					{
					pushFollow(FOLLOW_alter_procedure_in_unit_statement246);
					alter_procedure();
					state._fsp--;

					// TEMPLATE REWRITE
					// 104:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:105:10: alter_sequence
					{
					pushFollow(FOLLOW_alter_sequence_in_unit_statement271);
					alter_sequence();
					state._fsp--;

					// TEMPLATE REWRITE
					// 106:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:107:10: alter_trigger
					{
					pushFollow(FOLLOW_alter_trigger_in_unit_statement296);
					alter_trigger();
					state._fsp--;

					// TEMPLATE REWRITE
					// 108:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:109:10: alter_type
					{
					pushFollow(FOLLOW_alter_type_in_unit_statement321);
					alter_type();
					state._fsp--;

					// TEMPLATE REWRITE
					// 110:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:111:10: create_function_body
					{
					pushFollow(FOLLOW_create_function_body_in_unit_statement346);
					create_function_body1=create_function_body();
					state._fsp--;

					 retval.st = (create_function_body1!=null?((StringTemplate)create_function_body1.getTemplate()):null); 
					}
					break;
				case 8 :
					// PLSQLPrinter.g:112:10: create_procedure_body
					{
					pushFollow(FOLLOW_create_procedure_body_in_unit_statement359);
					create_procedure_body();
					state._fsp--;

					// TEMPLATE REWRITE
					// 113:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:114:10: create_package
					{
					pushFollow(FOLLOW_create_package_in_unit_statement384);
					create_package();
					state._fsp--;

					// TEMPLATE REWRITE
					// 115:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:116:10: create_sequence
					{
					pushFollow(FOLLOW_create_sequence_in_unit_statement409);
					create_sequence();
					state._fsp--;

					// TEMPLATE REWRITE
					// 117:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:118:10: create_trigger
					{
					pushFollow(FOLLOW_create_trigger_in_unit_statement434);
					create_trigger();
					state._fsp--;

					// TEMPLATE REWRITE
					// 119:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:120:10: create_type
					{
					pushFollow(FOLLOW_create_type_in_unit_statement459);
					create_type();
					state._fsp--;

					// TEMPLATE REWRITE
					// 121:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 13 :
					// PLSQLPrinter.g:122:10: drop_function
					{
					pushFollow(FOLLOW_drop_function_in_unit_statement484);
					drop_function();
					state._fsp--;

					// TEMPLATE REWRITE
					// 123:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 14 :
					// PLSQLPrinter.g:124:10: drop_package
					{
					pushFollow(FOLLOW_drop_package_in_unit_statement509);
					drop_package();
					state._fsp--;

					// TEMPLATE REWRITE
					// 125:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 15 :
					// PLSQLPrinter.g:126:10: drop_procedure
					{
					pushFollow(FOLLOW_drop_procedure_in_unit_statement534);
					drop_procedure();
					state._fsp--;

					// TEMPLATE REWRITE
					// 127:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 16 :
					// PLSQLPrinter.g:128:10: drop_sequence
					{
					pushFollow(FOLLOW_drop_sequence_in_unit_statement559);
					drop_sequence();
					state._fsp--;

					// TEMPLATE REWRITE
					// 129:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 17 :
					// PLSQLPrinter.g:130:10: drop_trigger
					{
					pushFollow(FOLLOW_drop_trigger_in_unit_statement584);
					drop_trigger();
					state._fsp--;

					// TEMPLATE REWRITE
					// 131:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 18 :
					// PLSQLPrinter.g:132:10: drop_type
					{
					pushFollow(FOLLOW_drop_type_in_unit_statement609);
					drop_type();
					state._fsp--;

					// TEMPLATE REWRITE
					// 133:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "unit_statement"


	public static class drop_function_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "drop_function"
	// PLSQLPrinter.g:140:1: drop_function : ^( DROP_FUNCTION function_name ) -> template( \"not implemented: \";
	public final PLSQLPrinter.drop_function_return drop_function() throws RecognitionException {
		PLSQLPrinter.drop_function_return retval = new PLSQLPrinter.drop_function_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:141:5: ( ^( DROP_FUNCTION function_name ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:141:10: ^( DROP_FUNCTION function_name )
			{
			match(input,DROP_FUNCTION,FOLLOW_DROP_FUNCTION_in_drop_function648); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_function_name_in_drop_function650);
			function_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 142:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_function"


	public static class alter_function_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_function"
	// PLSQLPrinter.g:145:1: alter_function : ^( ALTER_FUNCTION function_name ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) -> template( \"not implemented: \";
	public final PLSQLPrinter.alter_function_return alter_function() throws RecognitionException {
		PLSQLPrinter.alter_function_return retval = new PLSQLPrinter.alter_function_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:146:5: ( ^( ALTER_FUNCTION function_name ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:146:10: ^( ALTER_FUNCTION function_name ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* )
			{
			match(input,ALTER_FUNCTION,FOLLOW_ALTER_FUNCTION_in_alter_function686); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_function_name_in_alter_function688);
			function_name();
			state._fsp--;

			// PLSQLPrinter.g:146:41: ( DEBUG_VK )?
			int alt5=2;
			int LA5_0 = input.LA(1);
			if ( (LA5_0==DEBUG_VK) ) {
				alt5=1;
			}
			switch (alt5) {
				case 1 :
					// PLSQLPrinter.g:146:41: DEBUG_VK
					{
					match(input,DEBUG_VK,FOLLOW_DEBUG_VK_in_alter_function690); 
					}
					break;

			}

			// PLSQLPrinter.g:146:51: ( REUSE_VK )?
			int alt6=2;
			int LA6_0 = input.LA(1);
			if ( (LA6_0==REUSE_VK) ) {
				alt6=1;
			}
			switch (alt6) {
				case 1 :
					// PLSQLPrinter.g:146:51: REUSE_VK
					{
					match(input,REUSE_VK,FOLLOW_REUSE_VK_in_alter_function693); 
					}
					break;

			}

			// PLSQLPrinter.g:146:61: ( compiler_parameters_clause )*
			loop7:
			while (true) {
				int alt7=2;
				int LA7_0 = input.LA(1);
				if ( (LA7_0==COMPILER_PARAMETER) ) {
					alt7=1;
				}

				switch (alt7) {
				case 1 :
					// PLSQLPrinter.g:146:61: compiler_parameters_clause
					{
					pushFollow(FOLLOW_compiler_parameters_clause_in_alter_function696);
					compiler_parameters_clause();
					state._fsp--;

					}
					break;

				default :
					break loop7;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 147:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_function"


	public static class create_function_body_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "create_function_body"
	// PLSQLPrinter.g:150:1: create_function_body : ^( CREATE_FUNCTION ( REPLACE_VK )? ^( FUNCTION_NAME (name+= ID )+ ) ret= type_spec ^( PARAMETERS (args+= parameter )* ) (ac+= invoker_rights_clause )* (ac+= parallel_enable_clause )* (ac+= result_cache_clause )* ( DETERMINISTIC_VK )* ( ^( USING_MODE ( PIPELINED_VK )? ( AGGREGATE_VK )? implementation_type_name ) -> template( \"not implemented: \"| ^( CALL_MODE ( PIPELINED_VK )? call_spec ) -> template( \"not implemented: \"| ^( BODY_MODE (body_pipe= PIPELINED_VK )? ( declare_spec )* body ) -> create_function_body(is_replace=$REPLACE_VK != nullname_parts=$namearguments=$argsreturn_type=$ret.stadd_clauses=$acis_pipelined=$body_pipe != nullbody=$body.st)) ) ;
	public final PLSQLPrinter.create_function_body_return create_function_body() throws RecognitionException {
		PLSQLPrinter.create_function_body_return retval = new PLSQLPrinter.create_function_body_return();
		retval.start = input.LT(1);

		CommonTree body_pipe=null;
		CommonTree REPLACE_VK2=null;
		CommonTree name=null;
		List<Object> list_name=null;
		List<Object> list_args=null;
		List<Object> list_ac=null;
		TreeRuleReturnScope ret =null;
		TreeRuleReturnScope body3 =null;
		RuleReturnScope args = null;
		RuleReturnScope ac = null;
		try {
			// PLSQLPrinter.g:151:5: ( ^( CREATE_FUNCTION ( REPLACE_VK )? ^( FUNCTION_NAME (name+= ID )+ ) ret= type_spec ^( PARAMETERS (args+= parameter )* ) (ac+= invoker_rights_clause )* (ac+= parallel_enable_clause )* (ac+= result_cache_clause )* ( DETERMINISTIC_VK )* ( ^( USING_MODE ( PIPELINED_VK )? ( AGGREGATE_VK )? implementation_type_name ) -> template( \"not implemented: \"| ^( CALL_MODE ( PIPELINED_VK )? call_spec ) -> template( \"not implemented: \"| ^( BODY_MODE (body_pipe= PIPELINED_VK )? ( declare_spec )* body ) -> create_function_body(is_replace=$REPLACE_VK != nullname_parts=$namearguments=$argsreturn_type=$ret.stadd_clauses=$acis_pipelined=$body_pipe != nullbody=$body.st)) ) )
			// PLSQLPrinter.g:151:10: ^( CREATE_FUNCTION ( REPLACE_VK )? ^( FUNCTION_NAME (name+= ID )+ ) ret= type_spec ^( PARAMETERS (args+= parameter )* ) (ac+= invoker_rights_clause )* (ac+= parallel_enable_clause )* (ac+= result_cache_clause )* ( DETERMINISTIC_VK )* ( ^( USING_MODE ( PIPELINED_VK )? ( AGGREGATE_VK )? implementation_type_name ) -> template( \"not implemented: \"| ^( CALL_MODE ( PIPELINED_VK )? call_spec ) -> template( \"not implemented: \"| ^( BODY_MODE (body_pipe= PIPELINED_VK )? ( declare_spec )* body ) -> create_function_body(is_replace=$REPLACE_VK != nullname_parts=$namearguments=$argsreturn_type=$ret.stadd_clauses=$acis_pipelined=$body_pipe != nullbody=$body.st)) )
			{
			match(input,CREATE_FUNCTION,FOLLOW_CREATE_FUNCTION_in_create_function_body733); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:151:28: ( REPLACE_VK )?
			int alt8=2;
			int LA8_0 = input.LA(1);
			if ( (LA8_0==REPLACE_VK) ) {
				alt8=1;
			}
			switch (alt8) {
				case 1 :
					// PLSQLPrinter.g:151:28: REPLACE_VK
					{
					REPLACE_VK2=(CommonTree)match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_create_function_body735); 
					}
					break;

			}

			match(input,FUNCTION_NAME,FOLLOW_FUNCTION_NAME_in_create_function_body739); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:151:60: (name+= ID )+
			int cnt9=0;
			loop9:
			while (true) {
				int alt9=2;
				int LA9_0 = input.LA(1);
				if ( (LA9_0==ID) ) {
					alt9=1;
				}

				switch (alt9) {
				case 1 :
					// PLSQLPrinter.g:151:60: name+= ID
					{
					name=(CommonTree)match(input,ID,FOLLOW_ID_in_create_function_body743); 
					if (list_name==null) list_name=new ArrayList<Object>();
					list_name.add(name);
					}
					break;

				default :
					if ( cnt9 >= 1 ) break loop9;
					EarlyExitException eee = new EarlyExitException(9, input);
					throw eee;
				}
				cnt9++;
			}

			match(input, Token.UP, null); 

			pushFollow(FOLLOW_type_spec_in_create_function_body749);
			ret=type_spec();
			state._fsp--;

			match(input,PARAMETERS,FOLLOW_PARAMETERS_in_create_function_body752); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:151:98: (args+= parameter )*
				loop10:
				while (true) {
					int alt10=2;
					int LA10_0 = input.LA(1);
					if ( (LA10_0==PARAMETER) ) {
						alt10=1;
					}

					switch (alt10) {
					case 1 :
						// PLSQLPrinter.g:151:98: args+= parameter
						{
						pushFollow(FOLLOW_parameter_in_create_function_body756);
						args=parameter();
						state._fsp--;

						if (list_args==null) list_args=new ArrayList<Object>();
						list_args.add(args.getTemplate());
						}
						break;

					default :
						break loop10;
					}
				}

				match(input, Token.UP, null); 
			}

			// PLSQLPrinter.g:152:15: (ac+= invoker_rights_clause )*
			loop11:
			while (true) {
				int alt11=2;
				int LA11_0 = input.LA(1);
				if ( (LA11_0==AUTHID_VK) ) {
					alt11=1;
				}

				switch (alt11) {
				case 1 :
					// PLSQLPrinter.g:152:15: ac+= invoker_rights_clause
					{
					pushFollow(FOLLOW_invoker_rights_clause_in_create_function_body774);
					ac=invoker_rights_clause();
					state._fsp--;

					if (list_ac==null) list_ac=new ArrayList<Object>();
					list_ac.add(ac.getTemplate());
					}
					break;

				default :
					break loop11;
				}
			}

			// PLSQLPrinter.g:152:42: (ac+= parallel_enable_clause )*
			loop12:
			while (true) {
				int alt12=2;
				int LA12_0 = input.LA(1);
				if ( (LA12_0==PARALLEL_ENABLE_VK) ) {
					alt12=1;
				}

				switch (alt12) {
				case 1 :
					// PLSQLPrinter.g:152:42: ac+= parallel_enable_clause
					{
					pushFollow(FOLLOW_parallel_enable_clause_in_create_function_body779);
					ac=parallel_enable_clause();
					state._fsp--;

					if (list_ac==null) list_ac=new ArrayList<Object>();
					list_ac.add(ac.getTemplate());
					}
					break;

				default :
					break loop12;
				}
			}

			// PLSQLPrinter.g:152:70: (ac+= result_cache_clause )*
			loop13:
			while (true) {
				int alt13=2;
				int LA13_0 = input.LA(1);
				if ( (LA13_0==RESULT_CACHE_VK) ) {
					alt13=1;
				}

				switch (alt13) {
				case 1 :
					// PLSQLPrinter.g:152:70: ac+= result_cache_clause
					{
					pushFollow(FOLLOW_result_cache_clause_in_create_function_body784);
					ac=result_cache_clause();
					state._fsp--;

					if (list_ac==null) list_ac=new ArrayList<Object>();
					list_ac.add(ac.getTemplate());
					}
					break;

				default :
					break loop13;
				}
			}

			// PLSQLPrinter.g:152:93: ( DETERMINISTIC_VK )*
			loop14:
			while (true) {
				int alt14=2;
				int LA14_0 = input.LA(1);
				if ( (LA14_0==DETERMINISTIC_VK) ) {
					alt14=1;
				}

				switch (alt14) {
				case 1 :
					// PLSQLPrinter.g:152:93: DETERMINISTIC_VK
					{
					match(input,DETERMINISTIC_VK,FOLLOW_DETERMINISTIC_VK_in_create_function_body787); 
					}
					break;

				default :
					break loop14;
				}
			}

			// PLSQLPrinter.g:153:13: ( ^( USING_MODE ( PIPELINED_VK )? ( AGGREGATE_VK )? implementation_type_name ) -> template( \"not implemented: \"| ^( CALL_MODE ( PIPELINED_VK )? call_spec ) -> template( \"not implemented: \"| ^( BODY_MODE (body_pipe= PIPELINED_VK )? ( declare_spec )* body ) -> create_function_body(is_replace=$REPLACE_VK != nullname_parts=$namearguments=$argsreturn_type=$ret.stadd_clauses=$acis_pipelined=$body_pipe != nullbody=$body.st))
			int alt20=3;
			switch ( input.LA(1) ) {
			case USING_MODE:
				{
				alt20=1;
				}
				break;
			case CALL_MODE:
				{
				alt20=2;
				}
				break;
			case BODY_MODE:
				{
				alt20=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 20, 0, input);
				throw nvae;
			}
			switch (alt20) {
				case 1 :
					// PLSQLPrinter.g:153:18: ^( USING_MODE ( PIPELINED_VK )? ( AGGREGATE_VK )? implementation_type_name )
					{
					match(input,USING_MODE,FOLLOW_USING_MODE_in_create_function_body808); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:153:31: ( PIPELINED_VK )?
					int alt15=2;
					int LA15_0 = input.LA(1);
					if ( (LA15_0==PIPELINED_VK) ) {
						alt15=1;
					}
					switch (alt15) {
						case 1 :
							// PLSQLPrinter.g:153:31: PIPELINED_VK
							{
							match(input,PIPELINED_VK,FOLLOW_PIPELINED_VK_in_create_function_body810); 
							}
							break;

					}

					// PLSQLPrinter.g:153:45: ( AGGREGATE_VK )?
					int alt16=2;
					int LA16_0 = input.LA(1);
					if ( (LA16_0==AGGREGATE_VK) ) {
						alt16=1;
					}
					switch (alt16) {
						case 1 :
							// PLSQLPrinter.g:153:45: AGGREGATE_VK
							{
							match(input,AGGREGATE_VK,FOLLOW_AGGREGATE_VK_in_create_function_body813); 
							}
							break;

					}

					pushFollow(FOLLOW_implementation_type_name_in_create_function_body816);
					implementation_type_name();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 154:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:155:18: ^( CALL_MODE ( PIPELINED_VK )? call_spec )
					{
					match(input,CALL_MODE,FOLLOW_CALL_MODE_in_create_function_body851); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:155:30: ( PIPELINED_VK )?
					int alt17=2;
					int LA17_0 = input.LA(1);
					if ( (LA17_0==PIPELINED_VK) ) {
						alt17=1;
					}
					switch (alt17) {
						case 1 :
							// PLSQLPrinter.g:155:30: PIPELINED_VK
							{
							match(input,PIPELINED_VK,FOLLOW_PIPELINED_VK_in_create_function_body853); 
							}
							break;

					}

					pushFollow(FOLLOW_call_spec_in_create_function_body856);
					call_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 156:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:157:18: ^( BODY_MODE (body_pipe= PIPELINED_VK )? ( declare_spec )* body )
					{
					match(input,BODY_MODE,FOLLOW_BODY_MODE_in_create_function_body891); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:157:39: (body_pipe= PIPELINED_VK )?
					int alt18=2;
					int LA18_0 = input.LA(1);
					if ( (LA18_0==PIPELINED_VK) ) {
						alt18=1;
					}
					switch (alt18) {
						case 1 :
							// PLSQLPrinter.g:157:39: body_pipe= PIPELINED_VK
							{
							body_pipe=(CommonTree)match(input,PIPELINED_VK,FOLLOW_PIPELINED_VK_in_create_function_body895); 
							}
							break;

					}

					// PLSQLPrinter.g:157:54: ( declare_spec )*
					loop19:
					while (true) {
						int alt19=2;
						int LA19_0 = input.LA(1);
						if ( (LA19_0==CREATE_FUNCTION||LA19_0==CREATE_PROCEDURE||LA19_0==CURSOR_DECLARE||LA19_0==EXCEPTION_DECLARE||LA19_0==PRAGMA_DECLARE||(LA19_0 >= RECORD_TYPE_DECLARE && LA19_0 <= RECORD_VAR_DECLARE)||LA19_0==SUBTYPE_DECLARE||(LA19_0 >= TABLE_TYPE_DECLARE && LA19_0 <= TABLE_VAR_DECLARE)||LA19_0==VARIABLE_DECLARE) ) {
							alt19=1;
						}

						switch (alt19) {
						case 1 :
							// PLSQLPrinter.g:157:54: declare_spec
							{
							pushFollow(FOLLOW_declare_spec_in_create_function_body898);
							declare_spec();
							state._fsp--;

							}
							break;

						default :
							break loop19;
						}
					}

					pushFollow(FOLLOW_body_in_create_function_body901);
					body3=body();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 158:18: -> create_function_body(is_replace=$REPLACE_VK != nullname_parts=$namearguments=$argsreturn_type=$ret.stadd_clauses=$acis_pipelined=$body_pipe != nullbody=$body.st)
					{
						retval.st = templateLib.getInstanceOf("create_function_body",new STAttrMap().put("is_replace", REPLACE_VK2 != null).put("name_parts", list_name).put("arguments", list_args).put("return_type", (ret!=null?((StringTemplate)ret.getTemplate()):null)).put("add_clauses", list_ac).put("is_pipelined", body_pipe != null).put("body", (body3!=null?((StringTemplate)body3.getTemplate()):null)));
					}



					}
					break;

			}

			match(input, Token.UP, null); 

			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_function_body"


	public static class parallel_enable_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "parallel_enable_clause"
	// PLSQLPrinter.g:167:1: parallel_enable_clause : ^( PARALLEL_ENABLE_VK ( partition_by_clause )? ) -> template( \"not implemented: parallel_enable_clause\";
	public final PLSQLPrinter.parallel_enable_clause_return parallel_enable_clause() throws RecognitionException {
		PLSQLPrinter.parallel_enable_clause_return retval = new PLSQLPrinter.parallel_enable_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:168:5: ( ^( PARALLEL_ENABLE_VK ( partition_by_clause )? ) -> template( \"not implemented: parallel_enable_clause\")
			// PLSQLPrinter.g:168:10: ^( PARALLEL_ENABLE_VK ( partition_by_clause )? )
			{
			match(input,PARALLEL_ENABLE_VK,FOLLOW_PARALLEL_ENABLE_VK_in_parallel_enable_clause1067); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:168:31: ( partition_by_clause )?
				int alt21=2;
				int LA21_0 = input.LA(1);
				if ( (LA21_0==PARTITION_VK) ) {
					alt21=1;
				}
				switch (alt21) {
					case 1 :
						// PLSQLPrinter.g:168:31: partition_by_clause
						{
						pushFollow(FOLLOW_partition_by_clause_in_parallel_enable_clause1069);
						partition_by_clause();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 169:5: -> template( \"not implemented: parallel_enable_clause\"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: parallel_enable_clause");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "parallel_enable_clause"


	public static class partition_by_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "partition_by_clause"
	// PLSQLPrinter.g:172:1: partition_by_clause : ^( PARTITION_VK expression ( SQL92_RESERVED_ANY | ^( HASH_VK ^( COLUMNS ( column_name )+ ) ) | ^( RANGE_VK ^( COLUMNS ( column_name )+ ) ) ) ( streaming_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.partition_by_clause_return partition_by_clause() throws RecognitionException {
		PLSQLPrinter.partition_by_clause_return retval = new PLSQLPrinter.partition_by_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:173:5: ( ^( PARTITION_VK expression ( SQL92_RESERVED_ANY | ^( HASH_VK ^( COLUMNS ( column_name )+ ) ) | ^( RANGE_VK ^( COLUMNS ( column_name )+ ) ) ) ( streaming_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:173:10: ^( PARTITION_VK expression ( SQL92_RESERVED_ANY | ^( HASH_VK ^( COLUMNS ( column_name )+ ) ) | ^( RANGE_VK ^( COLUMNS ( column_name )+ ) ) ) ( streaming_clause )? )
			{
			match(input,PARTITION_VK,FOLLOW_PARTITION_VK_in_partition_by_clause1106); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_partition_by_clause1108);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:174:13: ( SQL92_RESERVED_ANY | ^( HASH_VK ^( COLUMNS ( column_name )+ ) ) | ^( RANGE_VK ^( COLUMNS ( column_name )+ ) ) )
			int alt24=3;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_ANY:
				{
				alt24=1;
				}
				break;
			case HASH_VK:
				{
				alt24=2;
				}
				break;
			case RANGE_VK:
				{
				alt24=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 24, 0, input);
				throw nvae;
			}
			switch (alt24) {
				case 1 :
					// PLSQLPrinter.g:174:18: SQL92_RESERVED_ANY
					{
					match(input,SQL92_RESERVED_ANY,FOLLOW_SQL92_RESERVED_ANY_in_partition_by_clause1128); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:175:18: ^( HASH_VK ^( COLUMNS ( column_name )+ ) )
					{
					match(input,HASH_VK,FOLLOW_HASH_VK_in_partition_by_clause1148); 
					match(input, Token.DOWN, null); 
					match(input,COLUMNS,FOLLOW_COLUMNS_in_partition_by_clause1151); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:175:38: ( column_name )+
					int cnt22=0;
					loop22:
					while (true) {
						int alt22=2;
						int LA22_0 = input.LA(1);
						if ( (LA22_0==COLUMN_NAME) ) {
							alt22=1;
						}

						switch (alt22) {
						case 1 :
							// PLSQLPrinter.g:175:38: column_name
							{
							pushFollow(FOLLOW_column_name_in_partition_by_clause1153);
							column_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt22 >= 1 ) break loop22;
							EarlyExitException eee = new EarlyExitException(22, input);
							throw eee;
						}
						cnt22++;
					}

					match(input, Token.UP, null); 

					match(input, Token.UP, null); 

					}
					break;
				case 3 :
					// PLSQLPrinter.g:176:18: ^( RANGE_VK ^( COLUMNS ( column_name )+ ) )
					{
					match(input,RANGE_VK,FOLLOW_RANGE_VK_in_partition_by_clause1176); 
					match(input, Token.DOWN, null); 
					match(input,COLUMNS,FOLLOW_COLUMNS_in_partition_by_clause1179); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:176:39: ( column_name )+
					int cnt23=0;
					loop23:
					while (true) {
						int alt23=2;
						int LA23_0 = input.LA(1);
						if ( (LA23_0==COLUMN_NAME) ) {
							alt23=1;
						}

						switch (alt23) {
						case 1 :
							// PLSQLPrinter.g:176:39: column_name
							{
							pushFollow(FOLLOW_column_name_in_partition_by_clause1181);
							column_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt23 >= 1 ) break loop23;
							EarlyExitException eee = new EarlyExitException(23, input);
							throw eee;
						}
						cnt23++;
					}

					match(input, Token.UP, null); 

					match(input, Token.UP, null); 

					}
					break;

			}

			// PLSQLPrinter.g:178:13: ( streaming_clause )?
			int alt25=2;
			int LA25_0 = input.LA(1);
			if ( (LA25_0==STREAMING_CLAUSE) ) {
				alt25=1;
			}
			switch (alt25) {
				case 1 :
					// PLSQLPrinter.g:178:13: streaming_clause
					{
					pushFollow(FOLLOW_streaming_clause_in_partition_by_clause1213);
					streaming_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 180:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "partition_by_clause"


	public static class result_cache_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "result_cache_clause"
	// PLSQLPrinter.g:183:1: result_cache_clause : ^( RESULT_CACHE_VK ( relies_on_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.result_cache_clause_return result_cache_clause() throws RecognitionException {
		PLSQLPrinter.result_cache_clause_return retval = new PLSQLPrinter.result_cache_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:184:5: ( ^( RESULT_CACHE_VK ( relies_on_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:184:10: ^( RESULT_CACHE_VK ( relies_on_part )? )
			{
			match(input,RESULT_CACHE_VK,FOLLOW_RESULT_CACHE_VK_in_result_cache_clause1259); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:184:28: ( relies_on_part )?
				int alt26=2;
				int LA26_0 = input.LA(1);
				if ( (LA26_0==RELIES_ON_VK) ) {
					alt26=1;
				}
				switch (alt26) {
					case 1 :
						// PLSQLPrinter.g:184:28: relies_on_part
						{
						pushFollow(FOLLOW_relies_on_part_in_result_cache_clause1261);
						relies_on_part();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 185:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "result_cache_clause"


	public static class relies_on_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "relies_on_part"
	// PLSQLPrinter.g:188:1: relies_on_part : ^( RELIES_ON_VK ( tableview_name )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.relies_on_part_return relies_on_part() throws RecognitionException {
		PLSQLPrinter.relies_on_part_return retval = new PLSQLPrinter.relies_on_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:189:5: ( ^( RELIES_ON_VK ( tableview_name )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:189:10: ^( RELIES_ON_VK ( tableview_name )+ )
			{
			match(input,RELIES_ON_VK,FOLLOW_RELIES_ON_VK_in_relies_on_part1298); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:189:25: ( tableview_name )+
			int cnt27=0;
			loop27:
			while (true) {
				int alt27=2;
				int LA27_0 = input.LA(1);
				if ( (LA27_0==TABLEVIEW_NAME) ) {
					alt27=1;
				}

				switch (alt27) {
				case 1 :
					// PLSQLPrinter.g:189:25: tableview_name
					{
					pushFollow(FOLLOW_tableview_name_in_relies_on_part1300);
					tableview_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt27 >= 1 ) break loop27;
					EarlyExitException eee = new EarlyExitException(27, input);
					throw eee;
				}
				cnt27++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 190:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "relies_on_part"


	public static class streaming_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "streaming_clause"
	// PLSQLPrinter.g:193:1: streaming_clause : ^( STREAMING_CLAUSE ( SQL92_RESERVED_ORDER | CLUSTER_VK ) expression ^( COLUMNS ( column_name )+ ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.streaming_clause_return streaming_clause() throws RecognitionException {
		PLSQLPrinter.streaming_clause_return retval = new PLSQLPrinter.streaming_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:194:5: ( ^( STREAMING_CLAUSE ( SQL92_RESERVED_ORDER | CLUSTER_VK ) expression ^( COLUMNS ( column_name )+ ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:194:10: ^( STREAMING_CLAUSE ( SQL92_RESERVED_ORDER | CLUSTER_VK ) expression ^( COLUMNS ( column_name )+ ) )
			{
			match(input,STREAMING_CLAUSE,FOLLOW_STREAMING_CLAUSE_in_streaming_clause1337); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:194:29: ( SQL92_RESERVED_ORDER | CLUSTER_VK )
			int alt28=2;
			int LA28_0 = input.LA(1);
			if ( (LA28_0==SQL92_RESERVED_ORDER) ) {
				alt28=1;
			}
			else if ( (LA28_0==CLUSTER_VK) ) {
				alt28=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 28, 0, input);
				throw nvae;
			}

			switch (alt28) {
				case 1 :
					// PLSQLPrinter.g:194:30: SQL92_RESERVED_ORDER
					{
					match(input,SQL92_RESERVED_ORDER,FOLLOW_SQL92_RESERVED_ORDER_in_streaming_clause1340); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:194:51: CLUSTER_VK
					{
					match(input,CLUSTER_VK,FOLLOW_CLUSTER_VK_in_streaming_clause1342); 
					}
					break;

			}

			pushFollow(FOLLOW_expression_in_streaming_clause1345);
			expression();
			state._fsp--;

			match(input,COLUMNS,FOLLOW_COLUMNS_in_streaming_clause1348); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:194:84: ( column_name )+
			int cnt29=0;
			loop29:
			while (true) {
				int alt29=2;
				int LA29_0 = input.LA(1);
				if ( (LA29_0==COLUMN_NAME) ) {
					alt29=1;
				}

				switch (alt29) {
				case 1 :
					// PLSQLPrinter.g:194:84: column_name
					{
					pushFollow(FOLLOW_column_name_in_streaming_clause1350);
					column_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt29 >= 1 ) break loop29;
					EarlyExitException eee = new EarlyExitException(29, input);
					throw eee;
				}
				cnt29++;
			}

			match(input, Token.UP, null); 

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 195:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "streaming_clause"


	public static class drop_package_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "drop_package"
	// PLSQLPrinter.g:202:1: drop_package : ^( DROP_PACKAGE package_name ( BODY_VK )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.drop_package_return drop_package() throws RecognitionException {
		PLSQLPrinter.drop_package_return retval = new PLSQLPrinter.drop_package_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:203:5: ( ^( DROP_PACKAGE package_name ( BODY_VK )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:203:10: ^( DROP_PACKAGE package_name ( BODY_VK )? )
			{
			match(input,DROP_PACKAGE,FOLLOW_DROP_PACKAGE_in_drop_package1393); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_package_name_in_drop_package1395);
			package_name();
			state._fsp--;

			// PLSQLPrinter.g:203:38: ( BODY_VK )?
			int alt30=2;
			int LA30_0 = input.LA(1);
			if ( (LA30_0==BODY_VK) ) {
				alt30=1;
			}
			switch (alt30) {
				case 1 :
					// PLSQLPrinter.g:203:38: BODY_VK
					{
					match(input,BODY_VK,FOLLOW_BODY_VK_in_drop_package1397); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 204:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_package"


	public static class alter_package_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_package"
	// PLSQLPrinter.g:207:1: alter_package : ^( ALTER_PACKAGE package_name ( DEBUG_VK )? ( REUSE_VK )? ( PACKAGE_VK | BODY_VK | SPECIFICATION_VK )? ( compiler_parameters_clause )* ) -> template( \"not implemented: \";
	public final PLSQLPrinter.alter_package_return alter_package() throws RecognitionException {
		PLSQLPrinter.alter_package_return retval = new PLSQLPrinter.alter_package_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:208:5: ( ^( ALTER_PACKAGE package_name ( DEBUG_VK )? ( REUSE_VK )? ( PACKAGE_VK | BODY_VK | SPECIFICATION_VK )? ( compiler_parameters_clause )* ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:208:10: ^( ALTER_PACKAGE package_name ( DEBUG_VK )? ( REUSE_VK )? ( PACKAGE_VK | BODY_VK | SPECIFICATION_VK )? ( compiler_parameters_clause )* )
			{
			match(input,ALTER_PACKAGE,FOLLOW_ALTER_PACKAGE_in_alter_package1434); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_package_name_in_alter_package1436);
			package_name();
			state._fsp--;

			// PLSQLPrinter.g:208:39: ( DEBUG_VK )?
			int alt31=2;
			int LA31_0 = input.LA(1);
			if ( (LA31_0==DEBUG_VK) ) {
				alt31=1;
			}
			switch (alt31) {
				case 1 :
					// PLSQLPrinter.g:208:39: DEBUG_VK
					{
					match(input,DEBUG_VK,FOLLOW_DEBUG_VK_in_alter_package1438); 
					}
					break;

			}

			// PLSQLPrinter.g:208:49: ( REUSE_VK )?
			int alt32=2;
			int LA32_0 = input.LA(1);
			if ( (LA32_0==REUSE_VK) ) {
				alt32=1;
			}
			switch (alt32) {
				case 1 :
					// PLSQLPrinter.g:208:49: REUSE_VK
					{
					match(input,REUSE_VK,FOLLOW_REUSE_VK_in_alter_package1441); 
					}
					break;

			}

			// PLSQLPrinter.g:209:17: ( PACKAGE_VK | BODY_VK | SPECIFICATION_VK )?
			int alt33=4;
			switch ( input.LA(1) ) {
				case PACKAGE_VK:
					{
					alt33=1;
					}
					break;
				case BODY_VK:
					{
					alt33=2;
					}
					break;
				case SPECIFICATION_VK:
					{
					alt33=3;
					}
					break;
			}
			switch (alt33) {
				case 1 :
					// PLSQLPrinter.g:209:18: PACKAGE_VK
					{
					match(input,PACKAGE_VK,FOLLOW_PACKAGE_VK_in_alter_package1462); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:209:29: BODY_VK
					{
					match(input,BODY_VK,FOLLOW_BODY_VK_in_alter_package1464); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:209:37: SPECIFICATION_VK
					{
					match(input,SPECIFICATION_VK,FOLLOW_SPECIFICATION_VK_in_alter_package1466); 
					}
					break;

			}

			// PLSQLPrinter.g:209:56: ( compiler_parameters_clause )*
			loop34:
			while (true) {
				int alt34=2;
				int LA34_0 = input.LA(1);
				if ( (LA34_0==COMPILER_PARAMETER) ) {
					alt34=1;
				}

				switch (alt34) {
				case 1 :
					// PLSQLPrinter.g:209:56: compiler_parameters_clause
					{
					pushFollow(FOLLOW_compiler_parameters_clause_in_alter_package1470);
					compiler_parameters_clause();
					state._fsp--;

					}
					break;

				default :
					break loop34;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 210:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_package"


	public static class create_package_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "create_package"
	// PLSQLPrinter.g:213:1: create_package : ( ^( CREATE_PACKAGE_SPEC ( REPLACE_VK )? package_name ( invoker_rights_clause )? ( package_obj_spec )* ) -> template( \"not implemented: \"| ^( CREATE_PACKAGE_BODY ( REPLACE_VK )? package_name ( package_obj_body )* ( seq_of_statements )? ) -> template( \"not implemented: \");
	public final PLSQLPrinter.create_package_return create_package() throws RecognitionException {
		PLSQLPrinter.create_package_return retval = new PLSQLPrinter.create_package_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:214:5: ( ^( CREATE_PACKAGE_SPEC ( REPLACE_VK )? package_name ( invoker_rights_clause )? ( package_obj_spec )* ) -> template( \"not implemented: \"| ^( CREATE_PACKAGE_BODY ( REPLACE_VK )? package_name ( package_obj_body )* ( seq_of_statements )? ) -> template( \"not implemented: \")
			int alt41=2;
			int LA41_0 = input.LA(1);
			if ( (LA41_0==CREATE_PACKAGE_SPEC) ) {
				alt41=1;
			}
			else if ( (LA41_0==CREATE_PACKAGE_BODY) ) {
				alt41=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 41, 0, input);
				throw nvae;
			}

			switch (alt41) {
				case 1 :
					// PLSQLPrinter.g:214:10: ^( CREATE_PACKAGE_SPEC ( REPLACE_VK )? package_name ( invoker_rights_clause )? ( package_obj_spec )* )
					{
					match(input,CREATE_PACKAGE_SPEC,FOLLOW_CREATE_PACKAGE_SPEC_in_create_package1507); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:214:32: ( REPLACE_VK )?
					int alt35=2;
					int LA35_0 = input.LA(1);
					if ( (LA35_0==REPLACE_VK) ) {
						alt35=1;
					}
					switch (alt35) {
						case 1 :
							// PLSQLPrinter.g:214:32: REPLACE_VK
							{
							match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_create_package1509); 
							}
							break;

					}

					pushFollow(FOLLOW_package_name_in_create_package1512);
					package_name();
					state._fsp--;

					// PLSQLPrinter.g:214:57: ( invoker_rights_clause )?
					int alt36=2;
					int LA36_0 = input.LA(1);
					if ( (LA36_0==AUTHID_VK) ) {
						alt36=1;
					}
					switch (alt36) {
						case 1 :
							// PLSQLPrinter.g:214:57: invoker_rights_clause
							{
							pushFollow(FOLLOW_invoker_rights_clause_in_create_package1514);
							invoker_rights_clause();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:214:80: ( package_obj_spec )*
					loop37:
					while (true) {
						int alt37=2;
						int LA37_0 = input.LA(1);
						if ( (LA37_0==CURSOR_DECLARE||LA37_0==EXCEPTION_DECLARE||LA37_0==FUNCTION_SPEC||LA37_0==PRAGMA_DECLARE||LA37_0==PROCEDURE_SPEC||(LA37_0 >= RECORD_TYPE_DECLARE && LA37_0 <= RECORD_VAR_DECLARE)||LA37_0==SUBTYPE_DECLARE||(LA37_0 >= TABLE_TYPE_DECLARE && LA37_0 <= TABLE_VAR_DECLARE)||LA37_0==VARIABLE_DECLARE) ) {
							alt37=1;
						}

						switch (alt37) {
						case 1 :
							// PLSQLPrinter.g:214:80: package_obj_spec
							{
							pushFollow(FOLLOW_package_obj_spec_in_create_package1517);
							package_obj_spec();
							state._fsp--;

							}
							break;

						default :
							break loop37;
						}
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 215:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:216:10: ^( CREATE_PACKAGE_BODY ( REPLACE_VK )? package_name ( package_obj_body )* ( seq_of_statements )? )
					{
					match(input,CREATE_PACKAGE_BODY,FOLLOW_CREATE_PACKAGE_BODY_in_create_package1546); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:216:32: ( REPLACE_VK )?
					int alt38=2;
					int LA38_0 = input.LA(1);
					if ( (LA38_0==REPLACE_VK) ) {
						alt38=1;
					}
					switch (alt38) {
						case 1 :
							// PLSQLPrinter.g:216:32: REPLACE_VK
							{
							match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_create_package1548); 
							}
							break;

					}

					pushFollow(FOLLOW_package_name_in_create_package1551);
					package_name();
					state._fsp--;

					// PLSQLPrinter.g:216:57: ( package_obj_body )*
					loop39:
					while (true) {
						int alt39=2;
						int LA39_0 = input.LA(1);
						if ( (LA39_0==CREATE_FUNCTION||LA39_0==CREATE_PROCEDURE||(LA39_0 >= CREATE_TYPE_BODY && LA39_0 <= CREATE_TYPE_SPEC)||LA39_0==CURSOR_DECLARE||LA39_0==EXCEPTION_DECLARE||(LA39_0 >= RECORD_TYPE_DECLARE && LA39_0 <= RECORD_VAR_DECLARE)||LA39_0==SUBTYPE_DECLARE||(LA39_0 >= TABLE_TYPE_DECLARE && LA39_0 <= TABLE_VAR_DECLARE)||LA39_0==VARIABLE_DECLARE) ) {
							alt39=1;
						}

						switch (alt39) {
						case 1 :
							// PLSQLPrinter.g:216:57: package_obj_body
							{
							pushFollow(FOLLOW_package_obj_body_in_create_package1553);
							package_obj_body();
							state._fsp--;

							}
							break;

						default :
							break loop39;
						}
					}

					// PLSQLPrinter.g:216:75: ( seq_of_statements )?
					int alt40=2;
					int LA40_0 = input.LA(1);
					if ( (LA40_0==STATEMENTS) ) {
						alt40=1;
					}
					switch (alt40) {
						case 1 :
							// PLSQLPrinter.g:216:75: seq_of_statements
							{
							pushFollow(FOLLOW_seq_of_statements_in_create_package1556);
							seq_of_statements();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 217:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_package"


	public static class package_obj_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "package_obj_spec"
	// PLSQLPrinter.g:222:1: package_obj_spec : ( variable_declaration -> template( \"not implemented: \"| subtype_declaration -> template( \"not implemented: \"| cursor_declaration -> template( \"not implemented: \"| exception_declaration -> template( \"not implemented: \"| record_declaration -> template( \"not implemented: \"| table_declaration -> template( \"not implemented: \"| procedure_spec -> template( \"not implemented: \"| function_spec -> template( \"not implemented: \"| pragma_declaration -> template( \"not implemented: \");
	public final PLSQLPrinter.package_obj_spec_return package_obj_spec() throws RecognitionException {
		PLSQLPrinter.package_obj_spec_return retval = new PLSQLPrinter.package_obj_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:223:5: ( variable_declaration -> template( \"not implemented: \"| subtype_declaration -> template( \"not implemented: \"| cursor_declaration -> template( \"not implemented: \"| exception_declaration -> template( \"not implemented: \"| record_declaration -> template( \"not implemented: \"| table_declaration -> template( \"not implemented: \"| procedure_spec -> template( \"not implemented: \"| function_spec -> template( \"not implemented: \"| pragma_declaration -> template( \"not implemented: \")
			int alt42=9;
			switch ( input.LA(1) ) {
			case VARIABLE_DECLARE:
				{
				alt42=1;
				}
				break;
			case SUBTYPE_DECLARE:
				{
				alt42=2;
				}
				break;
			case CURSOR_DECLARE:
				{
				alt42=3;
				}
				break;
			case EXCEPTION_DECLARE:
				{
				alt42=4;
				}
				break;
			case RECORD_TYPE_DECLARE:
			case RECORD_VAR_DECLARE:
				{
				alt42=5;
				}
				break;
			case TABLE_TYPE_DECLARE:
			case TABLE_VAR_DECLARE:
				{
				alt42=6;
				}
				break;
			case PROCEDURE_SPEC:
				{
				alt42=7;
				}
				break;
			case FUNCTION_SPEC:
				{
				alt42=8;
				}
				break;
			case PRAGMA_DECLARE:
				{
				alt42=9;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 42, 0, input);
				throw nvae;
			}
			switch (alt42) {
				case 1 :
					// PLSQLPrinter.g:223:10: variable_declaration
					{
					pushFollow(FOLLOW_variable_declaration_in_package_obj_spec1594);
					variable_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 224:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:225:11: subtype_declaration
					{
					pushFollow(FOLLOW_subtype_declaration_in_package_obj_spec1620);
					subtype_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 226:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:227:11: cursor_declaration
					{
					pushFollow(FOLLOW_cursor_declaration_in_package_obj_spec1646);
					cursor_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 228:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:229:11: exception_declaration
					{
					pushFollow(FOLLOW_exception_declaration_in_package_obj_spec1672);
					exception_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 230:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:231:11: record_declaration
					{
					pushFollow(FOLLOW_record_declaration_in_package_obj_spec1698);
					record_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 232:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:233:11: table_declaration
					{
					pushFollow(FOLLOW_table_declaration_in_package_obj_spec1724);
					table_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 234:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:235:11: procedure_spec
					{
					pushFollow(FOLLOW_procedure_spec_in_package_obj_spec1750);
					procedure_spec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 236:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:237:11: function_spec
					{
					pushFollow(FOLLOW_function_spec_in_package_obj_spec1776);
					function_spec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 238:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:239:11: pragma_declaration
					{
					pushFollow(FOLLOW_pragma_declaration_in_package_obj_spec1802);
					pragma_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 240:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "package_obj_spec"


	public static class procedure_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "procedure_spec"
	// PLSQLPrinter.g:243:1: procedure_spec : ^( PROCEDURE_SPEC procedure_name ^( PARAMETERS ( parameter )* ) ( ^( CALL_MODE call_spec ) )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.procedure_spec_return procedure_spec() throws RecognitionException {
		PLSQLPrinter.procedure_spec_return retval = new PLSQLPrinter.procedure_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:244:5: ( ^( PROCEDURE_SPEC procedure_name ^( PARAMETERS ( parameter )* ) ( ^( CALL_MODE call_spec ) )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:244:11: ^( PROCEDURE_SPEC procedure_name ^( PARAMETERS ( parameter )* ) ( ^( CALL_MODE call_spec ) )? )
			{
			match(input,PROCEDURE_SPEC,FOLLOW_PROCEDURE_SPEC_in_procedure_spec1838); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_procedure_name_in_procedure_spec1840);
			procedure_name();
			state._fsp--;

			match(input,PARAMETERS,FOLLOW_PARAMETERS_in_procedure_spec1843); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:244:56: ( parameter )*
				loop43:
				while (true) {
					int alt43=2;
					int LA43_0 = input.LA(1);
					if ( (LA43_0==PARAMETER) ) {
						alt43=1;
					}

					switch (alt43) {
					case 1 :
						// PLSQLPrinter.g:244:56: parameter
						{
						pushFollow(FOLLOW_parameter_in_procedure_spec1845);
						parameter();
						state._fsp--;

						}
						break;

					default :
						break loop43;
					}
				}

				match(input, Token.UP, null); 
			}

			// PLSQLPrinter.g:245:13: ( ^( CALL_MODE call_spec ) )?
			int alt44=2;
			int LA44_0 = input.LA(1);
			if ( (LA44_0==CALL_MODE) ) {
				alt44=1;
			}
			switch (alt44) {
				case 1 :
					// PLSQLPrinter.g:245:14: ^( CALL_MODE call_spec )
					{
					match(input,CALL_MODE,FOLLOW_CALL_MODE_in_procedure_spec1863); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_call_spec_in_procedure_spec1865);
					call_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 247:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "procedure_spec"


	public static class function_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "function_spec"
	// PLSQLPrinter.g:250:1: function_spec : ^( FUNCTION_SPEC function_name ( type_spec | SELF_VK ) ^( PARAMETERS ( parameter )* ) ( invoker_rights_clause )* ( parallel_enable_clause )* ( result_cache_clause )* ( DETERMINISTIC_VK )* ( ^( CALL_MODE call_spec ) | ^( EXTERNAL_VK expression ) )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.function_spec_return function_spec() throws RecognitionException {
		PLSQLPrinter.function_spec_return retval = new PLSQLPrinter.function_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:251:5: ( ^( FUNCTION_SPEC function_name ( type_spec | SELF_VK ) ^( PARAMETERS ( parameter )* ) ( invoker_rights_clause )* ( parallel_enable_clause )* ( result_cache_clause )* ( DETERMINISTIC_VK )* ( ^( CALL_MODE call_spec ) | ^( EXTERNAL_VK expression ) )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:251:10: ^( FUNCTION_SPEC function_name ( type_spec | SELF_VK ) ^( PARAMETERS ( parameter )* ) ( invoker_rights_clause )* ( parallel_enable_clause )* ( result_cache_clause )* ( DETERMINISTIC_VK )* ( ^( CALL_MODE call_spec ) | ^( EXTERNAL_VK expression ) )? )
			{
			match(input,FUNCTION_SPEC,FOLLOW_FUNCTION_SPEC_in_function_spec1910); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_function_name_in_function_spec1912);
			function_name();
			state._fsp--;

			// PLSQLPrinter.g:251:40: ( type_spec | SELF_VK )
			int alt45=2;
			int LA45_0 = input.LA(1);
			if ( (LA45_0==CUSTOM_TYPE||LA45_0==INTERVAL_DATATYPE||LA45_0==NATIVE_DATATYPE) ) {
				alt45=1;
			}
			else if ( (LA45_0==SELF_VK) ) {
				alt45=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 45, 0, input);
				throw nvae;
			}

			switch (alt45) {
				case 1 :
					// PLSQLPrinter.g:251:41: type_spec
					{
					pushFollow(FOLLOW_type_spec_in_function_spec1915);
					type_spec();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:251:51: SELF_VK
					{
					match(input,SELF_VK,FOLLOW_SELF_VK_in_function_spec1917); 
					}
					break;

			}

			match(input,PARAMETERS,FOLLOW_PARAMETERS_in_function_spec1921); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:251:73: ( parameter )*
				loop46:
				while (true) {
					int alt46=2;
					int LA46_0 = input.LA(1);
					if ( (LA46_0==PARAMETER) ) {
						alt46=1;
					}

					switch (alt46) {
					case 1 :
						// PLSQLPrinter.g:251:73: parameter
						{
						pushFollow(FOLLOW_parameter_in_function_spec1923);
						parameter();
						state._fsp--;

						}
						break;

					default :
						break loop46;
					}
				}

				match(input, Token.UP, null); 
			}

			// PLSQLPrinter.g:252:13: ( invoker_rights_clause )*
			loop47:
			while (true) {
				int alt47=2;
				int LA47_0 = input.LA(1);
				if ( (LA47_0==AUTHID_VK) ) {
					alt47=1;
				}

				switch (alt47) {
				case 1 :
					// PLSQLPrinter.g:252:13: invoker_rights_clause
					{
					pushFollow(FOLLOW_invoker_rights_clause_in_function_spec1939);
					invoker_rights_clause();
					state._fsp--;

					}
					break;

				default :
					break loop47;
				}
			}

			// PLSQLPrinter.g:252:36: ( parallel_enable_clause )*
			loop48:
			while (true) {
				int alt48=2;
				int LA48_0 = input.LA(1);
				if ( (LA48_0==PARALLEL_ENABLE_VK) ) {
					alt48=1;
				}

				switch (alt48) {
				case 1 :
					// PLSQLPrinter.g:252:36: parallel_enable_clause
					{
					pushFollow(FOLLOW_parallel_enable_clause_in_function_spec1942);
					parallel_enable_clause();
					state._fsp--;

					}
					break;

				default :
					break loop48;
				}
			}

			// PLSQLPrinter.g:252:60: ( result_cache_clause )*
			loop49:
			while (true) {
				int alt49=2;
				int LA49_0 = input.LA(1);
				if ( (LA49_0==RESULT_CACHE_VK) ) {
					alt49=1;
				}

				switch (alt49) {
				case 1 :
					// PLSQLPrinter.g:252:60: result_cache_clause
					{
					pushFollow(FOLLOW_result_cache_clause_in_function_spec1945);
					result_cache_clause();
					state._fsp--;

					}
					break;

				default :
					break loop49;
				}
			}

			// PLSQLPrinter.g:252:81: ( DETERMINISTIC_VK )*
			loop50:
			while (true) {
				int alt50=2;
				int LA50_0 = input.LA(1);
				if ( (LA50_0==DETERMINISTIC_VK) ) {
					alt50=1;
				}

				switch (alt50) {
				case 1 :
					// PLSQLPrinter.g:252:81: DETERMINISTIC_VK
					{
					match(input,DETERMINISTIC_VK,FOLLOW_DETERMINISTIC_VK_in_function_spec1948); 
					}
					break;

				default :
					break loop50;
				}
			}

			// PLSQLPrinter.g:253:13: ( ^( CALL_MODE call_spec ) | ^( EXTERNAL_VK expression ) )?
			int alt51=3;
			int LA51_0 = input.LA(1);
			if ( (LA51_0==CALL_MODE) ) {
				alt51=1;
			}
			else if ( (LA51_0==EXTERNAL_VK) ) {
				alt51=2;
			}
			switch (alt51) {
				case 1 :
					// PLSQLPrinter.g:253:18: ^( CALL_MODE call_spec )
					{
					match(input,CALL_MODE,FOLLOW_CALL_MODE_in_function_spec1969); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_call_spec_in_function_spec1971);
					call_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:254:18: ^( EXTERNAL_VK expression )
					{
					match(input,EXTERNAL_VK,FOLLOW_EXTERNAL_VK_in_function_spec1992); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_function_spec1994);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 257:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "function_spec"


	public static class package_obj_body_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "package_obj_body"
	// PLSQLPrinter.g:260:1: package_obj_body : ( variable_declaration -> template( \"not implemented: \"| subtype_declaration -> template( \"not implemented: \"| cursor_declaration -> template( \"not implemented: \"| exception_declaration -> template( \"not implemented: \"| record_declaration -> template( \"not implemented: \"| table_declaration -> template( \"not implemented: \"| create_procedure_body -> template( \"not implemented: \"| create_function_body -> template( \"not implemented: \"| create_type -> template( \"not implemented: \");
	public final PLSQLPrinter.package_obj_body_return package_obj_body() throws RecognitionException {
		PLSQLPrinter.package_obj_body_return retval = new PLSQLPrinter.package_obj_body_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:261:5: ( variable_declaration -> template( \"not implemented: \"| subtype_declaration -> template( \"not implemented: \"| cursor_declaration -> template( \"not implemented: \"| exception_declaration -> template( \"not implemented: \"| record_declaration -> template( \"not implemented: \"| table_declaration -> template( \"not implemented: \"| create_procedure_body -> template( \"not implemented: \"| create_function_body -> template( \"not implemented: \"| create_type -> template( \"not implemented: \")
			int alt52=9;
			switch ( input.LA(1) ) {
			case VARIABLE_DECLARE:
				{
				alt52=1;
				}
				break;
			case SUBTYPE_DECLARE:
				{
				alt52=2;
				}
				break;
			case CURSOR_DECLARE:
				{
				alt52=3;
				}
				break;
			case EXCEPTION_DECLARE:
				{
				alt52=4;
				}
				break;
			case RECORD_TYPE_DECLARE:
			case RECORD_VAR_DECLARE:
				{
				alt52=5;
				}
				break;
			case TABLE_TYPE_DECLARE:
			case TABLE_VAR_DECLARE:
				{
				alt52=6;
				}
				break;
			case CREATE_PROCEDURE:
				{
				alt52=7;
				}
				break;
			case CREATE_FUNCTION:
				{
				alt52=8;
				}
				break;
			case CREATE_TYPE_BODY:
			case CREATE_TYPE_SPEC:
				{
				alt52=9;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 52, 0, input);
				throw nvae;
			}
			switch (alt52) {
				case 1 :
					// PLSQLPrinter.g:261:11: variable_declaration
					{
					pushFollow(FOLLOW_variable_declaration_in_package_obj_body2055);
					variable_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 262:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:263:11: subtype_declaration
					{
					pushFollow(FOLLOW_subtype_declaration_in_package_obj_body2082);
					subtype_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 264:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:265:11: cursor_declaration
					{
					pushFollow(FOLLOW_cursor_declaration_in_package_obj_body2109);
					cursor_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 266:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:267:11: exception_declaration
					{
					pushFollow(FOLLOW_exception_declaration_in_package_obj_body2136);
					exception_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 268:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:269:11: record_declaration
					{
					pushFollow(FOLLOW_record_declaration_in_package_obj_body2163);
					record_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 270:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:271:11: table_declaration
					{
					pushFollow(FOLLOW_table_declaration_in_package_obj_body2189);
					table_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 272:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:273:11: create_procedure_body
					{
					pushFollow(FOLLOW_create_procedure_body_in_package_obj_body2215);
					create_procedure_body();
					state._fsp--;

					// TEMPLATE REWRITE
					// 274:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:275:11: create_function_body
					{
					pushFollow(FOLLOW_create_function_body_in_package_obj_body2241);
					create_function_body();
					state._fsp--;

					// TEMPLATE REWRITE
					// 276:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:277:11: create_type
					{
					pushFollow(FOLLOW_create_type_in_package_obj_body2267);
					create_type();
					state._fsp--;

					// TEMPLATE REWRITE
					// 278:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "package_obj_body"


	public static class drop_procedure_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "drop_procedure"
	// PLSQLPrinter.g:287:1: drop_procedure : ^( DROP_PROCEDURE procedure_name ) -> template( \"not implemented: \";
	public final PLSQLPrinter.drop_procedure_return drop_procedure() throws RecognitionException {
		PLSQLPrinter.drop_procedure_return retval = new PLSQLPrinter.drop_procedure_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:288:5: ( ^( DROP_PROCEDURE procedure_name ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:288:10: ^( DROP_PROCEDURE procedure_name )
			{
			match(input,DROP_PROCEDURE,FOLLOW_DROP_PROCEDURE_in_drop_procedure2308); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_procedure_name_in_drop_procedure2310);
			procedure_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 289:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_procedure"


	public static class alter_procedure_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_procedure"
	// PLSQLPrinter.g:292:1: alter_procedure : ^( ALTER_PROCEDURE procedure_name ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) -> template( \"not implemented: \";
	public final PLSQLPrinter.alter_procedure_return alter_procedure() throws RecognitionException {
		PLSQLPrinter.alter_procedure_return retval = new PLSQLPrinter.alter_procedure_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:293:5: ( ^( ALTER_PROCEDURE procedure_name ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:293:10: ^( ALTER_PROCEDURE procedure_name ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* )
			{
			match(input,ALTER_PROCEDURE,FOLLOW_ALTER_PROCEDURE_in_alter_procedure2346); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_procedure_name_in_alter_procedure2348);
			procedure_name();
			state._fsp--;

			// PLSQLPrinter.g:293:43: ( DEBUG_VK )?
			int alt53=2;
			int LA53_0 = input.LA(1);
			if ( (LA53_0==DEBUG_VK) ) {
				alt53=1;
			}
			switch (alt53) {
				case 1 :
					// PLSQLPrinter.g:293:43: DEBUG_VK
					{
					match(input,DEBUG_VK,FOLLOW_DEBUG_VK_in_alter_procedure2350); 
					}
					break;

			}

			// PLSQLPrinter.g:293:53: ( REUSE_VK )?
			int alt54=2;
			int LA54_0 = input.LA(1);
			if ( (LA54_0==REUSE_VK) ) {
				alt54=1;
			}
			switch (alt54) {
				case 1 :
					// PLSQLPrinter.g:293:53: REUSE_VK
					{
					match(input,REUSE_VK,FOLLOW_REUSE_VK_in_alter_procedure2353); 
					}
					break;

			}

			// PLSQLPrinter.g:293:63: ( compiler_parameters_clause )*
			loop55:
			while (true) {
				int alt55=2;
				int LA55_0 = input.LA(1);
				if ( (LA55_0==COMPILER_PARAMETER) ) {
					alt55=1;
				}

				switch (alt55) {
				case 1 :
					// PLSQLPrinter.g:293:63: compiler_parameters_clause
					{
					pushFollow(FOLLOW_compiler_parameters_clause_in_alter_procedure2356);
					compiler_parameters_clause();
					state._fsp--;

					}
					break;

				default :
					break loop55;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 294:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_procedure"


	public static class create_procedure_body_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "create_procedure_body"
	// PLSQLPrinter.g:297:1: create_procedure_body : ^( CREATE_PROCEDURE ( REPLACE_VK )? procedure_name ^( PARAMETERS ( parameter )* ) ( invoker_rights_clause )? ( EXTERNAL_VK | ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.create_procedure_body_return create_procedure_body() throws RecognitionException {
		PLSQLPrinter.create_procedure_body_return retval = new PLSQLPrinter.create_procedure_body_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:298:5: ( ^( CREATE_PROCEDURE ( REPLACE_VK )? procedure_name ^( PARAMETERS ( parameter )* ) ( invoker_rights_clause )? ( EXTERNAL_VK | ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:298:10: ^( CREATE_PROCEDURE ( REPLACE_VK )? procedure_name ^( PARAMETERS ( parameter )* ) ( invoker_rights_clause )? ( EXTERNAL_VK | ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) ) )
			{
			match(input,CREATE_PROCEDURE,FOLLOW_CREATE_PROCEDURE_in_create_procedure_body2393); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:298:29: ( REPLACE_VK )?
			int alt56=2;
			int LA56_0 = input.LA(1);
			if ( (LA56_0==REPLACE_VK) ) {
				alt56=1;
			}
			switch (alt56) {
				case 1 :
					// PLSQLPrinter.g:298:29: REPLACE_VK
					{
					match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_create_procedure_body2395); 
					}
					break;

			}

			pushFollow(FOLLOW_procedure_name_in_create_procedure_body2398);
			procedure_name();
			state._fsp--;

			match(input,PARAMETERS,FOLLOW_PARAMETERS_in_create_procedure_body2401); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:298:69: ( parameter )*
				loop57:
				while (true) {
					int alt57=2;
					int LA57_0 = input.LA(1);
					if ( (LA57_0==PARAMETER) ) {
						alt57=1;
					}

					switch (alt57) {
					case 1 :
						// PLSQLPrinter.g:298:69: parameter
						{
						pushFollow(FOLLOW_parameter_in_create_procedure_body2403);
						parameter();
						state._fsp--;

						}
						break;

					default :
						break loop57;
					}
				}

				match(input, Token.UP, null); 
			}

			// PLSQLPrinter.g:298:81: ( invoker_rights_clause )?
			int alt58=2;
			int LA58_0 = input.LA(1);
			if ( (LA58_0==AUTHID_VK) ) {
				alt58=1;
			}
			switch (alt58) {
				case 1 :
					// PLSQLPrinter.g:298:81: invoker_rights_clause
					{
					pushFollow(FOLLOW_invoker_rights_clause_in_create_procedure_body2407);
					invoker_rights_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:299:13: ( EXTERNAL_VK | ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) )
			int alt60=3;
			switch ( input.LA(1) ) {
			case EXTERNAL_VK:
				{
				alt60=1;
				}
				break;
			case CALL_MODE:
				{
				alt60=2;
				}
				break;
			case BODY_MODE:
				{
				alt60=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 60, 0, input);
				throw nvae;
			}
			switch (alt60) {
				case 1 :
					// PLSQLPrinter.g:299:18: EXTERNAL_VK
					{
					match(input,EXTERNAL_VK,FOLLOW_EXTERNAL_VK_in_create_procedure_body2427); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:300:18: ^( CALL_MODE call_spec )
					{
					match(input,CALL_MODE,FOLLOW_CALL_MODE_in_create_procedure_body2447); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_call_spec_in_create_procedure_body2449);
					call_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 3 :
					// PLSQLPrinter.g:301:18: ^( BODY_MODE ( declare_spec )* body )
					{
					match(input,BODY_MODE,FOLLOW_BODY_MODE_in_create_procedure_body2470); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:301:30: ( declare_spec )*
					loop59:
					while (true) {
						int alt59=2;
						int LA59_0 = input.LA(1);
						if ( (LA59_0==CREATE_FUNCTION||LA59_0==CREATE_PROCEDURE||LA59_0==CURSOR_DECLARE||LA59_0==EXCEPTION_DECLARE||LA59_0==PRAGMA_DECLARE||(LA59_0 >= RECORD_TYPE_DECLARE && LA59_0 <= RECORD_VAR_DECLARE)||LA59_0==SUBTYPE_DECLARE||(LA59_0 >= TABLE_TYPE_DECLARE && LA59_0 <= TABLE_VAR_DECLARE)||LA59_0==VARIABLE_DECLARE) ) {
							alt59=1;
						}

						switch (alt59) {
						case 1 :
							// PLSQLPrinter.g:301:30: declare_spec
							{
							pushFollow(FOLLOW_declare_spec_in_create_procedure_body2472);
							declare_spec();
							state._fsp--;

							}
							break;

						default :
							break loop59;
						}
					}

					pushFollow(FOLLOW_body_in_create_procedure_body2475);
					body();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 304:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_procedure_body"


	public static class drop_trigger_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "drop_trigger"
	// PLSQLPrinter.g:311:1: drop_trigger : ^( DROP_TRIGGER trigger_name ) -> template( \"not implemented: \";
	public final PLSQLPrinter.drop_trigger_return drop_trigger() throws RecognitionException {
		PLSQLPrinter.drop_trigger_return retval = new PLSQLPrinter.drop_trigger_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:312:5: ( ^( DROP_TRIGGER trigger_name ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:312:10: ^( DROP_TRIGGER trigger_name )
			{
			match(input,DROP_TRIGGER,FOLLOW_DROP_TRIGGER_in_drop_trigger2539); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_trigger_name_in_drop_trigger2541);
			trigger_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 313:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_trigger"


	public static class alter_trigger_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_trigger"
	// PLSQLPrinter.g:316:1: alter_trigger : ^( ALTER_TRIGGER trigger_name ( ( ENABLE_VK | DISABLE_VK ) | ^( RENAME_VK trigger_name ) | ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.alter_trigger_return alter_trigger() throws RecognitionException {
		PLSQLPrinter.alter_trigger_return retval = new PLSQLPrinter.alter_trigger_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:317:5: ( ^( ALTER_TRIGGER trigger_name ( ( ENABLE_VK | DISABLE_VK ) | ^( RENAME_VK trigger_name ) | ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:317:10: ^( ALTER_TRIGGER trigger_name ( ( ENABLE_VK | DISABLE_VK ) | ^( RENAME_VK trigger_name ) | ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) )
			{
			match(input,ALTER_TRIGGER,FOLLOW_ALTER_TRIGGER_in_alter_trigger2577); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_trigger_name_in_alter_trigger2579);
			trigger_name();
			state._fsp--;

			// PLSQLPrinter.g:318:13: ( ( ENABLE_VK | DISABLE_VK ) | ^( RENAME_VK trigger_name ) | ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* )
			int alt65=3;
			switch ( input.LA(1) ) {
			case DISABLE_VK:
			case ENABLE_VK:
				{
				alt65=1;
				}
				break;
			case RENAME_VK:
				{
				alt65=2;
				}
				break;
			case UP:
			case COMPILER_PARAMETER:
			case DEBUG_VK:
			case REUSE_VK:
				{
				alt65=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 65, 0, input);
				throw nvae;
			}
			switch (alt65) {
				case 1 :
					// PLSQLPrinter.g:318:18: ( ENABLE_VK | DISABLE_VK )
					{
					// PLSQLPrinter.g:318:18: ( ENABLE_VK | DISABLE_VK )
					int alt61=2;
					int LA61_0 = input.LA(1);
					if ( (LA61_0==ENABLE_VK) ) {
						alt61=1;
					}
					else if ( (LA61_0==DISABLE_VK) ) {
						alt61=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 61, 0, input);
						throw nvae;
					}

					switch (alt61) {
						case 1 :
							// PLSQLPrinter.g:318:19: ENABLE_VK
							{
							match(input,ENABLE_VK,FOLLOW_ENABLE_VK_in_alter_trigger2600); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:318:29: DISABLE_VK
							{
							match(input,DISABLE_VK,FOLLOW_DISABLE_VK_in_alter_trigger2602); 
							}
							break;

					}

					}
					break;
				case 2 :
					// PLSQLPrinter.g:319:18: ^( RENAME_VK trigger_name )
					{
					match(input,RENAME_VK,FOLLOW_RENAME_VK_in_alter_trigger2623); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_trigger_name_in_alter_trigger2625);
					trigger_name();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 3 :
					// PLSQLPrinter.g:320:18: ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )*
					{
					// PLSQLPrinter.g:320:18: ( DEBUG_VK )?
					int alt62=2;
					int LA62_0 = input.LA(1);
					if ( (LA62_0==DEBUG_VK) ) {
						alt62=1;
					}
					switch (alt62) {
						case 1 :
							// PLSQLPrinter.g:320:18: DEBUG_VK
							{
							match(input,DEBUG_VK,FOLLOW_DEBUG_VK_in_alter_trigger2645); 
							}
							break;

					}

					// PLSQLPrinter.g:320:28: ( REUSE_VK )?
					int alt63=2;
					int LA63_0 = input.LA(1);
					if ( (LA63_0==REUSE_VK) ) {
						alt63=1;
					}
					switch (alt63) {
						case 1 :
							// PLSQLPrinter.g:320:28: REUSE_VK
							{
							match(input,REUSE_VK,FOLLOW_REUSE_VK_in_alter_trigger2648); 
							}
							break;

					}

					// PLSQLPrinter.g:320:38: ( compiler_parameters_clause )*
					loop64:
					while (true) {
						int alt64=2;
						int LA64_0 = input.LA(1);
						if ( (LA64_0==COMPILER_PARAMETER) ) {
							alt64=1;
						}

						switch (alt64) {
						case 1 :
							// PLSQLPrinter.g:320:38: compiler_parameters_clause
							{
							pushFollow(FOLLOW_compiler_parameters_clause_in_alter_trigger2651);
							compiler_parameters_clause();
							state._fsp--;

							}
							break;

						default :
							break loop64;
						}
					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 323:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_trigger"


	public static class create_trigger_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "create_trigger"
	// PLSQLPrinter.g:326:1: create_trigger : ^( CREATE_TRIGGER ( REPLACE_VK )? trigger_name ( simple_dml_trigger )? ( compound_dml_trigger )? ( non_dml_trigger )? ( trigger_follows_clause )? ( ENABLE_VK | DISABLE_VK )? ( trigger_when_clause )? trigger_body ) -> template( \"not implemented: \";
	public final PLSQLPrinter.create_trigger_return create_trigger() throws RecognitionException {
		PLSQLPrinter.create_trigger_return retval = new PLSQLPrinter.create_trigger_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:327:5: ( ^( CREATE_TRIGGER ( REPLACE_VK )? trigger_name ( simple_dml_trigger )? ( compound_dml_trigger )? ( non_dml_trigger )? ( trigger_follows_clause )? ( ENABLE_VK | DISABLE_VK )? ( trigger_when_clause )? trigger_body ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:327:10: ^( CREATE_TRIGGER ( REPLACE_VK )? trigger_name ( simple_dml_trigger )? ( compound_dml_trigger )? ( non_dml_trigger )? ( trigger_follows_clause )? ( ENABLE_VK | DISABLE_VK )? ( trigger_when_clause )? trigger_body )
			{
			match(input,CREATE_TRIGGER,FOLLOW_CREATE_TRIGGER_in_create_trigger2711); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:327:27: ( REPLACE_VK )?
			int alt66=2;
			int LA66_0 = input.LA(1);
			if ( (LA66_0==REPLACE_VK) ) {
				alt66=1;
			}
			switch (alt66) {
				case 1 :
					// PLSQLPrinter.g:327:27: REPLACE_VK
					{
					match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_create_trigger2713); 
					}
					break;

			}

			pushFollow(FOLLOW_trigger_name_in_create_trigger2716);
			trigger_name();
			state._fsp--;

			// PLSQLPrinter.g:328:13: ( simple_dml_trigger )?
			int alt67=2;
			int LA67_0 = input.LA(1);
			if ( (LA67_0==SIMPLE_DML) ) {
				alt67=1;
			}
			switch (alt67) {
				case 1 :
					// PLSQLPrinter.g:328:13: simple_dml_trigger
					{
					pushFollow(FOLLOW_simple_dml_trigger_in_create_trigger2732);
					simple_dml_trigger();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:328:33: ( compound_dml_trigger )?
			int alt68=2;
			int LA68_0 = input.LA(1);
			if ( (LA68_0==COMPOUND_DML) ) {
				alt68=1;
			}
			switch (alt68) {
				case 1 :
					// PLSQLPrinter.g:328:33: compound_dml_trigger
					{
					pushFollow(FOLLOW_compound_dml_trigger_in_create_trigger2735);
					compound_dml_trigger();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:328:55: ( non_dml_trigger )?
			int alt69=2;
			int LA69_0 = input.LA(1);
			if ( (LA69_0==NON_DML) ) {
				alt69=1;
			}
			switch (alt69) {
				case 1 :
					// PLSQLPrinter.g:328:55: non_dml_trigger
					{
					pushFollow(FOLLOW_non_dml_trigger_in_create_trigger2738);
					non_dml_trigger();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:329:13: ( trigger_follows_clause )?
			int alt70=2;
			int LA70_0 = input.LA(1);
			if ( (LA70_0==FOLLOWS_VK) ) {
				alt70=1;
			}
			switch (alt70) {
				case 1 :
					// PLSQLPrinter.g:329:13: trigger_follows_clause
					{
					pushFollow(FOLLOW_trigger_follows_clause_in_create_trigger2753);
					trigger_follows_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:329:37: ( ENABLE_VK | DISABLE_VK )?
			int alt71=3;
			int LA71_0 = input.LA(1);
			if ( (LA71_0==ENABLE_VK) ) {
				alt71=1;
			}
			else if ( (LA71_0==DISABLE_VK) ) {
				alt71=2;
			}
			switch (alt71) {
				case 1 :
					// PLSQLPrinter.g:329:38: ENABLE_VK
					{
					match(input,ENABLE_VK,FOLLOW_ENABLE_VK_in_create_trigger2757); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:329:48: DISABLE_VK
					{
					match(input,DISABLE_VK,FOLLOW_DISABLE_VK_in_create_trigger2759); 
					}
					break;

			}

			// PLSQLPrinter.g:329:61: ( trigger_when_clause )?
			int alt72=2;
			int LA72_0 = input.LA(1);
			if ( (LA72_0==SQL92_RESERVED_WHEN) ) {
				alt72=1;
			}
			switch (alt72) {
				case 1 :
					// PLSQLPrinter.g:329:61: trigger_when_clause
					{
					pushFollow(FOLLOW_trigger_when_clause_in_create_trigger2763);
					trigger_when_clause();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_trigger_body_in_create_trigger2766);
			trigger_body();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 330:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_trigger"


	public static class trigger_follows_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "trigger_follows_clause"
	// PLSQLPrinter.g:333:1: trigger_follows_clause : ^( FOLLOWS_VK ( trigger_name )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.trigger_follows_clause_return trigger_follows_clause() throws RecognitionException {
		PLSQLPrinter.trigger_follows_clause_return retval = new PLSQLPrinter.trigger_follows_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:334:5: ( ^( FOLLOWS_VK ( trigger_name )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:334:10: ^( FOLLOWS_VK ( trigger_name )+ )
			{
			match(input,FOLLOWS_VK,FOLLOW_FOLLOWS_VK_in_trigger_follows_clause2802); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:334:23: ( trigger_name )+
			int cnt73=0;
			loop73:
			while (true) {
				int alt73=2;
				int LA73_0 = input.LA(1);
				if ( (LA73_0==TRIGGER_NAME) ) {
					alt73=1;
				}

				switch (alt73) {
				case 1 :
					// PLSQLPrinter.g:334:23: trigger_name
					{
					pushFollow(FOLLOW_trigger_name_in_trigger_follows_clause2804);
					trigger_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt73 >= 1 ) break loop73;
					EarlyExitException eee = new EarlyExitException(73, input);
					throw eee;
				}
				cnt73++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 335:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "trigger_follows_clause"


	public static class trigger_when_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "trigger_when_clause"
	// PLSQLPrinter.g:338:1: trigger_when_clause : ^( SQL92_RESERVED_WHEN expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.trigger_when_clause_return trigger_when_clause() throws RecognitionException {
		PLSQLPrinter.trigger_when_clause_return retval = new PLSQLPrinter.trigger_when_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:339:5: ( ^( SQL92_RESERVED_WHEN expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:339:10: ^( SQL92_RESERVED_WHEN expression )
			{
			match(input,SQL92_RESERVED_WHEN,FOLLOW_SQL92_RESERVED_WHEN_in_trigger_when_clause2841); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_trigger_when_clause2843);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 340:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "trigger_when_clause"


	public static class simple_dml_trigger_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "simple_dml_trigger"
	// PLSQLPrinter.g:344:1: simple_dml_trigger : ^( SIMPLE_DML ( BEFORE_VK | AFTER_VK | INSTEAD_VK ) ( FOR_EACH_ROW )? ( referencing_clause )? dml_event_clause ) -> template( \"not implemented: \";
	public final PLSQLPrinter.simple_dml_trigger_return simple_dml_trigger() throws RecognitionException {
		PLSQLPrinter.simple_dml_trigger_return retval = new PLSQLPrinter.simple_dml_trigger_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:345:5: ( ^( SIMPLE_DML ( BEFORE_VK | AFTER_VK | INSTEAD_VK ) ( FOR_EACH_ROW )? ( referencing_clause )? dml_event_clause ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:345:10: ^( SIMPLE_DML ( BEFORE_VK | AFTER_VK | INSTEAD_VK ) ( FOR_EACH_ROW )? ( referencing_clause )? dml_event_clause )
			{
			match(input,SIMPLE_DML,FOLLOW_SIMPLE_DML_in_simple_dml_trigger2880); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:345:23: ( BEFORE_VK | AFTER_VK | INSTEAD_VK )
			int alt74=3;
			switch ( input.LA(1) ) {
			case BEFORE_VK:
				{
				alt74=1;
				}
				break;
			case AFTER_VK:
				{
				alt74=2;
				}
				break;
			case INSTEAD_VK:
				{
				alt74=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 74, 0, input);
				throw nvae;
			}
			switch (alt74) {
				case 1 :
					// PLSQLPrinter.g:345:24: BEFORE_VK
					{
					match(input,BEFORE_VK,FOLLOW_BEFORE_VK_in_simple_dml_trigger2883); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:345:34: AFTER_VK
					{
					match(input,AFTER_VK,FOLLOW_AFTER_VK_in_simple_dml_trigger2885); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:345:43: INSTEAD_VK
					{
					match(input,INSTEAD_VK,FOLLOW_INSTEAD_VK_in_simple_dml_trigger2887); 
					}
					break;

			}

			// PLSQLPrinter.g:345:55: ( FOR_EACH_ROW )?
			int alt75=2;
			int LA75_0 = input.LA(1);
			if ( (LA75_0==FOR_EACH_ROW) ) {
				alt75=1;
			}
			switch (alt75) {
				case 1 :
					// PLSQLPrinter.g:345:55: FOR_EACH_ROW
					{
					match(input,FOR_EACH_ROW,FOLLOW_FOR_EACH_ROW_in_simple_dml_trigger2890); 
					}
					break;

			}

			// PLSQLPrinter.g:345:69: ( referencing_clause )?
			int alt76=2;
			int LA76_0 = input.LA(1);
			if ( (LA76_0==REFERENCING_VK) ) {
				alt76=1;
			}
			switch (alt76) {
				case 1 :
					// PLSQLPrinter.g:345:69: referencing_clause
					{
					pushFollow(FOLLOW_referencing_clause_in_simple_dml_trigger2893);
					referencing_clause();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_dml_event_clause_in_simple_dml_trigger2896);
			dml_event_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 346:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "simple_dml_trigger"


	public static class compound_dml_trigger_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "compound_dml_trigger"
	// PLSQLPrinter.g:349:1: compound_dml_trigger : ^( COMPOUND_DML ( referencing_clause )? dml_event_clause ) -> template( \"not implemented: \";
	public final PLSQLPrinter.compound_dml_trigger_return compound_dml_trigger() throws RecognitionException {
		PLSQLPrinter.compound_dml_trigger_return retval = new PLSQLPrinter.compound_dml_trigger_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:350:5: ( ^( COMPOUND_DML ( referencing_clause )? dml_event_clause ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:350:10: ^( COMPOUND_DML ( referencing_clause )? dml_event_clause )
			{
			match(input,COMPOUND_DML,FOLLOW_COMPOUND_DML_in_compound_dml_trigger2932); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:350:25: ( referencing_clause )?
			int alt77=2;
			int LA77_0 = input.LA(1);
			if ( (LA77_0==REFERENCING_VK) ) {
				alt77=1;
			}
			switch (alt77) {
				case 1 :
					// PLSQLPrinter.g:350:25: referencing_clause
					{
					pushFollow(FOLLOW_referencing_clause_in_compound_dml_trigger2934);
					referencing_clause();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_dml_event_clause_in_compound_dml_trigger2937);
			dml_event_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 351:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "compound_dml_trigger"


	public static class non_dml_trigger_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "non_dml_trigger"
	// PLSQLPrinter.g:354:1: non_dml_trigger : ^( NON_DML ( BEFORE_VK | AFTER_VK ) ( non_dml_event )+ ( DATABASE_VK | ( schema_name )? SCHEMA_VK ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.non_dml_trigger_return non_dml_trigger() throws RecognitionException {
		PLSQLPrinter.non_dml_trigger_return retval = new PLSQLPrinter.non_dml_trigger_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:355:5: ( ^( NON_DML ( BEFORE_VK | AFTER_VK ) ( non_dml_event )+ ( DATABASE_VK | ( schema_name )? SCHEMA_VK ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:355:10: ^( NON_DML ( BEFORE_VK | AFTER_VK ) ( non_dml_event )+ ( DATABASE_VK | ( schema_name )? SCHEMA_VK ) )
			{
			match(input,NON_DML,FOLLOW_NON_DML_in_non_dml_trigger2973); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:355:20: ( BEFORE_VK | AFTER_VK )
			int alt78=2;
			int LA78_0 = input.LA(1);
			if ( (LA78_0==BEFORE_VK) ) {
				alt78=1;
			}
			else if ( (LA78_0==AFTER_VK) ) {
				alt78=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 78, 0, input);
				throw nvae;
			}

			switch (alt78) {
				case 1 :
					// PLSQLPrinter.g:355:21: BEFORE_VK
					{
					match(input,BEFORE_VK,FOLLOW_BEFORE_VK_in_non_dml_trigger2976); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:355:31: AFTER_VK
					{
					match(input,AFTER_VK,FOLLOW_AFTER_VK_in_non_dml_trigger2978); 
					}
					break;

			}

			// PLSQLPrinter.g:355:41: ( non_dml_event )+
			int cnt79=0;
			loop79:
			while (true) {
				int alt79=2;
				switch ( input.LA(1) ) {
				case DATABASE_VK:
					{
					int LA79_1 = input.LA(2);
					if ( (LA79_1==SQL92_RESERVED_ALTER||LA79_1==SQL92_RESERVED_CREATE||LA79_1==SQL92_RESERVED_DROP||LA79_1==SQL92_RESERVED_GRANT||LA79_1==SQL92_RESERVED_REVOKE||LA79_1==ANALYZE_VK||LA79_1==ASSOCIATE_VK||LA79_1==AUDIT_VK||LA79_1==COMMENT_VK||LA79_1==DATABASE_VK||(LA79_1 >= DB_ROLE_CHANGE_VK && LA79_1 <= DDL_VK)||LA79_1==DISASSOCIATE_VK||LA79_1==FOLLOWS_VK||(LA79_1 >= LOGOFF_VK && LA79_1 <= LOGON_VK)||LA79_1==NOAUDIT_VK||LA79_1==RENAME_VK||(LA79_1 >= SCHEMA_NAME && LA79_1 <= SCHEMA_VK)||LA79_1==SERVERERROR_VK||LA79_1==SHUTDOWN_VK||LA79_1==STARTUP_VK||LA79_1==SUSPEND_VK||LA79_1==TRUNCATE_VK) ) {
						alt79=1;
					}

					}
					break;
				case SCHEMA_VK:
					{
					int LA79_3 = input.LA(2);
					if ( (LA79_3==SQL92_RESERVED_ALTER||LA79_3==SQL92_RESERVED_CREATE||LA79_3==SQL92_RESERVED_DROP||LA79_3==SQL92_RESERVED_GRANT||LA79_3==SQL92_RESERVED_REVOKE||LA79_3==ANALYZE_VK||LA79_3==ASSOCIATE_VK||LA79_3==AUDIT_VK||LA79_3==COMMENT_VK||LA79_3==DATABASE_VK||(LA79_3 >= DB_ROLE_CHANGE_VK && LA79_3 <= DDL_VK)||LA79_3==DISASSOCIATE_VK||LA79_3==FOLLOWS_VK||(LA79_3 >= LOGOFF_VK && LA79_3 <= LOGON_VK)||LA79_3==NOAUDIT_VK||LA79_3==RENAME_VK||(LA79_3 >= SCHEMA_NAME && LA79_3 <= SCHEMA_VK)||LA79_3==SERVERERROR_VK||LA79_3==SHUTDOWN_VK||LA79_3==STARTUP_VK||LA79_3==SUSPEND_VK||LA79_3==TRUNCATE_VK) ) {
						alt79=1;
					}

					}
					break;
				case SQL92_RESERVED_ALTER:
				case SQL92_RESERVED_CREATE:
				case SQL92_RESERVED_DROP:
				case SQL92_RESERVED_GRANT:
				case SQL92_RESERVED_REVOKE:
				case ANALYZE_VK:
				case ASSOCIATE_VK:
				case AUDIT_VK:
				case COMMENT_VK:
				case DB_ROLE_CHANGE_VK:
				case DDL_VK:
				case DISASSOCIATE_VK:
				case FOLLOWS_VK:
				case LOGOFF_VK:
				case LOGON_VK:
				case NOAUDIT_VK:
				case RENAME_VK:
				case SERVERERROR_VK:
				case SHUTDOWN_VK:
				case STARTUP_VK:
				case SUSPEND_VK:
				case TRUNCATE_VK:
					{
					alt79=1;
					}
					break;
				}
				switch (alt79) {
				case 1 :
					// PLSQLPrinter.g:355:41: non_dml_event
					{
					pushFollow(FOLLOW_non_dml_event_in_non_dml_trigger2981);
					non_dml_event();
					state._fsp--;

					}
					break;

				default :
					if ( cnt79 >= 1 ) break loop79;
					EarlyExitException eee = new EarlyExitException(79, input);
					throw eee;
				}
				cnt79++;
			}

			// PLSQLPrinter.g:355:56: ( DATABASE_VK | ( schema_name )? SCHEMA_VK )
			int alt81=2;
			int LA81_0 = input.LA(1);
			if ( (LA81_0==DATABASE_VK) ) {
				alt81=1;
			}
			else if ( ((LA81_0 >= SCHEMA_NAME && LA81_0 <= SCHEMA_VK)) ) {
				alt81=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 81, 0, input);
				throw nvae;
			}

			switch (alt81) {
				case 1 :
					// PLSQLPrinter.g:355:57: DATABASE_VK
					{
					match(input,DATABASE_VK,FOLLOW_DATABASE_VK_in_non_dml_trigger2985); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:355:69: ( schema_name )? SCHEMA_VK
					{
					// PLSQLPrinter.g:355:69: ( schema_name )?
					int alt80=2;
					int LA80_0 = input.LA(1);
					if ( (LA80_0==SCHEMA_NAME) ) {
						alt80=1;
					}
					switch (alt80) {
						case 1 :
							// PLSQLPrinter.g:355:69: schema_name
							{
							pushFollow(FOLLOW_schema_name_in_non_dml_trigger2987);
							schema_name();
							state._fsp--;

							}
							break;

					}

					match(input,SCHEMA_VK,FOLLOW_SCHEMA_VK_in_non_dml_trigger2990); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 356:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "non_dml_trigger"


	public static class trigger_body_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "trigger_body"
	// PLSQLPrinter.g:359:1: trigger_body : ( ^( COMPOUND_VK trigger_name ( declare_spec )* ( timing_point_section )+ ) -> template( \"not implemented: \"| ^( CALL_VK routine_name ( function_argument )? ) -> template( \"not implemented: \"| ^( BODY_MODE block ) -> template( \"not implemented: \");
	public final PLSQLPrinter.trigger_body_return trigger_body() throws RecognitionException {
		PLSQLPrinter.trigger_body_return retval = new PLSQLPrinter.trigger_body_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:360:5: ( ^( COMPOUND_VK trigger_name ( declare_spec )* ( timing_point_section )+ ) -> template( \"not implemented: \"| ^( CALL_VK routine_name ( function_argument )? ) -> template( \"not implemented: \"| ^( BODY_MODE block ) -> template( \"not implemented: \")
			int alt85=3;
			switch ( input.LA(1) ) {
			case COMPOUND_VK:
				{
				alt85=1;
				}
				break;
			case CALL_VK:
				{
				alt85=2;
				}
				break;
			case BODY_MODE:
				{
				alt85=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 85, 0, input);
				throw nvae;
			}
			switch (alt85) {
				case 1 :
					// PLSQLPrinter.g:360:10: ^( COMPOUND_VK trigger_name ( declare_spec )* ( timing_point_section )+ )
					{
					match(input,COMPOUND_VK,FOLLOW_COMPOUND_VK_in_trigger_body3027); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_trigger_name_in_trigger_body3029);
					trigger_name();
					state._fsp--;

					// PLSQLPrinter.g:360:37: ( declare_spec )*
					loop82:
					while (true) {
						int alt82=2;
						int LA82_0 = input.LA(1);
						if ( (LA82_0==CREATE_FUNCTION||LA82_0==CREATE_PROCEDURE||LA82_0==CURSOR_DECLARE||LA82_0==EXCEPTION_DECLARE||LA82_0==PRAGMA_DECLARE||(LA82_0 >= RECORD_TYPE_DECLARE && LA82_0 <= RECORD_VAR_DECLARE)||LA82_0==SUBTYPE_DECLARE||(LA82_0 >= TABLE_TYPE_DECLARE && LA82_0 <= TABLE_VAR_DECLARE)||LA82_0==VARIABLE_DECLARE) ) {
							alt82=1;
						}

						switch (alt82) {
						case 1 :
							// PLSQLPrinter.g:360:37: declare_spec
							{
							pushFollow(FOLLOW_declare_spec_in_trigger_body3031);
							declare_spec();
							state._fsp--;

							}
							break;

						default :
							break loop82;
						}
					}

					// PLSQLPrinter.g:360:51: ( timing_point_section )+
					int cnt83=0;
					loop83:
					while (true) {
						int alt83=2;
						int LA83_0 = input.LA(1);
						if ( ((LA83_0 >= AFTER_EACH_ROW && LA83_0 <= AFTER_STATEMENT)||(LA83_0 >= BEFORE_EACH_ROW && LA83_0 <= BEFORE_STATEMENT)) ) {
							alt83=1;
						}

						switch (alt83) {
						case 1 :
							// PLSQLPrinter.g:360:51: timing_point_section
							{
							pushFollow(FOLLOW_timing_point_section_in_trigger_body3034);
							timing_point_section();
							state._fsp--;

							}
							break;

						default :
							if ( cnt83 >= 1 ) break loop83;
							EarlyExitException eee = new EarlyExitException(83, input);
							throw eee;
						}
						cnt83++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 361:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:362:10: ^( CALL_VK routine_name ( function_argument )? )
					{
					match(input,CALL_VK,FOLLOW_CALL_VK_in_trigger_body3062); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_routine_name_in_trigger_body3064);
					routine_name();
					state._fsp--;

					// PLSQLPrinter.g:362:33: ( function_argument )?
					int alt84=2;
					int LA84_0 = input.LA(1);
					if ( (LA84_0==ARGUMENTS) ) {
						alt84=1;
					}
					switch (alt84) {
						case 1 :
							// PLSQLPrinter.g:362:33: function_argument
							{
							pushFollow(FOLLOW_function_argument_in_trigger_body3066);
							function_argument();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 363:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:364:10: ^( BODY_MODE block )
					{
					match(input,BODY_MODE,FOLLOW_BODY_MODE_in_trigger_body3095); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_block_in_trigger_body3097);
					block();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 365:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "trigger_body"


	public static class timing_point_section_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "timing_point_section"
	// PLSQLPrinter.g:368:1: timing_point_section : ( ^( BEFORE_STATEMENT block ) -> template( \"not implemented: \"| ^( BEFORE_EACH_ROW block ) -> template( \"not implemented: \"| ^( AFTER_STATEMENT block ) -> template( \"not implemented: \"| ^( AFTER_EACH_ROW block ) -> template( \"not implemented: \");
	public final PLSQLPrinter.timing_point_section_return timing_point_section() throws RecognitionException {
		PLSQLPrinter.timing_point_section_return retval = new PLSQLPrinter.timing_point_section_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:369:5: ( ^( BEFORE_STATEMENT block ) -> template( \"not implemented: \"| ^( BEFORE_EACH_ROW block ) -> template( \"not implemented: \"| ^( AFTER_STATEMENT block ) -> template( \"not implemented: \"| ^( AFTER_EACH_ROW block ) -> template( \"not implemented: \")
			int alt86=4;
			switch ( input.LA(1) ) {
			case BEFORE_STATEMENT:
				{
				alt86=1;
				}
				break;
			case BEFORE_EACH_ROW:
				{
				alt86=2;
				}
				break;
			case AFTER_STATEMENT:
				{
				alt86=3;
				}
				break;
			case AFTER_EACH_ROW:
				{
				alt86=4;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 86, 0, input);
				throw nvae;
			}
			switch (alt86) {
				case 1 :
					// PLSQLPrinter.g:369:10: ^( BEFORE_STATEMENT block )
					{
					match(input,BEFORE_STATEMENT,FOLLOW_BEFORE_STATEMENT_in_timing_point_section3133); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_block_in_timing_point_section3135);
					block();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 370:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:371:10: ^( BEFORE_EACH_ROW block )
					{
					match(input,BEFORE_EACH_ROW,FOLLOW_BEFORE_EACH_ROW_in_timing_point_section3162); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_block_in_timing_point_section3164);
					block();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 372:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:373:10: ^( AFTER_STATEMENT block )
					{
					match(input,AFTER_STATEMENT,FOLLOW_AFTER_STATEMENT_in_timing_point_section3191); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_block_in_timing_point_section3193);
					block();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 374:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:375:10: ^( AFTER_EACH_ROW block )
					{
					match(input,AFTER_EACH_ROW,FOLLOW_AFTER_EACH_ROW_in_timing_point_section3220); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_block_in_timing_point_section3222);
					block();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 376:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "timing_point_section"


	public static class non_dml_event_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "non_dml_event"
	// PLSQLPrinter.g:379:1: non_dml_event : ( SQL92_RESERVED_ALTER -> template( \"not implemented: \"| ANALYZE_VK -> template( \"not implemented: \"| ASSOCIATE_VK STATISTICS_VK -> template( \"not implemented: \"| AUDIT_VK -> template( \"not implemented: \"| COMMENT_VK -> template( \"not implemented: \"| SQL92_RESERVED_CREATE -> template( \"not implemented: \"| DISASSOCIATE_VK STATISTICS_VK | SQL92_RESERVED_DROP -> template( \"not implemented: \"| SQL92_RESERVED_GRANT -> template( \"not implemented: \"| NOAUDIT_VK -> template( \"not implemented: \"| RENAME_VK -> template( \"not implemented: \"| SQL92_RESERVED_REVOKE -> template( \"not implemented: \"| TRUNCATE_VK -> template( \"not implemented: \"| DDL_VK -> template( \"not implemented: \"| STARTUP_VK -> template( \"not implemented: \"| SHUTDOWN_VK -> template( \"not implemented: \"| DB_ROLE_CHANGE_VK -> template( \"not implemented: \"| LOGON_VK -> template( \"not implemented: \"| LOGOFF_VK -> template( \"not implemented: \"| SERVERERROR_VK -> template( \"not implemented: \"| SUSPEND_VK -> template( \"not implemented: \"| DATABASE_VK -> template( \"not implemented: \"| SCHEMA_VK -> template( \"not implemented: \"| FOLLOWS_VK -> template( \"not implemented: \");
	public final PLSQLPrinter.non_dml_event_return non_dml_event() throws RecognitionException {
		PLSQLPrinter.non_dml_event_return retval = new PLSQLPrinter.non_dml_event_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:380:5: ( SQL92_RESERVED_ALTER -> template( \"not implemented: \"| ANALYZE_VK -> template( \"not implemented: \"| ASSOCIATE_VK STATISTICS_VK -> template( \"not implemented: \"| AUDIT_VK -> template( \"not implemented: \"| COMMENT_VK -> template( \"not implemented: \"| SQL92_RESERVED_CREATE -> template( \"not implemented: \"| DISASSOCIATE_VK STATISTICS_VK | SQL92_RESERVED_DROP -> template( \"not implemented: \"| SQL92_RESERVED_GRANT -> template( \"not implemented: \"| NOAUDIT_VK -> template( \"not implemented: \"| RENAME_VK -> template( \"not implemented: \"| SQL92_RESERVED_REVOKE -> template( \"not implemented: \"| TRUNCATE_VK -> template( \"not implemented: \"| DDL_VK -> template( \"not implemented: \"| STARTUP_VK -> template( \"not implemented: \"| SHUTDOWN_VK -> template( \"not implemented: \"| DB_ROLE_CHANGE_VK -> template( \"not implemented: \"| LOGON_VK -> template( \"not implemented: \"| LOGOFF_VK -> template( \"not implemented: \"| SERVERERROR_VK -> template( \"not implemented: \"| SUSPEND_VK -> template( \"not implemented: \"| DATABASE_VK -> template( \"not implemented: \"| SCHEMA_VK -> template( \"not implemented: \"| FOLLOWS_VK -> template( \"not implemented: \")
			int alt87=24;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_ALTER:
				{
				alt87=1;
				}
				break;
			case ANALYZE_VK:
				{
				alt87=2;
				}
				break;
			case ASSOCIATE_VK:
				{
				alt87=3;
				}
				break;
			case AUDIT_VK:
				{
				alt87=4;
				}
				break;
			case COMMENT_VK:
				{
				alt87=5;
				}
				break;
			case SQL92_RESERVED_CREATE:
				{
				alt87=6;
				}
				break;
			case DISASSOCIATE_VK:
				{
				alt87=7;
				}
				break;
			case SQL92_RESERVED_DROP:
				{
				alt87=8;
				}
				break;
			case SQL92_RESERVED_GRANT:
				{
				alt87=9;
				}
				break;
			case NOAUDIT_VK:
				{
				alt87=10;
				}
				break;
			case RENAME_VK:
				{
				alt87=11;
				}
				break;
			case SQL92_RESERVED_REVOKE:
				{
				alt87=12;
				}
				break;
			case TRUNCATE_VK:
				{
				alt87=13;
				}
				break;
			case DDL_VK:
				{
				alt87=14;
				}
				break;
			case STARTUP_VK:
				{
				alt87=15;
				}
				break;
			case SHUTDOWN_VK:
				{
				alt87=16;
				}
				break;
			case DB_ROLE_CHANGE_VK:
				{
				alt87=17;
				}
				break;
			case LOGON_VK:
				{
				alt87=18;
				}
				break;
			case LOGOFF_VK:
				{
				alt87=19;
				}
				break;
			case SERVERERROR_VK:
				{
				alt87=20;
				}
				break;
			case SUSPEND_VK:
				{
				alt87=21;
				}
				break;
			case DATABASE_VK:
				{
				alt87=22;
				}
				break;
			case SCHEMA_VK:
				{
				alt87=23;
				}
				break;
			case FOLLOWS_VK:
				{
				alt87=24;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 87, 0, input);
				throw nvae;
			}
			switch (alt87) {
				case 1 :
					// PLSQLPrinter.g:380:10: SQL92_RESERVED_ALTER
					{
					match(input,SQL92_RESERVED_ALTER,FOLLOW_SQL92_RESERVED_ALTER_in_non_dml_event3257); 
					// TEMPLATE REWRITE
					// 381:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:382:10: ANALYZE_VK
					{
					match(input,ANALYZE_VK,FOLLOW_ANALYZE_VK_in_non_dml_event3282); 
					// TEMPLATE REWRITE
					// 383:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:384:10: ASSOCIATE_VK STATISTICS_VK
					{
					match(input,ASSOCIATE_VK,FOLLOW_ASSOCIATE_VK_in_non_dml_event3307); 
					match(input,STATISTICS_VK,FOLLOW_STATISTICS_VK_in_non_dml_event3309); 
					// TEMPLATE REWRITE
					// 385:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:386:10: AUDIT_VK
					{
					match(input,AUDIT_VK,FOLLOW_AUDIT_VK_in_non_dml_event3334); 
					// TEMPLATE REWRITE
					// 387:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:388:10: COMMENT_VK
					{
					match(input,COMMENT_VK,FOLLOW_COMMENT_VK_in_non_dml_event3359); 
					// TEMPLATE REWRITE
					// 389:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:390:10: SQL92_RESERVED_CREATE
					{
					match(input,SQL92_RESERVED_CREATE,FOLLOW_SQL92_RESERVED_CREATE_in_non_dml_event3384); 
					// TEMPLATE REWRITE
					// 391:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:392:10: DISASSOCIATE_VK STATISTICS_VK
					{
					match(input,DISASSOCIATE_VK,FOLLOW_DISASSOCIATE_VK_in_non_dml_event3409); 
					match(input,STATISTICS_VK,FOLLOW_STATISTICS_VK_in_non_dml_event3411); 
					}
					break;
				case 8 :
					// PLSQLPrinter.g:393:10: SQL92_RESERVED_DROP
					{
					match(input,SQL92_RESERVED_DROP,FOLLOW_SQL92_RESERVED_DROP_in_non_dml_event3422); 
					// TEMPLATE REWRITE
					// 394:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:395:10: SQL92_RESERVED_GRANT
					{
					match(input,SQL92_RESERVED_GRANT,FOLLOW_SQL92_RESERVED_GRANT_in_non_dml_event3447); 
					// TEMPLATE REWRITE
					// 396:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:397:10: NOAUDIT_VK
					{
					match(input,NOAUDIT_VK,FOLLOW_NOAUDIT_VK_in_non_dml_event3472); 
					// TEMPLATE REWRITE
					// 398:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:399:10: RENAME_VK
					{
					match(input,RENAME_VK,FOLLOW_RENAME_VK_in_non_dml_event3497); 
					// TEMPLATE REWRITE
					// 400:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:401:10: SQL92_RESERVED_REVOKE
					{
					match(input,SQL92_RESERVED_REVOKE,FOLLOW_SQL92_RESERVED_REVOKE_in_non_dml_event3522); 
					// TEMPLATE REWRITE
					// 402:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 13 :
					// PLSQLPrinter.g:403:10: TRUNCATE_VK
					{
					match(input,TRUNCATE_VK,FOLLOW_TRUNCATE_VK_in_non_dml_event3547); 
					// TEMPLATE REWRITE
					// 404:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 14 :
					// PLSQLPrinter.g:405:10: DDL_VK
					{
					match(input,DDL_VK,FOLLOW_DDL_VK_in_non_dml_event3572); 
					// TEMPLATE REWRITE
					// 406:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 15 :
					// PLSQLPrinter.g:407:10: STARTUP_VK
					{
					match(input,STARTUP_VK,FOLLOW_STARTUP_VK_in_non_dml_event3597); 
					// TEMPLATE REWRITE
					// 408:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 16 :
					// PLSQLPrinter.g:409:10: SHUTDOWN_VK
					{
					match(input,SHUTDOWN_VK,FOLLOW_SHUTDOWN_VK_in_non_dml_event3622); 
					// TEMPLATE REWRITE
					// 410:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 17 :
					// PLSQLPrinter.g:411:10: DB_ROLE_CHANGE_VK
					{
					match(input,DB_ROLE_CHANGE_VK,FOLLOW_DB_ROLE_CHANGE_VK_in_non_dml_event3647); 
					// TEMPLATE REWRITE
					// 412:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 18 :
					// PLSQLPrinter.g:413:10: LOGON_VK
					{
					match(input,LOGON_VK,FOLLOW_LOGON_VK_in_non_dml_event3672); 
					// TEMPLATE REWRITE
					// 414:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 19 :
					// PLSQLPrinter.g:415:10: LOGOFF_VK
					{
					match(input,LOGOFF_VK,FOLLOW_LOGOFF_VK_in_non_dml_event3697); 
					// TEMPLATE REWRITE
					// 416:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 20 :
					// PLSQLPrinter.g:417:10: SERVERERROR_VK
					{
					match(input,SERVERERROR_VK,FOLLOW_SERVERERROR_VK_in_non_dml_event3722); 
					// TEMPLATE REWRITE
					// 418:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 21 :
					// PLSQLPrinter.g:419:10: SUSPEND_VK
					{
					match(input,SUSPEND_VK,FOLLOW_SUSPEND_VK_in_non_dml_event3747); 
					// TEMPLATE REWRITE
					// 420:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 22 :
					// PLSQLPrinter.g:421:10: DATABASE_VK
					{
					match(input,DATABASE_VK,FOLLOW_DATABASE_VK_in_non_dml_event3772); 
					// TEMPLATE REWRITE
					// 422:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 23 :
					// PLSQLPrinter.g:423:10: SCHEMA_VK
					{
					match(input,SCHEMA_VK,FOLLOW_SCHEMA_VK_in_non_dml_event3797); 
					// TEMPLATE REWRITE
					// 424:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 24 :
					// PLSQLPrinter.g:425:10: FOLLOWS_VK
					{
					match(input,FOLLOWS_VK,FOLLOW_FOLLOWS_VK_in_non_dml_event3822); 
					// TEMPLATE REWRITE
					// 426:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "non_dml_event"


	public static class dml_event_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "dml_event_clause"
	// PLSQLPrinter.g:429:1: dml_event_clause : ^( DML_EVENT ( dml_event_element )+ ^( SQL92_RESERVED_ON tableview_name ( dml_event_nested_clause )? ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.dml_event_clause_return dml_event_clause() throws RecognitionException {
		PLSQLPrinter.dml_event_clause_return retval = new PLSQLPrinter.dml_event_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:430:5: ( ^( DML_EVENT ( dml_event_element )+ ^( SQL92_RESERVED_ON tableview_name ( dml_event_nested_clause )? ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:430:10: ^( DML_EVENT ( dml_event_element )+ ^( SQL92_RESERVED_ON tableview_name ( dml_event_nested_clause )? ) )
			{
			match(input,DML_EVENT,FOLLOW_DML_EVENT_in_dml_event_clause3857); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:430:22: ( dml_event_element )+
			int cnt88=0;
			loop88:
			while (true) {
				int alt88=2;
				int LA88_0 = input.LA(1);
				if ( (LA88_0==DML_EVENT_ELEMENT) ) {
					alt88=1;
				}

				switch (alt88) {
				case 1 :
					// PLSQLPrinter.g:430:22: dml_event_element
					{
					pushFollow(FOLLOW_dml_event_element_in_dml_event_clause3859);
					dml_event_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt88 >= 1 ) break loop88;
					EarlyExitException eee = new EarlyExitException(88, input);
					throw eee;
				}
				cnt88++;
			}

			match(input,SQL92_RESERVED_ON,FOLLOW_SQL92_RESERVED_ON_in_dml_event_clause3863); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_tableview_name_in_dml_event_clause3865);
			tableview_name();
			state._fsp--;

			// PLSQLPrinter.g:430:76: ( dml_event_nested_clause )?
			int alt89=2;
			int LA89_0 = input.LA(1);
			if ( (LA89_0==NESTED_VK) ) {
				alt89=1;
			}
			switch (alt89) {
				case 1 :
					// PLSQLPrinter.g:430:76: dml_event_nested_clause
					{
					pushFollow(FOLLOW_dml_event_nested_clause_in_dml_event_clause3867);
					dml_event_nested_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 431:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dml_event_clause"


	public static class dml_event_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "dml_event_element"
	// PLSQLPrinter.g:434:1: dml_event_element : ^( DML_EVENT_ELEMENT ( SQL92_RESERVED_DELETE | SQL92_RESERVED_INSERT | SQL92_RESERVED_UPDATE ) ^( COLUMNS ( column_name )* ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.dml_event_element_return dml_event_element() throws RecognitionException {
		PLSQLPrinter.dml_event_element_return retval = new PLSQLPrinter.dml_event_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:435:5: ( ^( DML_EVENT_ELEMENT ( SQL92_RESERVED_DELETE | SQL92_RESERVED_INSERT | SQL92_RESERVED_UPDATE ) ^( COLUMNS ( column_name )* ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:435:10: ^( DML_EVENT_ELEMENT ( SQL92_RESERVED_DELETE | SQL92_RESERVED_INSERT | SQL92_RESERVED_UPDATE ) ^( COLUMNS ( column_name )* ) )
			{
			match(input,DML_EVENT_ELEMENT,FOLLOW_DML_EVENT_ELEMENT_in_dml_event_element3907); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:435:30: ( SQL92_RESERVED_DELETE | SQL92_RESERVED_INSERT | SQL92_RESERVED_UPDATE )
			int alt90=3;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_DELETE:
				{
				alt90=1;
				}
				break;
			case SQL92_RESERVED_INSERT:
				{
				alt90=2;
				}
				break;
			case SQL92_RESERVED_UPDATE:
				{
				alt90=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 90, 0, input);
				throw nvae;
			}
			switch (alt90) {
				case 1 :
					// PLSQLPrinter.g:435:31: SQL92_RESERVED_DELETE
					{
					match(input,SQL92_RESERVED_DELETE,FOLLOW_SQL92_RESERVED_DELETE_in_dml_event_element3910); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:435:53: SQL92_RESERVED_INSERT
					{
					match(input,SQL92_RESERVED_INSERT,FOLLOW_SQL92_RESERVED_INSERT_in_dml_event_element3912); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:435:75: SQL92_RESERVED_UPDATE
					{
					match(input,SQL92_RESERVED_UPDATE,FOLLOW_SQL92_RESERVED_UPDATE_in_dml_event_element3914); 
					}
					break;

			}

			match(input,COLUMNS,FOLLOW_COLUMNS_in_dml_event_element3918); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:435:108: ( column_name )*
				loop91:
				while (true) {
					int alt91=2;
					int LA91_0 = input.LA(1);
					if ( (LA91_0==COLUMN_NAME) ) {
						alt91=1;
					}

					switch (alt91) {
					case 1 :
						// PLSQLPrinter.g:435:108: column_name
						{
						pushFollow(FOLLOW_column_name_in_dml_event_element3920);
						column_name();
						state._fsp--;

						}
						break;

					default :
						break loop91;
					}
				}

				match(input, Token.UP, null); 
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 436:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dml_event_element"


	public static class dml_event_nested_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "dml_event_nested_clause"
	// PLSQLPrinter.g:439:1: dml_event_nested_clause : ^( NESTED_VK tableview_name ) -> template( \"not implemented: \";
	public final PLSQLPrinter.dml_event_nested_clause_return dml_event_nested_clause() throws RecognitionException {
		PLSQLPrinter.dml_event_nested_clause_return retval = new PLSQLPrinter.dml_event_nested_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:440:5: ( ^( NESTED_VK tableview_name ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:440:10: ^( NESTED_VK tableview_name )
			{
			match(input,NESTED_VK,FOLLOW_NESTED_VK_in_dml_event_nested_clause3958); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_tableview_name_in_dml_event_nested_clause3960);
			tableview_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 441:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dml_event_nested_clause"


	public static class referencing_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "referencing_clause"
	// PLSQLPrinter.g:444:1: referencing_clause : ^( REFERENCING_VK ( referencing_element )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.referencing_clause_return referencing_clause() throws RecognitionException {
		PLSQLPrinter.referencing_clause_return retval = new PLSQLPrinter.referencing_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:445:5: ( ^( REFERENCING_VK ( referencing_element )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:445:10: ^( REFERENCING_VK ( referencing_element )+ )
			{
			match(input,REFERENCING_VK,FOLLOW_REFERENCING_VK_in_referencing_clause3996); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:445:27: ( referencing_element )+
			int cnt92=0;
			loop92:
			while (true) {
				int alt92=2;
				int LA92_0 = input.LA(1);
				if ( (LA92_0==NEW_VK||LA92_0==OLD_VK||LA92_0==PARENT_VK) ) {
					alt92=1;
				}

				switch (alt92) {
				case 1 :
					// PLSQLPrinter.g:445:27: referencing_element
					{
					pushFollow(FOLLOW_referencing_element_in_referencing_clause3998);
					referencing_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt92 >= 1 ) break loop92;
					EarlyExitException eee = new EarlyExitException(92, input);
					throw eee;
				}
				cnt92++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 446:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "referencing_clause"


	public static class referencing_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "referencing_element"
	// PLSQLPrinter.g:449:1: referencing_element : ^( ( NEW_VK | OLD_VK | PARENT_VK ) alias ) -> template( \"not implemented: \";
	public final PLSQLPrinter.referencing_element_return referencing_element() throws RecognitionException {
		PLSQLPrinter.referencing_element_return retval = new PLSQLPrinter.referencing_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:450:5: ( ^( ( NEW_VK | OLD_VK | PARENT_VK ) alias ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:450:10: ^( ( NEW_VK | OLD_VK | PARENT_VK ) alias )
			{
			// PLSQLPrinter.g:450:12: ( NEW_VK | OLD_VK | PARENT_VK )
			int alt93=3;
			switch ( input.LA(1) ) {
			case NEW_VK:
				{
				alt93=1;
				}
				break;
			case OLD_VK:
				{
				alt93=2;
				}
				break;
			case PARENT_VK:
				{
				alt93=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 93, 0, input);
				throw nvae;
			}
			switch (alt93) {
				case 1 :
					// PLSQLPrinter.g:450:13: NEW_VK
					{
					match(input,NEW_VK,FOLLOW_NEW_VK_in_referencing_element4036); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:450:20: OLD_VK
					{
					match(input,OLD_VK,FOLLOW_OLD_VK_in_referencing_element4038); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:450:27: PARENT_VK
					{
					match(input,PARENT_VK,FOLLOW_PARENT_VK_in_referencing_element4040); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_alias_in_referencing_element4043);
			alias();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 451:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "referencing_element"


	public static class drop_type_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "drop_type"
	// PLSQLPrinter.g:459:1: drop_type : ^( DROP_TYPE type_name ( BODY_VK )? ( FORCE_VK )? ( VALIDATE_VK )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.drop_type_return drop_type() throws RecognitionException {
		PLSQLPrinter.drop_type_return retval = new PLSQLPrinter.drop_type_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:460:5: ( ^( DROP_TYPE type_name ( BODY_VK )? ( FORCE_VK )? ( VALIDATE_VK )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:460:10: ^( DROP_TYPE type_name ( BODY_VK )? ( FORCE_VK )? ( VALIDATE_VK )? )
			{
			match(input,DROP_TYPE,FOLLOW_DROP_TYPE_in_drop_type4084); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_name_in_drop_type4086);
			type_name();
			state._fsp--;

			// PLSQLPrinter.g:460:32: ( BODY_VK )?
			int alt94=2;
			int LA94_0 = input.LA(1);
			if ( (LA94_0==BODY_VK) ) {
				alt94=1;
			}
			switch (alt94) {
				case 1 :
					// PLSQLPrinter.g:460:32: BODY_VK
					{
					match(input,BODY_VK,FOLLOW_BODY_VK_in_drop_type4088); 
					}
					break;

			}

			// PLSQLPrinter.g:460:41: ( FORCE_VK )?
			int alt95=2;
			int LA95_0 = input.LA(1);
			if ( (LA95_0==FORCE_VK) ) {
				alt95=1;
			}
			switch (alt95) {
				case 1 :
					// PLSQLPrinter.g:460:41: FORCE_VK
					{
					match(input,FORCE_VK,FOLLOW_FORCE_VK_in_drop_type4091); 
					}
					break;

			}

			// PLSQLPrinter.g:460:51: ( VALIDATE_VK )?
			int alt96=2;
			int LA96_0 = input.LA(1);
			if ( (LA96_0==VALIDATE_VK) ) {
				alt96=1;
			}
			switch (alt96) {
				case 1 :
					// PLSQLPrinter.g:460:51: VALIDATE_VK
					{
					match(input,VALIDATE_VK,FOLLOW_VALIDATE_VK_in_drop_type4094); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 461:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_type"


	public static class alter_type_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_type"
	// PLSQLPrinter.g:464:1: alter_type : ^( ALTER_TYPE type_name ( ^( REPLACE_VK ^( OBJECT_MEMBERS ( element_spec )+ ) ( invoker_rights_clause )? ) | ^( ALTER_ATTRIBUTE ( ADD_VK | MODIFY_VK | SQL92_RESERVED_DROP ) ^( ATTRIBUTES ( attribute_definition )+ ) ) | ^( ALTER_METHOD ( alter_method_element )+ ) | alter_collection_clauses | modifier_clause | ^( COMPILE_VK ( SPECIFICATION_VK | BODY_VK )? ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) ) ( dependent_handling_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.alter_type_return alter_type() throws RecognitionException {
		PLSQLPrinter.alter_type_return retval = new PLSQLPrinter.alter_type_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:465:5: ( ^( ALTER_TYPE type_name ( ^( REPLACE_VK ^( OBJECT_MEMBERS ( element_spec )+ ) ( invoker_rights_clause )? ) | ^( ALTER_ATTRIBUTE ( ADD_VK | MODIFY_VK | SQL92_RESERVED_DROP ) ^( ATTRIBUTES ( attribute_definition )+ ) ) | ^( ALTER_METHOD ( alter_method_element )+ ) | alter_collection_clauses | modifier_clause | ^( COMPILE_VK ( SPECIFICATION_VK | BODY_VK )? ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) ) ( dependent_handling_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:465:10: ^( ALTER_TYPE type_name ( ^( REPLACE_VK ^( OBJECT_MEMBERS ( element_spec )+ ) ( invoker_rights_clause )? ) | ^( ALTER_ATTRIBUTE ( ADD_VK | MODIFY_VK | SQL92_RESERVED_DROP ) ^( ATTRIBUTES ( attribute_definition )+ ) ) | ^( ALTER_METHOD ( alter_method_element )+ ) | alter_collection_clauses | modifier_clause | ^( COMPILE_VK ( SPECIFICATION_VK | BODY_VK )? ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) ) ( dependent_handling_clause )? )
			{
			match(input,ALTER_TYPE,FOLLOW_ALTER_TYPE_in_alter_type4131); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_name_in_alter_type4133);
			type_name();
			state._fsp--;

			// PLSQLPrinter.g:466:13: ( ^( REPLACE_VK ^( OBJECT_MEMBERS ( element_spec )+ ) ( invoker_rights_clause )? ) | ^( ALTER_ATTRIBUTE ( ADD_VK | MODIFY_VK | SQL92_RESERVED_DROP ) ^( ATTRIBUTES ( attribute_definition )+ ) ) | ^( ALTER_METHOD ( alter_method_element )+ ) | alter_collection_clauses | modifier_clause | ^( COMPILE_VK ( SPECIFICATION_VK | BODY_VK )? ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* ) )
			int alt106=6;
			switch ( input.LA(1) ) {
			case REPLACE_VK:
				{
				alt106=1;
				}
				break;
			case ALTER_ATTRIBUTE:
				{
				alt106=2;
				}
				break;
			case ALTER_METHOD:
				{
				alt106=3;
				}
				break;
			case ALTER_COLLECTION:
				{
				alt106=4;
				}
				break;
			case MODIFIER:
				{
				alt106=5;
				}
				break;
			case COMPILE_VK:
				{
				alt106=6;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 106, 0, input);
				throw nvae;
			}
			switch (alt106) {
				case 1 :
					// PLSQLPrinter.g:466:18: ^( REPLACE_VK ^( OBJECT_MEMBERS ( element_spec )+ ) ( invoker_rights_clause )? )
					{
					match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_alter_type4154); 
					match(input, Token.DOWN, null); 
					match(input,OBJECT_MEMBERS,FOLLOW_OBJECT_MEMBERS_in_alter_type4157); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:466:48: ( element_spec )+
					int cnt97=0;
					loop97:
					while (true) {
						int alt97=2;
						int LA97_0 = input.LA(1);
						if ( (LA97_0==ELEMENT_SPEC) ) {
							alt97=1;
						}

						switch (alt97) {
						case 1 :
							// PLSQLPrinter.g:466:48: element_spec
							{
							pushFollow(FOLLOW_element_spec_in_alter_type4159);
							element_spec();
							state._fsp--;

							}
							break;

						default :
							if ( cnt97 >= 1 ) break loop97;
							EarlyExitException eee = new EarlyExitException(97, input);
							throw eee;
						}
						cnt97++;
					}

					match(input, Token.UP, null); 

					// PLSQLPrinter.g:466:63: ( invoker_rights_clause )?
					int alt98=2;
					int LA98_0 = input.LA(1);
					if ( (LA98_0==AUTHID_VK) ) {
						alt98=1;
					}
					switch (alt98) {
						case 1 :
							// PLSQLPrinter.g:466:63: invoker_rights_clause
							{
							pushFollow(FOLLOW_invoker_rights_clause_in_alter_type4163);
							invoker_rights_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:467:18: ^( ALTER_ATTRIBUTE ( ADD_VK | MODIFY_VK | SQL92_RESERVED_DROP ) ^( ATTRIBUTES ( attribute_definition )+ ) )
					{
					match(input,ALTER_ATTRIBUTE,FOLLOW_ALTER_ATTRIBUTE_in_alter_type4185); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:467:36: ( ADD_VK | MODIFY_VK | SQL92_RESERVED_DROP )
					int alt99=3;
					switch ( input.LA(1) ) {
					case ADD_VK:
						{
						alt99=1;
						}
						break;
					case MODIFY_VK:
						{
						alt99=2;
						}
						break;
					case SQL92_RESERVED_DROP:
						{
						alt99=3;
						}
						break;
					default:
						NoViableAltException nvae =
							new NoViableAltException("", 99, 0, input);
						throw nvae;
					}
					switch (alt99) {
						case 1 :
							// PLSQLPrinter.g:467:37: ADD_VK
							{
							match(input,ADD_VK,FOLLOW_ADD_VK_in_alter_type4188); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:467:44: MODIFY_VK
							{
							match(input,MODIFY_VK,FOLLOW_MODIFY_VK_in_alter_type4190); 
							}
							break;
						case 3 :
							// PLSQLPrinter.g:467:54: SQL92_RESERVED_DROP
							{
							match(input,SQL92_RESERVED_DROP,FOLLOW_SQL92_RESERVED_DROP_in_alter_type4192); 
							}
							break;

					}

					match(input,ATTRIBUTES,FOLLOW_ATTRIBUTES_in_alter_type4196); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:467:88: ( attribute_definition )+
					int cnt100=0;
					loop100:
					while (true) {
						int alt100=2;
						int LA100_0 = input.LA(1);
						if ( (LA100_0==ATTRIBUTE) ) {
							alt100=1;
						}

						switch (alt100) {
						case 1 :
							// PLSQLPrinter.g:467:88: attribute_definition
							{
							pushFollow(FOLLOW_attribute_definition_in_alter_type4198);
							attribute_definition();
							state._fsp--;

							}
							break;

						default :
							if ( cnt100 >= 1 ) break loop100;
							EarlyExitException eee = new EarlyExitException(100, input);
							throw eee;
						}
						cnt100++;
					}

					match(input, Token.UP, null); 

					match(input, Token.UP, null); 

					}
					break;
				case 3 :
					// PLSQLPrinter.g:468:18: ^( ALTER_METHOD ( alter_method_element )+ )
					{
					match(input,ALTER_METHOD,FOLLOW_ALTER_METHOD_in_alter_type4221); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:468:33: ( alter_method_element )+
					int cnt101=0;
					loop101:
					while (true) {
						int alt101=2;
						int LA101_0 = input.LA(1);
						if ( (LA101_0==ALTER_METHOD_ELEMENT) ) {
							alt101=1;
						}

						switch (alt101) {
						case 1 :
							// PLSQLPrinter.g:468:33: alter_method_element
							{
							pushFollow(FOLLOW_alter_method_element_in_alter_type4223);
							alter_method_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt101 >= 1 ) break loop101;
							EarlyExitException eee = new EarlyExitException(101, input);
							throw eee;
						}
						cnt101++;
					}

					match(input, Token.UP, null); 

					}
					break;
				case 4 :
					// PLSQLPrinter.g:469:18: alter_collection_clauses
					{
					pushFollow(FOLLOW_alter_collection_clauses_in_alter_type4244);
					alter_collection_clauses();
					state._fsp--;

					}
					break;
				case 5 :
					// PLSQLPrinter.g:470:18: modifier_clause
					{
					pushFollow(FOLLOW_modifier_clause_in_alter_type4263);
					modifier_clause();
					state._fsp--;

					}
					break;
				case 6 :
					// PLSQLPrinter.g:471:18: ^( COMPILE_VK ( SPECIFICATION_VK | BODY_VK )? ( DEBUG_VK )? ( REUSE_VK )? ( compiler_parameters_clause )* )
					{
					match(input,COMPILE_VK,FOLLOW_COMPILE_VK_in_alter_type4283); 
					if ( input.LA(1)==Token.DOWN ) {
						match(input, Token.DOWN, null); 
						// PLSQLPrinter.g:471:31: ( SPECIFICATION_VK | BODY_VK )?
						int alt102=3;
						int LA102_0 = input.LA(1);
						if ( (LA102_0==SPECIFICATION_VK) ) {
							alt102=1;
						}
						else if ( (LA102_0==BODY_VK) ) {
							alt102=2;
						}
						switch (alt102) {
							case 1 :
								// PLSQLPrinter.g:471:32: SPECIFICATION_VK
								{
								match(input,SPECIFICATION_VK,FOLLOW_SPECIFICATION_VK_in_alter_type4286); 
								}
								break;
							case 2 :
								// PLSQLPrinter.g:471:49: BODY_VK
								{
								match(input,BODY_VK,FOLLOW_BODY_VK_in_alter_type4288); 
								}
								break;

						}

						// PLSQLPrinter.g:471:59: ( DEBUG_VK )?
						int alt103=2;
						int LA103_0 = input.LA(1);
						if ( (LA103_0==DEBUG_VK) ) {
							alt103=1;
						}
						switch (alt103) {
							case 1 :
								// PLSQLPrinter.g:471:59: DEBUG_VK
								{
								match(input,DEBUG_VK,FOLLOW_DEBUG_VK_in_alter_type4292); 
								}
								break;

						}

						// PLSQLPrinter.g:471:69: ( REUSE_VK )?
						int alt104=2;
						int LA104_0 = input.LA(1);
						if ( (LA104_0==REUSE_VK) ) {
							alt104=1;
						}
						switch (alt104) {
							case 1 :
								// PLSQLPrinter.g:471:69: REUSE_VK
								{
								match(input,REUSE_VK,FOLLOW_REUSE_VK_in_alter_type4295); 
								}
								break;

						}

						// PLSQLPrinter.g:471:79: ( compiler_parameters_clause )*
						loop105:
						while (true) {
							int alt105=2;
							int LA105_0 = input.LA(1);
							if ( (LA105_0==COMPILER_PARAMETER) ) {
								alt105=1;
							}

							switch (alt105) {
							case 1 :
								// PLSQLPrinter.g:471:79: compiler_parameters_clause
								{
								pushFollow(FOLLOW_compiler_parameters_clause_in_alter_type4298);
								compiler_parameters_clause();
								state._fsp--;

								}
								break;

							default :
								break loop105;
							}
						}

						match(input, Token.UP, null); 
					}

					}
					break;

			}

			// PLSQLPrinter.g:473:13: ( dependent_handling_clause )?
			int alt107=2;
			int LA107_0 = input.LA(1);
			if ( (LA107_0==DEPENDENT_HANDLING) ) {
				alt107=1;
			}
			switch (alt107) {
				case 1 :
					// PLSQLPrinter.g:473:13: dependent_handling_clause
					{
					pushFollow(FOLLOW_dependent_handling_clause_in_alter_type4329);
					dependent_handling_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 475:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_type"


	public static class alter_method_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_method_element"
	// PLSQLPrinter.g:480:1: alter_method_element : ^( ALTER_METHOD_ELEMENT ( ADD_VK | SQL92_RESERVED_DROP ) ( map_order_function_spec )? ( subprogram_spec )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.alter_method_element_return alter_method_element() throws RecognitionException {
		PLSQLPrinter.alter_method_element_return retval = new PLSQLPrinter.alter_method_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:481:5: ( ^( ALTER_METHOD_ELEMENT ( ADD_VK | SQL92_RESERVED_DROP ) ( map_order_function_spec )? ( subprogram_spec )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:481:10: ^( ALTER_METHOD_ELEMENT ( ADD_VK | SQL92_RESERVED_DROP ) ( map_order_function_spec )? ( subprogram_spec )? )
			{
			match(input,ALTER_METHOD_ELEMENT,FOLLOW_ALTER_METHOD_ELEMENT_in_alter_method_element4377); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:481:33: ( ADD_VK | SQL92_RESERVED_DROP )
			int alt108=2;
			int LA108_0 = input.LA(1);
			if ( (LA108_0==ADD_VK) ) {
				alt108=1;
			}
			else if ( (LA108_0==SQL92_RESERVED_DROP) ) {
				alt108=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 108, 0, input);
				throw nvae;
			}

			switch (alt108) {
				case 1 :
					// PLSQLPrinter.g:481:34: ADD_VK
					{
					match(input,ADD_VK,FOLLOW_ADD_VK_in_alter_method_element4380); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:481:41: SQL92_RESERVED_DROP
					{
					match(input,SQL92_RESERVED_DROP,FOLLOW_SQL92_RESERVED_DROP_in_alter_method_element4382); 
					}
					break;

			}

			// PLSQLPrinter.g:481:62: ( map_order_function_spec )?
			int alt109=2;
			int LA109_0 = input.LA(1);
			if ( (LA109_0==SQL92_RESERVED_ORDER||LA109_0==MAP_VK) ) {
				alt109=1;
			}
			switch (alt109) {
				case 1 :
					// PLSQLPrinter.g:481:62: map_order_function_spec
					{
					pushFollow(FOLLOW_map_order_function_spec_in_alter_method_element4385);
					map_order_function_spec();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:481:87: ( subprogram_spec )?
			int alt110=2;
			int LA110_0 = input.LA(1);
			if ( (LA110_0==MEMBER_VK||LA110_0==STATIC_VK) ) {
				alt110=1;
			}
			switch (alt110) {
				case 1 :
					// PLSQLPrinter.g:481:87: subprogram_spec
					{
					pushFollow(FOLLOW_subprogram_spec_in_alter_method_element4388);
					subprogram_spec();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 482:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_method_element"


	public static class attribute_definition_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "attribute_definition"
	// PLSQLPrinter.g:485:1: attribute_definition : ^( ATTRIBUTE attribute_name ( type_spec )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.attribute_definition_return attribute_definition() throws RecognitionException {
		PLSQLPrinter.attribute_definition_return retval = new PLSQLPrinter.attribute_definition_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:486:5: ( ^( ATTRIBUTE attribute_name ( type_spec )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:486:10: ^( ATTRIBUTE attribute_name ( type_spec )? )
			{
			match(input,ATTRIBUTE,FOLLOW_ATTRIBUTE_in_attribute_definition4425); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_attribute_name_in_attribute_definition4427);
			attribute_name();
			state._fsp--;

			// PLSQLPrinter.g:486:37: ( type_spec )?
			int alt111=2;
			int LA111_0 = input.LA(1);
			if ( (LA111_0==CUSTOM_TYPE||LA111_0==INTERVAL_DATATYPE||LA111_0==NATIVE_DATATYPE) ) {
				alt111=1;
			}
			switch (alt111) {
				case 1 :
					// PLSQLPrinter.g:486:37: type_spec
					{
					pushFollow(FOLLOW_type_spec_in_attribute_definition4429);
					type_spec();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 487:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "attribute_definition"


	public static class alter_collection_clauses_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_collection_clauses"
	// PLSQLPrinter.g:490:1: alter_collection_clauses : ^( ALTER_COLLECTION ( ^( TYPE_VK type_spec ) | ^( LIMIT_VK expression ) ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.alter_collection_clauses_return alter_collection_clauses() throws RecognitionException {
		PLSQLPrinter.alter_collection_clauses_return retval = new PLSQLPrinter.alter_collection_clauses_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:491:5: ( ^( ALTER_COLLECTION ( ^( TYPE_VK type_spec ) | ^( LIMIT_VK expression ) ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:491:10: ^( ALTER_COLLECTION ( ^( TYPE_VK type_spec ) | ^( LIMIT_VK expression ) ) )
			{
			match(input,ALTER_COLLECTION,FOLLOW_ALTER_COLLECTION_in_alter_collection_clauses4466); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:492:13: ( ^( TYPE_VK type_spec ) | ^( LIMIT_VK expression ) )
			int alt112=2;
			int LA112_0 = input.LA(1);
			if ( (LA112_0==TYPE_VK) ) {
				alt112=1;
			}
			else if ( (LA112_0==LIMIT_VK) ) {
				alt112=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 112, 0, input);
				throw nvae;
			}

			switch (alt112) {
				case 1 :
					// PLSQLPrinter.g:492:18: ^( TYPE_VK type_spec )
					{
					match(input,TYPE_VK,FOLLOW_TYPE_VK_in_alter_collection_clauses4487); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_type_spec_in_alter_collection_clauses4489);
					type_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:493:18: ^( LIMIT_VK expression )
					{
					match(input,LIMIT_VK,FOLLOW_LIMIT_VK_in_alter_collection_clauses4510); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_alter_collection_clauses4512);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 496:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_collection_clauses"


	public static class dependent_handling_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "dependent_handling_clause"
	// PLSQLPrinter.g:499:1: dependent_handling_clause : ^( DEPENDENT_HANDLING ( INVALIDATE_VK | ^( CASCADE_VK ( CONVERT_VK | ( SQL92_RESERVED_NOT )? INCLUDING_VK )? ) ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.dependent_handling_clause_return dependent_handling_clause() throws RecognitionException {
		PLSQLPrinter.dependent_handling_clause_return retval = new PLSQLPrinter.dependent_handling_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:500:5: ( ^( DEPENDENT_HANDLING ( INVALIDATE_VK | ^( CASCADE_VK ( CONVERT_VK | ( SQL92_RESERVED_NOT )? INCLUDING_VK )? ) ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:500:10: ^( DEPENDENT_HANDLING ( INVALIDATE_VK | ^( CASCADE_VK ( CONVERT_VK | ( SQL92_RESERVED_NOT )? INCLUDING_VK )? ) ) )
			{
			match(input,DEPENDENT_HANDLING,FOLLOW_DEPENDENT_HANDLING_in_dependent_handling_clause4573); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:501:13: ( INVALIDATE_VK | ^( CASCADE_VK ( CONVERT_VK | ( SQL92_RESERVED_NOT )? INCLUDING_VK )? ) )
			int alt115=2;
			int LA115_0 = input.LA(1);
			if ( (LA115_0==INVALIDATE_VK) ) {
				alt115=1;
			}
			else if ( (LA115_0==CASCADE_VK) ) {
				alt115=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 115, 0, input);
				throw nvae;
			}

			switch (alt115) {
				case 1 :
					// PLSQLPrinter.g:501:18: INVALIDATE_VK
					{
					match(input,INVALIDATE_VK,FOLLOW_INVALIDATE_VK_in_dependent_handling_clause4593); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:502:18: ^( CASCADE_VK ( CONVERT_VK | ( SQL92_RESERVED_NOT )? INCLUDING_VK )? )
					{
					match(input,CASCADE_VK,FOLLOW_CASCADE_VK_in_dependent_handling_clause4613); 
					if ( input.LA(1)==Token.DOWN ) {
						match(input, Token.DOWN, null); 
						// PLSQLPrinter.g:503:21: ( CONVERT_VK | ( SQL92_RESERVED_NOT )? INCLUDING_VK )?
						int alt114=3;
						int LA114_0 = input.LA(1);
						if ( (LA114_0==CONVERT_VK) ) {
							alt114=1;
						}
						else if ( (LA114_0==SQL92_RESERVED_NOT||LA114_0==INCLUDING_VK) ) {
							alt114=2;
						}
						switch (alt114) {
							case 1 :
								// PLSQLPrinter.g:503:26: CONVERT_VK
								{
								match(input,CONVERT_VK,FOLLOW_CONVERT_VK_in_dependent_handling_clause4641); 
								}
								break;
							case 2 :
								// PLSQLPrinter.g:504:26: ( SQL92_RESERVED_NOT )? INCLUDING_VK
								{
								// PLSQLPrinter.g:504:26: ( SQL92_RESERVED_NOT )?
								int alt113=2;
								int LA113_0 = input.LA(1);
								if ( (LA113_0==SQL92_RESERVED_NOT) ) {
									alt113=1;
								}
								switch (alt113) {
									case 1 :
										// PLSQLPrinter.g:504:26: SQL92_RESERVED_NOT
										{
										match(input,SQL92_RESERVED_NOT,FOLLOW_SQL92_RESERVED_NOT_in_dependent_handling_clause4668); 
										}
										break;

								}

								match(input,INCLUDING_VK,FOLLOW_INCLUDING_VK_in_dependent_handling_clause4671); 
								}
								break;

						}

						match(input, Token.UP, null); 
					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 509:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dependent_handling_clause"


	public static class dependent_exceptions_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "dependent_exceptions_part"
	// PLSQLPrinter.g:512:1: dependent_exceptions_part : ^( EXCEPTIONS_VK ( FORCE_VK )? tableview_name ) -> template( \"not implemented: \";
	public final PLSQLPrinter.dependent_exceptions_part_return dependent_exceptions_part() throws RecognitionException {
		PLSQLPrinter.dependent_exceptions_part_return retval = new PLSQLPrinter.dependent_exceptions_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:513:5: ( ^( EXCEPTIONS_VK ( FORCE_VK )? tableview_name ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:513:10: ^( EXCEPTIONS_VK ( FORCE_VK )? tableview_name )
			{
			match(input,EXCEPTIONS_VK,FOLLOW_EXCEPTIONS_VK_in_dependent_exceptions_part4771); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:513:26: ( FORCE_VK )?
			int alt116=2;
			int LA116_0 = input.LA(1);
			if ( (LA116_0==FORCE_VK) ) {
				alt116=1;
			}
			switch (alt116) {
				case 1 :
					// PLSQLPrinter.g:513:26: FORCE_VK
					{
					match(input,FORCE_VK,FOLLOW_FORCE_VK_in_dependent_exceptions_part4773); 
					}
					break;

			}

			pushFollow(FOLLOW_tableview_name_in_dependent_exceptions_part4776);
			tableview_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 514:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dependent_exceptions_part"


	public static class create_type_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "create_type"
	// PLSQLPrinter.g:519:1: create_type : ( ^( CREATE_TYPE_BODY ( REPLACE_VK )? type_name ^( TYPE_BODY_ELEMENTS ( type_body_elements )+ ) ) -> template( \"not implemented: \"| ^( CREATE_TYPE_SPEC ( REPLACE_VK )? type_name ( CHAR_STRING )? ( object_type_def )? ) -> template( \"not implemented: \");
	public final PLSQLPrinter.create_type_return create_type() throws RecognitionException {
		PLSQLPrinter.create_type_return retval = new PLSQLPrinter.create_type_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:520:5: ( ^( CREATE_TYPE_BODY ( REPLACE_VK )? type_name ^( TYPE_BODY_ELEMENTS ( type_body_elements )+ ) ) -> template( \"not implemented: \"| ^( CREATE_TYPE_SPEC ( REPLACE_VK )? type_name ( CHAR_STRING )? ( object_type_def )? ) -> template( \"not implemented: \")
			int alt122=2;
			int LA122_0 = input.LA(1);
			if ( (LA122_0==CREATE_TYPE_BODY) ) {
				alt122=1;
			}
			else if ( (LA122_0==CREATE_TYPE_SPEC) ) {
				alt122=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 122, 0, input);
				throw nvae;
			}

			switch (alt122) {
				case 1 :
					// PLSQLPrinter.g:520:10: ^( CREATE_TYPE_BODY ( REPLACE_VK )? type_name ^( TYPE_BODY_ELEMENTS ( type_body_elements )+ ) )
					{
					match(input,CREATE_TYPE_BODY,FOLLOW_CREATE_TYPE_BODY_in_create_type4814); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:520:29: ( REPLACE_VK )?
					int alt117=2;
					int LA117_0 = input.LA(1);
					if ( (LA117_0==REPLACE_VK) ) {
						alt117=1;
					}
					switch (alt117) {
						case 1 :
							// PLSQLPrinter.g:520:29: REPLACE_VK
							{
							match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_create_type4816); 
							}
							break;

					}

					pushFollow(FOLLOW_type_name_in_create_type4819);
					type_name();
					state._fsp--;

					match(input,TYPE_BODY_ELEMENTS,FOLLOW_TYPE_BODY_ELEMENTS_in_create_type4822); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:520:72: ( type_body_elements )+
					int cnt118=0;
					loop118:
					while (true) {
						int alt118=2;
						int LA118_0 = input.LA(1);
						if ( (LA118_0==SQL92_RESERVED_ORDER||LA118_0==MAP_VK||LA118_0==MEMBER_VK||LA118_0==STATIC_VK) ) {
							alt118=1;
						}

						switch (alt118) {
						case 1 :
							// PLSQLPrinter.g:520:72: type_body_elements
							{
							pushFollow(FOLLOW_type_body_elements_in_create_type4824);
							type_body_elements();
							state._fsp--;

							}
							break;

						default :
							if ( cnt118 >= 1 ) break loop118;
							EarlyExitException eee = new EarlyExitException(118, input);
							throw eee;
						}
						cnt118++;
					}

					match(input, Token.UP, null); 

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 521:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:522:10: ^( CREATE_TYPE_SPEC ( REPLACE_VK )? type_name ( CHAR_STRING )? ( object_type_def )? )
					{
					match(input,CREATE_TYPE_SPEC,FOLLOW_CREATE_TYPE_SPEC_in_create_type4853); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:522:29: ( REPLACE_VK )?
					int alt119=2;
					int LA119_0 = input.LA(1);
					if ( (LA119_0==REPLACE_VK) ) {
						alt119=1;
					}
					switch (alt119) {
						case 1 :
							// PLSQLPrinter.g:522:29: REPLACE_VK
							{
							match(input,REPLACE_VK,FOLLOW_REPLACE_VK_in_create_type4855); 
							}
							break;

					}

					pushFollow(FOLLOW_type_name_in_create_type4858);
					type_name();
					state._fsp--;

					// PLSQLPrinter.g:522:51: ( CHAR_STRING )?
					int alt120=2;
					int LA120_0 = input.LA(1);
					if ( (LA120_0==CHAR_STRING) ) {
						alt120=1;
					}
					switch (alt120) {
						case 1 :
							// PLSQLPrinter.g:522:51: CHAR_STRING
							{
							match(input,CHAR_STRING,FOLLOW_CHAR_STRING_in_create_type4860); 
							}
							break;

					}

					// PLSQLPrinter.g:522:64: ( object_type_def )?
					int alt121=2;
					int LA121_0 = input.LA(1);
					if ( (LA121_0==OBJECT_TYPE_DEF) ) {
						alt121=1;
					}
					switch (alt121) {
						case 1 :
							// PLSQLPrinter.g:522:64: object_type_def
							{
							pushFollow(FOLLOW_object_type_def_in_create_type4863);
							object_type_def();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 523:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_type"


	public static class object_type_def_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "object_type_def"
	// PLSQLPrinter.g:526:1: object_type_def : ^( OBJECT_TYPE_DEF ( object_as_part | object_under_part ) ( invoker_rights_clause )? ( sqlj_object_type )? ( modifier_clause )* ^( OBJECT_MEMBERS ( element_spec )* ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.object_type_def_return object_type_def() throws RecognitionException {
		PLSQLPrinter.object_type_def_return retval = new PLSQLPrinter.object_type_def_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:527:5: ( ^( OBJECT_TYPE_DEF ( object_as_part | object_under_part ) ( invoker_rights_clause )? ( sqlj_object_type )? ( modifier_clause )* ^( OBJECT_MEMBERS ( element_spec )* ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:527:10: ^( OBJECT_TYPE_DEF ( object_as_part | object_under_part ) ( invoker_rights_clause )? ( sqlj_object_type )? ( modifier_clause )* ^( OBJECT_MEMBERS ( element_spec )* ) )
			{
			match(input,OBJECT_TYPE_DEF,FOLLOW_OBJECT_TYPE_DEF_in_object_type_def4900); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:527:28: ( object_as_part | object_under_part )
			int alt123=2;
			int LA123_0 = input.LA(1);
			if ( (LA123_0==OBJECT_AS) ) {
				alt123=1;
			}
			else if ( (LA123_0==UNDER_VK) ) {
				alt123=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 123, 0, input);
				throw nvae;
			}

			switch (alt123) {
				case 1 :
					// PLSQLPrinter.g:527:29: object_as_part
					{
					pushFollow(FOLLOW_object_as_part_in_object_type_def4903);
					object_as_part();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:527:44: object_under_part
					{
					pushFollow(FOLLOW_object_under_part_in_object_type_def4905);
					object_under_part();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:527:63: ( invoker_rights_clause )?
			int alt124=2;
			int LA124_0 = input.LA(1);
			if ( (LA124_0==AUTHID_VK) ) {
				alt124=1;
			}
			switch (alt124) {
				case 1 :
					// PLSQLPrinter.g:527:63: invoker_rights_clause
					{
					pushFollow(FOLLOW_invoker_rights_clause_in_object_type_def4908);
					invoker_rights_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:528:14: ( sqlj_object_type )?
			int alt125=2;
			int LA125_0 = input.LA(1);
			if ( (LA125_0==JAVA_VK) ) {
				alt125=1;
			}
			switch (alt125) {
				case 1 :
					// PLSQLPrinter.g:528:14: sqlj_object_type
					{
					pushFollow(FOLLOW_sqlj_object_type_in_object_type_def4924);
					sqlj_object_type();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:528:32: ( modifier_clause )*
			loop126:
			while (true) {
				int alt126=2;
				int LA126_0 = input.LA(1);
				if ( (LA126_0==MODIFIER) ) {
					alt126=1;
				}

				switch (alt126) {
				case 1 :
					// PLSQLPrinter.g:528:32: modifier_clause
					{
					pushFollow(FOLLOW_modifier_clause_in_object_type_def4927);
					modifier_clause();
					state._fsp--;

					}
					break;

				default :
					break loop126;
				}
			}

			match(input,OBJECT_MEMBERS,FOLLOW_OBJECT_MEMBERS_in_object_type_def4931); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:528:66: ( element_spec )*
				loop127:
				while (true) {
					int alt127=2;
					int LA127_0 = input.LA(1);
					if ( (LA127_0==ELEMENT_SPEC) ) {
						alt127=1;
					}

					switch (alt127) {
					case 1 :
						// PLSQLPrinter.g:528:66: element_spec
						{
						pushFollow(FOLLOW_element_spec_in_object_type_def4933);
						element_spec();
						state._fsp--;

						}
						break;

					default :
						break loop127;
					}
				}

				match(input, Token.UP, null); 
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 529:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "object_type_def"


	public static class object_as_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "object_as_part"
	// PLSQLPrinter.g:532:1: object_as_part : ^( OBJECT_AS ( OBJECT_VK | varray_type_def | nested_table_type_def ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.object_as_part_return object_as_part() throws RecognitionException {
		PLSQLPrinter.object_as_part_return retval = new PLSQLPrinter.object_as_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:533:5: ( ^( OBJECT_AS ( OBJECT_VK | varray_type_def | nested_table_type_def ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:533:10: ^( OBJECT_AS ( OBJECT_VK | varray_type_def | nested_table_type_def ) )
			{
			match(input,OBJECT_AS,FOLLOW_OBJECT_AS_in_object_as_part4973); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:533:22: ( OBJECT_VK | varray_type_def | nested_table_type_def )
			int alt128=3;
			switch ( input.LA(1) ) {
			case OBJECT_VK:
				{
				alt128=1;
				}
				break;
			case SQL92_RESERVED_NULL:
			case VARR_ARRAY_DEF:
				{
				alt128=2;
				}
				break;
			case NESTED_TABLE_TYPE_DEF:
				{
				alt128=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 128, 0, input);
				throw nvae;
			}
			switch (alt128) {
				case 1 :
					// PLSQLPrinter.g:533:23: OBJECT_VK
					{
					match(input,OBJECT_VK,FOLLOW_OBJECT_VK_in_object_as_part4976); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:533:33: varray_type_def
					{
					pushFollow(FOLLOW_varray_type_def_in_object_as_part4978);
					varray_type_def();
					state._fsp--;

					}
					break;
				case 3 :
					// PLSQLPrinter.g:533:49: nested_table_type_def
					{
					pushFollow(FOLLOW_nested_table_type_def_in_object_as_part4980);
					nested_table_type_def();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 534:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "object_as_part"


	public static class object_under_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "object_under_part"
	// PLSQLPrinter.g:537:1: object_under_part : ^( UNDER_VK type_spec ) -> template( \"not implemented: \";
	public final PLSQLPrinter.object_under_part_return object_under_part() throws RecognitionException {
		PLSQLPrinter.object_under_part_return retval = new PLSQLPrinter.object_under_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:538:5: ( ^( UNDER_VK type_spec ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:538:10: ^( UNDER_VK type_spec )
			{
			match(input,UNDER_VK,FOLLOW_UNDER_VK_in_object_under_part5017); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_spec_in_object_under_part5019);
			type_spec();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 539:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "object_under_part"


	public static class nested_table_type_def_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "nested_table_type_def"
	// PLSQLPrinter.g:542:1: nested_table_type_def : ^( NESTED_TABLE_TYPE_DEF type_spec ( SQL92_RESERVED_NULL )? ( table_indexed_by_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.nested_table_type_def_return nested_table_type_def() throws RecognitionException {
		PLSQLPrinter.nested_table_type_def_return retval = new PLSQLPrinter.nested_table_type_def_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:543:5: ( ^( NESTED_TABLE_TYPE_DEF type_spec ( SQL92_RESERVED_NULL )? ( table_indexed_by_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:543:10: ^( NESTED_TABLE_TYPE_DEF type_spec ( SQL92_RESERVED_NULL )? ( table_indexed_by_part )? )
			{
			match(input,NESTED_TABLE_TYPE_DEF,FOLLOW_NESTED_TABLE_TYPE_DEF_in_nested_table_type_def5055); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_spec_in_nested_table_type_def5057);
			type_spec();
			state._fsp--;

			// PLSQLPrinter.g:543:44: ( SQL92_RESERVED_NULL )?
			int alt129=2;
			int LA129_0 = input.LA(1);
			if ( (LA129_0==SQL92_RESERVED_NULL) ) {
				alt129=1;
			}
			switch (alt129) {
				case 1 :
					// PLSQLPrinter.g:543:44: SQL92_RESERVED_NULL
					{
					match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_nested_table_type_def5059); 
					}
					break;

			}

			// PLSQLPrinter.g:543:65: ( table_indexed_by_part )?
			int alt130=2;
			int LA130_0 = input.LA(1);
			if ( (LA130_0==INDEXED_BY) ) {
				alt130=1;
			}
			switch (alt130) {
				case 1 :
					// PLSQLPrinter.g:543:65: table_indexed_by_part
					{
					pushFollow(FOLLOW_table_indexed_by_part_in_nested_table_type_def5062);
					table_indexed_by_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 544:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "nested_table_type_def"


	public static class sqlj_object_type_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "sqlj_object_type"
	// PLSQLPrinter.g:547:1: sqlj_object_type : ^( JAVA_VK expression ( SQLDATA_VK | CUSTOMDATUM_VK | ORADATA_VK ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.sqlj_object_type_return sqlj_object_type() throws RecognitionException {
		PLSQLPrinter.sqlj_object_type_return retval = new PLSQLPrinter.sqlj_object_type_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:548:5: ( ^( JAVA_VK expression ( SQLDATA_VK | CUSTOMDATUM_VK | ORADATA_VK ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:548:10: ^( JAVA_VK expression ( SQLDATA_VK | CUSTOMDATUM_VK | ORADATA_VK ) )
			{
			match(input,JAVA_VK,FOLLOW_JAVA_VK_in_sqlj_object_type5099); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_sqlj_object_type5101);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:548:31: ( SQLDATA_VK | CUSTOMDATUM_VK | ORADATA_VK )
			int alt131=3;
			switch ( input.LA(1) ) {
			case SQLDATA_VK:
				{
				alt131=1;
				}
				break;
			case CUSTOMDATUM_VK:
				{
				alt131=2;
				}
				break;
			case ORADATA_VK:
				{
				alt131=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 131, 0, input);
				throw nvae;
			}
			switch (alt131) {
				case 1 :
					// PLSQLPrinter.g:548:32: SQLDATA_VK
					{
					match(input,SQLDATA_VK,FOLLOW_SQLDATA_VK_in_sqlj_object_type5104); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:548:43: CUSTOMDATUM_VK
					{
					match(input,CUSTOMDATUM_VK,FOLLOW_CUSTOMDATUM_VK_in_sqlj_object_type5106); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:548:58: ORADATA_VK
					{
					match(input,ORADATA_VK,FOLLOW_ORADATA_VK_in_sqlj_object_type5108); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 549:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sqlj_object_type"


	public static class type_body_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "type_body_elements"
	// PLSQLPrinter.g:552:1: type_body_elements : ( map_order_func_declaration -> template( \"not implemented: \"| subprog_decl_in_type -> template( \"not implemented: \");
	public final PLSQLPrinter.type_body_elements_return type_body_elements() throws RecognitionException {
		PLSQLPrinter.type_body_elements_return retval = new PLSQLPrinter.type_body_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:553:5: ( map_order_func_declaration -> template( \"not implemented: \"| subprog_decl_in_type -> template( \"not implemented: \")
			int alt132=2;
			int LA132_0 = input.LA(1);
			if ( (LA132_0==SQL92_RESERVED_ORDER||LA132_0==MAP_VK) ) {
				alt132=1;
			}
			else if ( (LA132_0==MEMBER_VK||LA132_0==STATIC_VK) ) {
				alt132=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 132, 0, input);
				throw nvae;
			}

			switch (alt132) {
				case 1 :
					// PLSQLPrinter.g:553:10: map_order_func_declaration
					{
					pushFollow(FOLLOW_map_order_func_declaration_in_type_body_elements5144);
					map_order_func_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 554:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:555:10: subprog_decl_in_type
					{
					pushFollow(FOLLOW_subprog_decl_in_type_in_type_body_elements5169);
					subprog_decl_in_type();
					state._fsp--;

					// TEMPLATE REWRITE
					// 556:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "type_body_elements"


	public static class map_order_func_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "map_order_func_declaration"
	// PLSQLPrinter.g:559:1: map_order_func_declaration : ^( ( MAP_VK | SQL92_RESERVED_ORDER ) create_function_body ) -> template( \"not implemented: \";
	public final PLSQLPrinter.map_order_func_declaration_return map_order_func_declaration() throws RecognitionException {
		PLSQLPrinter.map_order_func_declaration_return retval = new PLSQLPrinter.map_order_func_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:560:5: ( ^( ( MAP_VK | SQL92_RESERVED_ORDER ) create_function_body ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:560:10: ^( ( MAP_VK | SQL92_RESERVED_ORDER ) create_function_body )
			{
			// PLSQLPrinter.g:560:12: ( MAP_VK | SQL92_RESERVED_ORDER )
			int alt133=2;
			int LA133_0 = input.LA(1);
			if ( (LA133_0==MAP_VK) ) {
				alt133=1;
			}
			else if ( (LA133_0==SQL92_RESERVED_ORDER) ) {
				alt133=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 133, 0, input);
				throw nvae;
			}

			switch (alt133) {
				case 1 :
					// PLSQLPrinter.g:560:13: MAP_VK
					{
					match(input,MAP_VK,FOLLOW_MAP_VK_in_map_order_func_declaration5205); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:560:20: SQL92_RESERVED_ORDER
					{
					match(input,SQL92_RESERVED_ORDER,FOLLOW_SQL92_RESERVED_ORDER_in_map_order_func_declaration5207); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_create_function_body_in_map_order_func_declaration5210);
			create_function_body();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 561:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "map_order_func_declaration"


	public static class subprog_decl_in_type_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subprog_decl_in_type"
	// PLSQLPrinter.g:564:1: subprog_decl_in_type : ^( ( MEMBER_VK | STATIC_VK ) ( create_procedure_body | create_function_body | constructor_declaration ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.subprog_decl_in_type_return subprog_decl_in_type() throws RecognitionException {
		PLSQLPrinter.subprog_decl_in_type_return retval = new PLSQLPrinter.subprog_decl_in_type_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:565:5: ( ^( ( MEMBER_VK | STATIC_VK ) ( create_procedure_body | create_function_body | constructor_declaration ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:565:10: ^( ( MEMBER_VK | STATIC_VK ) ( create_procedure_body | create_function_body | constructor_declaration ) )
			{
			// PLSQLPrinter.g:565:12: ( MEMBER_VK | STATIC_VK )
			int alt134=2;
			int LA134_0 = input.LA(1);
			if ( (LA134_0==MEMBER_VK) ) {
				alt134=1;
			}
			else if ( (LA134_0==STATIC_VK) ) {
				alt134=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 134, 0, input);
				throw nvae;
			}

			switch (alt134) {
				case 1 :
					// PLSQLPrinter.g:565:13: MEMBER_VK
					{
					match(input,MEMBER_VK,FOLLOW_MEMBER_VK_in_subprog_decl_in_type5247); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:565:23: STATIC_VK
					{
					match(input,STATIC_VK,FOLLOW_STATIC_VK_in_subprog_decl_in_type5249); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:566:13: ( create_procedure_body | create_function_body | constructor_declaration )
			int alt135=3;
			switch ( input.LA(1) ) {
			case CREATE_PROCEDURE:
				{
				alt135=1;
				}
				break;
			case CREATE_FUNCTION:
				{
				alt135=2;
				}
				break;
			case CONSTRUCTOR_VK:
				{
				alt135=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 135, 0, input);
				throw nvae;
			}
			switch (alt135) {
				case 1 :
					// PLSQLPrinter.g:566:18: create_procedure_body
					{
					pushFollow(FOLLOW_create_procedure_body_in_subprog_decl_in_type5269);
					create_procedure_body();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:567:18: create_function_body
					{
					pushFollow(FOLLOW_create_function_body_in_subprog_decl_in_type5288);
					create_function_body();
					state._fsp--;

					}
					break;
				case 3 :
					// PLSQLPrinter.g:568:18: constructor_declaration
					{
					pushFollow(FOLLOW_constructor_declaration_in_subprog_decl_in_type5307);
					constructor_declaration();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 571:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subprog_decl_in_type"


	public static class constructor_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "constructor_declaration"
	// PLSQLPrinter.g:574:1: constructor_declaration : ^( CONSTRUCTOR_VK type_spec ( FINAL_VK )? ( INSTANTIABLE_VK )? ^( PARAMETERS ( type_elements_parameter )* ) ( ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.constructor_declaration_return constructor_declaration() throws RecognitionException {
		PLSQLPrinter.constructor_declaration_return retval = new PLSQLPrinter.constructor_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:575:5: ( ^( CONSTRUCTOR_VK type_spec ( FINAL_VK )? ( INSTANTIABLE_VK )? ^( PARAMETERS ( type_elements_parameter )* ) ( ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:575:10: ^( CONSTRUCTOR_VK type_spec ( FINAL_VK )? ( INSTANTIABLE_VK )? ^( PARAMETERS ( type_elements_parameter )* ) ( ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) ) )
			{
			match(input,CONSTRUCTOR_VK,FOLLOW_CONSTRUCTOR_VK_in_constructor_declaration5366); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_spec_in_constructor_declaration5368);
			type_spec();
			state._fsp--;

			// PLSQLPrinter.g:575:37: ( FINAL_VK )?
			int alt136=2;
			int LA136_0 = input.LA(1);
			if ( (LA136_0==FINAL_VK) ) {
				alt136=1;
			}
			switch (alt136) {
				case 1 :
					// PLSQLPrinter.g:575:37: FINAL_VK
					{
					match(input,FINAL_VK,FOLLOW_FINAL_VK_in_constructor_declaration5370); 
					}
					break;

			}

			// PLSQLPrinter.g:575:47: ( INSTANTIABLE_VK )?
			int alt137=2;
			int LA137_0 = input.LA(1);
			if ( (LA137_0==INSTANTIABLE_VK) ) {
				alt137=1;
			}
			switch (alt137) {
				case 1 :
					// PLSQLPrinter.g:575:47: INSTANTIABLE_VK
					{
					match(input,INSTANTIABLE_VK,FOLLOW_INSTANTIABLE_VK_in_constructor_declaration5373); 
					}
					break;

			}

			match(input,PARAMETERS,FOLLOW_PARAMETERS_in_constructor_declaration5377); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:575:77: ( type_elements_parameter )*
				loop138:
				while (true) {
					int alt138=2;
					int LA138_0 = input.LA(1);
					if ( (LA138_0==PARAMETER) ) {
						alt138=1;
					}

					switch (alt138) {
					case 1 :
						// PLSQLPrinter.g:575:77: type_elements_parameter
						{
						pushFollow(FOLLOW_type_elements_parameter_in_constructor_declaration5379);
						type_elements_parameter();
						state._fsp--;

						}
						break;

					default :
						break loop138;
					}
				}

				match(input, Token.UP, null); 
			}

			// PLSQLPrinter.g:576:13: ( ^( CALL_MODE call_spec ) | ^( BODY_MODE ( declare_spec )* body ) )
			int alt140=2;
			int LA140_0 = input.LA(1);
			if ( (LA140_0==CALL_MODE) ) {
				alt140=1;
			}
			else if ( (LA140_0==BODY_MODE) ) {
				alt140=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 140, 0, input);
				throw nvae;
			}

			switch (alt140) {
				case 1 :
					// PLSQLPrinter.g:576:18: ^( CALL_MODE call_spec )
					{
					match(input,CALL_MODE,FOLLOW_CALL_MODE_in_constructor_declaration5402); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_call_spec_in_constructor_declaration5404);
					call_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:577:18: ^( BODY_MODE ( declare_spec )* body )
					{
					match(input,BODY_MODE,FOLLOW_BODY_MODE_in_constructor_declaration5425); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:577:30: ( declare_spec )*
					loop139:
					while (true) {
						int alt139=2;
						int LA139_0 = input.LA(1);
						if ( (LA139_0==CREATE_FUNCTION||LA139_0==CREATE_PROCEDURE||LA139_0==CURSOR_DECLARE||LA139_0==EXCEPTION_DECLARE||LA139_0==PRAGMA_DECLARE||(LA139_0 >= RECORD_TYPE_DECLARE && LA139_0 <= RECORD_VAR_DECLARE)||LA139_0==SUBTYPE_DECLARE||(LA139_0 >= TABLE_TYPE_DECLARE && LA139_0 <= TABLE_VAR_DECLARE)||LA139_0==VARIABLE_DECLARE) ) {
							alt139=1;
						}

						switch (alt139) {
						case 1 :
							// PLSQLPrinter.g:577:30: declare_spec
							{
							pushFollow(FOLLOW_declare_spec_in_constructor_declaration5427);
							declare_spec();
							state._fsp--;

							}
							break;

						default :
							break loop139;
						}
					}

					pushFollow(FOLLOW_body_in_constructor_declaration5430);
					body();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 580:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "constructor_declaration"


	public static class modifier_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "modifier_clause"
	// PLSQLPrinter.g:587:1: modifier_clause : ^( MODIFIER ( SQL92_RESERVED_NOT )? ( INSTANTIABLE_VK | FINAL_VK | OVERRIDING_VK ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.modifier_clause_return modifier_clause() throws RecognitionException {
		PLSQLPrinter.modifier_clause_return retval = new PLSQLPrinter.modifier_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:588:5: ( ^( MODIFIER ( SQL92_RESERVED_NOT )? ( INSTANTIABLE_VK | FINAL_VK | OVERRIDING_VK ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:588:10: ^( MODIFIER ( SQL92_RESERVED_NOT )? ( INSTANTIABLE_VK | FINAL_VK | OVERRIDING_VK ) )
			{
			match(input,MODIFIER,FOLLOW_MODIFIER_in_modifier_clause5494); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:588:21: ( SQL92_RESERVED_NOT )?
			int alt141=2;
			int LA141_0 = input.LA(1);
			if ( (LA141_0==SQL92_RESERVED_NOT) ) {
				alt141=1;
			}
			switch (alt141) {
				case 1 :
					// PLSQLPrinter.g:588:21: SQL92_RESERVED_NOT
					{
					match(input,SQL92_RESERVED_NOT,FOLLOW_SQL92_RESERVED_NOT_in_modifier_clause5496); 
					}
					break;

			}

			// PLSQLPrinter.g:588:41: ( INSTANTIABLE_VK | FINAL_VK | OVERRIDING_VK )
			int alt142=3;
			switch ( input.LA(1) ) {
			case INSTANTIABLE_VK:
				{
				alt142=1;
				}
				break;
			case FINAL_VK:
				{
				alt142=2;
				}
				break;
			case OVERRIDING_VK:
				{
				alt142=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 142, 0, input);
				throw nvae;
			}
			switch (alt142) {
				case 1 :
					// PLSQLPrinter.g:588:42: INSTANTIABLE_VK
					{
					match(input,INSTANTIABLE_VK,FOLLOW_INSTANTIABLE_VK_in_modifier_clause5500); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:588:58: FINAL_VK
					{
					match(input,FINAL_VK,FOLLOW_FINAL_VK_in_modifier_clause5502); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:588:67: OVERRIDING_VK
					{
					match(input,OVERRIDING_VK,FOLLOW_OVERRIDING_VK_in_modifier_clause5504); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 589:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "modifier_clause"


	public static class sqlj_object_type_attr_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "sqlj_object_type_attr"
	// PLSQLPrinter.g:592:1: sqlj_object_type_attr : ^( EXTERNAL_VK expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.sqlj_object_type_attr_return sqlj_object_type_attr() throws RecognitionException {
		PLSQLPrinter.sqlj_object_type_attr_return retval = new PLSQLPrinter.sqlj_object_type_attr_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:593:5: ( ^( EXTERNAL_VK expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:593:10: ^( EXTERNAL_VK expression )
			{
			match(input,EXTERNAL_VK,FOLLOW_EXTERNAL_VK_in_sqlj_object_type_attr5541); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_sqlj_object_type_attr5543);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 594:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sqlj_object_type_attr"


	public static class element_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "element_spec"
	// PLSQLPrinter.g:597:1: element_spec : ^( ELEMENT_SPEC ( element_spec_options )+ ( modifier_clause )? ( pragma_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.element_spec_return element_spec() throws RecognitionException {
		PLSQLPrinter.element_spec_return retval = new PLSQLPrinter.element_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:598:5: ( ^( ELEMENT_SPEC ( element_spec_options )+ ( modifier_clause )? ( pragma_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:598:10: ^( ELEMENT_SPEC ( element_spec_options )+ ( modifier_clause )? ( pragma_clause )? )
			{
			match(input,ELEMENT_SPEC,FOLLOW_ELEMENT_SPEC_in_element_spec5579); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:598:25: ( element_spec_options )+
			int cnt143=0;
			loop143:
			while (true) {
				int alt143=2;
				int LA143_0 = input.LA(1);
				if ( (LA143_0==SQL92_RESERVED_ORDER||LA143_0==CONSTRUCTOR_SPEC||LA143_0==FIELD_SPEC||LA143_0==MAP_VK||LA143_0==MEMBER_VK||LA143_0==STATIC_VK) ) {
					alt143=1;
				}

				switch (alt143) {
				case 1 :
					// PLSQLPrinter.g:598:25: element_spec_options
					{
					pushFollow(FOLLOW_element_spec_options_in_element_spec5581);
					element_spec_options();
					state._fsp--;

					}
					break;

				default :
					if ( cnt143 >= 1 ) break loop143;
					EarlyExitException eee = new EarlyExitException(143, input);
					throw eee;
				}
				cnt143++;
			}

			// PLSQLPrinter.g:598:47: ( modifier_clause )?
			int alt144=2;
			int LA144_0 = input.LA(1);
			if ( (LA144_0==MODIFIER) ) {
				alt144=1;
			}
			switch (alt144) {
				case 1 :
					// PLSQLPrinter.g:598:47: modifier_clause
					{
					pushFollow(FOLLOW_modifier_clause_in_element_spec5584);
					modifier_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:598:64: ( pragma_clause )?
			int alt145=2;
			int LA145_0 = input.LA(1);
			if ( (LA145_0==PRAGMA_VK) ) {
				alt145=1;
			}
			switch (alt145) {
				case 1 :
					// PLSQLPrinter.g:598:64: pragma_clause
					{
					pushFollow(FOLLOW_pragma_clause_in_element_spec5587);
					pragma_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 599:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "element_spec"


	public static class element_spec_options_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "element_spec_options"
	// PLSQLPrinter.g:602:1: element_spec_options : ( subprogram_spec -> template( \"not implemented: \"| constructor_spec -> template( \"not implemented: \"| map_order_function_spec -> template( \"not implemented: \"| ^( FIELD_SPEC id type_spec ( sqlj_object_type_attr )? ) -> template( \"not implemented: \");
	public final PLSQLPrinter.element_spec_options_return element_spec_options() throws RecognitionException {
		PLSQLPrinter.element_spec_options_return retval = new PLSQLPrinter.element_spec_options_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:603:5: ( subprogram_spec -> template( \"not implemented: \"| constructor_spec -> template( \"not implemented: \"| map_order_function_spec -> template( \"not implemented: \"| ^( FIELD_SPEC id type_spec ( sqlj_object_type_attr )? ) -> template( \"not implemented: \")
			int alt147=4;
			switch ( input.LA(1) ) {
			case MEMBER_VK:
			case STATIC_VK:
				{
				alt147=1;
				}
				break;
			case CONSTRUCTOR_SPEC:
				{
				alt147=2;
				}
				break;
			case SQL92_RESERVED_ORDER:
			case MAP_VK:
				{
				alt147=3;
				}
				break;
			case FIELD_SPEC:
				{
				alt147=4;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 147, 0, input);
				throw nvae;
			}
			switch (alt147) {
				case 1 :
					// PLSQLPrinter.g:603:10: subprogram_spec
					{
					pushFollow(FOLLOW_subprogram_spec_in_element_spec_options5623);
					subprogram_spec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 604:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:605:10: constructor_spec
					{
					pushFollow(FOLLOW_constructor_spec_in_element_spec_options5648);
					constructor_spec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 606:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:607:10: map_order_function_spec
					{
					pushFollow(FOLLOW_map_order_function_spec_in_element_spec_options5673);
					map_order_function_spec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 608:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:609:10: ^( FIELD_SPEC id type_spec ( sqlj_object_type_attr )? )
					{
					match(input,FIELD_SPEC,FOLLOW_FIELD_SPEC_in_element_spec_options5699); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_id_in_element_spec_options5701);
					id();
					state._fsp--;

					pushFollow(FOLLOW_type_spec_in_element_spec_options5703);
					type_spec();
					state._fsp--;

					// PLSQLPrinter.g:609:36: ( sqlj_object_type_attr )?
					int alt146=2;
					int LA146_0 = input.LA(1);
					if ( (LA146_0==EXTERNAL_VK) ) {
						alt146=1;
					}
					switch (alt146) {
						case 1 :
							// PLSQLPrinter.g:609:36: sqlj_object_type_attr
							{
							pushFollow(FOLLOW_sqlj_object_type_attr_in_element_spec_options5705);
							sqlj_object_type_attr();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 610:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "element_spec_options"


	public static class subprogram_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subprogram_spec"
	// PLSQLPrinter.g:613:1: subprogram_spec : ^( ( MEMBER_VK | STATIC_VK ) ( procedure_spec | function_spec ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.subprogram_spec_return subprogram_spec() throws RecognitionException {
		PLSQLPrinter.subprogram_spec_return retval = new PLSQLPrinter.subprogram_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:614:5: ( ^( ( MEMBER_VK | STATIC_VK ) ( procedure_spec | function_spec ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:614:10: ^( ( MEMBER_VK | STATIC_VK ) ( procedure_spec | function_spec ) )
			{
			// PLSQLPrinter.g:614:12: ( MEMBER_VK | STATIC_VK )
			int alt148=2;
			int LA148_0 = input.LA(1);
			if ( (LA148_0==MEMBER_VK) ) {
				alt148=1;
			}
			else if ( (LA148_0==STATIC_VK) ) {
				alt148=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 148, 0, input);
				throw nvae;
			}

			switch (alt148) {
				case 1 :
					// PLSQLPrinter.g:614:13: MEMBER_VK
					{
					match(input,MEMBER_VK,FOLLOW_MEMBER_VK_in_subprogram_spec5743); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:614:23: STATIC_VK
					{
					match(input,STATIC_VK,FOLLOW_STATIC_VK_in_subprogram_spec5745); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:615:13: ( procedure_spec | function_spec )
			int alt149=2;
			int LA149_0 = input.LA(1);
			if ( (LA149_0==PROCEDURE_SPEC) ) {
				alt149=1;
			}
			else if ( (LA149_0==FUNCTION_SPEC) ) {
				alt149=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 149, 0, input);
				throw nvae;
			}

			switch (alt149) {
				case 1 :
					// PLSQLPrinter.g:615:18: procedure_spec
					{
					pushFollow(FOLLOW_procedure_spec_in_subprogram_spec5765);
					procedure_spec();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:616:18: function_spec
					{
					pushFollow(FOLLOW_function_spec_in_subprogram_spec5784);
					function_spec();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 619:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subprogram_spec"


	public static class constructor_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "constructor_spec"
	// PLSQLPrinter.g:622:1: constructor_spec : ^( CONSTRUCTOR_SPEC type_spec ( FINAL_VK )? ( INSTANTIABLE_VK )? ^( PARAMETERS ( type_elements_parameter )* ) ( constructor_call_mode )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.constructor_spec_return constructor_spec() throws RecognitionException {
		PLSQLPrinter.constructor_spec_return retval = new PLSQLPrinter.constructor_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:623:5: ( ^( CONSTRUCTOR_SPEC type_spec ( FINAL_VK )? ( INSTANTIABLE_VK )? ^( PARAMETERS ( type_elements_parameter )* ) ( constructor_call_mode )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:623:10: ^( CONSTRUCTOR_SPEC type_spec ( FINAL_VK )? ( INSTANTIABLE_VK )? ^( PARAMETERS ( type_elements_parameter )* ) ( constructor_call_mode )? )
			{
			match(input,CONSTRUCTOR_SPEC,FOLLOW_CONSTRUCTOR_SPEC_in_constructor_spec5843); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_spec_in_constructor_spec5845);
			type_spec();
			state._fsp--;

			// PLSQLPrinter.g:623:39: ( FINAL_VK )?
			int alt150=2;
			int LA150_0 = input.LA(1);
			if ( (LA150_0==FINAL_VK) ) {
				alt150=1;
			}
			switch (alt150) {
				case 1 :
					// PLSQLPrinter.g:623:39: FINAL_VK
					{
					match(input,FINAL_VK,FOLLOW_FINAL_VK_in_constructor_spec5847); 
					}
					break;

			}

			// PLSQLPrinter.g:623:49: ( INSTANTIABLE_VK )?
			int alt151=2;
			int LA151_0 = input.LA(1);
			if ( (LA151_0==INSTANTIABLE_VK) ) {
				alt151=1;
			}
			switch (alt151) {
				case 1 :
					// PLSQLPrinter.g:623:49: INSTANTIABLE_VK
					{
					match(input,INSTANTIABLE_VK,FOLLOW_INSTANTIABLE_VK_in_constructor_spec5850); 
					}
					break;

			}

			match(input,PARAMETERS,FOLLOW_PARAMETERS_in_constructor_spec5854); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:623:79: ( type_elements_parameter )*
				loop152:
				while (true) {
					int alt152=2;
					int LA152_0 = input.LA(1);
					if ( (LA152_0==PARAMETER) ) {
						alt152=1;
					}

					switch (alt152) {
					case 1 :
						// PLSQLPrinter.g:623:79: type_elements_parameter
						{
						pushFollow(FOLLOW_type_elements_parameter_in_constructor_spec5856);
						type_elements_parameter();
						state._fsp--;

						}
						break;

					default :
						break loop152;
					}
				}

				match(input, Token.UP, null); 
			}

			// PLSQLPrinter.g:623:105: ( constructor_call_mode )?
			int alt153=2;
			int LA153_0 = input.LA(1);
			if ( (LA153_0==CALL_MODE) ) {
				alt153=1;
			}
			switch (alt153) {
				case 1 :
					// PLSQLPrinter.g:623:105: constructor_call_mode
					{
					pushFollow(FOLLOW_constructor_call_mode_in_constructor_spec5860);
					constructor_call_mode();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 624:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "constructor_spec"


	public static class constructor_call_mode_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "constructor_call_mode"
	// PLSQLPrinter.g:627:1: constructor_call_mode : ^( CALL_MODE call_spec ) -> template( \"not implemented: \";
	public final PLSQLPrinter.constructor_call_mode_return constructor_call_mode() throws RecognitionException {
		PLSQLPrinter.constructor_call_mode_return retval = new PLSQLPrinter.constructor_call_mode_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:628:5: ( ^( CALL_MODE call_spec ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:628:10: ^( CALL_MODE call_spec )
			{
			match(input,CALL_MODE,FOLLOW_CALL_MODE_in_constructor_call_mode5897); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_call_spec_in_constructor_call_mode5899);
			call_spec();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 629:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "constructor_call_mode"


	public static class map_order_function_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "map_order_function_spec"
	// PLSQLPrinter.g:632:1: map_order_function_spec : ^( ( MAP_VK | SQL92_RESERVED_ORDER ) function_spec ) -> template( \"not implemented: \";
	public final PLSQLPrinter.map_order_function_spec_return map_order_function_spec() throws RecognitionException {
		PLSQLPrinter.map_order_function_spec_return retval = new PLSQLPrinter.map_order_function_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:633:5: ( ^( ( MAP_VK | SQL92_RESERVED_ORDER ) function_spec ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:633:10: ^( ( MAP_VK | SQL92_RESERVED_ORDER ) function_spec )
			{
			// PLSQLPrinter.g:633:12: ( MAP_VK | SQL92_RESERVED_ORDER )
			int alt154=2;
			int LA154_0 = input.LA(1);
			if ( (LA154_0==MAP_VK) ) {
				alt154=1;
			}
			else if ( (LA154_0==SQL92_RESERVED_ORDER) ) {
				alt154=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 154, 0, input);
				throw nvae;
			}

			switch (alt154) {
				case 1 :
					// PLSQLPrinter.g:633:13: MAP_VK
					{
					match(input,MAP_VK,FOLLOW_MAP_VK_in_map_order_function_spec5936); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:633:20: SQL92_RESERVED_ORDER
					{
					match(input,SQL92_RESERVED_ORDER,FOLLOW_SQL92_RESERVED_ORDER_in_map_order_function_spec5938); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_function_spec_in_map_order_function_spec5941);
			function_spec();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 634:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "map_order_function_spec"


	public static class pragma_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pragma_clause"
	// PLSQLPrinter.g:637:1: pragma_clause : ^( PRAGMA_VK ( pragma_elements )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.pragma_clause_return pragma_clause() throws RecognitionException {
		PLSQLPrinter.pragma_clause_return retval = new PLSQLPrinter.pragma_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:638:5: ( ^( PRAGMA_VK ( pragma_elements )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:638:10: ^( PRAGMA_VK ( pragma_elements )+ )
			{
			match(input,PRAGMA_VK,FOLLOW_PRAGMA_VK_in_pragma_clause5977); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:638:22: ( pragma_elements )+
			int cnt155=0;
			loop155:
			while (true) {
				int alt155=2;
				int LA155_0 = input.LA(1);
				if ( (LA155_0==SQL92_RESERVED_DEFAULT||LA155_0==CHAR_SET_NAME||LA155_0==ID) ) {
					alt155=1;
				}

				switch (alt155) {
				case 1 :
					// PLSQLPrinter.g:638:22: pragma_elements
					{
					pushFollow(FOLLOW_pragma_elements_in_pragma_clause5979);
					pragma_elements();
					state._fsp--;

					}
					break;

				default :
					if ( cnt155 >= 1 ) break loop155;
					EarlyExitException eee = new EarlyExitException(155, input);
					throw eee;
				}
				cnt155++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 639:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pragma_clause"


	public static class pragma_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pragma_elements"
	// PLSQLPrinter.g:642:1: pragma_elements : ( id -> template( \"not implemented: \"| SQL92_RESERVED_DEFAULT -> template( \"not implemented: \");
	public final PLSQLPrinter.pragma_elements_return pragma_elements() throws RecognitionException {
		PLSQLPrinter.pragma_elements_return retval = new PLSQLPrinter.pragma_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:643:5: ( id -> template( \"not implemented: \"| SQL92_RESERVED_DEFAULT -> template( \"not implemented: \")
			int alt156=2;
			int LA156_0 = input.LA(1);
			if ( (LA156_0==CHAR_SET_NAME||LA156_0==ID) ) {
				alt156=1;
			}
			else if ( (LA156_0==SQL92_RESERVED_DEFAULT) ) {
				alt156=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 156, 0, input);
				throw nvae;
			}

			switch (alt156) {
				case 1 :
					// PLSQLPrinter.g:643:10: id
					{
					pushFollow(FOLLOW_id_in_pragma_elements6015);
					id();
					state._fsp--;

					// TEMPLATE REWRITE
					// 644:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:645:10: SQL92_RESERVED_DEFAULT
					{
					match(input,SQL92_RESERVED_DEFAULT,FOLLOW_SQL92_RESERVED_DEFAULT_in_pragma_elements6040); 
					// TEMPLATE REWRITE
					// 646:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pragma_elements"


	public static class type_elements_parameter_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "type_elements_parameter"
	// PLSQLPrinter.g:649:1: type_elements_parameter : ^( PARAMETER parameter_name type_spec ) -> template( \"not implemented: \";
	public final PLSQLPrinter.type_elements_parameter_return type_elements_parameter() throws RecognitionException {
		PLSQLPrinter.type_elements_parameter_return retval = new PLSQLPrinter.type_elements_parameter_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:650:5: ( ^( PARAMETER parameter_name type_spec ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:650:10: ^( PARAMETER parameter_name type_spec )
			{
			match(input,PARAMETER,FOLLOW_PARAMETER_in_type_elements_parameter6075); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_parameter_name_in_type_elements_parameter6077);
			parameter_name();
			state._fsp--;

			pushFollow(FOLLOW_type_spec_in_type_elements_parameter6079);
			type_spec();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 651:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "type_elements_parameter"


	public static class drop_sequence_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "drop_sequence"
	// PLSQLPrinter.g:660:1: drop_sequence : ^( DROP_SEQUENCE sequence_name ) -> template( \"not implemented: \";
	public final PLSQLPrinter.drop_sequence_return drop_sequence() throws RecognitionException {
		PLSQLPrinter.drop_sequence_return retval = new PLSQLPrinter.drop_sequence_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:661:5: ( ^( DROP_SEQUENCE sequence_name ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:661:9: ^( DROP_SEQUENCE sequence_name )
			{
			match(input,DROP_SEQUENCE,FOLLOW_DROP_SEQUENCE_in_drop_sequence6120); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_sequence_name_in_drop_sequence6122);
			sequence_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 662:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "drop_sequence"


	public static class alter_sequence_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alter_sequence"
	// PLSQLPrinter.g:665:1: alter_sequence : ^( ALTER_SEQUENCE sequence_name ( sequence_spec )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.alter_sequence_return alter_sequence() throws RecognitionException {
		PLSQLPrinter.alter_sequence_return retval = new PLSQLPrinter.alter_sequence_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:666:5: ( ^( ALTER_SEQUENCE sequence_name ( sequence_spec )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:666:10: ^( ALTER_SEQUENCE sequence_name ( sequence_spec )+ )
			{
			match(input,ALTER_SEQUENCE,FOLLOW_ALTER_SEQUENCE_in_alter_sequence6158); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_sequence_name_in_alter_sequence6160);
			sequence_name();
			state._fsp--;

			// PLSQLPrinter.g:666:41: ( sequence_spec )+
			int cnt157=0;
			loop157:
			while (true) {
				int alt157=2;
				int LA157_0 = input.LA(1);
				if ( (LA157_0==CACHE_VK||LA157_0==CYCLE_VK||LA157_0==INCREMENT_VK||LA157_0==MAXVALUE_VK||LA157_0==MINVALUE_VK||LA157_0==NOCACHE_VK||LA157_0==NOCYCLE_VK||(LA157_0 >= NOMAXVALUE_VK && LA157_0 <= NOMINVALUE_VK)||LA157_0==NOORDER_VK||(LA157_0 >= ORDER_VK && LA157_0 <= START_VK)) ) {
					alt157=1;
				}

				switch (alt157) {
				case 1 :
					// PLSQLPrinter.g:666:41: sequence_spec
					{
					pushFollow(FOLLOW_sequence_spec_in_alter_sequence6162);
					sequence_spec();
					state._fsp--;

					}
					break;

				default :
					if ( cnt157 >= 1 ) break loop157;
					EarlyExitException eee = new EarlyExitException(157, input);
					throw eee;
				}
				cnt157++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 667:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alter_sequence"


	public static class create_sequence_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "create_sequence"
	// PLSQLPrinter.g:670:1: create_sequence : ^( CREATE_SEQUENCE sequence_name ( sequence_spec )* ) -> template( \"not implemented: \";
	public final PLSQLPrinter.create_sequence_return create_sequence() throws RecognitionException {
		PLSQLPrinter.create_sequence_return retval = new PLSQLPrinter.create_sequence_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:671:5: ( ^( CREATE_SEQUENCE sequence_name ( sequence_spec )* ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:671:10: ^( CREATE_SEQUENCE sequence_name ( sequence_spec )* )
			{
			match(input,CREATE_SEQUENCE,FOLLOW_CREATE_SEQUENCE_in_create_sequence6199); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_sequence_name_in_create_sequence6201);
			sequence_name();
			state._fsp--;

			// PLSQLPrinter.g:671:42: ( sequence_spec )*
			loop158:
			while (true) {
				int alt158=2;
				int LA158_0 = input.LA(1);
				if ( (LA158_0==CACHE_VK||LA158_0==CYCLE_VK||LA158_0==INCREMENT_VK||LA158_0==MAXVALUE_VK||LA158_0==MINVALUE_VK||LA158_0==NOCACHE_VK||LA158_0==NOCYCLE_VK||(LA158_0 >= NOMAXVALUE_VK && LA158_0 <= NOMINVALUE_VK)||LA158_0==NOORDER_VK||(LA158_0 >= ORDER_VK && LA158_0 <= START_VK)) ) {
					alt158=1;
				}

				switch (alt158) {
				case 1 :
					// PLSQLPrinter.g:671:42: sequence_spec
					{
					pushFollow(FOLLOW_sequence_spec_in_create_sequence6203);
					sequence_spec();
					state._fsp--;

					}
					break;

				default :
					break loop158;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 672:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "create_sequence"


	public static class sequence_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "sequence_spec"
	// PLSQLPrinter.g:677:1: sequence_spec : ( ^( START_VK UNSIGNED_INTEGER ) -> template( \"not implemented: \"| ^( INCREMENT_VK UNSIGNED_INTEGER ) -> template( \"not implemented: \"| ^( MAXVALUE_VK UNSIGNED_INTEGER ) -> template( \"not implemented: \"| ^( MINVALUE_VK UNSIGNED_INTEGER ) -> template( \"not implemented: \"| ^( CACHE_VK UNSIGNED_INTEGER ) -> template( \"not implemented: \"| NOMAXVALUE_VK -> template( \"not implemented: \"| NOMINVALUE_VK -> template( \"not implemented: \"| CYCLE_VK -> template( \"not implemented: \"| NOCYCLE_VK -> template( \"not implemented: \"| NOCACHE_VK -> template( \"not implemented: \"| ORDER_VK -> template( \"not implemented: \"| NOORDER_VK -> template( \"not implemented: \");
	public final PLSQLPrinter.sequence_spec_return sequence_spec() throws RecognitionException {
		PLSQLPrinter.sequence_spec_return retval = new PLSQLPrinter.sequence_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:678:5: ( ^( START_VK UNSIGNED_INTEGER ) -> template( \"not implemented: \"| ^( INCREMENT_VK UNSIGNED_INTEGER ) -> template( \"not implemented: \"| ^( MAXVALUE_VK UNSIGNED_INTEGER ) -> template( \"not implemented: \"| ^( MINVALUE_VK UNSIGNED_INTEGER ) -> template( \"not implemented: \"| ^( CACHE_VK UNSIGNED_INTEGER ) -> template( \"not implemented: \"| NOMAXVALUE_VK -> template( \"not implemented: \"| NOMINVALUE_VK -> template( \"not implemented: \"| CYCLE_VK -> template( \"not implemented: \"| NOCYCLE_VK -> template( \"not implemented: \"| NOCACHE_VK -> template( \"not implemented: \"| ORDER_VK -> template( \"not implemented: \"| NOORDER_VK -> template( \"not implemented: \")
			int alt159=12;
			switch ( input.LA(1) ) {
			case START_VK:
				{
				alt159=1;
				}
				break;
			case INCREMENT_VK:
				{
				alt159=2;
				}
				break;
			case MAXVALUE_VK:
				{
				alt159=3;
				}
				break;
			case MINVALUE_VK:
				{
				alt159=4;
				}
				break;
			case CACHE_VK:
				{
				alt159=5;
				}
				break;
			case NOMAXVALUE_VK:
				{
				alt159=6;
				}
				break;
			case NOMINVALUE_VK:
				{
				alt159=7;
				}
				break;
			case CYCLE_VK:
				{
				alt159=8;
				}
				break;
			case NOCYCLE_VK:
				{
				alt159=9;
				}
				break;
			case NOCACHE_VK:
				{
				alt159=10;
				}
				break;
			case ORDER_VK:
				{
				alt159=11;
				}
				break;
			case NOORDER_VK:
				{
				alt159=12;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 159, 0, input);
				throw nvae;
			}
			switch (alt159) {
				case 1 :
					// PLSQLPrinter.g:678:10: ^( START_VK UNSIGNED_INTEGER )
					{
					match(input,START_VK,FOLLOW_START_VK_in_sequence_spec6242); 
					match(input, Token.DOWN, null); 
					match(input,UNSIGNED_INTEGER,FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6244); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 679:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:680:10: ^( INCREMENT_VK UNSIGNED_INTEGER )
					{
					match(input,INCREMENT_VK,FOLLOW_INCREMENT_VK_in_sequence_spec6271); 
					match(input, Token.DOWN, null); 
					match(input,UNSIGNED_INTEGER,FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6273); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 681:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:682:10: ^( MAXVALUE_VK UNSIGNED_INTEGER )
					{
					match(input,MAXVALUE_VK,FOLLOW_MAXVALUE_VK_in_sequence_spec6300); 
					match(input, Token.DOWN, null); 
					match(input,UNSIGNED_INTEGER,FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6302); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 683:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:684:10: ^( MINVALUE_VK UNSIGNED_INTEGER )
					{
					match(input,MINVALUE_VK,FOLLOW_MINVALUE_VK_in_sequence_spec6329); 
					match(input, Token.DOWN, null); 
					match(input,UNSIGNED_INTEGER,FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6331); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 685:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:686:10: ^( CACHE_VK UNSIGNED_INTEGER )
					{
					match(input,CACHE_VK,FOLLOW_CACHE_VK_in_sequence_spec6358); 
					match(input, Token.DOWN, null); 
					match(input,UNSIGNED_INTEGER,FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6360); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 687:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:688:10: NOMAXVALUE_VK
					{
					match(input,NOMAXVALUE_VK,FOLLOW_NOMAXVALUE_VK_in_sequence_spec6386); 
					// TEMPLATE REWRITE
					// 689:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:690:10: NOMINVALUE_VK
					{
					match(input,NOMINVALUE_VK,FOLLOW_NOMINVALUE_VK_in_sequence_spec6411); 
					// TEMPLATE REWRITE
					// 691:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:692:10: CYCLE_VK
					{
					match(input,CYCLE_VK,FOLLOW_CYCLE_VK_in_sequence_spec6436); 
					// TEMPLATE REWRITE
					// 693:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:694:10: NOCYCLE_VK
					{
					match(input,NOCYCLE_VK,FOLLOW_NOCYCLE_VK_in_sequence_spec6461); 
					// TEMPLATE REWRITE
					// 695:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:696:10: NOCACHE_VK
					{
					match(input,NOCACHE_VK,FOLLOW_NOCACHE_VK_in_sequence_spec6486); 
					// TEMPLATE REWRITE
					// 697:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:698:10: ORDER_VK
					{
					match(input,ORDER_VK,FOLLOW_ORDER_VK_in_sequence_spec6511); 
					// TEMPLATE REWRITE
					// 699:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:700:10: NOORDER_VK
					{
					match(input,NOORDER_VK,FOLLOW_NOORDER_VK_in_sequence_spec6536); 
					// TEMPLATE REWRITE
					// 701:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sequence_spec"


	public static class invoker_rights_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "invoker_rights_clause"
	// PLSQLPrinter.g:710:1: invoker_rights_clause : ^( AUTHID_VK ( CURRENT_USER_VK | DEFINER_VK ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.invoker_rights_clause_return invoker_rights_clause() throws RecognitionException {
		PLSQLPrinter.invoker_rights_clause_return retval = new PLSQLPrinter.invoker_rights_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:711:5: ( ^( AUTHID_VK ( CURRENT_USER_VK | DEFINER_VK ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:711:10: ^( AUTHID_VK ( CURRENT_USER_VK | DEFINER_VK ) )
			{
			match(input,AUTHID_VK,FOLLOW_AUTHID_VK_in_invoker_rights_clause6577); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:711:22: ( CURRENT_USER_VK | DEFINER_VK )
			int alt160=2;
			int LA160_0 = input.LA(1);
			if ( (LA160_0==CURRENT_USER_VK) ) {
				alt160=1;
			}
			else if ( (LA160_0==DEFINER_VK) ) {
				alt160=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 160, 0, input);
				throw nvae;
			}

			switch (alt160) {
				case 1 :
					// PLSQLPrinter.g:711:23: CURRENT_USER_VK
					{
					match(input,CURRENT_USER_VK,FOLLOW_CURRENT_USER_VK_in_invoker_rights_clause6580); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:711:39: DEFINER_VK
					{
					match(input,DEFINER_VK,FOLLOW_DEFINER_VK_in_invoker_rights_clause6582); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 712:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "invoker_rights_clause"


	public static class compiler_parameters_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "compiler_parameters_clause"
	// PLSQLPrinter.g:715:1: compiler_parameters_clause : ^( COMPILER_PARAMETER ^( ASSIGN id expression ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.compiler_parameters_clause_return compiler_parameters_clause() throws RecognitionException {
		PLSQLPrinter.compiler_parameters_clause_return retval = new PLSQLPrinter.compiler_parameters_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:716:5: ( ^( COMPILER_PARAMETER ^( ASSIGN id expression ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:716:10: ^( COMPILER_PARAMETER ^( ASSIGN id expression ) )
			{
			match(input,COMPILER_PARAMETER,FOLLOW_COMPILER_PARAMETER_in_compiler_parameters_clause6619); 
			match(input, Token.DOWN, null); 
			match(input,ASSIGN,FOLLOW_ASSIGN_in_compiler_parameters_clause6622); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_id_in_compiler_parameters_clause6624);
			id();
			state._fsp--;

			pushFollow(FOLLOW_expression_in_compiler_parameters_clause6626);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 717:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "compiler_parameters_clause"


	public static class call_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "call_spec"
	// PLSQLPrinter.g:720:1: call_spec : ^( LANGUAGE_VK ( java_spec | c_spec ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.call_spec_return call_spec() throws RecognitionException {
		PLSQLPrinter.call_spec_return retval = new PLSQLPrinter.call_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:721:5: ( ^( LANGUAGE_VK ( java_spec | c_spec ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:721:10: ^( LANGUAGE_VK ( java_spec | c_spec ) )
			{
			match(input,LANGUAGE_VK,FOLLOW_LANGUAGE_VK_in_call_spec6663); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:721:24: ( java_spec | c_spec )
			int alt161=2;
			int LA161_0 = input.LA(1);
			if ( (LA161_0==JAVA_VK) ) {
				alt161=1;
			}
			else if ( (LA161_0==C_VK) ) {
				alt161=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 161, 0, input);
				throw nvae;
			}

			switch (alt161) {
				case 1 :
					// PLSQLPrinter.g:721:26: java_spec
					{
					pushFollow(FOLLOW_java_spec_in_call_spec6667);
					java_spec();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:721:38: c_spec
					{
					pushFollow(FOLLOW_c_spec_in_call_spec6671);
					c_spec();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 722:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "call_spec"


	public static class java_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "java_spec"
	// PLSQLPrinter.g:727:1: java_spec : ^( JAVA_VK CHAR_STRING ) -> template( \"not implemented: \";
	public final PLSQLPrinter.java_spec_return java_spec() throws RecognitionException {
		PLSQLPrinter.java_spec_return retval = new PLSQLPrinter.java_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:728:5: ( ^( JAVA_VK CHAR_STRING ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:728:10: ^( JAVA_VK CHAR_STRING )
			{
			match(input,JAVA_VK,FOLLOW_JAVA_VK_in_java_spec6711); 
			match(input, Token.DOWN, null); 
			match(input,CHAR_STRING,FOLLOW_CHAR_STRING_in_java_spec6713); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 729:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "java_spec"


	public static class c_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "c_spec"
	// PLSQLPrinter.g:732:1: c_spec : ^( C_VK ( CHAR_STRING )? ( CONTEXT_VK )? ^( LIBRARY_VK id ) ( c_agent_in_clause )? ( c_parameters_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.c_spec_return c_spec() throws RecognitionException {
		PLSQLPrinter.c_spec_return retval = new PLSQLPrinter.c_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:733:5: ( ^( C_VK ( CHAR_STRING )? ( CONTEXT_VK )? ^( LIBRARY_VK id ) ( c_agent_in_clause )? ( c_parameters_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:733:10: ^( C_VK ( CHAR_STRING )? ( CONTEXT_VK )? ^( LIBRARY_VK id ) ( c_agent_in_clause )? ( c_parameters_clause )? )
			{
			match(input,C_VK,FOLLOW_C_VK_in_c_spec6749); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:733:17: ( CHAR_STRING )?
			int alt162=2;
			int LA162_0 = input.LA(1);
			if ( (LA162_0==CHAR_STRING) ) {
				alt162=1;
			}
			switch (alt162) {
				case 1 :
					// PLSQLPrinter.g:733:17: CHAR_STRING
					{
					match(input,CHAR_STRING,FOLLOW_CHAR_STRING_in_c_spec6751); 
					}
					break;

			}

			// PLSQLPrinter.g:733:30: ( CONTEXT_VK )?
			int alt163=2;
			int LA163_0 = input.LA(1);
			if ( (LA163_0==CONTEXT_VK) ) {
				alt163=1;
			}
			switch (alt163) {
				case 1 :
					// PLSQLPrinter.g:733:30: CONTEXT_VK
					{
					match(input,CONTEXT_VK,FOLLOW_CONTEXT_VK_in_c_spec6754); 
					}
					break;

			}

			match(input,LIBRARY_VK,FOLLOW_LIBRARY_VK_in_c_spec6758); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_id_in_c_spec6760);
			id();
			state._fsp--;

			match(input, Token.UP, null); 

			// PLSQLPrinter.g:733:59: ( c_agent_in_clause )?
			int alt164=2;
			int LA164_0 = input.LA(1);
			if ( (LA164_0==AGENT_VK) ) {
				alt164=1;
			}
			switch (alt164) {
				case 1 :
					// PLSQLPrinter.g:733:59: c_agent_in_clause
					{
					pushFollow(FOLLOW_c_agent_in_clause_in_c_spec6763);
					c_agent_in_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:733:78: ( c_parameters_clause )?
			int alt165=2;
			int LA165_0 = input.LA(1);
			if ( (LA165_0==PARAMETERS_VK) ) {
				alt165=1;
			}
			switch (alt165) {
				case 1 :
					// PLSQLPrinter.g:733:78: c_parameters_clause
					{
					pushFollow(FOLLOW_c_parameters_clause_in_c_spec6766);
					c_parameters_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 734:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "c_spec"


	public static class c_agent_in_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "c_agent_in_clause"
	// PLSQLPrinter.g:737:1: c_agent_in_clause : ^( AGENT_VK ( expression )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.c_agent_in_clause_return c_agent_in_clause() throws RecognitionException {
		PLSQLPrinter.c_agent_in_clause_return retval = new PLSQLPrinter.c_agent_in_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:738:5: ( ^( AGENT_VK ( expression )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:738:10: ^( AGENT_VK ( expression )+ )
			{
			match(input,AGENT_VK,FOLLOW_AGENT_VK_in_c_agent_in_clause6803); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:738:21: ( expression )+
			int cnt166=0;
			loop166:
			while (true) {
				int alt166=2;
				int LA166_0 = input.LA(1);
				if ( (LA166_0==EXPR||LA166_0==LOGIC_EXPR) ) {
					alt166=1;
				}

				switch (alt166) {
				case 1 :
					// PLSQLPrinter.g:738:21: expression
					{
					pushFollow(FOLLOW_expression_in_c_agent_in_clause6805);
					expression();
					state._fsp--;

					}
					break;

				default :
					if ( cnt166 >= 1 ) break loop166;
					EarlyExitException eee = new EarlyExitException(166, input);
					throw eee;
				}
				cnt166++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 739:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "c_agent_in_clause"


	public static class c_parameters_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "c_parameters_clause"
	// PLSQLPrinter.g:742:1: c_parameters_clause : ^( PARAMETERS_VK ( THREE_DOTS | ( expression )+ ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.c_parameters_clause_return c_parameters_clause() throws RecognitionException {
		PLSQLPrinter.c_parameters_clause_return retval = new PLSQLPrinter.c_parameters_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:743:5: ( ^( PARAMETERS_VK ( THREE_DOTS | ( expression )+ ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:743:10: ^( PARAMETERS_VK ( THREE_DOTS | ( expression )+ ) )
			{
			match(input,PARAMETERS_VK,FOLLOW_PARAMETERS_VK_in_c_parameters_clause6842); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:743:26: ( THREE_DOTS | ( expression )+ )
			int alt168=2;
			int LA168_0 = input.LA(1);
			if ( (LA168_0==THREE_DOTS) ) {
				alt168=1;
			}
			else if ( (LA168_0==EXPR||LA168_0==LOGIC_EXPR) ) {
				alt168=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 168, 0, input);
				throw nvae;
			}

			switch (alt168) {
				case 1 :
					// PLSQLPrinter.g:743:27: THREE_DOTS
					{
					match(input,THREE_DOTS,FOLLOW_THREE_DOTS_in_c_parameters_clause6845); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:743:38: ( expression )+
					{
					// PLSQLPrinter.g:743:38: ( expression )+
					int cnt167=0;
					loop167:
					while (true) {
						int alt167=2;
						int LA167_0 = input.LA(1);
						if ( (LA167_0==EXPR||LA167_0==LOGIC_EXPR) ) {
							alt167=1;
						}

						switch (alt167) {
						case 1 :
							// PLSQLPrinter.g:743:38: expression
							{
							pushFollow(FOLLOW_expression_in_c_parameters_clause6847);
							expression();
							state._fsp--;

							}
							break;

						default :
							if ( cnt167 >= 1 ) break loop167;
							EarlyExitException eee = new EarlyExitException(167, input);
							throw eee;
						}
						cnt167++;
					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 744:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "c_parameters_clause"


	public static class parameter_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "parameter"
	// PLSQLPrinter.g:749:1: parameter : ^( PARAMETER parameter_name ( SQL92_RESERVED_IN | OUT_VK | INOUT_VK )* ( type_spec )? ( default_value_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.parameter_return parameter() throws RecognitionException {
		PLSQLPrinter.parameter_return retval = new PLSQLPrinter.parameter_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:750:5: ( ^( PARAMETER parameter_name ( SQL92_RESERVED_IN | OUT_VK | INOUT_VK )* ( type_spec )? ( default_value_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:750:10: ^( PARAMETER parameter_name ( SQL92_RESERVED_IN | OUT_VK | INOUT_VK )* ( type_spec )? ( default_value_part )? )
			{
			match(input,PARAMETER,FOLLOW_PARAMETER_in_parameter6887); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_parameter_name_in_parameter6889);
			parameter_name();
			state._fsp--;

			// PLSQLPrinter.g:750:37: ( SQL92_RESERVED_IN | OUT_VK | INOUT_VK )*
			loop169:
			while (true) {
				int alt169=4;
				switch ( input.LA(1) ) {
				case SQL92_RESERVED_IN:
					{
					alt169=1;
					}
					break;
				case OUT_VK:
					{
					alt169=2;
					}
					break;
				case INOUT_VK:
					{
					alt169=3;
					}
					break;
				}
				switch (alt169) {
				case 1 :
					// PLSQLPrinter.g:750:38: SQL92_RESERVED_IN
					{
					match(input,SQL92_RESERVED_IN,FOLLOW_SQL92_RESERVED_IN_in_parameter6892); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:750:56: OUT_VK
					{
					match(input,OUT_VK,FOLLOW_OUT_VK_in_parameter6894); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:750:63: INOUT_VK
					{
					match(input,INOUT_VK,FOLLOW_INOUT_VK_in_parameter6896); 
					}
					break;

				default :
					break loop169;
				}
			}

			// PLSQLPrinter.g:750:74: ( type_spec )?
			int alt170=2;
			int LA170_0 = input.LA(1);
			if ( (LA170_0==CUSTOM_TYPE||LA170_0==INTERVAL_DATATYPE||LA170_0==NATIVE_DATATYPE) ) {
				alt170=1;
			}
			switch (alt170) {
				case 1 :
					// PLSQLPrinter.g:750:74: type_spec
					{
					pushFollow(FOLLOW_type_spec_in_parameter6900);
					type_spec();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:750:85: ( default_value_part )?
			int alt171=2;
			int LA171_0 = input.LA(1);
			if ( (LA171_0==DEFAULT_VALUE) ) {
				alt171=1;
			}
			switch (alt171) {
				case 1 :
					// PLSQLPrinter.g:750:85: default_value_part
					{
					pushFollow(FOLLOW_default_value_part_in_parameter6903);
					default_value_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 751:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "parameter"


	public static class default_value_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "default_value_part"
	// PLSQLPrinter.g:754:1: default_value_part : ^( DEFAULT_VALUE expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.default_value_part_return default_value_part() throws RecognitionException {
		PLSQLPrinter.default_value_part_return retval = new PLSQLPrinter.default_value_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:755:5: ( ^( DEFAULT_VALUE expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:755:10: ^( DEFAULT_VALUE expression )
			{
			match(input,DEFAULT_VALUE,FOLLOW_DEFAULT_VALUE_in_default_value_part6940); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_default_value_part6942);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 756:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "default_value_part"


	public static class declare_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "declare_spec"
	// PLSQLPrinter.g:765:1: declare_spec : ( variable_declaration -> template( \"not implemented: \"| subtype_declaration -> template( \"not implemented: \"| cursor_declaration -> template( \"not implemented: \"| exception_declaration -> template( \"not implemented: \"| pragma_declaration -> template( \"not implemented: \"| record_declaration -> template( \"not implemented: \"| table_declaration -> template( \"not implemented: \"| create_procedure_body -> template( \"not implemented: \"| create_function_body -> template( \"not implemented: \");
	public final PLSQLPrinter.declare_spec_return declare_spec() throws RecognitionException {
		PLSQLPrinter.declare_spec_return retval = new PLSQLPrinter.declare_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:766:5: ( variable_declaration -> template( \"not implemented: \"| subtype_declaration -> template( \"not implemented: \"| cursor_declaration -> template( \"not implemented: \"| exception_declaration -> template( \"not implemented: \"| pragma_declaration -> template( \"not implemented: \"| record_declaration -> template( \"not implemented: \"| table_declaration -> template( \"not implemented: \"| create_procedure_body -> template( \"not implemented: \"| create_function_body -> template( \"not implemented: \")
			int alt172=9;
			switch ( input.LA(1) ) {
			case VARIABLE_DECLARE:
				{
				alt172=1;
				}
				break;
			case SUBTYPE_DECLARE:
				{
				alt172=2;
				}
				break;
			case CURSOR_DECLARE:
				{
				alt172=3;
				}
				break;
			case EXCEPTION_DECLARE:
				{
				alt172=4;
				}
				break;
			case PRAGMA_DECLARE:
				{
				alt172=5;
				}
				break;
			case RECORD_TYPE_DECLARE:
			case RECORD_VAR_DECLARE:
				{
				alt172=6;
				}
				break;
			case TABLE_TYPE_DECLARE:
			case TABLE_VAR_DECLARE:
				{
				alt172=7;
				}
				break;
			case CREATE_PROCEDURE:
				{
				alt172=8;
				}
				break;
			case CREATE_FUNCTION:
				{
				alt172=9;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 172, 0, input);
				throw nvae;
			}
			switch (alt172) {
				case 1 :
					// PLSQLPrinter.g:766:10: variable_declaration
					{
					pushFollow(FOLLOW_variable_declaration_in_declare_spec6983);
					variable_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 767:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:768:11: subtype_declaration
					{
					pushFollow(FOLLOW_subtype_declaration_in_declare_spec7009);
					subtype_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 769:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:770:11: cursor_declaration
					{
					pushFollow(FOLLOW_cursor_declaration_in_declare_spec7035);
					cursor_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 771:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:772:11: exception_declaration
					{
					pushFollow(FOLLOW_exception_declaration_in_declare_spec7061);
					exception_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 773:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:774:11: pragma_declaration
					{
					pushFollow(FOLLOW_pragma_declaration_in_declare_spec7087);
					pragma_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 775:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:776:11: record_declaration
					{
					pushFollow(FOLLOW_record_declaration_in_declare_spec7113);
					record_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 777:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:778:11: table_declaration
					{
					pushFollow(FOLLOW_table_declaration_in_declare_spec7139);
					table_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 779:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:780:11: create_procedure_body
					{
					pushFollow(FOLLOW_create_procedure_body_in_declare_spec7165);
					create_procedure_body();
					state._fsp--;

					// TEMPLATE REWRITE
					// 781:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:782:11: create_function_body
					{
					pushFollow(FOLLOW_create_function_body_in_declare_spec7191);
					create_function_body();
					state._fsp--;

					// TEMPLATE REWRITE
					// 783:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "declare_spec"


	public static class variable_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "variable_declaration"
	// PLSQLPrinter.g:787:1: variable_declaration : ^( VARIABLE_DECLARE variable_name type_spec ( CONSTANT_VK )? ( SQL92_RESERVED_NULL )? ( default_value_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.variable_declaration_return variable_declaration() throws RecognitionException {
		PLSQLPrinter.variable_declaration_return retval = new PLSQLPrinter.variable_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:788:5: ( ^( VARIABLE_DECLARE variable_name type_spec ( CONSTANT_VK )? ( SQL92_RESERVED_NULL )? ( default_value_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:788:10: ^( VARIABLE_DECLARE variable_name type_spec ( CONSTANT_VK )? ( SQL92_RESERVED_NULL )? ( default_value_part )? )
			{
			match(input,VARIABLE_DECLARE,FOLLOW_VARIABLE_DECLARE_in_variable_declaration7227); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_variable_name_in_variable_declaration7229);
			variable_name();
			state._fsp--;

			pushFollow(FOLLOW_type_spec_in_variable_declaration7231);
			type_spec();
			state._fsp--;

			// PLSQLPrinter.g:788:53: ( CONSTANT_VK )?
			int alt173=2;
			int LA173_0 = input.LA(1);
			if ( (LA173_0==CONSTANT_VK) ) {
				alt173=1;
			}
			switch (alt173) {
				case 1 :
					// PLSQLPrinter.g:788:53: CONSTANT_VK
					{
					match(input,CONSTANT_VK,FOLLOW_CONSTANT_VK_in_variable_declaration7233); 
					}
					break;

			}

			// PLSQLPrinter.g:788:66: ( SQL92_RESERVED_NULL )?
			int alt174=2;
			int LA174_0 = input.LA(1);
			if ( (LA174_0==SQL92_RESERVED_NULL) ) {
				alt174=1;
			}
			switch (alt174) {
				case 1 :
					// PLSQLPrinter.g:788:66: SQL92_RESERVED_NULL
					{
					match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_variable_declaration7236); 
					}
					break;

			}

			// PLSQLPrinter.g:788:87: ( default_value_part )?
			int alt175=2;
			int LA175_0 = input.LA(1);
			if ( (LA175_0==DEFAULT_VALUE) ) {
				alt175=1;
			}
			switch (alt175) {
				case 1 :
					// PLSQLPrinter.g:788:87: default_value_part
					{
					pushFollow(FOLLOW_default_value_part_in_variable_declaration7239);
					default_value_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 789:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "variable_declaration"


	public static class subtype_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subtype_declaration"
	// PLSQLPrinter.g:792:1: subtype_declaration : ^( SUBTYPE_DECLARE type_name type_spec ( SQL92_RESERVED_NULL )? ( subtype_range )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.subtype_declaration_return subtype_declaration() throws RecognitionException {
		PLSQLPrinter.subtype_declaration_return retval = new PLSQLPrinter.subtype_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:793:7: ( ^( SUBTYPE_DECLARE type_name type_spec ( SQL92_RESERVED_NULL )? ( subtype_range )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:793:12: ^( SUBTYPE_DECLARE type_name type_spec ( SQL92_RESERVED_NULL )? ( subtype_range )? )
			{
			match(input,SUBTYPE_DECLARE,FOLLOW_SUBTYPE_DECLARE_in_subtype_declaration7282); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_name_in_subtype_declaration7284);
			type_name();
			state._fsp--;

			pushFollow(FOLLOW_type_spec_in_subtype_declaration7286);
			type_spec();
			state._fsp--;

			// PLSQLPrinter.g:793:50: ( SQL92_RESERVED_NULL )?
			int alt176=2;
			int LA176_0 = input.LA(1);
			if ( (LA176_0==SQL92_RESERVED_NULL) ) {
				alt176=1;
			}
			switch (alt176) {
				case 1 :
					// PLSQLPrinter.g:793:50: SQL92_RESERVED_NULL
					{
					match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_subtype_declaration7288); 
					}
					break;

			}

			// PLSQLPrinter.g:793:71: ( subtype_range )?
			int alt177=2;
			int LA177_0 = input.LA(1);
			if ( (LA177_0==RANGE_VK) ) {
				alt177=1;
			}
			switch (alt177) {
				case 1 :
					// PLSQLPrinter.g:793:71: subtype_range
					{
					pushFollow(FOLLOW_subtype_range_in_subtype_declaration7291);
					subtype_range();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 794:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subtype_declaration"


	public static class subtype_range_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subtype_range"
	// PLSQLPrinter.g:797:1: subtype_range : ^( RANGE_VK ( expression )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.subtype_range_return subtype_range() throws RecognitionException {
		PLSQLPrinter.subtype_range_return retval = new PLSQLPrinter.subtype_range_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:798:5: ( ^( RANGE_VK ( expression )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:798:10: ^( RANGE_VK ( expression )+ )
			{
			match(input,RANGE_VK,FOLLOW_RANGE_VK_in_subtype_range7330); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:798:21: ( expression )+
			int cnt178=0;
			loop178:
			while (true) {
				int alt178=2;
				int LA178_0 = input.LA(1);
				if ( (LA178_0==EXPR||LA178_0==LOGIC_EXPR) ) {
					alt178=1;
				}

				switch (alt178) {
				case 1 :
					// PLSQLPrinter.g:798:21: expression
					{
					pushFollow(FOLLOW_expression_in_subtype_range7332);
					expression();
					state._fsp--;

					}
					break;

				default :
					if ( cnt178 >= 1 ) break loop178;
					EarlyExitException eee = new EarlyExitException(178, input);
					throw eee;
				}
				cnt178++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 799:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subtype_range"


	public static class cursor_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "cursor_declaration"
	// PLSQLPrinter.g:803:1: cursor_declaration : ^( CURSOR_DECLARE cursor_name ( type_spec )? ( select_statement )? ^( PARAMETERS ( parameter_spec )* ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.cursor_declaration_return cursor_declaration() throws RecognitionException {
		PLSQLPrinter.cursor_declaration_return retval = new PLSQLPrinter.cursor_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:804:5: ( ^( CURSOR_DECLARE cursor_name ( type_spec )? ( select_statement )? ^( PARAMETERS ( parameter_spec )* ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:804:10: ^( CURSOR_DECLARE cursor_name ( type_spec )? ( select_statement )? ^( PARAMETERS ( parameter_spec )* ) )
			{
			match(input,CURSOR_DECLARE,FOLLOW_CURSOR_DECLARE_in_cursor_declaration7370); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_cursor_name_in_cursor_declaration7372);
			cursor_name();
			state._fsp--;

			// PLSQLPrinter.g:804:39: ( type_spec )?
			int alt179=2;
			int LA179_0 = input.LA(1);
			if ( (LA179_0==CUSTOM_TYPE||LA179_0==INTERVAL_DATATYPE||LA179_0==NATIVE_DATATYPE) ) {
				alt179=1;
			}
			switch (alt179) {
				case 1 :
					// PLSQLPrinter.g:804:39: type_spec
					{
					pushFollow(FOLLOW_type_spec_in_cursor_declaration7374);
					type_spec();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:804:50: ( select_statement )?
			int alt180=2;
			int LA180_0 = input.LA(1);
			if ( (LA180_0==SELECT_STATEMENT) ) {
				alt180=1;
			}
			switch (alt180) {
				case 1 :
					// PLSQLPrinter.g:804:50: select_statement
					{
					pushFollow(FOLLOW_select_statement_in_cursor_declaration7377);
					select_statement();
					state._fsp--;

					}
					break;

			}

			match(input,PARAMETERS,FOLLOW_PARAMETERS_in_cursor_declaration7381); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:804:81: ( parameter_spec )*
				loop181:
				while (true) {
					int alt181=2;
					int LA181_0 = input.LA(1);
					if ( (LA181_0==PARAMETER) ) {
						alt181=1;
					}

					switch (alt181) {
					case 1 :
						// PLSQLPrinter.g:804:81: parameter_spec
						{
						pushFollow(FOLLOW_parameter_spec_in_cursor_declaration7383);
						parameter_spec();
						state._fsp--;

						}
						break;

					default :
						break loop181;
					}
				}

				match(input, Token.UP, null); 
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 805:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cursor_declaration"


	public static class parameter_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "parameter_spec"
	// PLSQLPrinter.g:808:1: parameter_spec : ^( PARAMETER parameter_name ( type_spec )? ( default_value_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.parameter_spec_return parameter_spec() throws RecognitionException {
		PLSQLPrinter.parameter_spec_return retval = new PLSQLPrinter.parameter_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:809:5: ( ^( PARAMETER parameter_name ( type_spec )? ( default_value_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:809:10: ^( PARAMETER parameter_name ( type_spec )? ( default_value_part )? )
			{
			match(input,PARAMETER,FOLLOW_PARAMETER_in_parameter_spec7422); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_parameter_name_in_parameter_spec7424);
			parameter_name();
			state._fsp--;

			// PLSQLPrinter.g:809:37: ( type_spec )?
			int alt182=2;
			int LA182_0 = input.LA(1);
			if ( (LA182_0==CUSTOM_TYPE||LA182_0==INTERVAL_DATATYPE||LA182_0==NATIVE_DATATYPE) ) {
				alt182=1;
			}
			switch (alt182) {
				case 1 :
					// PLSQLPrinter.g:809:37: type_spec
					{
					pushFollow(FOLLOW_type_spec_in_parameter_spec7426);
					type_spec();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:809:48: ( default_value_part )?
			int alt183=2;
			int LA183_0 = input.LA(1);
			if ( (LA183_0==DEFAULT_VALUE) ) {
				alt183=1;
			}
			switch (alt183) {
				case 1 :
					// PLSQLPrinter.g:809:48: default_value_part
					{
					pushFollow(FOLLOW_default_value_part_in_parameter_spec7429);
					default_value_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 810:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "parameter_spec"


	public static class exception_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "exception_declaration"
	// PLSQLPrinter.g:813:1: exception_declaration : ^( EXCEPTION_DECLARE exception_name ) -> template( \"not implemented: \";
	public final PLSQLPrinter.exception_declaration_return exception_declaration() throws RecognitionException {
		PLSQLPrinter.exception_declaration_return retval = new PLSQLPrinter.exception_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:814:5: ( ^( EXCEPTION_DECLARE exception_name ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:814:10: ^( EXCEPTION_DECLARE exception_name )
			{
			match(input,EXCEPTION_DECLARE,FOLLOW_EXCEPTION_DECLARE_in_exception_declaration7467); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_exception_name_in_exception_declaration7469);
			exception_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 815:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exception_declaration"


	public static class pragma_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pragma_declaration"
	// PLSQLPrinter.g:818:1: pragma_declaration : ^( PRAGMA_DECLARE ( SERIALLY_REUSABLE_VK | AUTONOMOUS_TRANSACTION_VK | ^( EXCEPTION_INIT_VK exception_name constant ) | ^( INLINE_VK id expression ) | ^( RESTRICT_REFERENCES_VK ( SQL92_RESERVED_DEFAULT )? ( id )* ) ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.pragma_declaration_return pragma_declaration() throws RecognitionException {
		PLSQLPrinter.pragma_declaration_return retval = new PLSQLPrinter.pragma_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:819:5: ( ^( PRAGMA_DECLARE ( SERIALLY_REUSABLE_VK | AUTONOMOUS_TRANSACTION_VK | ^( EXCEPTION_INIT_VK exception_name constant ) | ^( INLINE_VK id expression ) | ^( RESTRICT_REFERENCES_VK ( SQL92_RESERVED_DEFAULT )? ( id )* ) ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:819:10: ^( PRAGMA_DECLARE ( SERIALLY_REUSABLE_VK | AUTONOMOUS_TRANSACTION_VK | ^( EXCEPTION_INIT_VK exception_name constant ) | ^( INLINE_VK id expression ) | ^( RESTRICT_REFERENCES_VK ( SQL92_RESERVED_DEFAULT )? ( id )* ) ) )
			{
			match(input,PRAGMA_DECLARE,FOLLOW_PRAGMA_DECLARE_in_pragma_declaration7518); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:820:13: ( SERIALLY_REUSABLE_VK | AUTONOMOUS_TRANSACTION_VK | ^( EXCEPTION_INIT_VK exception_name constant ) | ^( INLINE_VK id expression ) | ^( RESTRICT_REFERENCES_VK ( SQL92_RESERVED_DEFAULT )? ( id )* ) )
			int alt186=5;
			switch ( input.LA(1) ) {
			case SERIALLY_REUSABLE_VK:
				{
				alt186=1;
				}
				break;
			case AUTONOMOUS_TRANSACTION_VK:
				{
				alt186=2;
				}
				break;
			case EXCEPTION_INIT_VK:
				{
				alt186=3;
				}
				break;
			case INLINE_VK:
				{
				alt186=4;
				}
				break;
			case RESTRICT_REFERENCES_VK:
				{
				alt186=5;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 186, 0, input);
				throw nvae;
			}
			switch (alt186) {
				case 1 :
					// PLSQLPrinter.g:820:18: SERIALLY_REUSABLE_VK
					{
					match(input,SERIALLY_REUSABLE_VK,FOLLOW_SERIALLY_REUSABLE_VK_in_pragma_declaration7538); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:821:19: AUTONOMOUS_TRANSACTION_VK
					{
					match(input,AUTONOMOUS_TRANSACTION_VK,FOLLOW_AUTONOMOUS_TRANSACTION_VK_in_pragma_declaration7558); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:822:18: ^( EXCEPTION_INIT_VK exception_name constant )
					{
					match(input,EXCEPTION_INIT_VK,FOLLOW_EXCEPTION_INIT_VK_in_pragma_declaration7578); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_exception_name_in_pragma_declaration7580);
					exception_name();
					state._fsp--;

					pushFollow(FOLLOW_constant_in_pragma_declaration7582);
					constant();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 4 :
					// PLSQLPrinter.g:823:18: ^( INLINE_VK id expression )
					{
					match(input,INLINE_VK,FOLLOW_INLINE_VK_in_pragma_declaration7603); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_id_in_pragma_declaration7605);
					id();
					state._fsp--;

					pushFollow(FOLLOW_expression_in_pragma_declaration7607);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 5 :
					// PLSQLPrinter.g:824:18: ^( RESTRICT_REFERENCES_VK ( SQL92_RESERVED_DEFAULT )? ( id )* )
					{
					match(input,RESTRICT_REFERENCES_VK,FOLLOW_RESTRICT_REFERENCES_VK_in_pragma_declaration7628); 
					if ( input.LA(1)==Token.DOWN ) {
						match(input, Token.DOWN, null); 
						// PLSQLPrinter.g:824:43: ( SQL92_RESERVED_DEFAULT )?
						int alt184=2;
						int LA184_0 = input.LA(1);
						if ( (LA184_0==SQL92_RESERVED_DEFAULT) ) {
							alt184=1;
						}
						switch (alt184) {
							case 1 :
								// PLSQLPrinter.g:824:43: SQL92_RESERVED_DEFAULT
								{
								match(input,SQL92_RESERVED_DEFAULT,FOLLOW_SQL92_RESERVED_DEFAULT_in_pragma_declaration7630); 
								}
								break;

						}

						// PLSQLPrinter.g:824:67: ( id )*
						loop185:
						while (true) {
							int alt185=2;
							int LA185_0 = input.LA(1);
							if ( (LA185_0==CHAR_SET_NAME||LA185_0==ID) ) {
								alt185=1;
							}

							switch (alt185) {
							case 1 :
								// PLSQLPrinter.g:824:67: id
								{
								pushFollow(FOLLOW_id_in_pragma_declaration7633);
								id();
								state._fsp--;

								}
								break;

							default :
								break loop185;
							}
						}

						match(input, Token.UP, null); 
					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 827:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pragma_declaration"


	public static class record_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "record_declaration"
	// PLSQLPrinter.g:830:1: record_declaration : ( record_type_dec -> template( \"not implemented: \"| record_var_dec -> template( \"not implemented: \");
	public final PLSQLPrinter.record_declaration_return record_declaration() throws RecognitionException {
		PLSQLPrinter.record_declaration_return retval = new PLSQLPrinter.record_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:831:5: ( record_type_dec -> template( \"not implemented: \"| record_var_dec -> template( \"not implemented: \")
			int alt187=2;
			int LA187_0 = input.LA(1);
			if ( (LA187_0==RECORD_TYPE_DECLARE) ) {
				alt187=1;
			}
			else if ( (LA187_0==RECORD_VAR_DECLARE) ) {
				alt187=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 187, 0, input);
				throw nvae;
			}

			switch (alt187) {
				case 1 :
					// PLSQLPrinter.g:831:10: record_type_dec
					{
					pushFollow(FOLLOW_record_type_dec_in_record_declaration7693);
					record_type_dec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 832:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:833:10: record_var_dec
					{
					pushFollow(FOLLOW_record_var_dec_in_record_declaration7718);
					record_var_dec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 834:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "record_declaration"


	public static class record_type_dec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "record_type_dec"
	// PLSQLPrinter.g:840:1: record_type_dec : ^( RECORD_TYPE_DECLARE type_name ( REF_VK )? ( type_spec )? ^( FIELDS ( field_spec )* ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.record_type_dec_return record_type_dec() throws RecognitionException {
		PLSQLPrinter.record_type_dec_return retval = new PLSQLPrinter.record_type_dec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:841:5: ( ^( RECORD_TYPE_DECLARE type_name ( REF_VK )? ( type_spec )? ^( FIELDS ( field_spec )* ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:841:10: ^( RECORD_TYPE_DECLARE type_name ( REF_VK )? ( type_spec )? ^( FIELDS ( field_spec )* ) )
			{
			match(input,RECORD_TYPE_DECLARE,FOLLOW_RECORD_TYPE_DECLARE_in_record_type_dec7756); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_name_in_record_type_dec7758);
			type_name();
			state._fsp--;

			// PLSQLPrinter.g:841:42: ( REF_VK )?
			int alt188=2;
			int LA188_0 = input.LA(1);
			if ( (LA188_0==REF_VK) ) {
				alt188=1;
			}
			switch (alt188) {
				case 1 :
					// PLSQLPrinter.g:841:42: REF_VK
					{
					match(input,REF_VK,FOLLOW_REF_VK_in_record_type_dec7760); 
					}
					break;

			}

			// PLSQLPrinter.g:841:50: ( type_spec )?
			int alt189=2;
			int LA189_0 = input.LA(1);
			if ( (LA189_0==CUSTOM_TYPE||LA189_0==INTERVAL_DATATYPE||LA189_0==NATIVE_DATATYPE) ) {
				alt189=1;
			}
			switch (alt189) {
				case 1 :
					// PLSQLPrinter.g:841:50: type_spec
					{
					pushFollow(FOLLOW_type_spec_in_record_type_dec7763);
					type_spec();
					state._fsp--;

					}
					break;

			}

			match(input,FIELDS,FOLLOW_FIELDS_in_record_type_dec7767); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:841:70: ( field_spec )*
				loop190:
				while (true) {
					int alt190=2;
					int LA190_0 = input.LA(1);
					if ( (LA190_0==FIELD_SPEC) ) {
						alt190=1;
					}

					switch (alt190) {
					case 1 :
						// PLSQLPrinter.g:841:70: field_spec
						{
						pushFollow(FOLLOW_field_spec_in_record_type_dec7769);
						field_spec();
						state._fsp--;

						}
						break;

					default :
						break loop190;
					}
				}

				match(input, Token.UP, null); 
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 842:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "record_type_dec"


	public static class field_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "field_spec"
	// PLSQLPrinter.g:845:1: field_spec : ^( FIELD_SPEC column_name ( type_spec )? ( SQL92_RESERVED_NULL )? ( default_value_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.field_spec_return field_spec() throws RecognitionException {
		PLSQLPrinter.field_spec_return retval = new PLSQLPrinter.field_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:846:5: ( ^( FIELD_SPEC column_name ( type_spec )? ( SQL92_RESERVED_NULL )? ( default_value_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:846:10: ^( FIELD_SPEC column_name ( type_spec )? ( SQL92_RESERVED_NULL )? ( default_value_part )? )
			{
			match(input,FIELD_SPEC,FOLLOW_FIELD_SPEC_in_field_spec7807); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_column_name_in_field_spec7809);
			column_name();
			state._fsp--;

			// PLSQLPrinter.g:846:35: ( type_spec )?
			int alt191=2;
			int LA191_0 = input.LA(1);
			if ( (LA191_0==CUSTOM_TYPE||LA191_0==INTERVAL_DATATYPE||LA191_0==NATIVE_DATATYPE) ) {
				alt191=1;
			}
			switch (alt191) {
				case 1 :
					// PLSQLPrinter.g:846:35: type_spec
					{
					pushFollow(FOLLOW_type_spec_in_field_spec7811);
					type_spec();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:846:46: ( SQL92_RESERVED_NULL )?
			int alt192=2;
			int LA192_0 = input.LA(1);
			if ( (LA192_0==SQL92_RESERVED_NULL) ) {
				alt192=1;
			}
			switch (alt192) {
				case 1 :
					// PLSQLPrinter.g:846:46: SQL92_RESERVED_NULL
					{
					match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_field_spec7814); 
					}
					break;

			}

			// PLSQLPrinter.g:846:67: ( default_value_part )?
			int alt193=2;
			int LA193_0 = input.LA(1);
			if ( (LA193_0==DEFAULT_VALUE) ) {
				alt193=1;
			}
			switch (alt193) {
				case 1 :
					// PLSQLPrinter.g:846:67: default_value_part
					{
					pushFollow(FOLLOW_default_value_part_in_field_spec7817);
					default_value_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 847:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "field_spec"


	public static class record_var_dec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "record_var_dec"
	// PLSQLPrinter.g:850:1: record_var_dec : ^( RECORD_VAR_DECLARE record_name type_name ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.record_var_dec_return record_var_dec() throws RecognitionException {
		PLSQLPrinter.record_var_dec_return retval = new PLSQLPrinter.record_var_dec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:851:5: ( ^( RECORD_VAR_DECLARE record_name type_name ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:851:10: ^( RECORD_VAR_DECLARE record_name type_name ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK ) )
			{
			match(input,RECORD_VAR_DECLARE,FOLLOW_RECORD_VAR_DECLARE_in_record_var_dec7854); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_record_name_in_record_var_dec7856);
			record_name();
			state._fsp--;

			pushFollow(FOLLOW_type_name_in_record_var_dec7858);
			type_name();
			state._fsp--;

			// PLSQLPrinter.g:851:53: ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK )
			int alt194=2;
			int LA194_0 = input.LA(1);
			if ( (LA194_0==PERCENT_ROWTYPE_VK) ) {
				alt194=1;
			}
			else if ( (LA194_0==PERCENT_TYPE_VK) ) {
				alt194=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 194, 0, input);
				throw nvae;
			}

			switch (alt194) {
				case 1 :
					// PLSQLPrinter.g:851:54: PERCENT_ROWTYPE_VK
					{
					match(input,PERCENT_ROWTYPE_VK,FOLLOW_PERCENT_ROWTYPE_VK_in_record_var_dec7861); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:851:73: PERCENT_TYPE_VK
					{
					match(input,PERCENT_TYPE_VK,FOLLOW_PERCENT_TYPE_VK_in_record_var_dec7863); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 852:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "record_var_dec"


	public static class table_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "table_declaration"
	// PLSQLPrinter.g:857:1: table_declaration : ( table_type_dec -> template( \"not implemented: \"| table_var_dec -> template( \"not implemented: \");
	public final PLSQLPrinter.table_declaration_return table_declaration() throws RecognitionException {
		PLSQLPrinter.table_declaration_return retval = new PLSQLPrinter.table_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:858:5: ( table_type_dec -> template( \"not implemented: \"| table_var_dec -> template( \"not implemented: \")
			int alt195=2;
			int LA195_0 = input.LA(1);
			if ( (LA195_0==TABLE_TYPE_DECLARE) ) {
				alt195=1;
			}
			else if ( (LA195_0==TABLE_VAR_DECLARE) ) {
				alt195=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 195, 0, input);
				throw nvae;
			}

			switch (alt195) {
				case 1 :
					// PLSQLPrinter.g:858:10: table_type_dec
					{
					pushFollow(FOLLOW_table_type_dec_in_table_declaration7901);
					table_type_dec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 859:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:860:10: table_var_dec
					{
					pushFollow(FOLLOW_table_var_dec_in_table_declaration7926);
					table_var_dec();
					state._fsp--;

					// TEMPLATE REWRITE
					// 861:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_declaration"


	public static class table_type_dec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "table_type_dec"
	// PLSQLPrinter.g:864:1: table_type_dec : ^( TABLE_TYPE_DECLARE type_name ( varray_type_def | ( SQL92_RESERVED_NULL )? ^( SQL92_RESERVED_TABLE type_spec ( table_indexed_by_part )? ) ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.table_type_dec_return table_type_dec() throws RecognitionException {
		PLSQLPrinter.table_type_dec_return retval = new PLSQLPrinter.table_type_dec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:865:5: ( ^( TABLE_TYPE_DECLARE type_name ( varray_type_def | ( SQL92_RESERVED_NULL )? ^( SQL92_RESERVED_TABLE type_spec ( table_indexed_by_part )? ) ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:865:10: ^( TABLE_TYPE_DECLARE type_name ( varray_type_def | ( SQL92_RESERVED_NULL )? ^( SQL92_RESERVED_TABLE type_spec ( table_indexed_by_part )? ) ) )
			{
			match(input,TABLE_TYPE_DECLARE,FOLLOW_TABLE_TYPE_DECLARE_in_table_type_dec7961); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_name_in_table_type_dec7963);
			type_name();
			state._fsp--;

			// PLSQLPrinter.g:866:13: ( varray_type_def | ( SQL92_RESERVED_NULL )? ^( SQL92_RESERVED_TABLE type_spec ( table_indexed_by_part )? ) )
			int alt198=2;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_NULL:
				{
				int LA198_1 = input.LA(2);
				if ( (LA198_1==VARR_ARRAY_DEF) ) {
					alt198=1;
				}
				else if ( (LA198_1==SQL92_RESERVED_TABLE) ) {
					alt198=2;
				}

				else {
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 198, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case VARR_ARRAY_DEF:
				{
				alt198=1;
				}
				break;
			case SQL92_RESERVED_TABLE:
				{
				alt198=2;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 198, 0, input);
				throw nvae;
			}
			switch (alt198) {
				case 1 :
					// PLSQLPrinter.g:866:18: varray_type_def
					{
					pushFollow(FOLLOW_varray_type_def_in_table_type_dec7983);
					varray_type_def();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:867:18: ( SQL92_RESERVED_NULL )? ^( SQL92_RESERVED_TABLE type_spec ( table_indexed_by_part )? )
					{
					// PLSQLPrinter.g:867:18: ( SQL92_RESERVED_NULL )?
					int alt196=2;
					int LA196_0 = input.LA(1);
					if ( (LA196_0==SQL92_RESERVED_NULL) ) {
						alt196=1;
					}
					switch (alt196) {
						case 1 :
							// PLSQLPrinter.g:867:18: SQL92_RESERVED_NULL
							{
							match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_table_type_dec8002); 
							}
							break;

					}

					match(input,SQL92_RESERVED_TABLE,FOLLOW_SQL92_RESERVED_TABLE_in_table_type_dec8006); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_type_spec_in_table_type_dec8008);
					type_spec();
					state._fsp--;

					// PLSQLPrinter.g:867:72: ( table_indexed_by_part )?
					int alt197=2;
					int LA197_0 = input.LA(1);
					if ( (LA197_0==INDEXED_BY) ) {
						alt197=1;
					}
					switch (alt197) {
						case 1 :
							// PLSQLPrinter.g:867:72: table_indexed_by_part
							{
							pushFollow(FOLLOW_table_indexed_by_part_in_table_type_dec8010);
							table_indexed_by_part();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 870:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_type_dec"


	public static class table_indexed_by_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "table_indexed_by_part"
	// PLSQLPrinter.g:873:1: table_indexed_by_part : ^( INDEXED_BY type_spec ) -> template( \"not implemented: \";
	public final PLSQLPrinter.table_indexed_by_part_return table_indexed_by_part() throws RecognitionException {
		PLSQLPrinter.table_indexed_by_part_return retval = new PLSQLPrinter.table_indexed_by_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:874:5: ( ^( INDEXED_BY type_spec ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:874:10: ^( INDEXED_BY type_spec )
			{
			match(input,INDEXED_BY,FOLLOW_INDEXED_BY_in_table_indexed_by_part8071); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_type_spec_in_table_indexed_by_part8073);
			type_spec();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 875:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_indexed_by_part"


	public static class varray_type_def_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "varray_type_def"
	// PLSQLPrinter.g:878:1: varray_type_def : ( SQL92_RESERVED_NULL )? ^( VARR_ARRAY_DEF expression type_spec ) -> template( \"not implemented: \";
	public final PLSQLPrinter.varray_type_def_return varray_type_def() throws RecognitionException {
		PLSQLPrinter.varray_type_def_return retval = new PLSQLPrinter.varray_type_def_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:879:5: ( ( SQL92_RESERVED_NULL )? ^( VARR_ARRAY_DEF expression type_spec ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:879:10: ( SQL92_RESERVED_NULL )? ^( VARR_ARRAY_DEF expression type_spec )
			{
			// PLSQLPrinter.g:879:10: ( SQL92_RESERVED_NULL )?
			int alt199=2;
			int LA199_0 = input.LA(1);
			if ( (LA199_0==SQL92_RESERVED_NULL) ) {
				alt199=1;
			}
			switch (alt199) {
				case 1 :
					// PLSQLPrinter.g:879:10: SQL92_RESERVED_NULL
					{
					match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_varray_type_def8108); 
					}
					break;

			}

			match(input,VARR_ARRAY_DEF,FOLLOW_VARR_ARRAY_DEF_in_varray_type_def8112); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_varray_type_def8114);
			expression();
			state._fsp--;

			pushFollow(FOLLOW_type_spec_in_varray_type_def8116);
			type_spec();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 880:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "varray_type_def"


	public static class table_var_dec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "table_var_dec"
	// PLSQLPrinter.g:883:1: table_var_dec : ^( TABLE_VAR_DECLARE table_var_name type_spec ) -> template( \"not implemented: \";
	public final PLSQLPrinter.table_var_dec_return table_var_dec() throws RecognitionException {
		PLSQLPrinter.table_var_dec_return retval = new PLSQLPrinter.table_var_dec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:884:5: ( ^( TABLE_VAR_DECLARE table_var_name type_spec ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:884:10: ^( TABLE_VAR_DECLARE table_var_name type_spec )
			{
			match(input,TABLE_VAR_DECLARE,FOLLOW_TABLE_VAR_DECLARE_in_table_var_dec8152); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_table_var_name_in_table_var_dec8154);
			table_var_name();
			state._fsp--;

			pushFollow(FOLLOW_type_spec_in_table_var_dec8156);
			type_spec();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 885:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_var_dec"


	public static class seq_of_statements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "seq_of_statements"
	// PLSQLPrinter.g:892:1: seq_of_statements : ^( STATEMENTS ( statement )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.seq_of_statements_return seq_of_statements() throws RecognitionException {
		PLSQLPrinter.seq_of_statements_return retval = new PLSQLPrinter.seq_of_statements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:893:5: ( ^( STATEMENTS ( statement )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:893:11: ^( STATEMENTS ( statement )+ )
			{
			match(input,STATEMENTS,FOLLOW_STATEMENTS_in_seq_of_statements8197); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:893:24: ( statement )+
			int cnt200=0;
			loop200:
			while (true) {
				int alt200=2;
				int LA200_0 = input.LA(1);
				if ( (LA200_0==PLSQL_RESERVED_IF||LA200_0==PLSQL_RESERVED_LOCK||LA200_0==SQL92_RESERVED_DELETE||LA200_0==SQL92_RESERVED_FETCH||LA200_0==SQL92_RESERVED_GOTO||LA200_0==SQL92_RESERVED_INSERT||LA200_0==SQL92_RESERVED_NULL||LA200_0==SQL92_RESERVED_UPDATE||LA200_0==ASSIGN||LA200_0==BLOCK||LA200_0==BODY||LA200_0==CLOSE_VK||LA200_0==COMMIT_VK||LA200_0==CONTINUE_VK||(LA200_0 >= EXECUTE_VK && LA200_0 <= EXIT_VK)||LA200_0==FORALL_VK||LA200_0==FOR_LOOP||LA200_0==LABEL_DECLARE||LA200_0==LOOP_VK||LA200_0==MERGE_VK||LA200_0==OPEN_VK||LA200_0==PIPE_ROW||LA200_0==RAISE_VK||LA200_0==RETURN_VK||LA200_0==ROLLBACK_VK||LA200_0==ROUTINE_CALL||LA200_0==SAVEPOINT_VK||LA200_0==SEARCHED_CASE||LA200_0==SELECT_STATEMENT||LA200_0==SET_CONSTRAINT||LA200_0==SET_TRANSACTION||LA200_0==SIMPLE_CASE||LA200_0==WHILE_LOOP) ) {
					alt200=1;
				}

				switch (alt200) {
				case 1 :
					// PLSQLPrinter.g:893:24: statement
					{
					pushFollow(FOLLOW_statement_in_seq_of_statements8199);
					statement();
					state._fsp--;

					}
					break;

				default :
					if ( cnt200 >= 1 ) break loop200;
					EarlyExitException eee = new EarlyExitException(200, input);
					throw eee;
				}
				cnt200++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 894:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "seq_of_statements"


	public static class statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "statement"
	// PLSQLPrinter.g:897:1: statement : ( label_declaration -> template( \"not implemented: \"| assignment_statement -> template( \"not implemented: \"| continue_statement -> template( \"not implemented: \"| exit_statement -> template( \"not implemented: \"| goto_statement -> template( \"not implemented: \"| if_statement -> template( \"not implemented: \"| loop_statement -> template( \"not implemented: \"| forall_statement -> template( \"not implemented: \"| null_statement -> template( \"not implemented: \"| raise_statement -> template( \"not implemented: \"| return_statement -> template( \"not implemented: \"| pipe_row_statement -> template( \"not implemented: \"| case_statement -> template( \"not implemented: \"| sql_statement -> template( \"not implemented: \"| function_call -> template( \"not implemented: \"| body -> template( \"not implemented: \"| block -> template( \"not implemented: \");
	public final PLSQLPrinter.statement_return statement() throws RecognitionException {
		PLSQLPrinter.statement_return retval = new PLSQLPrinter.statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:898:5: ( label_declaration -> template( \"not implemented: \"| assignment_statement -> template( \"not implemented: \"| continue_statement -> template( \"not implemented: \"| exit_statement -> template( \"not implemented: \"| goto_statement -> template( \"not implemented: \"| if_statement -> template( \"not implemented: \"| loop_statement -> template( \"not implemented: \"| forall_statement -> template( \"not implemented: \"| null_statement -> template( \"not implemented: \"| raise_statement -> template( \"not implemented: \"| return_statement -> template( \"not implemented: \"| pipe_row_statement -> template( \"not implemented: \"| case_statement -> template( \"not implemented: \"| sql_statement -> template( \"not implemented: \"| function_call -> template( \"not implemented: \"| body -> template( \"not implemented: \"| block -> template( \"not implemented: \")
			int alt201=17;
			switch ( input.LA(1) ) {
			case LABEL_DECLARE:
				{
				alt201=1;
				}
				break;
			case ASSIGN:
				{
				alt201=2;
				}
				break;
			case CONTINUE_VK:
				{
				alt201=3;
				}
				break;
			case EXIT_VK:
				{
				alt201=4;
				}
				break;
			case SQL92_RESERVED_GOTO:
				{
				alt201=5;
				}
				break;
			case PLSQL_RESERVED_IF:
				{
				alt201=6;
				}
				break;
			case FOR_LOOP:
			case LOOP_VK:
			case WHILE_LOOP:
				{
				alt201=7;
				}
				break;
			case FORALL_VK:
				{
				alt201=8;
				}
				break;
			case SQL92_RESERVED_NULL:
				{
				alt201=9;
				}
				break;
			case RAISE_VK:
				{
				alt201=10;
				}
				break;
			case RETURN_VK:
				{
				alt201=11;
				}
				break;
			case PIPE_ROW:
				{
				alt201=12;
				}
				break;
			case SEARCHED_CASE:
			case SIMPLE_CASE:
				{
				alt201=13;
				}
				break;
			case PLSQL_RESERVED_LOCK:
			case SQL92_RESERVED_DELETE:
			case SQL92_RESERVED_FETCH:
			case SQL92_RESERVED_INSERT:
			case SQL92_RESERVED_UPDATE:
			case CLOSE_VK:
			case COMMIT_VK:
			case EXECUTE_VK:
			case MERGE_VK:
			case OPEN_VK:
			case ROLLBACK_VK:
			case SAVEPOINT_VK:
			case SELECT_STATEMENT:
			case SET_CONSTRAINT:
			case SET_TRANSACTION:
				{
				alt201=14;
				}
				break;
			case ROUTINE_CALL:
				{
				alt201=15;
				}
				break;
			case BODY:
				{
				alt201=16;
				}
				break;
			case BLOCK:
				{
				alt201=17;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 201, 0, input);
				throw nvae;
			}
			switch (alt201) {
				case 1 :
					// PLSQLPrinter.g:898:10: label_declaration
					{
					pushFollow(FOLLOW_label_declaration_in_statement8235);
					label_declaration();
					state._fsp--;

					// TEMPLATE REWRITE
					// 899:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:900:10: assignment_statement
					{
					pushFollow(FOLLOW_assignment_statement_in_statement8260);
					assignment_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 901:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:902:10: continue_statement
					{
					pushFollow(FOLLOW_continue_statement_in_statement8285);
					continue_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 903:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:904:10: exit_statement
					{
					pushFollow(FOLLOW_exit_statement_in_statement8310);
					exit_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 905:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:906:10: goto_statement
					{
					pushFollow(FOLLOW_goto_statement_in_statement8335);
					goto_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 907:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:908:10: if_statement
					{
					pushFollow(FOLLOW_if_statement_in_statement8360);
					if_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 909:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:910:10: loop_statement
					{
					pushFollow(FOLLOW_loop_statement_in_statement8385);
					loop_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 911:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:912:10: forall_statement
					{
					pushFollow(FOLLOW_forall_statement_in_statement8410);
					forall_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 913:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:914:10: null_statement
					{
					pushFollow(FOLLOW_null_statement_in_statement8435);
					null_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 915:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:916:10: raise_statement
					{
					pushFollow(FOLLOW_raise_statement_in_statement8460);
					raise_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 917:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:918:10: return_statement
					{
					pushFollow(FOLLOW_return_statement_in_statement8485);
					return_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 919:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:920:10: pipe_row_statement
					{
					pushFollow(FOLLOW_pipe_row_statement_in_statement8510);
					pipe_row_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 921:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 13 :
					// PLSQLPrinter.g:922:10: case_statement
					{
					pushFollow(FOLLOW_case_statement_in_statement8535);
					case_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 923:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 14 :
					// PLSQLPrinter.g:924:10: sql_statement
					{
					pushFollow(FOLLOW_sql_statement_in_statement8560);
					sql_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 925:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 15 :
					// PLSQLPrinter.g:926:10: function_call
					{
					pushFollow(FOLLOW_function_call_in_statement8585);
					function_call();
					state._fsp--;

					// TEMPLATE REWRITE
					// 927:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 16 :
					// PLSQLPrinter.g:928:10: body
					{
					pushFollow(FOLLOW_body_in_statement8610);
					body();
					state._fsp--;

					// TEMPLATE REWRITE
					// 929:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 17 :
					// PLSQLPrinter.g:930:10: block
					{
					pushFollow(FOLLOW_block_in_statement8635);
					block();
					state._fsp--;

					// TEMPLATE REWRITE
					// 931:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "statement"


	public static class label_declaration_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "label_declaration"
	// PLSQLPrinter.g:934:1: label_declaration : ^( LABEL_DECLARE label_name ) -> template( \"not implemented: \";
	public final PLSQLPrinter.label_declaration_return label_declaration() throws RecognitionException {
		PLSQLPrinter.label_declaration_return retval = new PLSQLPrinter.label_declaration_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:935:5: ( ^( LABEL_DECLARE label_name ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:935:10: ^( LABEL_DECLARE label_name )
			{
			match(input,LABEL_DECLARE,FOLLOW_LABEL_DECLARE_in_label_declaration8670); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_label_name_in_label_declaration8672);
			label_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 936:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "label_declaration"


	public static class assignment_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "assignment_statement"
	// PLSQLPrinter.g:939:1: assignment_statement : ^( ASSIGN general_element expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.assignment_statement_return assignment_statement() throws RecognitionException {
		PLSQLPrinter.assignment_statement_return retval = new PLSQLPrinter.assignment_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:940:5: ( ^( ASSIGN general_element expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:940:11: ^( ASSIGN general_element expression )
			{
			match(input,ASSIGN,FOLLOW_ASSIGN_in_assignment_statement8709); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_general_element_in_assignment_statement8711);
			general_element();
			state._fsp--;

			pushFollow(FOLLOW_expression_in_assignment_statement8713);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 941:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "assignment_statement"


	public static class continue_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "continue_statement"
	// PLSQLPrinter.g:944:1: continue_statement : ^( CONTINUE_VK ( label_name )? ( general_when )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.continue_statement_return continue_statement() throws RecognitionException {
		PLSQLPrinter.continue_statement_return retval = new PLSQLPrinter.continue_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:945:5: ( ^( CONTINUE_VK ( label_name )? ( general_when )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:945:10: ^( CONTINUE_VK ( label_name )? ( general_when )? )
			{
			match(input,CONTINUE_VK,FOLLOW_CONTINUE_VK_in_continue_statement8749); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:945:24: ( label_name )?
				int alt202=2;
				int LA202_0 = input.LA(1);
				if ( (LA202_0==LABEL_NAME) ) {
					alt202=1;
				}
				switch (alt202) {
					case 1 :
						// PLSQLPrinter.g:945:24: label_name
						{
						pushFollow(FOLLOW_label_name_in_continue_statement8751);
						label_name();
						state._fsp--;

						}
						break;

				}

				// PLSQLPrinter.g:945:36: ( general_when )?
				int alt203=2;
				int LA203_0 = input.LA(1);
				if ( (LA203_0==SQL92_RESERVED_WHEN) ) {
					alt203=1;
				}
				switch (alt203) {
					case 1 :
						// PLSQLPrinter.g:945:36: general_when
						{
						pushFollow(FOLLOW_general_when_in_continue_statement8754);
						general_when();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 946:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "continue_statement"


	public static class general_when_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "general_when"
	// PLSQLPrinter.g:949:1: general_when : ^( SQL92_RESERVED_WHEN expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.general_when_return general_when() throws RecognitionException {
		PLSQLPrinter.general_when_return retval = new PLSQLPrinter.general_when_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:950:5: ( ^( SQL92_RESERVED_WHEN expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:950:10: ^( SQL92_RESERVED_WHEN expression )
			{
			match(input,SQL92_RESERVED_WHEN,FOLLOW_SQL92_RESERVED_WHEN_in_general_when8791); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_general_when8793);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 951:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "general_when"


	public static class exit_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "exit_statement"
	// PLSQLPrinter.g:954:1: exit_statement : ^( EXIT_VK ( label_name )? ( general_when )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.exit_statement_return exit_statement() throws RecognitionException {
		PLSQLPrinter.exit_statement_return retval = new PLSQLPrinter.exit_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:955:5: ( ^( EXIT_VK ( label_name )? ( general_when )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:955:10: ^( EXIT_VK ( label_name )? ( general_when )? )
			{
			match(input,EXIT_VK,FOLLOW_EXIT_VK_in_exit_statement8829); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:955:20: ( label_name )?
				int alt204=2;
				int LA204_0 = input.LA(1);
				if ( (LA204_0==LABEL_NAME) ) {
					alt204=1;
				}
				switch (alt204) {
					case 1 :
						// PLSQLPrinter.g:955:20: label_name
						{
						pushFollow(FOLLOW_label_name_in_exit_statement8831);
						label_name();
						state._fsp--;

						}
						break;

				}

				// PLSQLPrinter.g:955:32: ( general_when )?
				int alt205=2;
				int LA205_0 = input.LA(1);
				if ( (LA205_0==SQL92_RESERVED_WHEN) ) {
					alt205=1;
				}
				switch (alt205) {
					case 1 :
						// PLSQLPrinter.g:955:32: general_when
						{
						pushFollow(FOLLOW_general_when_in_exit_statement8834);
						general_when();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 956:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exit_statement"


	public static class goto_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "goto_statement"
	// PLSQLPrinter.g:959:1: goto_statement : ^( SQL92_RESERVED_GOTO label_name ) -> template( \"not implemented: \";
	public final PLSQLPrinter.goto_statement_return goto_statement() throws RecognitionException {
		PLSQLPrinter.goto_statement_return retval = new PLSQLPrinter.goto_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:960:5: ( ^( SQL92_RESERVED_GOTO label_name ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:960:10: ^( SQL92_RESERVED_GOTO label_name )
			{
			match(input,SQL92_RESERVED_GOTO,FOLLOW_SQL92_RESERVED_GOTO_in_goto_statement8871); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_label_name_in_goto_statement8873);
			label_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 961:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "goto_statement"


	public static class if_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "if_statement"
	// PLSQLPrinter.g:964:1: if_statement : ^( PLSQL_RESERVED_IF expression seq_of_statements ( elsif_part )* ( else_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.if_statement_return if_statement() throws RecognitionException {
		PLSQLPrinter.if_statement_return retval = new PLSQLPrinter.if_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:965:5: ( ^( PLSQL_RESERVED_IF expression seq_of_statements ( elsif_part )* ( else_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:965:10: ^( PLSQL_RESERVED_IF expression seq_of_statements ( elsif_part )* ( else_part )? )
			{
			match(input,PLSQL_RESERVED_IF,FOLLOW_PLSQL_RESERVED_IF_in_if_statement8909); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_if_statement8911);
			expression();
			state._fsp--;

			pushFollow(FOLLOW_seq_of_statements_in_if_statement8913);
			seq_of_statements();
			state._fsp--;

			// PLSQLPrinter.g:965:59: ( elsif_part )*
			loop206:
			while (true) {
				int alt206=2;
				int LA206_0 = input.LA(1);
				if ( (LA206_0==PLSQL_NON_RESERVED_ELSIF) ) {
					alt206=1;
				}

				switch (alt206) {
				case 1 :
					// PLSQLPrinter.g:965:59: elsif_part
					{
					pushFollow(FOLLOW_elsif_part_in_if_statement8915);
					elsif_part();
					state._fsp--;

					}
					break;

				default :
					break loop206;
				}
			}

			// PLSQLPrinter.g:965:71: ( else_part )?
			int alt207=2;
			int LA207_0 = input.LA(1);
			if ( (LA207_0==SQL92_RESERVED_ELSE) ) {
				alt207=1;
			}
			switch (alt207) {
				case 1 :
					// PLSQLPrinter.g:965:71: else_part
					{
					pushFollow(FOLLOW_else_part_in_if_statement8918);
					else_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 966:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "if_statement"


	public static class elsif_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "elsif_part"
	// PLSQLPrinter.g:969:1: elsif_part : ^( PLSQL_NON_RESERVED_ELSIF expression seq_of_statements ) -> template( \"not implemented: \";
	public final PLSQLPrinter.elsif_part_return elsif_part() throws RecognitionException {
		PLSQLPrinter.elsif_part_return retval = new PLSQLPrinter.elsif_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:970:5: ( ^( PLSQL_NON_RESERVED_ELSIF expression seq_of_statements ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:970:10: ^( PLSQL_NON_RESERVED_ELSIF expression seq_of_statements )
			{
			match(input,PLSQL_NON_RESERVED_ELSIF,FOLLOW_PLSQL_NON_RESERVED_ELSIF_in_elsif_part8955); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_elsif_part8957);
			expression();
			state._fsp--;

			pushFollow(FOLLOW_seq_of_statements_in_elsif_part8959);
			seq_of_statements();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 971:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "elsif_part"


	public static class else_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "else_part"
	// PLSQLPrinter.g:974:1: else_part : ^( SQL92_RESERVED_ELSE seq_of_statements ) -> template( \"not implemented: \";
	public final PLSQLPrinter.else_part_return else_part() throws RecognitionException {
		PLSQLPrinter.else_part_return retval = new PLSQLPrinter.else_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:975:5: ( ^( SQL92_RESERVED_ELSE seq_of_statements ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:975:10: ^( SQL92_RESERVED_ELSE seq_of_statements )
			{
			match(input,SQL92_RESERVED_ELSE,FOLLOW_SQL92_RESERVED_ELSE_in_else_part8995); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_seq_of_statements_in_else_part8997);
			seq_of_statements();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 976:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "else_part"


	public static class loop_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "loop_statement"
	// PLSQLPrinter.g:979:1: loop_statement : ( ^( WHILE_LOOP ( label_name )* expression seq_of_statements ) -> template( \"not implemented: \"| ^( FOR_LOOP ( label_name )* cursor_loop_param seq_of_statements ) -> template( \"not implemented: \"| ^( LOOP_VK ( label_name )* seq_of_statements ) -> template( \"not implemented: \");
	public final PLSQLPrinter.loop_statement_return loop_statement() throws RecognitionException {
		PLSQLPrinter.loop_statement_return retval = new PLSQLPrinter.loop_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:980:5: ( ^( WHILE_LOOP ( label_name )* expression seq_of_statements ) -> template( \"not implemented: \"| ^( FOR_LOOP ( label_name )* cursor_loop_param seq_of_statements ) -> template( \"not implemented: \"| ^( LOOP_VK ( label_name )* seq_of_statements ) -> template( \"not implemented: \")
			int alt211=3;
			switch ( input.LA(1) ) {
			case WHILE_LOOP:
				{
				alt211=1;
				}
				break;
			case FOR_LOOP:
				{
				alt211=2;
				}
				break;
			case LOOP_VK:
				{
				alt211=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 211, 0, input);
				throw nvae;
			}
			switch (alt211) {
				case 1 :
					// PLSQLPrinter.g:980:10: ^( WHILE_LOOP ( label_name )* expression seq_of_statements )
					{
					match(input,WHILE_LOOP,FOLLOW_WHILE_LOOP_in_loop_statement9033); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:980:23: ( label_name )*
					loop208:
					while (true) {
						int alt208=2;
						int LA208_0 = input.LA(1);
						if ( (LA208_0==LABEL_NAME) ) {
							alt208=1;
						}

						switch (alt208) {
						case 1 :
							// PLSQLPrinter.g:980:23: label_name
							{
							pushFollow(FOLLOW_label_name_in_loop_statement9035);
							label_name();
							state._fsp--;

							}
							break;

						default :
							break loop208;
						}
					}

					pushFollow(FOLLOW_expression_in_loop_statement9038);
					expression();
					state._fsp--;

					pushFollow(FOLLOW_seq_of_statements_in_loop_statement9040);
					seq_of_statements();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 981:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:982:10: ^( FOR_LOOP ( label_name )* cursor_loop_param seq_of_statements )
					{
					match(input,FOR_LOOP,FOLLOW_FOR_LOOP_in_loop_statement9067); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:982:21: ( label_name )*
					loop209:
					while (true) {
						int alt209=2;
						int LA209_0 = input.LA(1);
						if ( (LA209_0==LABEL_NAME) ) {
							alt209=1;
						}

						switch (alt209) {
						case 1 :
							// PLSQLPrinter.g:982:21: label_name
							{
							pushFollow(FOLLOW_label_name_in_loop_statement9069);
							label_name();
							state._fsp--;

							}
							break;

						default :
							break loop209;
						}
					}

					pushFollow(FOLLOW_cursor_loop_param_in_loop_statement9072);
					cursor_loop_param();
					state._fsp--;

					pushFollow(FOLLOW_seq_of_statements_in_loop_statement9074);
					seq_of_statements();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 983:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:984:10: ^( LOOP_VK ( label_name )* seq_of_statements )
					{
					match(input,LOOP_VK,FOLLOW_LOOP_VK_in_loop_statement9101); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:984:20: ( label_name )*
					loop210:
					while (true) {
						int alt210=2;
						int LA210_0 = input.LA(1);
						if ( (LA210_0==LABEL_NAME) ) {
							alt210=1;
						}

						switch (alt210) {
						case 1 :
							// PLSQLPrinter.g:984:20: label_name
							{
							pushFollow(FOLLOW_label_name_in_loop_statement9103);
							label_name();
							state._fsp--;

							}
							break;

						default :
							break loop210;
						}
					}

					pushFollow(FOLLOW_seq_of_statements_in_loop_statement9106);
					seq_of_statements();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 985:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "loop_statement"


	public static class cursor_loop_param_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "cursor_loop_param"
	// PLSQLPrinter.g:990:1: cursor_loop_param : ( ^( INDEXED_FOR index_name ( REVERSE_VK )? ^( SIMPLE_BOUND expression expression ) ) -> template( \"not implemented: \"| ^( CURSOR_BASED_FOR record_name cursor_name ( expression_list )? ) -> template( \"not implemented: \"| ^( SELECT_BASED_FOR record_name select_statement ) -> template( \"not implemented: \");
	public final PLSQLPrinter.cursor_loop_param_return cursor_loop_param() throws RecognitionException {
		PLSQLPrinter.cursor_loop_param_return retval = new PLSQLPrinter.cursor_loop_param_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:991:5: ( ^( INDEXED_FOR index_name ( REVERSE_VK )? ^( SIMPLE_BOUND expression expression ) ) -> template( \"not implemented: \"| ^( CURSOR_BASED_FOR record_name cursor_name ( expression_list )? ) -> template( \"not implemented: \"| ^( SELECT_BASED_FOR record_name select_statement ) -> template( \"not implemented: \")
			int alt214=3;
			switch ( input.LA(1) ) {
			case INDEXED_FOR:
				{
				alt214=1;
				}
				break;
			case CURSOR_BASED_FOR:
				{
				alt214=2;
				}
				break;
			case SELECT_BASED_FOR:
				{
				alt214=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 214, 0, input);
				throw nvae;
			}
			switch (alt214) {
				case 1 :
					// PLSQLPrinter.g:991:10: ^( INDEXED_FOR index_name ( REVERSE_VK )? ^( SIMPLE_BOUND expression expression ) )
					{
					match(input,INDEXED_FOR,FOLLOW_INDEXED_FOR_in_cursor_loop_param9144); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_index_name_in_cursor_loop_param9146);
					index_name();
					state._fsp--;

					// PLSQLPrinter.g:991:35: ( REVERSE_VK )?
					int alt212=2;
					int LA212_0 = input.LA(1);
					if ( (LA212_0==REVERSE_VK) ) {
						alt212=1;
					}
					switch (alt212) {
						case 1 :
							// PLSQLPrinter.g:991:35: REVERSE_VK
							{
							match(input,REVERSE_VK,FOLLOW_REVERSE_VK_in_cursor_loop_param9148); 
							}
							break;

					}

					match(input,SIMPLE_BOUND,FOLLOW_SIMPLE_BOUND_in_cursor_loop_param9152); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_cursor_loop_param9154);
					expression();
					state._fsp--;

					pushFollow(FOLLOW_expression_in_cursor_loop_param9156);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 992:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:993:10: ^( CURSOR_BASED_FOR record_name cursor_name ( expression_list )? )
					{
					match(input,CURSOR_BASED_FOR,FOLLOW_CURSOR_BASED_FOR_in_cursor_loop_param9184); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_record_name_in_cursor_loop_param9186);
					record_name();
					state._fsp--;

					pushFollow(FOLLOW_cursor_name_in_cursor_loop_param9188);
					cursor_name();
					state._fsp--;

					// PLSQLPrinter.g:993:53: ( expression_list )?
					int alt213=2;
					int LA213_0 = input.LA(1);
					if ( (LA213_0==EXPR_LIST) ) {
						alt213=1;
					}
					switch (alt213) {
						case 1 :
							// PLSQLPrinter.g:993:53: expression_list
							{
							pushFollow(FOLLOW_expression_list_in_cursor_loop_param9190);
							expression_list();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 994:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:995:10: ^( SELECT_BASED_FOR record_name select_statement )
					{
					match(input,SELECT_BASED_FOR,FOLLOW_SELECT_BASED_FOR_in_cursor_loop_param9218); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_record_name_in_cursor_loop_param9220);
					record_name();
					state._fsp--;

					pushFollow(FOLLOW_select_statement_in_cursor_loop_param9222);
					select_statement();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 996:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cursor_loop_param"


	public static class forall_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "forall_statement"
	// PLSQLPrinter.g:1001:1: forall_statement : ^( FORALL_VK index_name bounds_clause sql_statement ( EXCEPTIONS_VK )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.forall_statement_return forall_statement() throws RecognitionException {
		PLSQLPrinter.forall_statement_return retval = new PLSQLPrinter.forall_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1002:5: ( ^( FORALL_VK index_name bounds_clause sql_statement ( EXCEPTIONS_VK )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1002:10: ^( FORALL_VK index_name bounds_clause sql_statement ( EXCEPTIONS_VK )? )
			{
			match(input,FORALL_VK,FOLLOW_FORALL_VK_in_forall_statement9260); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_index_name_in_forall_statement9262);
			index_name();
			state._fsp--;

			pushFollow(FOLLOW_bounds_clause_in_forall_statement9264);
			bounds_clause();
			state._fsp--;

			pushFollow(FOLLOW_sql_statement_in_forall_statement9266);
			sql_statement();
			state._fsp--;

			// PLSQLPrinter.g:1002:61: ( EXCEPTIONS_VK )?
			int alt215=2;
			int LA215_0 = input.LA(1);
			if ( (LA215_0==EXCEPTIONS_VK) ) {
				alt215=1;
			}
			switch (alt215) {
				case 1 :
					// PLSQLPrinter.g:1002:61: EXCEPTIONS_VK
					{
					match(input,EXCEPTIONS_VK,FOLLOW_EXCEPTIONS_VK_in_forall_statement9268); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1003:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "forall_statement"


	public static class bounds_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "bounds_clause"
	// PLSQLPrinter.g:1006:1: bounds_clause : ( ^( SIMPLE_BOUND expression expression ) -> template( \"not implemented: \"| ^( INDICES_BOUND collection_name ( between_bound )? ) -> template( \"not implemented: \"| ^( VALUES_BOUND index_name ) -> template( \"not implemented: \");
	public final PLSQLPrinter.bounds_clause_return bounds_clause() throws RecognitionException {
		PLSQLPrinter.bounds_clause_return retval = new PLSQLPrinter.bounds_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1007:5: ( ^( SIMPLE_BOUND expression expression ) -> template( \"not implemented: \"| ^( INDICES_BOUND collection_name ( between_bound )? ) -> template( \"not implemented: \"| ^( VALUES_BOUND index_name ) -> template( \"not implemented: \")
			int alt217=3;
			switch ( input.LA(1) ) {
			case SIMPLE_BOUND:
				{
				alt217=1;
				}
				break;
			case INDICES_BOUND:
				{
				alt217=2;
				}
				break;
			case VALUES_BOUND:
				{
				alt217=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 217, 0, input);
				throw nvae;
			}
			switch (alt217) {
				case 1 :
					// PLSQLPrinter.g:1007:10: ^( SIMPLE_BOUND expression expression )
					{
					match(input,SIMPLE_BOUND,FOLLOW_SIMPLE_BOUND_in_bounds_clause9305); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_bounds_clause9307);
					expression();
					state._fsp--;

					pushFollow(FOLLOW_expression_in_bounds_clause9309);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1008:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1009:10: ^( INDICES_BOUND collection_name ( between_bound )? )
					{
					match(input,INDICES_BOUND,FOLLOW_INDICES_BOUND_in_bounds_clause9336); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_collection_name_in_bounds_clause9338);
					collection_name();
					state._fsp--;

					// PLSQLPrinter.g:1009:42: ( between_bound )?
					int alt216=2;
					int LA216_0 = input.LA(1);
					if ( (LA216_0==SQL92_RESERVED_BETWEEN) ) {
						alt216=1;
					}
					switch (alt216) {
						case 1 :
							// PLSQLPrinter.g:1009:42: between_bound
							{
							pushFollow(FOLLOW_between_bound_in_bounds_clause9340);
							between_bound();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1010:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1011:10: ^( VALUES_BOUND index_name )
					{
					match(input,VALUES_BOUND,FOLLOW_VALUES_BOUND_in_bounds_clause9368); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_index_name_in_bounds_clause9370);
					index_name();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1012:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "bounds_clause"


	public static class between_bound_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "between_bound"
	// PLSQLPrinter.g:1015:1: between_bound : ^( SQL92_RESERVED_BETWEEN expression expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.between_bound_return between_bound() throws RecognitionException {
		PLSQLPrinter.between_bound_return retval = new PLSQLPrinter.between_bound_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1016:5: ( ^( SQL92_RESERVED_BETWEEN expression expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1016:10: ^( SQL92_RESERVED_BETWEEN expression expression )
			{
			match(input,SQL92_RESERVED_BETWEEN,FOLLOW_SQL92_RESERVED_BETWEEN_in_between_bound9407); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_between_bound9409);
			expression();
			state._fsp--;

			pushFollow(FOLLOW_expression_in_between_bound9411);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1017:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "between_bound"


	public static class null_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "null_statement"
	// PLSQLPrinter.g:1020:1: null_statement : SQL92_RESERVED_NULL -> template( \"not implemented: \";
	public final PLSQLPrinter.null_statement_return null_statement() throws RecognitionException {
		PLSQLPrinter.null_statement_return retval = new PLSQLPrinter.null_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1021:5: ( SQL92_RESERVED_NULL -> template( \"not implemented: \")
			// PLSQLPrinter.g:1021:10: SQL92_RESERVED_NULL
			{
			match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_null_statement9446); 
			// TEMPLATE REWRITE
			// 1022:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "null_statement"


	public static class raise_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "raise_statement"
	// PLSQLPrinter.g:1025:1: raise_statement : ^( RAISE_VK ( exception_name )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.raise_statement_return raise_statement() throws RecognitionException {
		PLSQLPrinter.raise_statement_return retval = new PLSQLPrinter.raise_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1026:5: ( ^( RAISE_VK ( exception_name )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1026:10: ^( RAISE_VK ( exception_name )? )
			{
			match(input,RAISE_VK,FOLLOW_RAISE_VK_in_raise_statement9481); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1026:21: ( exception_name )?
				int alt218=2;
				int LA218_0 = input.LA(1);
				if ( (LA218_0==EXCEPTION_NAME) ) {
					alt218=1;
				}
				switch (alt218) {
					case 1 :
						// PLSQLPrinter.g:1026:21: exception_name
						{
						pushFollow(FOLLOW_exception_name_in_raise_statement9483);
						exception_name();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1027:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "raise_statement"


	public static class return_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "return_statement"
	// PLSQLPrinter.g:1030:1: return_statement : ^( RETURN_VK ( expression )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.return_statement_return return_statement() throws RecognitionException {
		PLSQLPrinter.return_statement_return retval = new PLSQLPrinter.return_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1031:5: ( ^( RETURN_VK ( expression )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1031:10: ^( RETURN_VK ( expression )? )
			{
			match(input,RETURN_VK,FOLLOW_RETURN_VK_in_return_statement9520); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1031:22: ( expression )?
				int alt219=2;
				int LA219_0 = input.LA(1);
				if ( (LA219_0==EXPR||LA219_0==LOGIC_EXPR) ) {
					alt219=1;
				}
				switch (alt219) {
					case 1 :
						// PLSQLPrinter.g:1031:22: expression
						{
						pushFollow(FOLLOW_expression_in_return_statement9522);
						expression();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1032:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "return_statement"


	public static class function_call_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "function_call"
	// PLSQLPrinter.g:1035:1: function_call : ^( ROUTINE_CALL general_element ) -> template( \"not implemented: \";
	public final PLSQLPrinter.function_call_return function_call() throws RecognitionException {
		PLSQLPrinter.function_call_return retval = new PLSQLPrinter.function_call_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1036:5: ( ^( ROUTINE_CALL general_element ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1036:10: ^( ROUTINE_CALL general_element )
			{
			match(input,ROUTINE_CALL,FOLLOW_ROUTINE_CALL_in_function_call9559); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_general_element_in_function_call9561);
			general_element();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1037:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "function_call"


	public static class body_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "body"
	// PLSQLPrinter.g:1040:1: body : ^( BODY ( label_name )? seq_of_statements ( exception_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.body_return body() throws RecognitionException {
		PLSQLPrinter.body_return retval = new PLSQLPrinter.body_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1041:5: ( ^( BODY ( label_name )? seq_of_statements ( exception_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1041:10: ^( BODY ( label_name )? seq_of_statements ( exception_clause )? )
			{
			match(input,BODY,FOLLOW_BODY_in_body9597); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1041:17: ( label_name )?
			int alt220=2;
			int LA220_0 = input.LA(1);
			if ( (LA220_0==LABEL_NAME) ) {
				alt220=1;
			}
			switch (alt220) {
				case 1 :
					// PLSQLPrinter.g:1041:17: label_name
					{
					pushFollow(FOLLOW_label_name_in_body9599);
					label_name();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_seq_of_statements_in_body9602);
			seq_of_statements();
			state._fsp--;

			// PLSQLPrinter.g:1041:47: ( exception_clause )?
			int alt221=2;
			int LA221_0 = input.LA(1);
			if ( (LA221_0==SQL92_RESERVED_EXCEPTION) ) {
				alt221=1;
			}
			switch (alt221) {
				case 1 :
					// PLSQLPrinter.g:1041:47: exception_clause
					{
					pushFollow(FOLLOW_exception_clause_in_body9604);
					exception_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1042:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "body"


	public static class exception_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "exception_clause"
	// PLSQLPrinter.g:1047:1: exception_clause : ^( SQL92_RESERVED_EXCEPTION ( exception_handler )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.exception_clause_return exception_clause() throws RecognitionException {
		PLSQLPrinter.exception_clause_return retval = new PLSQLPrinter.exception_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1048:5: ( ^( SQL92_RESERVED_EXCEPTION ( exception_handler )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1048:10: ^( SQL92_RESERVED_EXCEPTION ( exception_handler )+ )
			{
			match(input,SQL92_RESERVED_EXCEPTION,FOLLOW_SQL92_RESERVED_EXCEPTION_in_exception_clause9644); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1048:37: ( exception_handler )+
			int cnt222=0;
			loop222:
			while (true) {
				int alt222=2;
				int LA222_0 = input.LA(1);
				if ( (LA222_0==SQL92_RESERVED_WHEN) ) {
					alt222=1;
				}

				switch (alt222) {
				case 1 :
					// PLSQLPrinter.g:1048:37: exception_handler
					{
					pushFollow(FOLLOW_exception_handler_in_exception_clause9646);
					exception_handler();
					state._fsp--;

					}
					break;

				default :
					if ( cnt222 >= 1 ) break loop222;
					EarlyExitException eee = new EarlyExitException(222, input);
					throw eee;
				}
				cnt222++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1049:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exception_clause"


	public static class exception_handler_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "exception_handler"
	// PLSQLPrinter.g:1052:1: exception_handler : ^( SQL92_RESERVED_WHEN ( exception_name )+ seq_of_statements ) -> template( \"not implemented: \";
	public final PLSQLPrinter.exception_handler_return exception_handler() throws RecognitionException {
		PLSQLPrinter.exception_handler_return retval = new PLSQLPrinter.exception_handler_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1053:5: ( ^( SQL92_RESERVED_WHEN ( exception_name )+ seq_of_statements ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1053:10: ^( SQL92_RESERVED_WHEN ( exception_name )+ seq_of_statements )
			{
			match(input,SQL92_RESERVED_WHEN,FOLLOW_SQL92_RESERVED_WHEN_in_exception_handler9683); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1053:32: ( exception_name )+
			int cnt223=0;
			loop223:
			while (true) {
				int alt223=2;
				int LA223_0 = input.LA(1);
				if ( (LA223_0==EXCEPTION_NAME) ) {
					alt223=1;
				}

				switch (alt223) {
				case 1 :
					// PLSQLPrinter.g:1053:32: exception_name
					{
					pushFollow(FOLLOW_exception_name_in_exception_handler9685);
					exception_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt223 >= 1 ) break loop223;
					EarlyExitException eee = new EarlyExitException(223, input);
					throw eee;
				}
				cnt223++;
			}

			pushFollow(FOLLOW_seq_of_statements_in_exception_handler9688);
			seq_of_statements();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1054:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exception_handler"


	public static class block_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "block"
	// PLSQLPrinter.g:1059:1: block : ^( BLOCK ( declare_spec )* body ) -> template( \"not implemented: \";
	public final PLSQLPrinter.block_return block() throws RecognitionException {
		PLSQLPrinter.block_return retval = new PLSQLPrinter.block_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1060:5: ( ^( BLOCK ( declare_spec )* body ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1060:10: ^( BLOCK ( declare_spec )* body )
			{
			match(input,BLOCK,FOLLOW_BLOCK_in_block9726); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1060:18: ( declare_spec )*
			loop224:
			while (true) {
				int alt224=2;
				int LA224_0 = input.LA(1);
				if ( (LA224_0==CREATE_FUNCTION||LA224_0==CREATE_PROCEDURE||LA224_0==CURSOR_DECLARE||LA224_0==EXCEPTION_DECLARE||LA224_0==PRAGMA_DECLARE||(LA224_0 >= RECORD_TYPE_DECLARE && LA224_0 <= RECORD_VAR_DECLARE)||LA224_0==SUBTYPE_DECLARE||(LA224_0 >= TABLE_TYPE_DECLARE && LA224_0 <= TABLE_VAR_DECLARE)||LA224_0==VARIABLE_DECLARE) ) {
					alt224=1;
				}

				switch (alt224) {
				case 1 :
					// PLSQLPrinter.g:1060:18: declare_spec
					{
					pushFollow(FOLLOW_declare_spec_in_block9728);
					declare_spec();
					state._fsp--;

					}
					break;

				default :
					break loop224;
				}
			}

			pushFollow(FOLLOW_body_in_block9731);
			body();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1061:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "block"


	public static class sql_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "sql_statement"
	// PLSQLPrinter.g:1068:1: sql_statement : ( execute_immediate -> template( \"not implemented: \"| data_manipulation_language_statements -> template( \"not implemented: \"| cursor_manipulation_statements -> template( \"not implemented: \"| transaction_control_statements -> template( \"not implemented: \");
	public final PLSQLPrinter.sql_statement_return sql_statement() throws RecognitionException {
		PLSQLPrinter.sql_statement_return retval = new PLSQLPrinter.sql_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1069:5: ( execute_immediate -> template( \"not implemented: \"| data_manipulation_language_statements -> template( \"not implemented: \"| cursor_manipulation_statements -> template( \"not implemented: \"| transaction_control_statements -> template( \"not implemented: \")
			int alt225=4;
			switch ( input.LA(1) ) {
			case EXECUTE_VK:
				{
				alt225=1;
				}
				break;
			case PLSQL_RESERVED_LOCK:
			case SQL92_RESERVED_DELETE:
			case SQL92_RESERVED_INSERT:
			case SQL92_RESERVED_UPDATE:
			case MERGE_VK:
			case SELECT_STATEMENT:
				{
				alt225=2;
				}
				break;
			case SQL92_RESERVED_FETCH:
			case CLOSE_VK:
			case OPEN_VK:
				{
				alt225=3;
				}
				break;
			case COMMIT_VK:
			case ROLLBACK_VK:
			case SAVEPOINT_VK:
			case SET_CONSTRAINT:
			case SET_TRANSACTION:
				{
				alt225=4;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 225, 0, input);
				throw nvae;
			}
			switch (alt225) {
				case 1 :
					// PLSQLPrinter.g:1069:10: execute_immediate
					{
					pushFollow(FOLLOW_execute_immediate_in_sql_statement9770);
					execute_immediate();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1070:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1071:10: data_manipulation_language_statements
					{
					pushFollow(FOLLOW_data_manipulation_language_statements_in_sql_statement9795);
					data_manipulation_language_statements();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1072:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1073:10: cursor_manipulation_statements
					{
					pushFollow(FOLLOW_cursor_manipulation_statements_in_sql_statement9820);
					cursor_manipulation_statements();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1074:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1075:10: transaction_control_statements
					{
					pushFollow(FOLLOW_transaction_control_statements_in_sql_statement9845);
					transaction_control_statements();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1076:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sql_statement"


	public static class execute_immediate_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "execute_immediate"
	// PLSQLPrinter.g:1079:1: execute_immediate : ^( EXECUTE_VK expression ( into_clause | using_clause | dynamic_returning_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.execute_immediate_return execute_immediate() throws RecognitionException {
		PLSQLPrinter.execute_immediate_return retval = new PLSQLPrinter.execute_immediate_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1080:5: ( ^( EXECUTE_VK expression ( into_clause | using_clause | dynamic_returning_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1080:10: ^( EXECUTE_VK expression ( into_clause | using_clause | dynamic_returning_clause )? )
			{
			match(input,EXECUTE_VK,FOLLOW_EXECUTE_VK_in_execute_immediate9880); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_execute_immediate9882);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:1080:34: ( into_clause | using_clause | dynamic_returning_clause )?
			int alt226=4;
			switch ( input.LA(1) ) {
				case SQL92_RESERVED_INTO:
				case BULK_VK:
					{
					alt226=1;
					}
					break;
				case PLSQL_NON_RESERVED_USING:
					{
					alt226=2;
					}
					break;
				case DYNAMIC_RETURN:
					{
					alt226=3;
					}
					break;
			}
			switch (alt226) {
				case 1 :
					// PLSQLPrinter.g:1080:35: into_clause
					{
					pushFollow(FOLLOW_into_clause_in_execute_immediate9885);
					into_clause();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1080:47: using_clause
					{
					pushFollow(FOLLOW_using_clause_in_execute_immediate9887);
					using_clause();
					state._fsp--;

					}
					break;
				case 3 :
					// PLSQLPrinter.g:1080:60: dynamic_returning_clause
					{
					pushFollow(FOLLOW_dynamic_returning_clause_in_execute_immediate9889);
					dynamic_returning_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1081:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "execute_immediate"


	public static class dynamic_returning_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "dynamic_returning_clause"
	// PLSQLPrinter.g:1085:1: dynamic_returning_clause : ^( DYNAMIC_RETURN into_clause ) -> template( \"not implemented: \";
	public final PLSQLPrinter.dynamic_returning_clause_return dynamic_returning_clause() throws RecognitionException {
		PLSQLPrinter.dynamic_returning_clause_return retval = new PLSQLPrinter.dynamic_returning_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1086:5: ( ^( DYNAMIC_RETURN into_clause ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1086:10: ^( DYNAMIC_RETURN into_clause )
			{
			match(input,DYNAMIC_RETURN,FOLLOW_DYNAMIC_RETURN_in_dynamic_returning_clause9929); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_into_clause_in_dynamic_returning_clause9931);
			into_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1087:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dynamic_returning_clause"


	public static class data_manipulation_language_statements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "data_manipulation_language_statements"
	// PLSQLPrinter.g:1094:1: data_manipulation_language_statements : ( merge_statement -> template( \"not implemented: \"| lock_table_statement -> template( \"not implemented: \"| select_statement -> template( \"not implemented: \"| update_statement -> template( \"not implemented: \"| delete_statement -> template( \"not implemented: \"| insert_statement -> template( \"not implemented: \");
	public final PLSQLPrinter.data_manipulation_language_statements_return data_manipulation_language_statements() throws RecognitionException {
		PLSQLPrinter.data_manipulation_language_statements_return retval = new PLSQLPrinter.data_manipulation_language_statements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1095:5: ( merge_statement -> template( \"not implemented: \"| lock_table_statement -> template( \"not implemented: \"| select_statement -> template( \"not implemented: \"| update_statement -> template( \"not implemented: \"| delete_statement -> template( \"not implemented: \"| insert_statement -> template( \"not implemented: \")
			int alt227=6;
			switch ( input.LA(1) ) {
			case MERGE_VK:
				{
				alt227=1;
				}
				break;
			case PLSQL_RESERVED_LOCK:
				{
				alt227=2;
				}
				break;
			case SELECT_STATEMENT:
				{
				alt227=3;
				}
				break;
			case SQL92_RESERVED_UPDATE:
				{
				alt227=4;
				}
				break;
			case SQL92_RESERVED_DELETE:
				{
				alt227=5;
				}
				break;
			case SQL92_RESERVED_INSERT:
				{
				alt227=6;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 227, 0, input);
				throw nvae;
			}
			switch (alt227) {
				case 1 :
					// PLSQLPrinter.g:1095:10: merge_statement
					{
					pushFollow(FOLLOW_merge_statement_in_data_manipulation_language_statements9970);
					merge_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1096:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1097:10: lock_table_statement
					{
					pushFollow(FOLLOW_lock_table_statement_in_data_manipulation_language_statements9995);
					lock_table_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1098:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1099:10: select_statement
					{
					pushFollow(FOLLOW_select_statement_in_data_manipulation_language_statements10020);
					select_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1100:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1101:11: update_statement
					{
					pushFollow(FOLLOW_update_statement_in_data_manipulation_language_statements10046);
					update_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1102:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:1103:11: delete_statement
					{
					pushFollow(FOLLOW_delete_statement_in_data_manipulation_language_statements10072);
					delete_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1104:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:1105:10: insert_statement
					{
					pushFollow(FOLLOW_insert_statement_in_data_manipulation_language_statements10097);
					insert_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1106:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "data_manipulation_language_statements"


	public static class select_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "select_statement"
	// PLSQLPrinter.g:1109:1: select_statement : ^( SELECT_STATEMENT ( subquery_factoring_clause )? subquery ( for_update_clause )* ( order_by_clause )* ) -> template( \"not implemented: \";
	public final PLSQLPrinter.select_statement_return select_statement() throws RecognitionException {
		PLSQLPrinter.select_statement_return retval = new PLSQLPrinter.select_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1110:5: ( ^( SELECT_STATEMENT ( subquery_factoring_clause )? subquery ( for_update_clause )* ( order_by_clause )* ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1110:10: ^( SELECT_STATEMENT ( subquery_factoring_clause )? subquery ( for_update_clause )* ( order_by_clause )* )
			{
			match(input,SELECT_STATEMENT,FOLLOW_SELECT_STATEMENT_in_select_statement10132); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1110:29: ( subquery_factoring_clause )?
			int alt228=2;
			int LA228_0 = input.LA(1);
			if ( (LA228_0==SQL92_RESERVED_WITH) ) {
				alt228=1;
			}
			switch (alt228) {
				case 1 :
					// PLSQLPrinter.g:1110:29: subquery_factoring_clause
					{
					pushFollow(FOLLOW_subquery_factoring_clause_in_select_statement10134);
					subquery_factoring_clause();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_subquery_in_select_statement10137);
			subquery();
			state._fsp--;

			// PLSQLPrinter.g:1110:65: ( for_update_clause )*
			loop229:
			while (true) {
				int alt229=2;
				int LA229_0 = input.LA(1);
				if ( (LA229_0==SQL92_RESERVED_FOR) ) {
					alt229=1;
				}

				switch (alt229) {
				case 1 :
					// PLSQLPrinter.g:1110:65: for_update_clause
					{
					pushFollow(FOLLOW_for_update_clause_in_select_statement10139);
					for_update_clause();
					state._fsp--;

					}
					break;

				default :
					break loop229;
				}
			}

			// PLSQLPrinter.g:1110:84: ( order_by_clause )*
			loop230:
			while (true) {
				int alt230=2;
				int LA230_0 = input.LA(1);
				if ( (LA230_0==SQL92_RESERVED_ORDER) ) {
					alt230=1;
				}

				switch (alt230) {
				case 1 :
					// PLSQLPrinter.g:1110:84: order_by_clause
					{
					pushFollow(FOLLOW_order_by_clause_in_select_statement10142);
					order_by_clause();
					state._fsp--;

					}
					break;

				default :
					break loop230;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1111:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "select_statement"


	public static class subquery_factoring_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subquery_factoring_clause"
	// PLSQLPrinter.g:1115:1: subquery_factoring_clause : ^( SQL92_RESERVED_WITH ( factoring_element )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.subquery_factoring_clause_return subquery_factoring_clause() throws RecognitionException {
		PLSQLPrinter.subquery_factoring_clause_return retval = new PLSQLPrinter.subquery_factoring_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1116:5: ( ^( SQL92_RESERVED_WITH ( factoring_element )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1116:10: ^( SQL92_RESERVED_WITH ( factoring_element )+ )
			{
			match(input,SQL92_RESERVED_WITH,FOLLOW_SQL92_RESERVED_WITH_in_subquery_factoring_clause10182); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1116:32: ( factoring_element )+
			int cnt231=0;
			loop231:
			while (true) {
				int alt231=2;
				int LA231_0 = input.LA(1);
				if ( (LA231_0==FACTORING) ) {
					alt231=1;
				}

				switch (alt231) {
				case 1 :
					// PLSQLPrinter.g:1116:32: factoring_element
					{
					pushFollow(FOLLOW_factoring_element_in_subquery_factoring_clause10184);
					factoring_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt231 >= 1 ) break loop231;
					EarlyExitException eee = new EarlyExitException(231, input);
					throw eee;
				}
				cnt231++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1117:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subquery_factoring_clause"


	public static class factoring_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "factoring_element"
	// PLSQLPrinter.g:1120:1: factoring_element : ^( FACTORING query_name subquery ) -> template( \"not implemented: \";
	public final PLSQLPrinter.factoring_element_return factoring_element() throws RecognitionException {
		PLSQLPrinter.factoring_element_return retval = new PLSQLPrinter.factoring_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1121:5: ( ^( FACTORING query_name subquery ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1121:10: ^( FACTORING query_name subquery )
			{
			match(input,FACTORING,FOLLOW_FACTORING_in_factoring_element10221); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_query_name_in_factoring_element10223);
			query_name();
			state._fsp--;

			pushFollow(FOLLOW_subquery_in_factoring_element10225);
			subquery();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1122:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "factoring_element"


	public static class subquery_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subquery"
	// PLSQLPrinter.g:1125:1: subquery : ^( SUBQUERY subquery_basic_elements ( subquery_operation_part )* ) -> template( \"not implemented: \";
	public final PLSQLPrinter.subquery_return subquery() throws RecognitionException {
		PLSQLPrinter.subquery_return retval = new PLSQLPrinter.subquery_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1126:5: ( ^( SUBQUERY subquery_basic_elements ( subquery_operation_part )* ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1126:10: ^( SUBQUERY subquery_basic_elements ( subquery_operation_part )* )
			{
			match(input,SUBQUERY,FOLLOW_SUBQUERY_in_subquery10261); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_subquery_basic_elements_in_subquery10263);
			subquery_basic_elements();
			state._fsp--;

			// PLSQLPrinter.g:1126:45: ( subquery_operation_part )*
			loop232:
			while (true) {
				int alt232=2;
				int LA232_0 = input.LA(1);
				if ( (LA232_0==PLSQL_RESERVED_MINUS||LA232_0==SQL92_RESERVED_INTERSECT||LA232_0==SQL92_RESERVED_UNION) ) {
					alt232=1;
				}

				switch (alt232) {
				case 1 :
					// PLSQLPrinter.g:1126:45: subquery_operation_part
					{
					pushFollow(FOLLOW_subquery_operation_part_in_subquery10265);
					subquery_operation_part();
					state._fsp--;

					}
					break;

				default :
					break loop232;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1127:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subquery"


	public static class subquery_operation_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subquery_operation_part"
	// PLSQLPrinter.g:1130:1: subquery_operation_part : ^( ( SQL92_RESERVED_UNION | SQL92_RESERVED_INTERSECT | PLSQL_RESERVED_MINUS ) ( SQL92_RESERVED_ALL )? subquery_basic_elements ) -> template( \"not implemented: \";
	public final PLSQLPrinter.subquery_operation_part_return subquery_operation_part() throws RecognitionException {
		PLSQLPrinter.subquery_operation_part_return retval = new PLSQLPrinter.subquery_operation_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1131:5: ( ^( ( SQL92_RESERVED_UNION | SQL92_RESERVED_INTERSECT | PLSQL_RESERVED_MINUS ) ( SQL92_RESERVED_ALL )? subquery_basic_elements ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1131:10: ^( ( SQL92_RESERVED_UNION | SQL92_RESERVED_INTERSECT | PLSQL_RESERVED_MINUS ) ( SQL92_RESERVED_ALL )? subquery_basic_elements )
			{
			// PLSQLPrinter.g:1131:12: ( SQL92_RESERVED_UNION | SQL92_RESERVED_INTERSECT | PLSQL_RESERVED_MINUS )
			int alt233=3;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_UNION:
				{
				alt233=1;
				}
				break;
			case SQL92_RESERVED_INTERSECT:
				{
				alt233=2;
				}
				break;
			case PLSQL_RESERVED_MINUS:
				{
				alt233=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 233, 0, input);
				throw nvae;
			}
			switch (alt233) {
				case 1 :
					// PLSQLPrinter.g:1131:13: SQL92_RESERVED_UNION
					{
					match(input,SQL92_RESERVED_UNION,FOLLOW_SQL92_RESERVED_UNION_in_subquery_operation_part10303); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1131:34: SQL92_RESERVED_INTERSECT
					{
					match(input,SQL92_RESERVED_INTERSECT,FOLLOW_SQL92_RESERVED_INTERSECT_in_subquery_operation_part10305); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:1131:59: PLSQL_RESERVED_MINUS
					{
					match(input,PLSQL_RESERVED_MINUS,FOLLOW_PLSQL_RESERVED_MINUS_in_subquery_operation_part10307); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1131:81: ( SQL92_RESERVED_ALL )?
			int alt234=2;
			int LA234_0 = input.LA(1);
			if ( (LA234_0==SQL92_RESERVED_ALL) ) {
				alt234=1;
			}
			switch (alt234) {
				case 1 :
					// PLSQLPrinter.g:1131:81: SQL92_RESERVED_ALL
					{
					match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_subquery_operation_part10310); 
					}
					break;

			}

			pushFollow(FOLLOW_subquery_basic_elements_in_subquery_operation_part10313);
			subquery_basic_elements();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1132:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subquery_operation_part"


	public static class subquery_basic_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subquery_basic_elements"
	// PLSQLPrinter.g:1135:1: subquery_basic_elements : ( query_block -> template( \"not implemented: \"| subquery -> template( \"not implemented: \");
	public final PLSQLPrinter.subquery_basic_elements_return subquery_basic_elements() throws RecognitionException {
		PLSQLPrinter.subquery_basic_elements_return retval = new PLSQLPrinter.subquery_basic_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1136:5: ( query_block -> template( \"not implemented: \"| subquery -> template( \"not implemented: \")
			int alt235=2;
			int LA235_0 = input.LA(1);
			if ( (LA235_0==SQL92_RESERVED_SELECT) ) {
				alt235=1;
			}
			else if ( (LA235_0==SUBQUERY) ) {
				alt235=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 235, 0, input);
				throw nvae;
			}

			switch (alt235) {
				case 1 :
					// PLSQLPrinter.g:1136:10: query_block
					{
					pushFollow(FOLLOW_query_block_in_subquery_basic_elements10348);
					query_block();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1137:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1138:10: subquery
					{
					pushFollow(FOLLOW_subquery_in_subquery_basic_elements10373);
					subquery();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1139:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subquery_basic_elements"


	public static class query_block_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "query_block"
	// PLSQLPrinter.g:1142:1: query_block : ^( SQL92_RESERVED_SELECT from_clause ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )? ( SQL92_RESERVED_ALL )? ( ASTERISK | ^( SELECT_LIST ( selected_element )+ ) ) ( into_clause )? ( where_clause )? ( hierarchical_query_clause )? ( group_by_clause )? ( having_clause )? ( model_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.query_block_return query_block() throws RecognitionException {
		PLSQLPrinter.query_block_return retval = new PLSQLPrinter.query_block_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1143:5: ( ^( SQL92_RESERVED_SELECT from_clause ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )? ( SQL92_RESERVED_ALL )? ( ASTERISK | ^( SELECT_LIST ( selected_element )+ ) ) ( into_clause )? ( where_clause )? ( hierarchical_query_clause )? ( group_by_clause )? ( having_clause )? ( model_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1143:10: ^( SQL92_RESERVED_SELECT from_clause ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )? ( SQL92_RESERVED_ALL )? ( ASTERISK | ^( SELECT_LIST ( selected_element )+ ) ) ( into_clause )? ( where_clause )? ( hierarchical_query_clause )? ( group_by_clause )? ( having_clause )? ( model_clause )? )
			{
			match(input,SQL92_RESERVED_SELECT,FOLLOW_SQL92_RESERVED_SELECT_in_query_block10408); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_from_clause_in_query_block10423);
			from_clause();
			state._fsp--;

			// PLSQLPrinter.g:1145:13: ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )?
			int alt236=3;
			int LA236_0 = input.LA(1);
			if ( (LA236_0==SQL92_RESERVED_DISTINCT) ) {
				alt236=1;
			}
			else if ( (LA236_0==SQL92_RESERVED_UNIQUE) ) {
				alt236=2;
			}
			switch (alt236) {
				case 1 :
					// PLSQLPrinter.g:1145:14: SQL92_RESERVED_DISTINCT
					{
					match(input,SQL92_RESERVED_DISTINCT,FOLLOW_SQL92_RESERVED_DISTINCT_in_query_block10439); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1145:38: SQL92_RESERVED_UNIQUE
					{
					match(input,SQL92_RESERVED_UNIQUE,FOLLOW_SQL92_RESERVED_UNIQUE_in_query_block10441); 
					}
					break;

			}

			// PLSQLPrinter.g:1145:62: ( SQL92_RESERVED_ALL )?
			int alt237=2;
			int LA237_0 = input.LA(1);
			if ( (LA237_0==SQL92_RESERVED_ALL) ) {
				alt237=1;
			}
			switch (alt237) {
				case 1 :
					// PLSQLPrinter.g:1145:62: SQL92_RESERVED_ALL
					{
					match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_query_block10445); 
					}
					break;

			}

			// PLSQLPrinter.g:1146:13: ( ASTERISK | ^( SELECT_LIST ( selected_element )+ ) )
			int alt239=2;
			int LA239_0 = input.LA(1);
			if ( (LA239_0==ASTERISK) ) {
				alt239=1;
			}
			else if ( (LA239_0==SELECT_LIST) ) {
				alt239=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 239, 0, input);
				throw nvae;
			}

			switch (alt239) {
				case 1 :
					// PLSQLPrinter.g:1146:18: ASTERISK
					{
					match(input,ASTERISK,FOLLOW_ASTERISK_in_query_block10466); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1147:18: ^( SELECT_LIST ( selected_element )+ )
					{
					match(input,SELECT_LIST,FOLLOW_SELECT_LIST_in_query_block10486); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1147:32: ( selected_element )+
					int cnt238=0;
					loop238:
					while (true) {
						int alt238=2;
						int LA238_0 = input.LA(1);
						if ( (LA238_0==SELECT_ITEM) ) {
							alt238=1;
						}

						switch (alt238) {
						case 1 :
							// PLSQLPrinter.g:1147:32: selected_element
							{
							pushFollow(FOLLOW_selected_element_in_query_block10488);
							selected_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt238 >= 1 ) break loop238;
							EarlyExitException eee = new EarlyExitException(238, input);
							throw eee;
						}
						cnt238++;
					}

					match(input, Token.UP, null); 

					}
					break;

			}

			// PLSQLPrinter.g:1149:13: ( into_clause )?
			int alt240=2;
			int LA240_0 = input.LA(1);
			if ( (LA240_0==SQL92_RESERVED_INTO||LA240_0==BULK_VK) ) {
				alt240=1;
			}
			switch (alt240) {
				case 1 :
					// PLSQLPrinter.g:1149:13: into_clause
					{
					pushFollow(FOLLOW_into_clause_in_query_block10518);
					into_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1149:26: ( where_clause )?
			int alt241=2;
			int LA241_0 = input.LA(1);
			if ( (LA241_0==SQL92_RESERVED_WHERE) ) {
				alt241=1;
			}
			switch (alt241) {
				case 1 :
					// PLSQLPrinter.g:1149:26: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_query_block10521);
					where_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1149:40: ( hierarchical_query_clause )?
			int alt242=2;
			int LA242_0 = input.LA(1);
			if ( (LA242_0==HIERARCHICAL) ) {
				alt242=1;
			}
			switch (alt242) {
				case 1 :
					// PLSQLPrinter.g:1149:40: hierarchical_query_clause
					{
					pushFollow(FOLLOW_hierarchical_query_clause_in_query_block10524);
					hierarchical_query_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1150:13: ( group_by_clause )?
			int alt243=2;
			int LA243_0 = input.LA(1);
			if ( (LA243_0==SQL92_RESERVED_GROUP) ) {
				alt243=1;
			}
			switch (alt243) {
				case 1 :
					// PLSQLPrinter.g:1150:13: group_by_clause
					{
					pushFollow(FOLLOW_group_by_clause_in_query_block10540);
					group_by_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1150:30: ( having_clause )?
			int alt244=2;
			int LA244_0 = input.LA(1);
			if ( (LA244_0==SQL92_RESERVED_HAVING) ) {
				alt244=1;
			}
			switch (alt244) {
				case 1 :
					// PLSQLPrinter.g:1150:30: having_clause
					{
					pushFollow(FOLLOW_having_clause_in_query_block10543);
					having_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1150:45: ( model_clause )?
			int alt245=2;
			int LA245_0 = input.LA(1);
			if ( (LA245_0==PLSQL_NON_RESERVED_MODEL) ) {
				alt245=1;
			}
			switch (alt245) {
				case 1 :
					// PLSQLPrinter.g:1150:45: model_clause
					{
					pushFollow(FOLLOW_model_clause_in_query_block10546);
					model_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1152:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "query_block"


	public static class selected_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "selected_element"
	// PLSQLPrinter.g:1155:1: selected_element : ^( SELECT_ITEM expression ( alias )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.selected_element_return selected_element() throws RecognitionException {
		PLSQLPrinter.selected_element_return retval = new PLSQLPrinter.selected_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1156:5: ( ^( SELECT_ITEM expression ( alias )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1156:10: ^( SELECT_ITEM expression ( alias )? )
			{
			match(input,SELECT_ITEM,FOLLOW_SELECT_ITEM_in_selected_element10592); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_selected_element10594);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:1156:35: ( alias )?
			int alt246=2;
			int LA246_0 = input.LA(1);
			if ( (LA246_0==ALIAS) ) {
				alt246=1;
			}
			switch (alt246) {
				case 1 :
					// PLSQLPrinter.g:1156:35: alias
					{
					pushFollow(FOLLOW_alias_in_selected_element10596);
					alias();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1157:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "selected_element"


	public static class from_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "from_clause"
	// PLSQLPrinter.g:1160:1: from_clause : ^( SQL92_RESERVED_FROM ( table_ref )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.from_clause_return from_clause() throws RecognitionException {
		PLSQLPrinter.from_clause_return retval = new PLSQLPrinter.from_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1161:5: ( ^( SQL92_RESERVED_FROM ( table_ref )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1161:10: ^( SQL92_RESERVED_FROM ( table_ref )+ )
			{
			match(input,SQL92_RESERVED_FROM,FOLLOW_SQL92_RESERVED_FROM_in_from_clause10633); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1161:32: ( table_ref )+
			int cnt247=0;
			loop247:
			while (true) {
				int alt247=2;
				int LA247_0 = input.LA(1);
				if ( (LA247_0==TABLE_REF) ) {
					alt247=1;
				}

				switch (alt247) {
				case 1 :
					// PLSQLPrinter.g:1161:32: table_ref
					{
					pushFollow(FOLLOW_table_ref_in_from_clause10635);
					table_ref();
					state._fsp--;

					}
					break;

				default :
					if ( cnt247 >= 1 ) break loop247;
					EarlyExitException eee = new EarlyExitException(247, input);
					throw eee;
				}
				cnt247++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1162:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "from_clause"


	public static class table_ref_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "table_ref"
	// PLSQLPrinter.g:1165:1: table_ref : ^( TABLE_REF table_ref_aux ( join_clause )* ) -> template( \"not implemented: \";
	public final PLSQLPrinter.table_ref_return table_ref() throws RecognitionException {
		PLSQLPrinter.table_ref_return retval = new PLSQLPrinter.table_ref_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1166:5: ( ^( TABLE_REF table_ref_aux ( join_clause )* ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1166:10: ^( TABLE_REF table_ref_aux ( join_clause )* )
			{
			match(input,TABLE_REF,FOLLOW_TABLE_REF_in_table_ref10672); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_table_ref_aux_in_table_ref10674);
			table_ref_aux();
			state._fsp--;

			// PLSQLPrinter.g:1166:36: ( join_clause )*
			loop248:
			while (true) {
				int alt248=2;
				int LA248_0 = input.LA(1);
				if ( (LA248_0==JOIN_DEF) ) {
					alt248=1;
				}

				switch (alt248) {
				case 1 :
					// PLSQLPrinter.g:1166:36: join_clause
					{
					pushFollow(FOLLOW_join_clause_in_table_ref10676);
					join_clause();
					state._fsp--;

					}
					break;

				default :
					break loop248;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1167:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_ref"


	public static class table_ref_aux_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "table_ref_aux"
	// PLSQLPrinter.g:1170:1: table_ref_aux : ^( TABLE_REF_ELEMENT ( alias )? dml_table_expression_clause ( ONLY_VK )? ( pivot_clause )? ( unpivot_clause )? ( flashback_query_clause )* ) -> template( \"not implemented: \";
	public final PLSQLPrinter.table_ref_aux_return table_ref_aux() throws RecognitionException {
		PLSQLPrinter.table_ref_aux_return retval = new PLSQLPrinter.table_ref_aux_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1171:5: ( ^( TABLE_REF_ELEMENT ( alias )? dml_table_expression_clause ( ONLY_VK )? ( pivot_clause )? ( unpivot_clause )? ( flashback_query_clause )* ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1171:10: ^( TABLE_REF_ELEMENT ( alias )? dml_table_expression_clause ( ONLY_VK )? ( pivot_clause )? ( unpivot_clause )? ( flashback_query_clause )* )
			{
			match(input,TABLE_REF_ELEMENT,FOLLOW_TABLE_REF_ELEMENT_in_table_ref_aux10713); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1171:30: ( alias )?
			int alt249=2;
			int LA249_0 = input.LA(1);
			if ( (LA249_0==ALIAS) ) {
				alt249=1;
			}
			switch (alt249) {
				case 1 :
					// PLSQLPrinter.g:1171:30: alias
					{
					pushFollow(FOLLOW_alias_in_table_ref_aux10715);
					alias();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_dml_table_expression_clause_in_table_ref_aux10718);
			dml_table_expression_clause();
			state._fsp--;

			// PLSQLPrinter.g:1171:65: ( ONLY_VK )?
			int alt250=2;
			int LA250_0 = input.LA(1);
			if ( (LA250_0==ONLY_VK) ) {
				alt250=1;
			}
			switch (alt250) {
				case 1 :
					// PLSQLPrinter.g:1171:65: ONLY_VK
					{
					match(input,ONLY_VK,FOLLOW_ONLY_VK_in_table_ref_aux10720); 
					}
					break;

			}

			// PLSQLPrinter.g:1171:74: ( pivot_clause )?
			int alt251=2;
			int LA251_0 = input.LA(1);
			if ( (LA251_0==PIVOT_VK) ) {
				alt251=1;
			}
			switch (alt251) {
				case 1 :
					// PLSQLPrinter.g:1171:74: pivot_clause
					{
					pushFollow(FOLLOW_pivot_clause_in_table_ref_aux10723);
					pivot_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1171:88: ( unpivot_clause )?
			int alt252=2;
			int LA252_0 = input.LA(1);
			if ( (LA252_0==UNPIVOT_VK) ) {
				alt252=1;
			}
			switch (alt252) {
				case 1 :
					// PLSQLPrinter.g:1171:88: unpivot_clause
					{
					pushFollow(FOLLOW_unpivot_clause_in_table_ref_aux10726);
					unpivot_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1171:104: ( flashback_query_clause )*
			loop253:
			while (true) {
				int alt253=2;
				int LA253_0 = input.LA(1);
				if ( (LA253_0==SQL92_RESERVED_AS||LA253_0==VERSIONS_VK) ) {
					alt253=1;
				}

				switch (alt253) {
				case 1 :
					// PLSQLPrinter.g:1171:104: flashback_query_clause
					{
					pushFollow(FOLLOW_flashback_query_clause_in_table_ref_aux10729);
					flashback_query_clause();
					state._fsp--;

					}
					break;

				default :
					break loop253;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1172:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_ref_aux"


	public static class join_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "join_clause"
	// PLSQLPrinter.g:1175:1: join_clause : ^( JOIN_DEF ( CROSS_VK | NATURAL_VK )? ( INNER_VK | FULL_VK | LEFT_VK | RIGHT_VK )? table_ref_aux ( query_partition_clause )* ( join_on_part | join_using_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.join_clause_return join_clause() throws RecognitionException {
		PLSQLPrinter.join_clause_return retval = new PLSQLPrinter.join_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1176:5: ( ^( JOIN_DEF ( CROSS_VK | NATURAL_VK )? ( INNER_VK | FULL_VK | LEFT_VK | RIGHT_VK )? table_ref_aux ( query_partition_clause )* ( join_on_part | join_using_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1176:10: ^( JOIN_DEF ( CROSS_VK | NATURAL_VK )? ( INNER_VK | FULL_VK | LEFT_VK | RIGHT_VK )? table_ref_aux ( query_partition_clause )* ( join_on_part | join_using_part )? )
			{
			match(input,JOIN_DEF,FOLLOW_JOIN_DEF_in_join_clause10766); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1176:21: ( CROSS_VK | NATURAL_VK )?
			int alt254=3;
			int LA254_0 = input.LA(1);
			if ( (LA254_0==CROSS_VK) ) {
				alt254=1;
			}
			else if ( (LA254_0==NATURAL_VK) ) {
				alt254=2;
			}
			switch (alt254) {
				case 1 :
					// PLSQLPrinter.g:1176:22: CROSS_VK
					{
					match(input,CROSS_VK,FOLLOW_CROSS_VK_in_join_clause10769); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1176:31: NATURAL_VK
					{
					match(input,NATURAL_VK,FOLLOW_NATURAL_VK_in_join_clause10771); 
					}
					break;

			}

			// PLSQLPrinter.g:1176:44: ( INNER_VK | FULL_VK | LEFT_VK | RIGHT_VK )?
			int alt255=5;
			switch ( input.LA(1) ) {
				case INNER_VK:
					{
					alt255=1;
					}
					break;
				case FULL_VK:
					{
					alt255=2;
					}
					break;
				case LEFT_VK:
					{
					alt255=3;
					}
					break;
				case RIGHT_VK:
					{
					alt255=4;
					}
					break;
			}
			switch (alt255) {
				case 1 :
					// PLSQLPrinter.g:1176:45: INNER_VK
					{
					match(input,INNER_VK,FOLLOW_INNER_VK_in_join_clause10776); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1176:54: FULL_VK
					{
					match(input,FULL_VK,FOLLOW_FULL_VK_in_join_clause10778); 
					}
					break;
				case 3 :
					// PLSQLPrinter.g:1176:62: LEFT_VK
					{
					match(input,LEFT_VK,FOLLOW_LEFT_VK_in_join_clause10780); 
					}
					break;
				case 4 :
					// PLSQLPrinter.g:1176:70: RIGHT_VK
					{
					match(input,RIGHT_VK,FOLLOW_RIGHT_VK_in_join_clause10782); 
					}
					break;

			}

			pushFollow(FOLLOW_table_ref_aux_in_join_clause10786);
			table_ref_aux();
			state._fsp--;

			// PLSQLPrinter.g:1176:95: ( query_partition_clause )*
			loop256:
			while (true) {
				int alt256=2;
				int LA256_0 = input.LA(1);
				if ( (LA256_0==PARTITION_VK) ) {
					alt256=1;
				}

				switch (alt256) {
				case 1 :
					// PLSQLPrinter.g:1176:95: query_partition_clause
					{
					pushFollow(FOLLOW_query_partition_clause_in_join_clause10788);
					query_partition_clause();
					state._fsp--;

					}
					break;

				default :
					break loop256;
				}
			}

			// PLSQLPrinter.g:1176:119: ( join_on_part | join_using_part )?
			int alt257=3;
			int LA257_0 = input.LA(1);
			if ( (LA257_0==SQL92_RESERVED_ON) ) {
				alt257=1;
			}
			else if ( (LA257_0==PLSQL_NON_RESERVED_USING) ) {
				alt257=2;
			}
			switch (alt257) {
				case 1 :
					// PLSQLPrinter.g:1176:120: join_on_part
					{
					pushFollow(FOLLOW_join_on_part_in_join_clause10792);
					join_on_part();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1176:133: join_using_part
					{
					pushFollow(FOLLOW_join_using_part_in_join_clause10794);
					join_using_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1177:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "join_clause"


	public static class join_on_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "join_on_part"
	// PLSQLPrinter.g:1180:1: join_on_part : ^( SQL92_RESERVED_ON expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.join_on_part_return join_on_part() throws RecognitionException {
		PLSQLPrinter.join_on_part_return retval = new PLSQLPrinter.join_on_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1181:5: ( ^( SQL92_RESERVED_ON expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1181:10: ^( SQL92_RESERVED_ON expression )
			{
			match(input,SQL92_RESERVED_ON,FOLLOW_SQL92_RESERVED_ON_in_join_on_part10833); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_join_on_part10835);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1182:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "join_on_part"


	public static class join_using_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "join_using_part"
	// PLSQLPrinter.g:1185:1: join_using_part : ^( PLSQL_NON_RESERVED_USING ( column_name )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.join_using_part_return join_using_part() throws RecognitionException {
		PLSQLPrinter.join_using_part_return retval = new PLSQLPrinter.join_using_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1186:5: ( ^( PLSQL_NON_RESERVED_USING ( column_name )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1186:10: ^( PLSQL_NON_RESERVED_USING ( column_name )+ )
			{
			match(input,PLSQL_NON_RESERVED_USING,FOLLOW_PLSQL_NON_RESERVED_USING_in_join_using_part10872); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1186:37: ( column_name )+
			int cnt258=0;
			loop258:
			while (true) {
				int alt258=2;
				int LA258_0 = input.LA(1);
				if ( (LA258_0==COLUMN_NAME) ) {
					alt258=1;
				}

				switch (alt258) {
				case 1 :
					// PLSQLPrinter.g:1186:37: column_name
					{
					pushFollow(FOLLOW_column_name_in_join_using_part10874);
					column_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt258 >= 1 ) break loop258;
					EarlyExitException eee = new EarlyExitException(258, input);
					throw eee;
				}
				cnt258++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1187:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "join_using_part"


	public static class query_partition_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "query_partition_clause"
	// PLSQLPrinter.g:1190:1: query_partition_clause : ^( PARTITION_VK ( subquery | expression_list | ( expression )+ ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.query_partition_clause_return query_partition_clause() throws RecognitionException {
		PLSQLPrinter.query_partition_clause_return retval = new PLSQLPrinter.query_partition_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1191:5: ( ^( PARTITION_VK ( subquery | expression_list | ( expression )+ ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1191:10: ^( PARTITION_VK ( subquery | expression_list | ( expression )+ ) )
			{
			match(input,PARTITION_VK,FOLLOW_PARTITION_VK_in_query_partition_clause10911); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1191:25: ( subquery | expression_list | ( expression )+ )
			int alt260=3;
			switch ( input.LA(1) ) {
			case SUBQUERY:
				{
				alt260=1;
				}
				break;
			case EXPR_LIST:
				{
				alt260=2;
				}
				break;
			case EXPR:
			case LOGIC_EXPR:
				{
				alt260=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 260, 0, input);
				throw nvae;
			}
			switch (alt260) {
				case 1 :
					// PLSQLPrinter.g:1191:26: subquery
					{
					pushFollow(FOLLOW_subquery_in_query_partition_clause10914);
					subquery();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1191:35: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_query_partition_clause10916);
					expression_list();
					state._fsp--;

					}
					break;
				case 3 :
					// PLSQLPrinter.g:1191:51: ( expression )+
					{
					// PLSQLPrinter.g:1191:51: ( expression )+
					int cnt259=0;
					loop259:
					while (true) {
						int alt259=2;
						int LA259_0 = input.LA(1);
						if ( (LA259_0==EXPR||LA259_0==LOGIC_EXPR) ) {
							alt259=1;
						}

						switch (alt259) {
						case 1 :
							// PLSQLPrinter.g:1191:51: expression
							{
							pushFollow(FOLLOW_expression_in_query_partition_clause10918);
							expression();
							state._fsp--;

							}
							break;

						default :
							if ( cnt259 >= 1 ) break loop259;
							EarlyExitException eee = new EarlyExitException(259, input);
							throw eee;
						}
						cnt259++;
					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1192:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "query_partition_clause"


	public static class flashback_query_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "flashback_query_clause"
	// PLSQLPrinter.g:1195:1: flashback_query_clause : ^( ( VERSIONS_VK | SQL92_RESERVED_AS ) ( SCN_VK | TIMESTAMP_VK )? expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.flashback_query_clause_return flashback_query_clause() throws RecognitionException {
		PLSQLPrinter.flashback_query_clause_return retval = new PLSQLPrinter.flashback_query_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1196:5: ( ^( ( VERSIONS_VK | SQL92_RESERVED_AS ) ( SCN_VK | TIMESTAMP_VK )? expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1196:10: ^( ( VERSIONS_VK | SQL92_RESERVED_AS ) ( SCN_VK | TIMESTAMP_VK )? expression )
			{
			// PLSQLPrinter.g:1196:12: ( VERSIONS_VK | SQL92_RESERVED_AS )
			int alt261=2;
			int LA261_0 = input.LA(1);
			if ( (LA261_0==VERSIONS_VK) ) {
				alt261=1;
			}
			else if ( (LA261_0==SQL92_RESERVED_AS) ) {
				alt261=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 261, 0, input);
				throw nvae;
			}

			switch (alt261) {
				case 1 :
					// PLSQLPrinter.g:1196:13: VERSIONS_VK
					{
					match(input,VERSIONS_VK,FOLLOW_VERSIONS_VK_in_flashback_query_clause10957); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1196:25: SQL92_RESERVED_AS
					{
					match(input,SQL92_RESERVED_AS,FOLLOW_SQL92_RESERVED_AS_in_flashback_query_clause10959); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1196:44: ( SCN_VK | TIMESTAMP_VK )?
			int alt262=3;
			int LA262_0 = input.LA(1);
			if ( (LA262_0==SCN_VK) ) {
				alt262=1;
			}
			else if ( (LA262_0==TIMESTAMP_VK) ) {
				alt262=2;
			}
			switch (alt262) {
				case 1 :
					// PLSQLPrinter.g:1196:45: SCN_VK
					{
					match(input,SCN_VK,FOLLOW_SCN_VK_in_flashback_query_clause10963); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1196:52: TIMESTAMP_VK
					{
					match(input,TIMESTAMP_VK,FOLLOW_TIMESTAMP_VK_in_flashback_query_clause10965); 
					}
					break;

			}

			pushFollow(FOLLOW_expression_in_flashback_query_clause10969);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1197:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "flashback_query_clause"


	public static class pivot_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pivot_clause"
	// PLSQLPrinter.g:1200:1: pivot_clause : ^( PIVOT_VK ( XML_VK )? ( pivot_element )+ pivot_for_clause pivot_in_clause ) -> template( \"not implemented: \";
	public final PLSQLPrinter.pivot_clause_return pivot_clause() throws RecognitionException {
		PLSQLPrinter.pivot_clause_return retval = new PLSQLPrinter.pivot_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1201:5: ( ^( PIVOT_VK ( XML_VK )? ( pivot_element )+ pivot_for_clause pivot_in_clause ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1201:10: ^( PIVOT_VK ( XML_VK )? ( pivot_element )+ pivot_for_clause pivot_in_clause )
			{
			match(input,PIVOT_VK,FOLLOW_PIVOT_VK_in_pivot_clause11006); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1201:21: ( XML_VK )?
			int alt263=2;
			int LA263_0 = input.LA(1);
			if ( (LA263_0==XML_VK) ) {
				alt263=1;
			}
			switch (alt263) {
				case 1 :
					// PLSQLPrinter.g:1201:21: XML_VK
					{
					match(input,XML_VK,FOLLOW_XML_VK_in_pivot_clause11008); 
					}
					break;

			}

			// PLSQLPrinter.g:1201:29: ( pivot_element )+
			int cnt264=0;
			loop264:
			while (true) {
				int alt264=2;
				int LA264_0 = input.LA(1);
				if ( (LA264_0==PIVOT_ELEMENT) ) {
					alt264=1;
				}

				switch (alt264) {
				case 1 :
					// PLSQLPrinter.g:1201:29: pivot_element
					{
					pushFollow(FOLLOW_pivot_element_in_pivot_clause11011);
					pivot_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt264 >= 1 ) break loop264;
					EarlyExitException eee = new EarlyExitException(264, input);
					throw eee;
				}
				cnt264++;
			}

			pushFollow(FOLLOW_pivot_for_clause_in_pivot_clause11014);
			pivot_for_clause();
			state._fsp--;

			pushFollow(FOLLOW_pivot_in_clause_in_pivot_clause11016);
			pivot_in_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1202:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pivot_clause"


	public static class pivot_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pivot_element"
	// PLSQLPrinter.g:1205:1: pivot_element : ^( PIVOT_ELEMENT ( alias )? expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.pivot_element_return pivot_element() throws RecognitionException {
		PLSQLPrinter.pivot_element_return retval = new PLSQLPrinter.pivot_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1206:5: ( ^( PIVOT_ELEMENT ( alias )? expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1206:10: ^( PIVOT_ELEMENT ( alias )? expression )
			{
			match(input,PIVOT_ELEMENT,FOLLOW_PIVOT_ELEMENT_in_pivot_element11052); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1206:26: ( alias )?
			int alt265=2;
			int LA265_0 = input.LA(1);
			if ( (LA265_0==ALIAS) ) {
				alt265=1;
			}
			switch (alt265) {
				case 1 :
					// PLSQLPrinter.g:1206:26: alias
					{
					pushFollow(FOLLOW_alias_in_pivot_element11054);
					alias();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_expression_in_pivot_element11057);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1207:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pivot_element"


	public static class pivot_for_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pivot_for_clause"
	// PLSQLPrinter.g:1210:1: pivot_for_clause : ^( SQL92_RESERVED_FOR ( column_name )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.pivot_for_clause_return pivot_for_clause() throws RecognitionException {
		PLSQLPrinter.pivot_for_clause_return retval = new PLSQLPrinter.pivot_for_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1211:5: ( ^( SQL92_RESERVED_FOR ( column_name )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1211:10: ^( SQL92_RESERVED_FOR ( column_name )+ )
			{
			match(input,SQL92_RESERVED_FOR,FOLLOW_SQL92_RESERVED_FOR_in_pivot_for_clause11093); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1211:31: ( column_name )+
			int cnt266=0;
			loop266:
			while (true) {
				int alt266=2;
				int LA266_0 = input.LA(1);
				if ( (LA266_0==COLUMN_NAME) ) {
					alt266=1;
				}

				switch (alt266) {
				case 1 :
					// PLSQLPrinter.g:1211:31: column_name
					{
					pushFollow(FOLLOW_column_name_in_pivot_for_clause11095);
					column_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt266 >= 1 ) break loop266;
					EarlyExitException eee = new EarlyExitException(266, input);
					throw eee;
				}
				cnt266++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1212:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pivot_for_clause"


	public static class pivot_in_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pivot_in_clause"
	// PLSQLPrinter.g:1215:1: pivot_in_clause : ^( SQL92_RESERVED_IN ( subquery | ^( ANY_MODE ( SQL92_RESERVED_ANY )+ ) | ^( ELEMENTS_MODE ( pivot_in_clause_element )+ ) ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.pivot_in_clause_return pivot_in_clause() throws RecognitionException {
		PLSQLPrinter.pivot_in_clause_return retval = new PLSQLPrinter.pivot_in_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1216:5: ( ^( SQL92_RESERVED_IN ( subquery | ^( ANY_MODE ( SQL92_RESERVED_ANY )+ ) | ^( ELEMENTS_MODE ( pivot_in_clause_element )+ ) ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1216:10: ^( SQL92_RESERVED_IN ( subquery | ^( ANY_MODE ( SQL92_RESERVED_ANY )+ ) | ^( ELEMENTS_MODE ( pivot_in_clause_element )+ ) ) )
			{
			match(input,SQL92_RESERVED_IN,FOLLOW_SQL92_RESERVED_IN_in_pivot_in_clause11132); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1217:9: ( subquery | ^( ANY_MODE ( SQL92_RESERVED_ANY )+ ) | ^( ELEMENTS_MODE ( pivot_in_clause_element )+ ) )
			int alt269=3;
			switch ( input.LA(1) ) {
			case SUBQUERY:
				{
				alt269=1;
				}
				break;
			case ANY_MODE:
				{
				alt269=2;
				}
				break;
			case ELEMENTS_MODE:
				{
				alt269=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 269, 0, input);
				throw nvae;
			}
			switch (alt269) {
				case 1 :
					// PLSQLPrinter.g:1217:14: subquery
					{
					pushFollow(FOLLOW_subquery_in_pivot_in_clause11148);
					subquery();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1218:14: ^( ANY_MODE ( SQL92_RESERVED_ANY )+ )
					{
					match(input,ANY_MODE,FOLLOW_ANY_MODE_in_pivot_in_clause11164); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1218:25: ( SQL92_RESERVED_ANY )+
					int cnt267=0;
					loop267:
					while (true) {
						int alt267=2;
						int LA267_0 = input.LA(1);
						if ( (LA267_0==SQL92_RESERVED_ANY) ) {
							alt267=1;
						}

						switch (alt267) {
						case 1 :
							// PLSQLPrinter.g:1218:25: SQL92_RESERVED_ANY
							{
							match(input,SQL92_RESERVED_ANY,FOLLOW_SQL92_RESERVED_ANY_in_pivot_in_clause11166); 
							}
							break;

						default :
							if ( cnt267 >= 1 ) break loop267;
							EarlyExitException eee = new EarlyExitException(267, input);
							throw eee;
						}
						cnt267++;
					}

					match(input, Token.UP, null); 

					}
					break;
				case 3 :
					// PLSQLPrinter.g:1219:14: ^( ELEMENTS_MODE ( pivot_in_clause_element )+ )
					{
					match(input,ELEMENTS_MODE,FOLLOW_ELEMENTS_MODE_in_pivot_in_clause11184); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1219:30: ( pivot_in_clause_element )+
					int cnt268=0;
					loop268:
					while (true) {
						int alt268=2;
						int LA268_0 = input.LA(1);
						if ( (LA268_0==PIVOT_IN_ELEMENT) ) {
							alt268=1;
						}

						switch (alt268) {
						case 1 :
							// PLSQLPrinter.g:1219:30: pivot_in_clause_element
							{
							pushFollow(FOLLOW_pivot_in_clause_element_in_pivot_in_clause11186);
							pivot_in_clause_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt268 >= 1 ) break loop268;
							EarlyExitException eee = new EarlyExitException(268, input);
							throw eee;
						}
						cnt268++;
					}

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1222:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pivot_in_clause"


	public static class pivot_in_clause_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pivot_in_clause_element"
	// PLSQLPrinter.g:1225:1: pivot_in_clause_element : ^( PIVOT_IN_ELEMENT ( alias )? ( expression | expression_list ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.pivot_in_clause_element_return pivot_in_clause_element() throws RecognitionException {
		PLSQLPrinter.pivot_in_clause_element_return retval = new PLSQLPrinter.pivot_in_clause_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1226:5: ( ^( PIVOT_IN_ELEMENT ( alias )? ( expression | expression_list ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1226:10: ^( PIVOT_IN_ELEMENT ( alias )? ( expression | expression_list ) )
			{
			match(input,PIVOT_IN_ELEMENT,FOLLOW_PIVOT_IN_ELEMENT_in_pivot_in_clause_element11243); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1226:29: ( alias )?
			int alt270=2;
			int LA270_0 = input.LA(1);
			if ( (LA270_0==ALIAS) ) {
				alt270=1;
			}
			switch (alt270) {
				case 1 :
					// PLSQLPrinter.g:1226:29: alias
					{
					pushFollow(FOLLOW_alias_in_pivot_in_clause_element11245);
					alias();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1226:36: ( expression | expression_list )
			int alt271=2;
			int LA271_0 = input.LA(1);
			if ( (LA271_0==EXPR||LA271_0==LOGIC_EXPR) ) {
				alt271=1;
			}
			else if ( (LA271_0==EXPR_LIST) ) {
				alt271=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 271, 0, input);
				throw nvae;
			}

			switch (alt271) {
				case 1 :
					// PLSQLPrinter.g:1226:37: expression
					{
					pushFollow(FOLLOW_expression_in_pivot_in_clause_element11249);
					expression();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1226:48: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_pivot_in_clause_element11251);
					expression_list();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1227:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pivot_in_clause_element"


	public static class unpivot_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "unpivot_clause"
	// PLSQLPrinter.g:1230:1: unpivot_clause : ^( UNPIVOT_VK ( ( INCLUDE_VK | EXCLUDE_VK ) ( NULLS_VK )? )? ( column_name )+ pivot_for_clause unpivot_in_clause ) -> template( \"not implemented: \";
	public final PLSQLPrinter.unpivot_clause_return unpivot_clause() throws RecognitionException {
		PLSQLPrinter.unpivot_clause_return retval = new PLSQLPrinter.unpivot_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1231:5: ( ^( UNPIVOT_VK ( ( INCLUDE_VK | EXCLUDE_VK ) ( NULLS_VK )? )? ( column_name )+ pivot_for_clause unpivot_in_clause ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1231:10: ^( UNPIVOT_VK ( ( INCLUDE_VK | EXCLUDE_VK ) ( NULLS_VK )? )? ( column_name )+ pivot_for_clause unpivot_in_clause )
			{
			match(input,UNPIVOT_VK,FOLLOW_UNPIVOT_VK_in_unpivot_clause11288); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1231:23: ( ( INCLUDE_VK | EXCLUDE_VK ) ( NULLS_VK )? )?
			int alt274=2;
			int LA274_0 = input.LA(1);
			if ( (LA274_0==EXCLUDE_VK||LA274_0==INCLUDE_VK) ) {
				alt274=1;
			}
			switch (alt274) {
				case 1 :
					// PLSQLPrinter.g:1231:24: ( INCLUDE_VK | EXCLUDE_VK ) ( NULLS_VK )?
					{
					// PLSQLPrinter.g:1231:24: ( INCLUDE_VK | EXCLUDE_VK )
					int alt272=2;
					int LA272_0 = input.LA(1);
					if ( (LA272_0==INCLUDE_VK) ) {
						alt272=1;
					}
					else if ( (LA272_0==EXCLUDE_VK) ) {
						alt272=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 272, 0, input);
						throw nvae;
					}

					switch (alt272) {
						case 1 :
							// PLSQLPrinter.g:1231:25: INCLUDE_VK
							{
							match(input,INCLUDE_VK,FOLLOW_INCLUDE_VK_in_unpivot_clause11292); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1231:36: EXCLUDE_VK
							{
							match(input,EXCLUDE_VK,FOLLOW_EXCLUDE_VK_in_unpivot_clause11294); 
							}
							break;

					}

					// PLSQLPrinter.g:1231:48: ( NULLS_VK )?
					int alt273=2;
					int LA273_0 = input.LA(1);
					if ( (LA273_0==NULLS_VK) ) {
						alt273=1;
					}
					switch (alt273) {
						case 1 :
							// PLSQLPrinter.g:1231:48: NULLS_VK
							{
							match(input,NULLS_VK,FOLLOW_NULLS_VK_in_unpivot_clause11297); 
							}
							break;

					}

					}
					break;

			}

			// PLSQLPrinter.g:1231:60: ( column_name )+
			int cnt275=0;
			loop275:
			while (true) {
				int alt275=2;
				int LA275_0 = input.LA(1);
				if ( (LA275_0==COLUMN_NAME) ) {
					alt275=1;
				}

				switch (alt275) {
				case 1 :
					// PLSQLPrinter.g:1231:60: column_name
					{
					pushFollow(FOLLOW_column_name_in_unpivot_clause11302);
					column_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt275 >= 1 ) break loop275;
					EarlyExitException eee = new EarlyExitException(275, input);
					throw eee;
				}
				cnt275++;
			}

			pushFollow(FOLLOW_pivot_for_clause_in_unpivot_clause11305);
			pivot_for_clause();
			state._fsp--;

			pushFollow(FOLLOW_unpivot_in_clause_in_unpivot_clause11307);
			unpivot_in_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1232:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "unpivot_clause"


	public static class unpivot_in_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "unpivot_in_clause"
	// PLSQLPrinter.g:1235:1: unpivot_in_clause : ^( SQL92_RESERVED_IN ( unpivot_in_element )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.unpivot_in_clause_return unpivot_in_clause() throws RecognitionException {
		PLSQLPrinter.unpivot_in_clause_return retval = new PLSQLPrinter.unpivot_in_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1236:5: ( ^( SQL92_RESERVED_IN ( unpivot_in_element )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1236:10: ^( SQL92_RESERVED_IN ( unpivot_in_element )+ )
			{
			match(input,SQL92_RESERVED_IN,FOLLOW_SQL92_RESERVED_IN_in_unpivot_in_clause11343); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1236:30: ( unpivot_in_element )+
			int cnt276=0;
			loop276:
			while (true) {
				int alt276=2;
				int LA276_0 = input.LA(1);
				if ( (LA276_0==UNPIVOT_IN_ELEMENT) ) {
					alt276=1;
				}

				switch (alt276) {
				case 1 :
					// PLSQLPrinter.g:1236:30: unpivot_in_element
					{
					pushFollow(FOLLOW_unpivot_in_element_in_unpivot_in_clause11345);
					unpivot_in_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt276 >= 1 ) break loop276;
					EarlyExitException eee = new EarlyExitException(276, input);
					throw eee;
				}
				cnt276++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1237:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "unpivot_in_clause"


	public static class unpivot_in_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "unpivot_in_element"
	// PLSQLPrinter.g:1240:1: unpivot_in_element : ^( UNPIVOT_IN_ELEMENT ( column_name )+ ^( PIVOT_ALIAS ( expression | expression_list ) ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.unpivot_in_element_return unpivot_in_element() throws RecognitionException {
		PLSQLPrinter.unpivot_in_element_return retval = new PLSQLPrinter.unpivot_in_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1241:5: ( ^( UNPIVOT_IN_ELEMENT ( column_name )+ ^( PIVOT_ALIAS ( expression | expression_list ) ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1241:10: ^( UNPIVOT_IN_ELEMENT ( column_name )+ ^( PIVOT_ALIAS ( expression | expression_list ) ) )
			{
			match(input,UNPIVOT_IN_ELEMENT,FOLLOW_UNPIVOT_IN_ELEMENT_in_unpivot_in_element11382); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1241:31: ( column_name )+
			int cnt277=0;
			loop277:
			while (true) {
				int alt277=2;
				int LA277_0 = input.LA(1);
				if ( (LA277_0==COLUMN_NAME) ) {
					alt277=1;
				}

				switch (alt277) {
				case 1 :
					// PLSQLPrinter.g:1241:31: column_name
					{
					pushFollow(FOLLOW_column_name_in_unpivot_in_element11384);
					column_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt277 >= 1 ) break loop277;
					EarlyExitException eee = new EarlyExitException(277, input);
					throw eee;
				}
				cnt277++;
			}

			match(input,PIVOT_ALIAS,FOLLOW_PIVOT_ALIAS_in_unpivot_in_element11388); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1241:58: ( expression | expression_list )
			int alt278=2;
			int LA278_0 = input.LA(1);
			if ( (LA278_0==EXPR||LA278_0==LOGIC_EXPR) ) {
				alt278=1;
			}
			else if ( (LA278_0==EXPR_LIST) ) {
				alt278=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 278, 0, input);
				throw nvae;
			}

			switch (alt278) {
				case 1 :
					// PLSQLPrinter.g:1241:59: expression
					{
					pushFollow(FOLLOW_expression_in_unpivot_in_element11391);
					expression();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1241:70: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_unpivot_in_element11393);
					expression_list();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1242:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "unpivot_in_element"


	public static class hierarchical_query_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "hierarchical_query_clause"
	// PLSQLPrinter.g:1245:1: hierarchical_query_clause : ^( HIERARCHICAL ( start_part )? ^( SQL92_RESERVED_CONNECT ( NOCYCLE_VK )? expression ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.hierarchical_query_clause_return hierarchical_query_clause() throws RecognitionException {
		PLSQLPrinter.hierarchical_query_clause_return retval = new PLSQLPrinter.hierarchical_query_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1246:5: ( ^( HIERARCHICAL ( start_part )? ^( SQL92_RESERVED_CONNECT ( NOCYCLE_VK )? expression ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1246:10: ^( HIERARCHICAL ( start_part )? ^( SQL92_RESERVED_CONNECT ( NOCYCLE_VK )? expression ) )
			{
			match(input,HIERARCHICAL,FOLLOW_HIERARCHICAL_in_hierarchical_query_clause11431); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1246:25: ( start_part )?
			int alt279=2;
			int LA279_0 = input.LA(1);
			if ( (LA279_0==PLSQL_RESERVED_START) ) {
				alt279=1;
			}
			switch (alt279) {
				case 1 :
					// PLSQLPrinter.g:1246:25: start_part
					{
					pushFollow(FOLLOW_start_part_in_hierarchical_query_clause11433);
					start_part();
					state._fsp--;

					}
					break;

			}

			match(input,SQL92_RESERVED_CONNECT,FOLLOW_SQL92_RESERVED_CONNECT_in_hierarchical_query_clause11437); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1246:62: ( NOCYCLE_VK )?
			int alt280=2;
			int LA280_0 = input.LA(1);
			if ( (LA280_0==NOCYCLE_VK) ) {
				alt280=1;
			}
			switch (alt280) {
				case 1 :
					// PLSQLPrinter.g:1246:62: NOCYCLE_VK
					{
					match(input,NOCYCLE_VK,FOLLOW_NOCYCLE_VK_in_hierarchical_query_clause11439); 
					}
					break;

			}

			pushFollow(FOLLOW_expression_in_hierarchical_query_clause11442);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1247:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "hierarchical_query_clause"


	public static class start_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "start_part"
	// PLSQLPrinter.g:1250:1: start_part : ^( PLSQL_RESERVED_START expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.start_part_return start_part() throws RecognitionException {
		PLSQLPrinter.start_part_return retval = new PLSQLPrinter.start_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1251:5: ( ^( PLSQL_RESERVED_START expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1251:10: ^( PLSQL_RESERVED_START expression )
			{
			match(input,PLSQL_RESERVED_START,FOLLOW_PLSQL_RESERVED_START_in_start_part11479); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_start_part11481);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1252:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "start_part"


	public static class group_by_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "group_by_clause"
	// PLSQLPrinter.g:1255:1: group_by_clause : ^( SQL92_RESERVED_GROUP ( group_by_element )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.group_by_clause_return group_by_clause() throws RecognitionException {
		PLSQLPrinter.group_by_clause_return retval = new PLSQLPrinter.group_by_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1256:5: ( ^( SQL92_RESERVED_GROUP ( group_by_element )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1256:10: ^( SQL92_RESERVED_GROUP ( group_by_element )+ )
			{
			match(input,SQL92_RESERVED_GROUP,FOLLOW_SQL92_RESERVED_GROUP_in_group_by_clause11517); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1256:33: ( group_by_element )+
			int cnt281=0;
			loop281:
			while (true) {
				int alt281=2;
				int LA281_0 = input.LA(1);
				if ( (LA281_0==GROUP_BY_ELEMENT) ) {
					alt281=1;
				}

				switch (alt281) {
				case 1 :
					// PLSQLPrinter.g:1256:33: group_by_element
					{
					pushFollow(FOLLOW_group_by_element_in_group_by_clause11519);
					group_by_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt281 >= 1 ) break loop281;
					EarlyExitException eee = new EarlyExitException(281, input);
					throw eee;
				}
				cnt281++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1257:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "group_by_clause"


	public static class group_by_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "group_by_element"
	// PLSQLPrinter.g:1260:1: group_by_element : ^( GROUP_BY_ELEMENT group_by_elements ) -> template( \"not implemented: \";
	public final PLSQLPrinter.group_by_element_return group_by_element() throws RecognitionException {
		PLSQLPrinter.group_by_element_return retval = new PLSQLPrinter.group_by_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1261:5: ( ^( GROUP_BY_ELEMENT group_by_elements ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1261:10: ^( GROUP_BY_ELEMENT group_by_elements )
			{
			match(input,GROUP_BY_ELEMENT,FOLLOW_GROUP_BY_ELEMENT_in_group_by_element11556); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_group_by_elements_in_group_by_element11558);
			group_by_elements();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1262:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "group_by_element"


	public static class group_by_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "group_by_elements"
	// PLSQLPrinter.g:1265:1: group_by_elements : ( ^( GROUPING_VK ( groupin_set )+ ) -> template( \"not implemented: \"| grouping_element -> template( \"not implemented: \");
	public final PLSQLPrinter.group_by_elements_return group_by_elements() throws RecognitionException {
		PLSQLPrinter.group_by_elements_return retval = new PLSQLPrinter.group_by_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1266:5: ( ^( GROUPING_VK ( groupin_set )+ ) -> template( \"not implemented: \"| grouping_element -> template( \"not implemented: \")
			int alt283=2;
			int LA283_0 = input.LA(1);
			if ( (LA283_0==GROUPING_VK) ) {
				alt283=1;
			}
			else if ( (LA283_0==CUBE_VK||(LA283_0 >= EXPR && LA283_0 <= EXPR_LIST)||LA283_0==LOGIC_EXPR||LA283_0==ROLLUP_VK) ) {
				alt283=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 283, 0, input);
				throw nvae;
			}

			switch (alt283) {
				case 1 :
					// PLSQLPrinter.g:1266:10: ^( GROUPING_VK ( groupin_set )+ )
					{
					match(input,GROUPING_VK,FOLLOW_GROUPING_VK_in_group_by_elements11594); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1266:24: ( groupin_set )+
					int cnt282=0;
					loop282:
					while (true) {
						int alt282=2;
						int LA282_0 = input.LA(1);
						if ( (LA282_0==GROUPIN_SET) ) {
							alt282=1;
						}

						switch (alt282) {
						case 1 :
							// PLSQLPrinter.g:1266:24: groupin_set
							{
							pushFollow(FOLLOW_groupin_set_in_group_by_elements11596);
							groupin_set();
							state._fsp--;

							}
							break;

						default :
							if ( cnt282 >= 1 ) break loop282;
							EarlyExitException eee = new EarlyExitException(282, input);
							throw eee;
						}
						cnt282++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1267:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1268:10: grouping_element
					{
					pushFollow(FOLLOW_grouping_element_in_group_by_elements11623);
					grouping_element();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1269:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "group_by_elements"


	public static class groupin_set_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "groupin_set"
	// PLSQLPrinter.g:1272:1: groupin_set : ^( GROUPIN_SET grouping_element ) -> template( \"not implemented: \";
	public final PLSQLPrinter.groupin_set_return groupin_set() throws RecognitionException {
		PLSQLPrinter.groupin_set_return retval = new PLSQLPrinter.groupin_set_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1273:5: ( ^( GROUPIN_SET grouping_element ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1273:10: ^( GROUPIN_SET grouping_element )
			{
			match(input,GROUPIN_SET,FOLLOW_GROUPIN_SET_in_groupin_set11659); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_grouping_element_in_groupin_set11661);
			grouping_element();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1274:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "groupin_set"


	public static class grouping_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "grouping_element"
	// PLSQLPrinter.g:1277:1: grouping_element : ( ^( ( ROLLUP_VK | CUBE_VK ) ( grouping_element )+ ) -> template( \"not implemented: \"| expression_list -> template( \"not implemented: \"| expression -> template( \"not implemented: \");
	public final PLSQLPrinter.grouping_element_return grouping_element() throws RecognitionException {
		PLSQLPrinter.grouping_element_return retval = new PLSQLPrinter.grouping_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1278:5: ( ^( ( ROLLUP_VK | CUBE_VK ) ( grouping_element )+ ) -> template( \"not implemented: \"| expression_list -> template( \"not implemented: \"| expression -> template( \"not implemented: \")
			int alt286=3;
			switch ( input.LA(1) ) {
			case CUBE_VK:
			case ROLLUP_VK:
				{
				alt286=1;
				}
				break;
			case EXPR_LIST:
				{
				alt286=2;
				}
				break;
			case EXPR:
			case LOGIC_EXPR:
				{
				alt286=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 286, 0, input);
				throw nvae;
			}
			switch (alt286) {
				case 1 :
					// PLSQLPrinter.g:1278:10: ^( ( ROLLUP_VK | CUBE_VK ) ( grouping_element )+ )
					{
					// PLSQLPrinter.g:1278:12: ( ROLLUP_VK | CUBE_VK )
					int alt284=2;
					int LA284_0 = input.LA(1);
					if ( (LA284_0==ROLLUP_VK) ) {
						alt284=1;
					}
					else if ( (LA284_0==CUBE_VK) ) {
						alt284=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 284, 0, input);
						throw nvae;
					}

					switch (alt284) {
						case 1 :
							// PLSQLPrinter.g:1278:13: ROLLUP_VK
							{
							match(input,ROLLUP_VK,FOLLOW_ROLLUP_VK_in_grouping_element11698); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1278:23: CUBE_VK
							{
							match(input,CUBE_VK,FOLLOW_CUBE_VK_in_grouping_element11700); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1278:32: ( grouping_element )+
					int cnt285=0;
					loop285:
					while (true) {
						int alt285=2;
						int LA285_0 = input.LA(1);
						if ( (LA285_0==CUBE_VK||(LA285_0 >= EXPR && LA285_0 <= EXPR_LIST)||LA285_0==LOGIC_EXPR||LA285_0==ROLLUP_VK) ) {
							alt285=1;
						}

						switch (alt285) {
						case 1 :
							// PLSQLPrinter.g:1278:32: grouping_element
							{
							pushFollow(FOLLOW_grouping_element_in_grouping_element11703);
							grouping_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt285 >= 1 ) break loop285;
							EarlyExitException eee = new EarlyExitException(285, input);
							throw eee;
						}
						cnt285++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1279:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1280:10: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_grouping_element11730);
					expression_list();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1281:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1282:10: expression
					{
					pushFollow(FOLLOW_expression_in_grouping_element11755);
					expression();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1283:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "grouping_element"


	public static class having_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "having_clause"
	// PLSQLPrinter.g:1286:1: having_clause : ^( SQL92_RESERVED_HAVING expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.having_clause_return having_clause() throws RecognitionException {
		PLSQLPrinter.having_clause_return retval = new PLSQLPrinter.having_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1287:5: ( ^( SQL92_RESERVED_HAVING expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1287:10: ^( SQL92_RESERVED_HAVING expression )
			{
			match(input,SQL92_RESERVED_HAVING,FOLLOW_SQL92_RESERVED_HAVING_in_having_clause11791); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_having_clause11793);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1288:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "having_clause"


	public static class model_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_clause"
	// PLSQLPrinter.g:1291:1: model_clause : ^( PLSQL_NON_RESERVED_MODEL main_model ( cell_reference_options )* ( return_rows_clause )? ( reference_model )* ) -> template( \"not implemented: \";
	public final PLSQLPrinter.model_clause_return model_clause() throws RecognitionException {
		PLSQLPrinter.model_clause_return retval = new PLSQLPrinter.model_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1292:5: ( ^( PLSQL_NON_RESERVED_MODEL main_model ( cell_reference_options )* ( return_rows_clause )? ( reference_model )* ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1292:10: ^( PLSQL_NON_RESERVED_MODEL main_model ( cell_reference_options )* ( return_rows_clause )? ( reference_model )* )
			{
			match(input,PLSQL_NON_RESERVED_MODEL,FOLLOW_PLSQL_NON_RESERVED_MODEL_in_model_clause11829); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_main_model_in_model_clause11831);
			main_model();
			state._fsp--;

			// PLSQLPrinter.g:1292:48: ( cell_reference_options )*
			loop287:
			while (true) {
				int alt287=2;
				int LA287_0 = input.LA(1);
				if ( (LA287_0==SQL92_RESERVED_UNIQUE||LA287_0==IGNORE_VK||LA287_0==KEEP_VK) ) {
					alt287=1;
				}

				switch (alt287) {
				case 1 :
					// PLSQLPrinter.g:1292:48: cell_reference_options
					{
					pushFollow(FOLLOW_cell_reference_options_in_model_clause11833);
					cell_reference_options();
					state._fsp--;

					}
					break;

				default :
					break loop287;
				}
			}

			// PLSQLPrinter.g:1292:72: ( return_rows_clause )?
			int alt288=2;
			int LA288_0 = input.LA(1);
			if ( (LA288_0==RETURN_VK) ) {
				alt288=1;
			}
			switch (alt288) {
				case 1 :
					// PLSQLPrinter.g:1292:72: return_rows_clause
					{
					pushFollow(FOLLOW_return_rows_clause_in_model_clause11836);
					return_rows_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1292:92: ( reference_model )*
			loop289:
			while (true) {
				int alt289=2;
				int LA289_0 = input.LA(1);
				if ( (LA289_0==REFERENCE_VK) ) {
					alt289=1;
				}

				switch (alt289) {
				case 1 :
					// PLSQLPrinter.g:1292:92: reference_model
					{
					pushFollow(FOLLOW_reference_model_in_model_clause11839);
					reference_model();
					state._fsp--;

					}
					break;

				default :
					break loop289;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1293:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_clause"


	public static class cell_reference_options_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "cell_reference_options"
	// PLSQLPrinter.g:1296:1: cell_reference_options : ( ^( ( IGNORE_VK | KEEP_VK ) NAV_VK ) | ^( SQL92_RESERVED_UNIQUE ( DIMENSION_VK | SINGLE_VK ) ) -> template( \"not implemented: \");
	public final PLSQLPrinter.cell_reference_options_return cell_reference_options() throws RecognitionException {
		PLSQLPrinter.cell_reference_options_return retval = new PLSQLPrinter.cell_reference_options_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1297:5: ( ^( ( IGNORE_VK | KEEP_VK ) NAV_VK ) | ^( SQL92_RESERVED_UNIQUE ( DIMENSION_VK | SINGLE_VK ) ) -> template( \"not implemented: \")
			int alt291=2;
			int LA291_0 = input.LA(1);
			if ( (LA291_0==IGNORE_VK||LA291_0==KEEP_VK) ) {
				alt291=1;
			}
			else if ( (LA291_0==SQL92_RESERVED_UNIQUE) ) {
				alt291=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 291, 0, input);
				throw nvae;
			}

			switch (alt291) {
				case 1 :
					// PLSQLPrinter.g:1297:10: ^( ( IGNORE_VK | KEEP_VK ) NAV_VK )
					{
					if ( input.LA(1)==IGNORE_VK||input.LA(1)==KEEP_VK ) {
						input.consume();
						state.errorRecovery=false;
					}
					else {
						MismatchedSetException mse = new MismatchedSetException(null,input);
						throw mse;
					}
					match(input, Token.DOWN, null); 
					match(input,NAV_VK,FOLLOW_NAV_VK_in_cell_reference_options11882); 
					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1298:10: ^( SQL92_RESERVED_UNIQUE ( DIMENSION_VK | SINGLE_VK ) )
					{
					match(input,SQL92_RESERVED_UNIQUE,FOLLOW_SQL92_RESERVED_UNIQUE_in_cell_reference_options11895); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1298:34: ( DIMENSION_VK | SINGLE_VK )
					int alt290=2;
					int LA290_0 = input.LA(1);
					if ( (LA290_0==DIMENSION_VK) ) {
						alt290=1;
					}
					else if ( (LA290_0==SINGLE_VK) ) {
						alt290=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 290, 0, input);
						throw nvae;
					}

					switch (alt290) {
						case 1 :
							// PLSQLPrinter.g:1298:35: DIMENSION_VK
							{
							match(input,DIMENSION_VK,FOLLOW_DIMENSION_VK_in_cell_reference_options11898); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1298:48: SINGLE_VK
							{
							match(input,SINGLE_VK,FOLLOW_SINGLE_VK_in_cell_reference_options11900); 
							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1299:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cell_reference_options"


	public static class return_rows_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "return_rows_clause"
	// PLSQLPrinter.g:1302:1: return_rows_clause : ^( RETURN_VK ( UPDATED_VK | SQL92_RESERVED_ALL ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.return_rows_clause_return return_rows_clause() throws RecognitionException {
		PLSQLPrinter.return_rows_clause_return retval = new PLSQLPrinter.return_rows_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1303:5: ( ^( RETURN_VK ( UPDATED_VK | SQL92_RESERVED_ALL ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1303:10: ^( RETURN_VK ( UPDATED_VK | SQL92_RESERVED_ALL ) )
			{
			match(input,RETURN_VK,FOLLOW_RETURN_VK_in_return_rows_clause11937); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1303:22: ( UPDATED_VK | SQL92_RESERVED_ALL )
			int alt292=2;
			int LA292_0 = input.LA(1);
			if ( (LA292_0==UPDATED_VK) ) {
				alt292=1;
			}
			else if ( (LA292_0==SQL92_RESERVED_ALL) ) {
				alt292=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 292, 0, input);
				throw nvae;
			}

			switch (alt292) {
				case 1 :
					// PLSQLPrinter.g:1303:23: UPDATED_VK
					{
					match(input,UPDATED_VK,FOLLOW_UPDATED_VK_in_return_rows_clause11940); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1303:34: SQL92_RESERVED_ALL
					{
					match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_return_rows_clause11942); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1304:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "return_rows_clause"


	public static class reference_model_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "reference_model"
	// PLSQLPrinter.g:1307:1: reference_model : ^( REFERENCE_VK reference_model_name subquery model_column_clauses ( cell_reference_options )* ) -> template( \"not implemented: \";
	public final PLSQLPrinter.reference_model_return reference_model() throws RecognitionException {
		PLSQLPrinter.reference_model_return retval = new PLSQLPrinter.reference_model_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1308:5: ( ^( REFERENCE_VK reference_model_name subquery model_column_clauses ( cell_reference_options )* ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1308:10: ^( REFERENCE_VK reference_model_name subquery model_column_clauses ( cell_reference_options )* )
			{
			match(input,REFERENCE_VK,FOLLOW_REFERENCE_VK_in_reference_model11979); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_reference_model_name_in_reference_model11981);
			reference_model_name();
			state._fsp--;

			pushFollow(FOLLOW_subquery_in_reference_model11983);
			subquery();
			state._fsp--;

			pushFollow(FOLLOW_model_column_clauses_in_reference_model11985);
			model_column_clauses();
			state._fsp--;

			// PLSQLPrinter.g:1308:76: ( cell_reference_options )*
			loop293:
			while (true) {
				int alt293=2;
				int LA293_0 = input.LA(1);
				if ( (LA293_0==SQL92_RESERVED_UNIQUE||LA293_0==IGNORE_VK||LA293_0==KEEP_VK) ) {
					alt293=1;
				}

				switch (alt293) {
				case 1 :
					// PLSQLPrinter.g:1308:76: cell_reference_options
					{
					pushFollow(FOLLOW_cell_reference_options_in_reference_model11987);
					cell_reference_options();
					state._fsp--;

					}
					break;

				default :
					break loop293;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1309:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "reference_model"


	public static class main_model_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "main_model"
	// PLSQLPrinter.g:1312:1: main_model : ^( MAIN_MODEL ( main_model_name )? model_column_clauses model_rules_clause ( cell_reference_options )* ) -> template( \"not implemented: \";
	public final PLSQLPrinter.main_model_return main_model() throws RecognitionException {
		PLSQLPrinter.main_model_return retval = new PLSQLPrinter.main_model_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1313:5: ( ^( MAIN_MODEL ( main_model_name )? model_column_clauses model_rules_clause ( cell_reference_options )* ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1313:10: ^( MAIN_MODEL ( main_model_name )? model_column_clauses model_rules_clause ( cell_reference_options )* )
			{
			match(input,MAIN_MODEL,FOLLOW_MAIN_MODEL_in_main_model12024); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1313:23: ( main_model_name )?
			int alt294=2;
			int LA294_0 = input.LA(1);
			if ( (LA294_0==MAIN_MODEL_NAME) ) {
				alt294=1;
			}
			switch (alt294) {
				case 1 :
					// PLSQLPrinter.g:1313:23: main_model_name
					{
					pushFollow(FOLLOW_main_model_name_in_main_model12026);
					main_model_name();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_model_column_clauses_in_main_model12029);
			model_column_clauses();
			state._fsp--;

			pushFollow(FOLLOW_model_rules_clause_in_main_model12031);
			model_rules_clause();
			state._fsp--;

			// PLSQLPrinter.g:1313:80: ( cell_reference_options )*
			loop295:
			while (true) {
				int alt295=2;
				int LA295_0 = input.LA(1);
				if ( (LA295_0==SQL92_RESERVED_UNIQUE||LA295_0==IGNORE_VK||LA295_0==KEEP_VK) ) {
					alt295=1;
				}

				switch (alt295) {
				case 1 :
					// PLSQLPrinter.g:1313:80: cell_reference_options
					{
					pushFollow(FOLLOW_cell_reference_options_in_main_model12033);
					cell_reference_options();
					state._fsp--;

					}
					break;

				default :
					break loop295;
				}
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1314:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "main_model"


	public static class model_column_clauses_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_column_clauses"
	// PLSQLPrinter.g:1317:1: model_column_clauses : ^( MODEL_COLUMN ^( DIMENSION_VK model_column_list ) ^( MEASURES_VK model_column_list ) ( model_column_partition_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.model_column_clauses_return model_column_clauses() throws RecognitionException {
		PLSQLPrinter.model_column_clauses_return retval = new PLSQLPrinter.model_column_clauses_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1318:5: ( ^( MODEL_COLUMN ^( DIMENSION_VK model_column_list ) ^( MEASURES_VK model_column_list ) ( model_column_partition_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1318:10: ^( MODEL_COLUMN ^( DIMENSION_VK model_column_list ) ^( MEASURES_VK model_column_list ) ( model_column_partition_part )? )
			{
			match(input,MODEL_COLUMN,FOLLOW_MODEL_COLUMN_in_model_column_clauses12070); 
			match(input, Token.DOWN, null); 
			match(input,DIMENSION_VK,FOLLOW_DIMENSION_VK_in_model_column_clauses12073); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_model_column_list_in_model_column_clauses12075);
			model_column_list();
			state._fsp--;

			match(input, Token.UP, null); 

			match(input,MEASURES_VK,FOLLOW_MEASURES_VK_in_model_column_clauses12079); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_model_column_list_in_model_column_clauses12081);
			model_column_list();
			state._fsp--;

			match(input, Token.UP, null); 

			// PLSQLPrinter.g:1318:92: ( model_column_partition_part )?
			int alt296=2;
			int LA296_0 = input.LA(1);
			if ( (LA296_0==PARTITION_VK) ) {
				alt296=1;
			}
			switch (alt296) {
				case 1 :
					// PLSQLPrinter.g:1318:92: model_column_partition_part
					{
					pushFollow(FOLLOW_model_column_partition_part_in_model_column_clauses12084);
					model_column_partition_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1319:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_column_clauses"


	public static class model_column_partition_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_column_partition_part"
	// PLSQLPrinter.g:1322:1: model_column_partition_part : ^( PARTITION_VK model_column_list ) -> template( \"not implemented: \";
	public final PLSQLPrinter.model_column_partition_part_return model_column_partition_part() throws RecognitionException {
		PLSQLPrinter.model_column_partition_part_return retval = new PLSQLPrinter.model_column_partition_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1323:5: ( ^( PARTITION_VK model_column_list ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1323:10: ^( PARTITION_VK model_column_list )
			{
			match(input,PARTITION_VK,FOLLOW_PARTITION_VK_in_model_column_partition_part12121); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_model_column_list_in_model_column_partition_part12123);
			model_column_list();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1324:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_column_partition_part"


	public static class model_column_list_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_column_list"
	// PLSQLPrinter.g:1327:1: model_column_list : ^( MODEL_COLUMNS ( model_column )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.model_column_list_return model_column_list() throws RecognitionException {
		PLSQLPrinter.model_column_list_return retval = new PLSQLPrinter.model_column_list_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1328:5: ( ^( MODEL_COLUMNS ( model_column )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1328:10: ^( MODEL_COLUMNS ( model_column )+ )
			{
			match(input,MODEL_COLUMNS,FOLLOW_MODEL_COLUMNS_in_model_column_list12159); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1328:26: ( model_column )+
			int cnt297=0;
			loop297:
			while (true) {
				int alt297=2;
				int LA297_0 = input.LA(1);
				if ( (LA297_0==MODEL_COLUMN) ) {
					alt297=1;
				}

				switch (alt297) {
				case 1 :
					// PLSQLPrinter.g:1328:26: model_column
					{
					pushFollow(FOLLOW_model_column_in_model_column_list12161);
					model_column();
					state._fsp--;

					}
					break;

				default :
					if ( cnt297 >= 1 ) break loop297;
					EarlyExitException eee = new EarlyExitException(297, input);
					throw eee;
				}
				cnt297++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1329:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_column_list"


	public static class model_column_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_column"
	// PLSQLPrinter.g:1332:1: model_column : ^( MODEL_COLUMN ( alias )? expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.model_column_return model_column() throws RecognitionException {
		PLSQLPrinter.model_column_return retval = new PLSQLPrinter.model_column_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1333:5: ( ^( MODEL_COLUMN ( alias )? expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1333:10: ^( MODEL_COLUMN ( alias )? expression )
			{
			match(input,MODEL_COLUMN,FOLLOW_MODEL_COLUMN_in_model_column12198); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1333:25: ( alias )?
			int alt298=2;
			int LA298_0 = input.LA(1);
			if ( (LA298_0==ALIAS) ) {
				alt298=1;
			}
			switch (alt298) {
				case 1 :
					// PLSQLPrinter.g:1333:25: alias
					{
					pushFollow(FOLLOW_alias_in_model_column12200);
					alias();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_expression_in_model_column12203);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1334:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_column"


	public static class model_rules_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_rules_clause"
	// PLSQLPrinter.g:1337:1: model_rules_clause : ^( MODEL_RULES ( model_rules_element )+ ( model_rules_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.model_rules_clause_return model_rules_clause() throws RecognitionException {
		PLSQLPrinter.model_rules_clause_return retval = new PLSQLPrinter.model_rules_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1338:5: ( ^( MODEL_RULES ( model_rules_element )+ ( model_rules_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1338:10: ^( MODEL_RULES ( model_rules_element )+ ( model_rules_part )? )
			{
			match(input,MODEL_RULES,FOLLOW_MODEL_RULES_in_model_rules_clause12240); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1338:24: ( model_rules_element )+
			int cnt299=0;
			loop299:
			while (true) {
				int alt299=2;
				int LA299_0 = input.LA(1);
				if ( (LA299_0==MODEL_RULE) ) {
					alt299=1;
				}

				switch (alt299) {
				case 1 :
					// PLSQLPrinter.g:1338:24: model_rules_element
					{
					pushFollow(FOLLOW_model_rules_element_in_model_rules_clause12242);
					model_rules_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt299 >= 1 ) break loop299;
					EarlyExitException eee = new EarlyExitException(299, input);
					throw eee;
				}
				cnt299++;
			}

			// PLSQLPrinter.g:1338:45: ( model_rules_part )?
			int alt300=2;
			int LA300_0 = input.LA(1);
			if ( (LA300_0==RULES_VK) ) {
				alt300=1;
			}
			switch (alt300) {
				case 1 :
					// PLSQLPrinter.g:1338:45: model_rules_part
					{
					pushFollow(FOLLOW_model_rules_part_in_model_rules_clause12245);
					model_rules_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1339:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_rules_clause"


	public static class model_rules_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_rules_part"
	// PLSQLPrinter.g:1342:1: model_rules_part : ^( RULES_VK ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )? ( AUTOMATIC_VK | SEQUENTIAL_VK )? ( model_iterate_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.model_rules_part_return model_rules_part() throws RecognitionException {
		PLSQLPrinter.model_rules_part_return retval = new PLSQLPrinter.model_rules_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1343:5: ( ^( RULES_VK ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )? ( AUTOMATIC_VK | SEQUENTIAL_VK )? ( model_iterate_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1343:10: ^( RULES_VK ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )? ( AUTOMATIC_VK | SEQUENTIAL_VK )? ( model_iterate_clause )? )
			{
			match(input,RULES_VK,FOLLOW_RULES_VK_in_model_rules_part12282); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1344:13: ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )?
				int alt302=3;
				int LA302_0 = input.LA(1);
				if ( (LA302_0==SQL92_RESERVED_UPDATE) ) {
					alt302=1;
				}
				else if ( (LA302_0==UPSERT_VK) ) {
					alt302=2;
				}
				switch (alt302) {
					case 1 :
						// PLSQLPrinter.g:1344:14: SQL92_RESERVED_UPDATE
						{
						match(input,SQL92_RESERVED_UPDATE,FOLLOW_SQL92_RESERVED_UPDATE_in_model_rules_part12298); 
						}
						break;
					case 2 :
						// PLSQLPrinter.g:1344:36: UPSERT_VK ( SQL92_RESERVED_ALL )?
						{
						match(input,UPSERT_VK,FOLLOW_UPSERT_VK_in_model_rules_part12300); 
						// PLSQLPrinter.g:1344:46: ( SQL92_RESERVED_ALL )?
						int alt301=2;
						int LA301_0 = input.LA(1);
						if ( (LA301_0==SQL92_RESERVED_ALL) ) {
							alt301=1;
						}
						switch (alt301) {
							case 1 :
								// PLSQLPrinter.g:1344:46: SQL92_RESERVED_ALL
								{
								match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_model_rules_part12302); 
								}
								break;

						}

						}
						break;

				}

				// PLSQLPrinter.g:1345:13: ( AUTOMATIC_VK | SEQUENTIAL_VK )?
				int alt303=3;
				int LA303_0 = input.LA(1);
				if ( (LA303_0==AUTOMATIC_VK) ) {
					alt303=1;
				}
				else if ( (LA303_0==SEQUENTIAL_VK) ) {
					alt303=2;
				}
				switch (alt303) {
					case 1 :
						// PLSQLPrinter.g:1345:14: AUTOMATIC_VK
						{
						match(input,AUTOMATIC_VK,FOLLOW_AUTOMATIC_VK_in_model_rules_part12321); 
						}
						break;
					case 2 :
						// PLSQLPrinter.g:1345:27: SEQUENTIAL_VK
						{
						match(input,SEQUENTIAL_VK,FOLLOW_SEQUENTIAL_VK_in_model_rules_part12323); 
						}
						break;

				}

				// PLSQLPrinter.g:1346:13: ( model_iterate_clause )?
				int alt304=2;
				int LA304_0 = input.LA(1);
				if ( (LA304_0==ITERATE_VK) ) {
					alt304=1;
				}
				switch (alt304) {
					case 1 :
						// PLSQLPrinter.g:1346:13: model_iterate_clause
						{
						pushFollow(FOLLOW_model_iterate_clause_in_model_rules_part12340);
						model_iterate_clause();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1348:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_rules_part"


	public static class model_rules_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_rules_element"
	// PLSQLPrinter.g:1351:1: model_rules_element : ^( MODEL_RULE ^( ASSIGN model_expression expression ) ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )? ( order_by_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.model_rules_element_return model_rules_element() throws RecognitionException {
		PLSQLPrinter.model_rules_element_return retval = new PLSQLPrinter.model_rules_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1352:5: ( ^( MODEL_RULE ^( ASSIGN model_expression expression ) ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )? ( order_by_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1352:10: ^( MODEL_RULE ^( ASSIGN model_expression expression ) ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )? ( order_by_clause )? )
			{
			match(input,MODEL_RULE,FOLLOW_MODEL_RULE_in_model_rules_element12386); 
			match(input, Token.DOWN, null); 
			match(input,ASSIGN,FOLLOW_ASSIGN_in_model_rules_element12402); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_model_expression_in_model_rules_element12404);
			model_expression();
			state._fsp--;

			pushFollow(FOLLOW_expression_in_model_rules_element12406);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// PLSQLPrinter.g:1354:13: ( SQL92_RESERVED_UPDATE | UPSERT_VK ( SQL92_RESERVED_ALL )? )?
			int alt306=3;
			int LA306_0 = input.LA(1);
			if ( (LA306_0==SQL92_RESERVED_UPDATE) ) {
				alt306=1;
			}
			else if ( (LA306_0==UPSERT_VK) ) {
				alt306=2;
			}
			switch (alt306) {
				case 1 :
					// PLSQLPrinter.g:1354:14: SQL92_RESERVED_UPDATE
					{
					match(input,SQL92_RESERVED_UPDATE,FOLLOW_SQL92_RESERVED_UPDATE_in_model_rules_element12423); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1354:36: UPSERT_VK ( SQL92_RESERVED_ALL )?
					{
					match(input,UPSERT_VK,FOLLOW_UPSERT_VK_in_model_rules_element12425); 
					// PLSQLPrinter.g:1354:46: ( SQL92_RESERVED_ALL )?
					int alt305=2;
					int LA305_0 = input.LA(1);
					if ( (LA305_0==SQL92_RESERVED_ALL) ) {
						alt305=1;
					}
					switch (alt305) {
						case 1 :
							// PLSQLPrinter.g:1354:46: SQL92_RESERVED_ALL
							{
							match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_model_rules_element12427); 
							}
							break;

					}

					}
					break;

			}

			// PLSQLPrinter.g:1355:13: ( order_by_clause )?
			int alt307=2;
			int LA307_0 = input.LA(1);
			if ( (LA307_0==SQL92_RESERVED_ORDER) ) {
				alt307=1;
			}
			switch (alt307) {
				case 1 :
					// PLSQLPrinter.g:1355:13: order_by_clause
					{
					pushFollow(FOLLOW_order_by_clause_in_model_rules_element12445);
					order_by_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1357:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_rules_element"


	public static class model_iterate_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_iterate_clause"
	// PLSQLPrinter.g:1360:1: model_iterate_clause : ^( ITERATE_VK expression ( until_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.model_iterate_clause_return model_iterate_clause() throws RecognitionException {
		PLSQLPrinter.model_iterate_clause_return retval = new PLSQLPrinter.model_iterate_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1361:5: ( ^( ITERATE_VK expression ( until_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1361:10: ^( ITERATE_VK expression ( until_part )? )
			{
			match(input,ITERATE_VK,FOLLOW_ITERATE_VK_in_model_iterate_clause12491); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_model_iterate_clause12493);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:1361:34: ( until_part )?
			int alt308=2;
			int LA308_0 = input.LA(1);
			if ( (LA308_0==UNTIL_VK) ) {
				alt308=1;
			}
			switch (alt308) {
				case 1 :
					// PLSQLPrinter.g:1361:34: until_part
					{
					pushFollow(FOLLOW_until_part_in_model_iterate_clause12495);
					until_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1362:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_iterate_clause"


	public static class until_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "until_part"
	// PLSQLPrinter.g:1365:1: until_part : ^( UNTIL_VK expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.until_part_return until_part() throws RecognitionException {
		PLSQLPrinter.until_part_return retval = new PLSQLPrinter.until_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1366:5: ( ^( UNTIL_VK expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1366:10: ^( UNTIL_VK expression )
			{
			match(input,UNTIL_VK,FOLLOW_UNTIL_VK_in_until_part12532); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_until_part12534);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1367:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "until_part"


	public static class order_by_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "order_by_clause"
	// PLSQLPrinter.g:1370:1: order_by_clause : ^( SQL92_RESERVED_ORDER ( SIBLINGS_VK )? ^( ORDER_BY_ELEMENTS ( order_by_elements )+ ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.order_by_clause_return order_by_clause() throws RecognitionException {
		PLSQLPrinter.order_by_clause_return retval = new PLSQLPrinter.order_by_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1371:5: ( ^( SQL92_RESERVED_ORDER ( SIBLINGS_VK )? ^( ORDER_BY_ELEMENTS ( order_by_elements )+ ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1371:10: ^( SQL92_RESERVED_ORDER ( SIBLINGS_VK )? ^( ORDER_BY_ELEMENTS ( order_by_elements )+ ) )
			{
			match(input,SQL92_RESERVED_ORDER,FOLLOW_SQL92_RESERVED_ORDER_in_order_by_clause12570); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1371:33: ( SIBLINGS_VK )?
			int alt309=2;
			int LA309_0 = input.LA(1);
			if ( (LA309_0==SIBLINGS_VK) ) {
				alt309=1;
			}
			switch (alt309) {
				case 1 :
					// PLSQLPrinter.g:1371:33: SIBLINGS_VK
					{
					match(input,SIBLINGS_VK,FOLLOW_SIBLINGS_VK_in_order_by_clause12572); 
					}
					break;

			}

			match(input,ORDER_BY_ELEMENTS,FOLLOW_ORDER_BY_ELEMENTS_in_order_by_clause12576); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1371:66: ( order_by_elements )+
			int cnt310=0;
			loop310:
			while (true) {
				int alt310=2;
				int LA310_0 = input.LA(1);
				if ( (LA310_0==ORDER_BY_ELEMENT) ) {
					alt310=1;
				}

				switch (alt310) {
				case 1 :
					// PLSQLPrinter.g:1371:66: order_by_elements
					{
					pushFollow(FOLLOW_order_by_elements_in_order_by_clause12578);
					order_by_elements();
					state._fsp--;

					}
					break;

				default :
					if ( cnt310 >= 1 ) break loop310;
					EarlyExitException eee = new EarlyExitException(310, input);
					throw eee;
				}
				cnt310++;
			}

			match(input, Token.UP, null); 

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1372:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "order_by_clause"


	public static class order_by_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "order_by_elements"
	// PLSQLPrinter.g:1375:1: order_by_elements : ^( ORDER_BY_ELEMENT expression ( SQL92_RESERVED_ASC | SQL92_RESERVED_DESC )? ( NULLS_VK ( FIRST_VK | LAST_VK ) )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.order_by_elements_return order_by_elements() throws RecognitionException {
		PLSQLPrinter.order_by_elements_return retval = new PLSQLPrinter.order_by_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1376:5: ( ^( ORDER_BY_ELEMENT expression ( SQL92_RESERVED_ASC | SQL92_RESERVED_DESC )? ( NULLS_VK ( FIRST_VK | LAST_VK ) )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1376:10: ^( ORDER_BY_ELEMENT expression ( SQL92_RESERVED_ASC | SQL92_RESERVED_DESC )? ( NULLS_VK ( FIRST_VK | LAST_VK ) )? )
			{
			match(input,ORDER_BY_ELEMENT,FOLLOW_ORDER_BY_ELEMENT_in_order_by_elements12616); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_order_by_elements12618);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:1376:40: ( SQL92_RESERVED_ASC | SQL92_RESERVED_DESC )?
			int alt311=3;
			int LA311_0 = input.LA(1);
			if ( (LA311_0==SQL92_RESERVED_ASC) ) {
				alt311=1;
			}
			else if ( (LA311_0==SQL92_RESERVED_DESC) ) {
				alt311=2;
			}
			switch (alt311) {
				case 1 :
					// PLSQLPrinter.g:1376:41: SQL92_RESERVED_ASC
					{
					match(input,SQL92_RESERVED_ASC,FOLLOW_SQL92_RESERVED_ASC_in_order_by_elements12621); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1376:60: SQL92_RESERVED_DESC
					{
					match(input,SQL92_RESERVED_DESC,FOLLOW_SQL92_RESERVED_DESC_in_order_by_elements12623); 
					}
					break;

			}

			// PLSQLPrinter.g:1376:82: ( NULLS_VK ( FIRST_VK | LAST_VK ) )?
			int alt313=2;
			int LA313_0 = input.LA(1);
			if ( (LA313_0==NULLS_VK) ) {
				alt313=1;
			}
			switch (alt313) {
				case 1 :
					// PLSQLPrinter.g:1376:83: NULLS_VK ( FIRST_VK | LAST_VK )
					{
					match(input,NULLS_VK,FOLLOW_NULLS_VK_in_order_by_elements12628); 
					// PLSQLPrinter.g:1376:92: ( FIRST_VK | LAST_VK )
					int alt312=2;
					int LA312_0 = input.LA(1);
					if ( (LA312_0==FIRST_VK) ) {
						alt312=1;
					}
					else if ( (LA312_0==LAST_VK) ) {
						alt312=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 312, 0, input);
						throw nvae;
					}

					switch (alt312) {
						case 1 :
							// PLSQLPrinter.g:1376:93: FIRST_VK
							{
							match(input,FIRST_VK,FOLLOW_FIRST_VK_in_order_by_elements12631); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1376:102: LAST_VK
							{
							match(input,LAST_VK,FOLLOW_LAST_VK_in_order_by_elements12633); 
							}
							break;

					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1377:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "order_by_elements"


	public static class for_update_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "for_update_clause"
	// PLSQLPrinter.g:1380:1: for_update_clause : ^( SQL92_RESERVED_FOR ( for_update_of_part )? ( for_update_options )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.for_update_clause_return for_update_clause() throws RecognitionException {
		PLSQLPrinter.for_update_clause_return retval = new PLSQLPrinter.for_update_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1381:5: ( ^( SQL92_RESERVED_FOR ( for_update_of_part )? ( for_update_options )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1381:10: ^( SQL92_RESERVED_FOR ( for_update_of_part )? ( for_update_options )? )
			{
			match(input,SQL92_RESERVED_FOR,FOLLOW_SQL92_RESERVED_FOR_in_for_update_clause12672); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1381:31: ( for_update_of_part )?
				int alt314=2;
				int LA314_0 = input.LA(1);
				if ( (LA314_0==SQL92_RESERVED_OF) ) {
					alt314=1;
				}
				switch (alt314) {
					case 1 :
						// PLSQLPrinter.g:1381:31: for_update_of_part
						{
						pushFollow(FOLLOW_for_update_of_part_in_for_update_clause12674);
						for_update_of_part();
						state._fsp--;

						}
						break;

				}

				// PLSQLPrinter.g:1381:51: ( for_update_options )?
				int alt315=2;
				int LA315_0 = input.LA(1);
				if ( (LA315_0==PLSQL_RESERVED_NOWAIT||LA315_0==SKIP_VK||LA315_0==WAIT_VK) ) {
					alt315=1;
				}
				switch (alt315) {
					case 1 :
						// PLSQLPrinter.g:1381:51: for_update_options
						{
						pushFollow(FOLLOW_for_update_options_in_for_update_clause12677);
						for_update_options();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1382:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "for_update_clause"


	public static class for_update_of_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "for_update_of_part"
	// PLSQLPrinter.g:1385:1: for_update_of_part : ^( SQL92_RESERVED_OF ( column_name )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.for_update_of_part_return for_update_of_part() throws RecognitionException {
		PLSQLPrinter.for_update_of_part_return retval = new PLSQLPrinter.for_update_of_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1386:5: ( ^( SQL92_RESERVED_OF ( column_name )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1386:10: ^( SQL92_RESERVED_OF ( column_name )+ )
			{
			match(input,SQL92_RESERVED_OF,FOLLOW_SQL92_RESERVED_OF_in_for_update_of_part12714); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1386:30: ( column_name )+
			int cnt316=0;
			loop316:
			while (true) {
				int alt316=2;
				int LA316_0 = input.LA(1);
				if ( (LA316_0==COLUMN_NAME) ) {
					alt316=1;
				}

				switch (alt316) {
				case 1 :
					// PLSQLPrinter.g:1386:30: column_name
					{
					pushFollow(FOLLOW_column_name_in_for_update_of_part12716);
					column_name();
					state._fsp--;

					}
					break;

				default :
					if ( cnt316 >= 1 ) break loop316;
					EarlyExitException eee = new EarlyExitException(316, input);
					throw eee;
				}
				cnt316++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1387:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "for_update_of_part"


	public static class for_update_options_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "for_update_options"
	// PLSQLPrinter.g:1390:1: for_update_options : ( SKIP_VK -> template( \"not implemented: \"| PLSQL_RESERVED_NOWAIT -> template( \"not implemented: \"| ^( WAIT_VK expression ) -> template( \"not implemented: \");
	public final PLSQLPrinter.for_update_options_return for_update_options() throws RecognitionException {
		PLSQLPrinter.for_update_options_return retval = new PLSQLPrinter.for_update_options_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1391:5: ( SKIP_VK -> template( \"not implemented: \"| PLSQL_RESERVED_NOWAIT -> template( \"not implemented: \"| ^( WAIT_VK expression ) -> template( \"not implemented: \")
			int alt317=3;
			switch ( input.LA(1) ) {
			case SKIP_VK:
				{
				alt317=1;
				}
				break;
			case PLSQL_RESERVED_NOWAIT:
				{
				alt317=2;
				}
				break;
			case WAIT_VK:
				{
				alt317=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 317, 0, input);
				throw nvae;
			}
			switch (alt317) {
				case 1 :
					// PLSQLPrinter.g:1391:10: SKIP_VK
					{
					match(input,SKIP_VK,FOLLOW_SKIP_VK_in_for_update_options12752); 
					// TEMPLATE REWRITE
					// 1392:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1393:10: PLSQL_RESERVED_NOWAIT
					{
					match(input,PLSQL_RESERVED_NOWAIT,FOLLOW_PLSQL_RESERVED_NOWAIT_in_for_update_options12777); 
					// TEMPLATE REWRITE
					// 1394:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1395:10: ^( WAIT_VK expression )
					{
					match(input,WAIT_VK,FOLLOW_WAIT_VK_in_for_update_options12803); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_for_update_options12805);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1396:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "for_update_options"


	public static class update_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "update_statement"
	// PLSQLPrinter.g:1401:1: update_statement : ^( SQL92_RESERVED_UPDATE general_table_ref update_set_clause ( where_clause )? ( static_returning_clause )? ( error_logging_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.update_statement_return update_statement() throws RecognitionException {
		PLSQLPrinter.update_statement_return retval = new PLSQLPrinter.update_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1402:5: ( ^( SQL92_RESERVED_UPDATE general_table_ref update_set_clause ( where_clause )? ( static_returning_clause )? ( error_logging_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1402:10: ^( SQL92_RESERVED_UPDATE general_table_ref update_set_clause ( where_clause )? ( static_returning_clause )? ( error_logging_clause )? )
			{
			match(input,SQL92_RESERVED_UPDATE,FOLLOW_SQL92_RESERVED_UPDATE_in_update_statement12843); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_general_table_ref_in_update_statement12845);
			general_table_ref();
			state._fsp--;

			pushFollow(FOLLOW_update_set_clause_in_update_statement12859);
			update_set_clause();
			state._fsp--;

			// PLSQLPrinter.g:1404:13: ( where_clause )?
			int alt318=2;
			int LA318_0 = input.LA(1);
			if ( (LA318_0==SQL92_RESERVED_WHERE) ) {
				alt318=1;
			}
			switch (alt318) {
				case 1 :
					// PLSQLPrinter.g:1404:13: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_update_statement12873);
					where_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1404:27: ( static_returning_clause )?
			int alt319=2;
			int LA319_0 = input.LA(1);
			if ( (LA319_0==STATIC_RETURNING) ) {
				alt319=1;
			}
			switch (alt319) {
				case 1 :
					// PLSQLPrinter.g:1404:27: static_returning_clause
					{
					pushFollow(FOLLOW_static_returning_clause_in_update_statement12876);
					static_returning_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1404:52: ( error_logging_clause )?
			int alt320=2;
			int LA320_0 = input.LA(1);
			if ( (LA320_0==LOG_VK) ) {
				alt320=1;
			}
			switch (alt320) {
				case 1 :
					// PLSQLPrinter.g:1404:52: error_logging_clause
					{
					pushFollow(FOLLOW_error_logging_clause_in_update_statement12879);
					error_logging_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1406:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "update_statement"


	public static class update_set_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "update_set_clause"
	// PLSQLPrinter.g:1410:1: update_set_clause : ^( SET_VK ( update_set_elements )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.update_set_clause_return update_set_clause() throws RecognitionException {
		PLSQLPrinter.update_set_clause_return retval = new PLSQLPrinter.update_set_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1411:5: ( ^( SET_VK ( update_set_elements )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1411:10: ^( SET_VK ( update_set_elements )+ )
			{
			match(input,SET_VK,FOLLOW_SET_VK_in_update_set_clause12926); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1411:19: ( update_set_elements )+
			int cnt321=0;
			loop321:
			while (true) {
				int alt321=2;
				int LA321_0 = input.LA(1);
				if ( (LA321_0==ASSIGN||LA321_0==VALUE_VK) ) {
					alt321=1;
				}

				switch (alt321) {
				case 1 :
					// PLSQLPrinter.g:1411:19: update_set_elements
					{
					pushFollow(FOLLOW_update_set_elements_in_update_set_clause12928);
					update_set_elements();
					state._fsp--;

					}
					break;

				default :
					if ( cnt321 >= 1 ) break loop321;
					EarlyExitException eee = new EarlyExitException(321, input);
					throw eee;
				}
				cnt321++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1412:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "update_set_clause"


	public static class update_set_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "update_set_elements"
	// PLSQLPrinter.g:1415:1: update_set_elements : ( ^( ASSIGN column_name expression ) -> template( \"not implemented: \"| ^( ASSIGN ( column_name )+ subquery ) -> template( \"not implemented: \"| ^( VALUE_VK ( char_set_name )? ID expression ) -> template( \"not implemented: \");
	public final PLSQLPrinter.update_set_elements_return update_set_elements() throws RecognitionException {
		PLSQLPrinter.update_set_elements_return retval = new PLSQLPrinter.update_set_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1416:5: ( ^( ASSIGN column_name expression ) -> template( \"not implemented: \"| ^( ASSIGN ( column_name )+ subquery ) -> template( \"not implemented: \"| ^( VALUE_VK ( char_set_name )? ID expression ) -> template( \"not implemented: \")
			int alt324=3;
			alt324 = dfa324.predict(input);
			switch (alt324) {
				case 1 :
					// PLSQLPrinter.g:1416:10: ^( ASSIGN column_name expression )
					{
					match(input,ASSIGN,FOLLOW_ASSIGN_in_update_set_elements12965); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_column_name_in_update_set_elements12967);
					column_name();
					state._fsp--;

					pushFollow(FOLLOW_expression_in_update_set_elements12969);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1417:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1418:10: ^( ASSIGN ( column_name )+ subquery )
					{
					match(input,ASSIGN,FOLLOW_ASSIGN_in_update_set_elements12996); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1418:19: ( column_name )+
					int cnt322=0;
					loop322:
					while (true) {
						int alt322=2;
						int LA322_0 = input.LA(1);
						if ( (LA322_0==COLUMN_NAME) ) {
							alt322=1;
						}

						switch (alt322) {
						case 1 :
							// PLSQLPrinter.g:1418:19: column_name
							{
							pushFollow(FOLLOW_column_name_in_update_set_elements12998);
							column_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt322 >= 1 ) break loop322;
							EarlyExitException eee = new EarlyExitException(322, input);
							throw eee;
						}
						cnt322++;
					}

					pushFollow(FOLLOW_subquery_in_update_set_elements13001);
					subquery();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1419:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1420:10: ^( VALUE_VK ( char_set_name )? ID expression )
					{
					match(input,VALUE_VK,FOLLOW_VALUE_VK_in_update_set_elements13028); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1420:21: ( char_set_name )?
					int alt323=2;
					int LA323_0 = input.LA(1);
					if ( (LA323_0==CHAR_SET_NAME) ) {
						alt323=1;
					}
					switch (alt323) {
						case 1 :
							// PLSQLPrinter.g:1420:21: char_set_name
							{
							pushFollow(FOLLOW_char_set_name_in_update_set_elements13030);
							char_set_name();
							state._fsp--;

							}
							break;

					}

					match(input,ID,FOLLOW_ID_in_update_set_elements13033); 
					pushFollow(FOLLOW_expression_in_update_set_elements13035);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1421:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "update_set_elements"


	public static class delete_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "delete_statement"
	// PLSQLPrinter.g:1426:1: delete_statement : ^( SQL92_RESERVED_DELETE general_table_ref ( where_clause )? ( static_returning_clause )? ( error_logging_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.delete_statement_return delete_statement() throws RecognitionException {
		PLSQLPrinter.delete_statement_return retval = new PLSQLPrinter.delete_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1427:5: ( ^( SQL92_RESERVED_DELETE general_table_ref ( where_clause )? ( static_returning_clause )? ( error_logging_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1427:10: ^( SQL92_RESERVED_DELETE general_table_ref ( where_clause )? ( static_returning_clause )? ( error_logging_clause )? )
			{
			match(input,SQL92_RESERVED_DELETE,FOLLOW_SQL92_RESERVED_DELETE_in_delete_statement13073); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_general_table_ref_in_delete_statement13075);
			general_table_ref();
			state._fsp--;

			// PLSQLPrinter.g:1428:13: ( where_clause )?
			int alt325=2;
			int LA325_0 = input.LA(1);
			if ( (LA325_0==SQL92_RESERVED_WHERE) ) {
				alt325=1;
			}
			switch (alt325) {
				case 1 :
					// PLSQLPrinter.g:1428:13: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_delete_statement13089);
					where_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1428:27: ( static_returning_clause )?
			int alt326=2;
			int LA326_0 = input.LA(1);
			if ( (LA326_0==STATIC_RETURNING) ) {
				alt326=1;
			}
			switch (alt326) {
				case 1 :
					// PLSQLPrinter.g:1428:27: static_returning_clause
					{
					pushFollow(FOLLOW_static_returning_clause_in_delete_statement13092);
					static_returning_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1428:52: ( error_logging_clause )?
			int alt327=2;
			int LA327_0 = input.LA(1);
			if ( (LA327_0==LOG_VK) ) {
				alt327=1;
			}
			switch (alt327) {
				case 1 :
					// PLSQLPrinter.g:1428:52: error_logging_clause
					{
					pushFollow(FOLLOW_error_logging_clause_in_delete_statement13095);
					error_logging_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1429:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "delete_statement"


	public static class insert_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "insert_statement"
	// PLSQLPrinter.g:1432:1: insert_statement : ^( SQL92_RESERVED_INSERT ( single_table_insert | multi_table_insert ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.insert_statement_return insert_statement() throws RecognitionException {
		PLSQLPrinter.insert_statement_return retval = new PLSQLPrinter.insert_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1433:5: ( ^( SQL92_RESERVED_INSERT ( single_table_insert | multi_table_insert ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1433:10: ^( SQL92_RESERVED_INSERT ( single_table_insert | multi_table_insert ) )
			{
			match(input,SQL92_RESERVED_INSERT,FOLLOW_SQL92_RESERVED_INSERT_in_insert_statement13132); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1434:9: ( single_table_insert | multi_table_insert )
			int alt328=2;
			int LA328_0 = input.LA(1);
			if ( (LA328_0==SINGLE_TABLE_MODE) ) {
				alt328=1;
			}
			else if ( (LA328_0==MULTI_TABLE_MODE) ) {
				alt328=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 328, 0, input);
				throw nvae;
			}

			switch (alt328) {
				case 1 :
					// PLSQLPrinter.g:1434:14: single_table_insert
					{
					pushFollow(FOLLOW_single_table_insert_in_insert_statement13147);
					single_table_insert();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1435:14: multi_table_insert
					{
					pushFollow(FOLLOW_multi_table_insert_in_insert_statement13162);
					multi_table_insert();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1438:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "insert_statement"


	public static class single_table_insert_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "single_table_insert"
	// PLSQLPrinter.g:1443:1: single_table_insert : ^( SINGLE_TABLE_MODE insert_into_clause ( values_clause ( static_returning_clause )? | select_statement ) ( error_logging_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.single_table_insert_return single_table_insert() throws RecognitionException {
		PLSQLPrinter.single_table_insert_return retval = new PLSQLPrinter.single_table_insert_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1444:5: ( ^( SINGLE_TABLE_MODE insert_into_clause ( values_clause ( static_returning_clause )? | select_statement ) ( error_logging_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1444:10: ^( SINGLE_TABLE_MODE insert_into_clause ( values_clause ( static_returning_clause )? | select_statement ) ( error_logging_clause )? )
			{
			match(input,SINGLE_TABLE_MODE,FOLLOW_SINGLE_TABLE_MODE_in_single_table_insert13219); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_insert_into_clause_in_single_table_insert13221);
			insert_into_clause();
			state._fsp--;

			// PLSQLPrinter.g:1444:49: ( values_clause ( static_returning_clause )? | select_statement )
			int alt330=2;
			int LA330_0 = input.LA(1);
			if ( (LA330_0==SQL92_RESERVED_VALUES) ) {
				alt330=1;
			}
			else if ( (LA330_0==SELECT_STATEMENT) ) {
				alt330=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 330, 0, input);
				throw nvae;
			}

			switch (alt330) {
				case 1 :
					// PLSQLPrinter.g:1444:50: values_clause ( static_returning_clause )?
					{
					pushFollow(FOLLOW_values_clause_in_single_table_insert13224);
					values_clause();
					state._fsp--;

					// PLSQLPrinter.g:1444:64: ( static_returning_clause )?
					int alt329=2;
					int LA329_0 = input.LA(1);
					if ( (LA329_0==STATIC_RETURNING) ) {
						alt329=1;
					}
					switch (alt329) {
						case 1 :
							// PLSQLPrinter.g:1444:64: static_returning_clause
							{
							pushFollow(FOLLOW_static_returning_clause_in_single_table_insert13226);
							static_returning_clause();
							state._fsp--;

							}
							break;

					}

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1444:90: select_statement
					{
					pushFollow(FOLLOW_select_statement_in_single_table_insert13230);
					select_statement();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1444:108: ( error_logging_clause )?
			int alt331=2;
			int LA331_0 = input.LA(1);
			if ( (LA331_0==LOG_VK) ) {
				alt331=1;
			}
			switch (alt331) {
				case 1 :
					// PLSQLPrinter.g:1444:108: error_logging_clause
					{
					pushFollow(FOLLOW_error_logging_clause_in_single_table_insert13233);
					error_logging_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1445:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "single_table_insert"


	public static class multi_table_insert_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "multi_table_insert"
	// PLSQLPrinter.g:1448:1: multi_table_insert : ^( MULTI_TABLE_MODE select_statement ( conditional_insert_clause | ( multi_table_element )+ ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.multi_table_insert_return multi_table_insert() throws RecognitionException {
		PLSQLPrinter.multi_table_insert_return retval = new PLSQLPrinter.multi_table_insert_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1449:5: ( ^( MULTI_TABLE_MODE select_statement ( conditional_insert_clause | ( multi_table_element )+ ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1449:10: ^( MULTI_TABLE_MODE select_statement ( conditional_insert_clause | ( multi_table_element )+ ) )
			{
			match(input,MULTI_TABLE_MODE,FOLLOW_MULTI_TABLE_MODE_in_multi_table_insert13270); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_select_statement_in_multi_table_insert13272);
			select_statement();
			state._fsp--;

			// PLSQLPrinter.g:1449:46: ( conditional_insert_clause | ( multi_table_element )+ )
			int alt333=2;
			int LA333_0 = input.LA(1);
			if ( (LA333_0==CONDITIONAL_INSERT) ) {
				alt333=1;
			}
			else if ( (LA333_0==TABLE_ELEMENT) ) {
				alt333=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 333, 0, input);
				throw nvae;
			}

			switch (alt333) {
				case 1 :
					// PLSQLPrinter.g:1449:47: conditional_insert_clause
					{
					pushFollow(FOLLOW_conditional_insert_clause_in_multi_table_insert13275);
					conditional_insert_clause();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1449:73: ( multi_table_element )+
					{
					// PLSQLPrinter.g:1449:73: ( multi_table_element )+
					int cnt332=0;
					loop332:
					while (true) {
						int alt332=2;
						int LA332_0 = input.LA(1);
						if ( (LA332_0==TABLE_ELEMENT) ) {
							alt332=1;
						}

						switch (alt332) {
						case 1 :
							// PLSQLPrinter.g:1449:73: multi_table_element
							{
							pushFollow(FOLLOW_multi_table_element_in_multi_table_insert13277);
							multi_table_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt332 >= 1 ) break loop332;
							EarlyExitException eee = new EarlyExitException(332, input);
							throw eee;
						}
						cnt332++;
					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1450:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "multi_table_insert"


	public static class multi_table_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "multi_table_element"
	// PLSQLPrinter.g:1453:1: multi_table_element : ^( TABLE_ELEMENT insert_into_clause ( values_clause )? ( error_logging_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.multi_table_element_return multi_table_element() throws RecognitionException {
		PLSQLPrinter.multi_table_element_return retval = new PLSQLPrinter.multi_table_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1454:5: ( ^( TABLE_ELEMENT insert_into_clause ( values_clause )? ( error_logging_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1454:10: ^( TABLE_ELEMENT insert_into_clause ( values_clause )? ( error_logging_clause )? )
			{
			match(input,TABLE_ELEMENT,FOLLOW_TABLE_ELEMENT_in_multi_table_element13315); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_insert_into_clause_in_multi_table_element13317);
			insert_into_clause();
			state._fsp--;

			// PLSQLPrinter.g:1454:45: ( values_clause )?
			int alt334=2;
			int LA334_0 = input.LA(1);
			if ( (LA334_0==SQL92_RESERVED_VALUES) ) {
				alt334=1;
			}
			switch (alt334) {
				case 1 :
					// PLSQLPrinter.g:1454:45: values_clause
					{
					pushFollow(FOLLOW_values_clause_in_multi_table_element13319);
					values_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1454:60: ( error_logging_clause )?
			int alt335=2;
			int LA335_0 = input.LA(1);
			if ( (LA335_0==LOG_VK) ) {
				alt335=1;
			}
			switch (alt335) {
				case 1 :
					// PLSQLPrinter.g:1454:60: error_logging_clause
					{
					pushFollow(FOLLOW_error_logging_clause_in_multi_table_element13322);
					error_logging_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1455:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "multi_table_element"


	public static class conditional_insert_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "conditional_insert_clause"
	// PLSQLPrinter.g:1458:1: conditional_insert_clause : ^( CONDITIONAL_INSERT ( SQL92_RESERVED_ALL | FIRST_VK )? ( conditional_insert_when_part )+ ( conditional_insert_else_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.conditional_insert_clause_return conditional_insert_clause() throws RecognitionException {
		PLSQLPrinter.conditional_insert_clause_return retval = new PLSQLPrinter.conditional_insert_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1459:5: ( ^( CONDITIONAL_INSERT ( SQL92_RESERVED_ALL | FIRST_VK )? ( conditional_insert_when_part )+ ( conditional_insert_else_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1459:10: ^( CONDITIONAL_INSERT ( SQL92_RESERVED_ALL | FIRST_VK )? ( conditional_insert_when_part )+ ( conditional_insert_else_part )? )
			{
			match(input,CONDITIONAL_INSERT,FOLLOW_CONDITIONAL_INSERT_in_conditional_insert_clause13359); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1459:31: ( SQL92_RESERVED_ALL | FIRST_VK )?
			int alt336=3;
			int LA336_0 = input.LA(1);
			if ( (LA336_0==SQL92_RESERVED_ALL) ) {
				alt336=1;
			}
			else if ( (LA336_0==FIRST_VK) ) {
				alt336=2;
			}
			switch (alt336) {
				case 1 :
					// PLSQLPrinter.g:1459:32: SQL92_RESERVED_ALL
					{
					match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_conditional_insert_clause13362); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1459:51: FIRST_VK
					{
					match(input,FIRST_VK,FOLLOW_FIRST_VK_in_conditional_insert_clause13364); 
					}
					break;

			}

			// PLSQLPrinter.g:1459:62: ( conditional_insert_when_part )+
			int cnt337=0;
			loop337:
			while (true) {
				int alt337=2;
				int LA337_0 = input.LA(1);
				if ( (LA337_0==SQL92_RESERVED_WHEN) ) {
					alt337=1;
				}

				switch (alt337) {
				case 1 :
					// PLSQLPrinter.g:1459:62: conditional_insert_when_part
					{
					pushFollow(FOLLOW_conditional_insert_when_part_in_conditional_insert_clause13368);
					conditional_insert_when_part();
					state._fsp--;

					}
					break;

				default :
					if ( cnt337 >= 1 ) break loop337;
					EarlyExitException eee = new EarlyExitException(337, input);
					throw eee;
				}
				cnt337++;
			}

			// PLSQLPrinter.g:1459:92: ( conditional_insert_else_part )?
			int alt338=2;
			int LA338_0 = input.LA(1);
			if ( (LA338_0==SQL92_RESERVED_ELSE) ) {
				alt338=1;
			}
			switch (alt338) {
				case 1 :
					// PLSQLPrinter.g:1459:92: conditional_insert_else_part
					{
					pushFollow(FOLLOW_conditional_insert_else_part_in_conditional_insert_clause13371);
					conditional_insert_else_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1460:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "conditional_insert_clause"


	public static class conditional_insert_when_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "conditional_insert_when_part"
	// PLSQLPrinter.g:1463:1: conditional_insert_when_part : ^( SQL92_RESERVED_WHEN expression ( multi_table_element )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.conditional_insert_when_part_return conditional_insert_when_part() throws RecognitionException {
		PLSQLPrinter.conditional_insert_when_part_return retval = new PLSQLPrinter.conditional_insert_when_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1464:5: ( ^( SQL92_RESERVED_WHEN expression ( multi_table_element )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1464:10: ^( SQL92_RESERVED_WHEN expression ( multi_table_element )+ )
			{
			match(input,SQL92_RESERVED_WHEN,FOLLOW_SQL92_RESERVED_WHEN_in_conditional_insert_when_part13409); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_conditional_insert_when_part13411);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:1464:43: ( multi_table_element )+
			int cnt339=0;
			loop339:
			while (true) {
				int alt339=2;
				int LA339_0 = input.LA(1);
				if ( (LA339_0==TABLE_ELEMENT) ) {
					alt339=1;
				}

				switch (alt339) {
				case 1 :
					// PLSQLPrinter.g:1464:43: multi_table_element
					{
					pushFollow(FOLLOW_multi_table_element_in_conditional_insert_when_part13413);
					multi_table_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt339 >= 1 ) break loop339;
					EarlyExitException eee = new EarlyExitException(339, input);
					throw eee;
				}
				cnt339++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1465:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "conditional_insert_when_part"


	public static class conditional_insert_else_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "conditional_insert_else_part"
	// PLSQLPrinter.g:1468:1: conditional_insert_else_part : ^( SQL92_RESERVED_ELSE ( multi_table_element )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.conditional_insert_else_part_return conditional_insert_else_part() throws RecognitionException {
		PLSQLPrinter.conditional_insert_else_part_return retval = new PLSQLPrinter.conditional_insert_else_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1469:5: ( ^( SQL92_RESERVED_ELSE ( multi_table_element )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1469:10: ^( SQL92_RESERVED_ELSE ( multi_table_element )+ )
			{
			match(input,SQL92_RESERVED_ELSE,FOLLOW_SQL92_RESERVED_ELSE_in_conditional_insert_else_part13450); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1469:32: ( multi_table_element )+
			int cnt340=0;
			loop340:
			while (true) {
				int alt340=2;
				int LA340_0 = input.LA(1);
				if ( (LA340_0==TABLE_ELEMENT) ) {
					alt340=1;
				}

				switch (alt340) {
				case 1 :
					// PLSQLPrinter.g:1469:32: multi_table_element
					{
					pushFollow(FOLLOW_multi_table_element_in_conditional_insert_else_part13452);
					multi_table_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt340 >= 1 ) break loop340;
					EarlyExitException eee = new EarlyExitException(340, input);
					throw eee;
				}
				cnt340++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1470:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "conditional_insert_else_part"


	public static class insert_into_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "insert_into_clause"
	// PLSQLPrinter.g:1473:1: insert_into_clause : ^( SQL92_RESERVED_INTO general_table_ref ^( COLUMNS ( column_name )* ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.insert_into_clause_return insert_into_clause() throws RecognitionException {
		PLSQLPrinter.insert_into_clause_return retval = new PLSQLPrinter.insert_into_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1474:5: ( ^( SQL92_RESERVED_INTO general_table_ref ^( COLUMNS ( column_name )* ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1474:10: ^( SQL92_RESERVED_INTO general_table_ref ^( COLUMNS ( column_name )* ) )
			{
			match(input,SQL92_RESERVED_INTO,FOLLOW_SQL92_RESERVED_INTO_in_insert_into_clause13489); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_general_table_ref_in_insert_into_clause13491);
			general_table_ref();
			state._fsp--;

			match(input,COLUMNS,FOLLOW_COLUMNS_in_insert_into_clause13494); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1474:60: ( column_name )*
				loop341:
				while (true) {
					int alt341=2;
					int LA341_0 = input.LA(1);
					if ( (LA341_0==COLUMN_NAME) ) {
						alt341=1;
					}

					switch (alt341) {
					case 1 :
						// PLSQLPrinter.g:1474:60: column_name
						{
						pushFollow(FOLLOW_column_name_in_insert_into_clause13496);
						column_name();
						state._fsp--;

						}
						break;

					default :
						break loop341;
					}
				}

				match(input, Token.UP, null); 
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1475:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "insert_into_clause"


	public static class values_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "values_clause"
	// PLSQLPrinter.g:1478:1: values_clause : ^( SQL92_RESERVED_VALUES ( expression_list | expression ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.values_clause_return values_clause() throws RecognitionException {
		PLSQLPrinter.values_clause_return retval = new PLSQLPrinter.values_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1479:5: ( ^( SQL92_RESERVED_VALUES ( expression_list | expression ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1479:10: ^( SQL92_RESERVED_VALUES ( expression_list | expression ) )
			{
			match(input,SQL92_RESERVED_VALUES,FOLLOW_SQL92_RESERVED_VALUES_in_values_clause13534); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1479:34: ( expression_list | expression )
			int alt342=2;
			int LA342_0 = input.LA(1);
			if ( (LA342_0==EXPR_LIST) ) {
				alt342=1;
			}
			else if ( (LA342_0==EXPR||LA342_0==LOGIC_EXPR) ) {
				alt342=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 342, 0, input);
				throw nvae;
			}

			switch (alt342) {
				case 1 :
					// PLSQLPrinter.g:1479:35: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_values_clause13537);
					expression_list();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1479:51: expression
					{
					pushFollow(FOLLOW_expression_in_values_clause13539);
					expression();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1480:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "values_clause"


	public static class merge_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "merge_statement"
	// PLSQLPrinter.g:1484:1: merge_statement : ^( MERGE_VK ( alias )? tableview_name ^( PLSQL_NON_RESERVED_USING selected_tableview expression ) ( merge_update_clause )? ( merge_insert_clause )? ( error_logging_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.merge_statement_return merge_statement() throws RecognitionException {
		PLSQLPrinter.merge_statement_return retval = new PLSQLPrinter.merge_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1485:5: ( ^( MERGE_VK ( alias )? tableview_name ^( PLSQL_NON_RESERVED_USING selected_tableview expression ) ( merge_update_clause )? ( merge_insert_clause )? ( error_logging_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1485:10: ^( MERGE_VK ( alias )? tableview_name ^( PLSQL_NON_RESERVED_USING selected_tableview expression ) ( merge_update_clause )? ( merge_insert_clause )? ( error_logging_clause )? )
			{
			match(input,MERGE_VK,FOLLOW_MERGE_VK_in_merge_statement13577); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1485:21: ( alias )?
			int alt343=2;
			int LA343_0 = input.LA(1);
			if ( (LA343_0==ALIAS) ) {
				alt343=1;
			}
			switch (alt343) {
				case 1 :
					// PLSQLPrinter.g:1485:21: alias
					{
					pushFollow(FOLLOW_alias_in_merge_statement13579);
					alias();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_tableview_name_in_merge_statement13582);
			tableview_name();
			state._fsp--;

			match(input,PLSQL_NON_RESERVED_USING,FOLLOW_PLSQL_NON_RESERVED_USING_in_merge_statement13598); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_selected_tableview_in_merge_statement13600);
			selected_tableview();
			state._fsp--;

			pushFollow(FOLLOW_expression_in_merge_statement13602);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// PLSQLPrinter.g:1487:14: ( merge_update_clause )?
			int alt344=2;
			int LA344_0 = input.LA(1);
			if ( (LA344_0==MERGE_UPDATE) ) {
				alt344=1;
			}
			switch (alt344) {
				case 1 :
					// PLSQLPrinter.g:1487:14: merge_update_clause
					{
					pushFollow(FOLLOW_merge_update_clause_in_merge_statement13618);
					merge_update_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1487:35: ( merge_insert_clause )?
			int alt345=2;
			int LA345_0 = input.LA(1);
			if ( (LA345_0==MERGE_INSERT) ) {
				alt345=1;
			}
			switch (alt345) {
				case 1 :
					// PLSQLPrinter.g:1487:35: merge_insert_clause
					{
					pushFollow(FOLLOW_merge_insert_clause_in_merge_statement13621);
					merge_insert_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1487:56: ( error_logging_clause )?
			int alt346=2;
			int LA346_0 = input.LA(1);
			if ( (LA346_0==LOG_VK) ) {
				alt346=1;
			}
			switch (alt346) {
				case 1 :
					// PLSQLPrinter.g:1487:56: error_logging_clause
					{
					pushFollow(FOLLOW_error_logging_clause_in_merge_statement13624);
					error_logging_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1488:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "merge_statement"


	public static class merge_update_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "merge_update_clause"
	// PLSQLPrinter.g:1493:1: merge_update_clause : ^( MERGE_UPDATE ( merge_element )+ ( where_clause )? ( merge_update_delete_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.merge_update_clause_return merge_update_clause() throws RecognitionException {
		PLSQLPrinter.merge_update_clause_return retval = new PLSQLPrinter.merge_update_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1494:5: ( ^( MERGE_UPDATE ( merge_element )+ ( where_clause )? ( merge_update_delete_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1494:10: ^( MERGE_UPDATE ( merge_element )+ ( where_clause )? ( merge_update_delete_part )? )
			{
			match(input,MERGE_UPDATE,FOLLOW_MERGE_UPDATE_in_merge_update_clause13663); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1494:25: ( merge_element )+
			int cnt347=0;
			loop347:
			while (true) {
				int alt347=2;
				int LA347_0 = input.LA(1);
				if ( (LA347_0==ASSIGN) ) {
					alt347=1;
				}

				switch (alt347) {
				case 1 :
					// PLSQLPrinter.g:1494:25: merge_element
					{
					pushFollow(FOLLOW_merge_element_in_merge_update_clause13665);
					merge_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt347 >= 1 ) break loop347;
					EarlyExitException eee = new EarlyExitException(347, input);
					throw eee;
				}
				cnt347++;
			}

			// PLSQLPrinter.g:1494:40: ( where_clause )?
			int alt348=2;
			int LA348_0 = input.LA(1);
			if ( (LA348_0==SQL92_RESERVED_WHERE) ) {
				alt348=1;
			}
			switch (alt348) {
				case 1 :
					// PLSQLPrinter.g:1494:40: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_merge_update_clause13668);
					where_clause();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1494:54: ( merge_update_delete_part )?
			int alt349=2;
			int LA349_0 = input.LA(1);
			if ( (LA349_0==SQL92_RESERVED_DELETE) ) {
				alt349=1;
			}
			switch (alt349) {
				case 1 :
					// PLSQLPrinter.g:1494:54: merge_update_delete_part
					{
					pushFollow(FOLLOW_merge_update_delete_part_in_merge_update_clause13671);
					merge_update_delete_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1495:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "merge_update_clause"


	public static class merge_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "merge_element"
	// PLSQLPrinter.g:1498:1: merge_element : ^( ASSIGN column_name expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.merge_element_return merge_element() throws RecognitionException {
		PLSQLPrinter.merge_element_return retval = new PLSQLPrinter.merge_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1499:5: ( ^( ASSIGN column_name expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1499:10: ^( ASSIGN column_name expression )
			{
			match(input,ASSIGN,FOLLOW_ASSIGN_in_merge_element13708); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_column_name_in_merge_element13710);
			column_name();
			state._fsp--;

			pushFollow(FOLLOW_expression_in_merge_element13712);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1500:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "merge_element"


	public static class merge_update_delete_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "merge_update_delete_part"
	// PLSQLPrinter.g:1503:1: merge_update_delete_part : ^( SQL92_RESERVED_DELETE where_clause ) -> template( \"not implemented: \";
	public final PLSQLPrinter.merge_update_delete_part_return merge_update_delete_part() throws RecognitionException {
		PLSQLPrinter.merge_update_delete_part_return retval = new PLSQLPrinter.merge_update_delete_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1504:5: ( ^( SQL92_RESERVED_DELETE where_clause ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1504:10: ^( SQL92_RESERVED_DELETE where_clause )
			{
			match(input,SQL92_RESERVED_DELETE,FOLLOW_SQL92_RESERVED_DELETE_in_merge_update_delete_part13748); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_where_clause_in_merge_update_delete_part13750);
			where_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1505:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "merge_update_delete_part"


	public static class merge_insert_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "merge_insert_clause"
	// PLSQLPrinter.g:1508:1: merge_insert_clause : ^( MERGE_INSERT ^( COLUMNS ( column_name )* ) expression_list ( where_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.merge_insert_clause_return merge_insert_clause() throws RecognitionException {
		PLSQLPrinter.merge_insert_clause_return retval = new PLSQLPrinter.merge_insert_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1509:5: ( ^( MERGE_INSERT ^( COLUMNS ( column_name )* ) expression_list ( where_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1509:10: ^( MERGE_INSERT ^( COLUMNS ( column_name )* ) expression_list ( where_clause )? )
			{
			match(input,MERGE_INSERT,FOLLOW_MERGE_INSERT_in_merge_insert_clause13786); 
			match(input, Token.DOWN, null); 
			match(input,COLUMNS,FOLLOW_COLUMNS_in_merge_insert_clause13789); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1509:35: ( column_name )*
				loop350:
				while (true) {
					int alt350=2;
					int LA350_0 = input.LA(1);
					if ( (LA350_0==COLUMN_NAME) ) {
						alt350=1;
					}

					switch (alt350) {
					case 1 :
						// PLSQLPrinter.g:1509:35: column_name
						{
						pushFollow(FOLLOW_column_name_in_merge_insert_clause13791);
						column_name();
						state._fsp--;

						}
						break;

					default :
						break loop350;
					}
				}

				match(input, Token.UP, null); 
			}

			pushFollow(FOLLOW_expression_list_in_merge_insert_clause13795);
			expression_list();
			state._fsp--;

			// PLSQLPrinter.g:1509:65: ( where_clause )?
			int alt351=2;
			int LA351_0 = input.LA(1);
			if ( (LA351_0==SQL92_RESERVED_WHERE) ) {
				alt351=1;
			}
			switch (alt351) {
				case 1 :
					// PLSQLPrinter.g:1509:65: where_clause
					{
					pushFollow(FOLLOW_where_clause_in_merge_insert_clause13797);
					where_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1510:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "merge_insert_clause"


	public static class selected_tableview_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "selected_tableview"
	// PLSQLPrinter.g:1513:1: selected_tableview : ^( SELECTED_TABLEVIEW ( alias )? ( tableview_name | subquery ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.selected_tableview_return selected_tableview() throws RecognitionException {
		PLSQLPrinter.selected_tableview_return retval = new PLSQLPrinter.selected_tableview_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1514:5: ( ^( SELECTED_TABLEVIEW ( alias )? ( tableview_name | subquery ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1514:10: ^( SELECTED_TABLEVIEW ( alias )? ( tableview_name | subquery ) )
			{
			match(input,SELECTED_TABLEVIEW,FOLLOW_SELECTED_TABLEVIEW_in_selected_tableview13835); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1514:31: ( alias )?
			int alt352=2;
			int LA352_0 = input.LA(1);
			if ( (LA352_0==ALIAS) ) {
				alt352=1;
			}
			switch (alt352) {
				case 1 :
					// PLSQLPrinter.g:1514:31: alias
					{
					pushFollow(FOLLOW_alias_in_selected_tableview13837);
					alias();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1514:38: ( tableview_name | subquery )
			int alt353=2;
			int LA353_0 = input.LA(1);
			if ( (LA353_0==TABLEVIEW_NAME) ) {
				alt353=1;
			}
			else if ( (LA353_0==SUBQUERY) ) {
				alt353=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 353, 0, input);
				throw nvae;
			}

			switch (alt353) {
				case 1 :
					// PLSQLPrinter.g:1514:39: tableview_name
					{
					pushFollow(FOLLOW_tableview_name_in_selected_tableview13841);
					tableview_name();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1514:54: subquery
					{
					pushFollow(FOLLOW_subquery_in_selected_tableview13843);
					subquery();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1515:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "selected_tableview"


	public static class lock_table_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "lock_table_statement"
	// PLSQLPrinter.g:1520:1: lock_table_statement : ^( PLSQL_RESERVED_LOCK ( lock_table_element )+ lock_mode ( wait_nowait_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.lock_table_statement_return lock_table_statement() throws RecognitionException {
		PLSQLPrinter.lock_table_statement_return retval = new PLSQLPrinter.lock_table_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1521:5: ( ^( PLSQL_RESERVED_LOCK ( lock_table_element )+ lock_mode ( wait_nowait_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1521:10: ^( PLSQL_RESERVED_LOCK ( lock_table_element )+ lock_mode ( wait_nowait_part )? )
			{
			match(input,PLSQL_RESERVED_LOCK,FOLLOW_PLSQL_RESERVED_LOCK_in_lock_table_statement13882); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1521:32: ( lock_table_element )+
			int cnt354=0;
			loop354:
			while (true) {
				int alt354=2;
				int LA354_0 = input.LA(1);
				if ( (LA354_0==LOCK_TABLE_ELEMENT) ) {
					alt354=1;
				}

				switch (alt354) {
				case 1 :
					// PLSQLPrinter.g:1521:32: lock_table_element
					{
					pushFollow(FOLLOW_lock_table_element_in_lock_table_statement13884);
					lock_table_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt354 >= 1 ) break loop354;
					EarlyExitException eee = new EarlyExitException(354, input);
					throw eee;
				}
				cnt354++;
			}

			pushFollow(FOLLOW_lock_mode_in_lock_table_statement13887);
			lock_mode();
			state._fsp--;

			// PLSQLPrinter.g:1521:62: ( wait_nowait_part )?
			int alt355=2;
			int LA355_0 = input.LA(1);
			if ( (LA355_0==PLSQL_RESERVED_NOWAIT||LA355_0==WAIT_VK) ) {
				alt355=1;
			}
			switch (alt355) {
				case 1 :
					// PLSQLPrinter.g:1521:62: wait_nowait_part
					{
					pushFollow(FOLLOW_wait_nowait_part_in_lock_table_statement13889);
					wait_nowait_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1522:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "lock_table_statement"


	public static class wait_nowait_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "wait_nowait_part"
	// PLSQLPrinter.g:1525:1: wait_nowait_part : ( ^( WAIT_VK expression ) -> template( \"not implemented: \"| PLSQL_RESERVED_NOWAIT -> template( \"not implemented: \");
	public final PLSQLPrinter.wait_nowait_part_return wait_nowait_part() throws RecognitionException {
		PLSQLPrinter.wait_nowait_part_return retval = new PLSQLPrinter.wait_nowait_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1526:5: ( ^( WAIT_VK expression ) -> template( \"not implemented: \"| PLSQL_RESERVED_NOWAIT -> template( \"not implemented: \")
			int alt356=2;
			int LA356_0 = input.LA(1);
			if ( (LA356_0==WAIT_VK) ) {
				alt356=1;
			}
			else if ( (LA356_0==PLSQL_RESERVED_NOWAIT) ) {
				alt356=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 356, 0, input);
				throw nvae;
			}

			switch (alt356) {
				case 1 :
					// PLSQLPrinter.g:1526:10: ^( WAIT_VK expression )
					{
					match(input,WAIT_VK,FOLLOW_WAIT_VK_in_wait_nowait_part13926); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_wait_nowait_part13928);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1527:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1528:10: PLSQL_RESERVED_NOWAIT
					{
					match(input,PLSQL_RESERVED_NOWAIT,FOLLOW_PLSQL_RESERVED_NOWAIT_in_wait_nowait_part13954); 
					// TEMPLATE REWRITE
					// 1529:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "wait_nowait_part"


	public static class lock_table_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "lock_table_element"
	// PLSQLPrinter.g:1534:1: lock_table_element : ^( LOCK_TABLE_ELEMENT tableview_name ( partition_extension_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.lock_table_element_return lock_table_element() throws RecognitionException {
		PLSQLPrinter.lock_table_element_return retval = new PLSQLPrinter.lock_table_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1535:5: ( ^( LOCK_TABLE_ELEMENT tableview_name ( partition_extension_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1535:10: ^( LOCK_TABLE_ELEMENT tableview_name ( partition_extension_clause )? )
			{
			match(input,LOCK_TABLE_ELEMENT,FOLLOW_LOCK_TABLE_ELEMENT_in_lock_table_element13991); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_tableview_name_in_lock_table_element13993);
			tableview_name();
			state._fsp--;

			// PLSQLPrinter.g:1535:46: ( partition_extension_clause )?
			int alt357=2;
			int LA357_0 = input.LA(1);
			if ( (LA357_0==PARTITION_VK||LA357_0==SUBPARTITION_VK) ) {
				alt357=1;
			}
			switch (alt357) {
				case 1 :
					// PLSQLPrinter.g:1535:46: partition_extension_clause
					{
					pushFollow(FOLLOW_partition_extension_clause_in_lock_table_element13995);
					partition_extension_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1536:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "lock_table_element"


	public static class lock_mode_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "lock_mode"
	// PLSQLPrinter.g:1539:1: lock_mode : ( ROW_VK PLSQL_RESERVED_SHARE -> template( \"not implemented: \"| ROW_VK PLSQL_RESERVED_EXCLUSIVE -> template( \"not implemented: \"| PLSQL_RESERVED_SHARE ( SQL92_RESERVED_UPDATE )? -> template( \"not implemented: \"| PLSQL_RESERVED_SHARE ROW_VK PLSQL_RESERVED_EXCLUSIVE -> template( \"not implemented: \"| PLSQL_RESERVED_EXCLUSIVE -> template( \"not implemented: \");
	public final PLSQLPrinter.lock_mode_return lock_mode() throws RecognitionException {
		PLSQLPrinter.lock_mode_return retval = new PLSQLPrinter.lock_mode_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1540:5: ( ROW_VK PLSQL_RESERVED_SHARE -> template( \"not implemented: \"| ROW_VK PLSQL_RESERVED_EXCLUSIVE -> template( \"not implemented: \"| PLSQL_RESERVED_SHARE ( SQL92_RESERVED_UPDATE )? -> template( \"not implemented: \"| PLSQL_RESERVED_SHARE ROW_VK PLSQL_RESERVED_EXCLUSIVE -> template( \"not implemented: \"| PLSQL_RESERVED_EXCLUSIVE -> template( \"not implemented: \")
			int alt359=5;
			switch ( input.LA(1) ) {
			case ROW_VK:
				{
				int LA359_1 = input.LA(2);
				if ( (LA359_1==PLSQL_RESERVED_SHARE) ) {
					alt359=1;
				}
				else if ( (LA359_1==PLSQL_RESERVED_EXCLUSIVE) ) {
					alt359=2;
				}

				else {
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 359, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PLSQL_RESERVED_SHARE:
				{
				int LA359_2 = input.LA(2);
				if ( (LA359_2==ROW_VK) ) {
					alt359=4;
				}
				else if ( (LA359_2==UP||LA359_2==PLSQL_RESERVED_NOWAIT||LA359_2==SQL92_RESERVED_UPDATE||LA359_2==WAIT_VK) ) {
					alt359=3;
				}

				else {
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 359, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case PLSQL_RESERVED_EXCLUSIVE:
				{
				alt359=5;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 359, 0, input);
				throw nvae;
			}
			switch (alt359) {
				case 1 :
					// PLSQLPrinter.g:1540:10: ROW_VK PLSQL_RESERVED_SHARE
					{
					match(input,ROW_VK,FOLLOW_ROW_VK_in_lock_mode14031); 
					match(input,PLSQL_RESERVED_SHARE,FOLLOW_PLSQL_RESERVED_SHARE_in_lock_mode14033); 
					// TEMPLATE REWRITE
					// 1541:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1542:10: ROW_VK PLSQL_RESERVED_EXCLUSIVE
					{
					match(input,ROW_VK,FOLLOW_ROW_VK_in_lock_mode14058); 
					match(input,PLSQL_RESERVED_EXCLUSIVE,FOLLOW_PLSQL_RESERVED_EXCLUSIVE_in_lock_mode14060); 
					// TEMPLATE REWRITE
					// 1543:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1544:10: PLSQL_RESERVED_SHARE ( SQL92_RESERVED_UPDATE )?
					{
					match(input,PLSQL_RESERVED_SHARE,FOLLOW_PLSQL_RESERVED_SHARE_in_lock_mode14085); 
					// PLSQLPrinter.g:1544:31: ( SQL92_RESERVED_UPDATE )?
					int alt358=2;
					int LA358_0 = input.LA(1);
					if ( (LA358_0==SQL92_RESERVED_UPDATE) ) {
						alt358=1;
					}
					switch (alt358) {
						case 1 :
							// PLSQLPrinter.g:1544:31: SQL92_RESERVED_UPDATE
							{
							match(input,SQL92_RESERVED_UPDATE,FOLLOW_SQL92_RESERVED_UPDATE_in_lock_mode14087); 
							}
							break;

					}

					// TEMPLATE REWRITE
					// 1545:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1546:10: PLSQL_RESERVED_SHARE ROW_VK PLSQL_RESERVED_EXCLUSIVE
					{
					match(input,PLSQL_RESERVED_SHARE,FOLLOW_PLSQL_RESERVED_SHARE_in_lock_mode14113); 
					match(input,ROW_VK,FOLLOW_ROW_VK_in_lock_mode14115); 
					match(input,PLSQL_RESERVED_EXCLUSIVE,FOLLOW_PLSQL_RESERVED_EXCLUSIVE_in_lock_mode14117); 
					// TEMPLATE REWRITE
					// 1547:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:1548:10: PLSQL_RESERVED_EXCLUSIVE
					{
					match(input,PLSQL_RESERVED_EXCLUSIVE,FOLLOW_PLSQL_RESERVED_EXCLUSIVE_in_lock_mode14142); 
					// TEMPLATE REWRITE
					// 1549:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "lock_mode"


	public static class general_table_ref_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "general_table_ref"
	// PLSQLPrinter.g:1555:1: general_table_ref : ^( TABLE_REF ( alias )? dml_table_expression_clause ( ONLY_VK )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.general_table_ref_return general_table_ref() throws RecognitionException {
		PLSQLPrinter.general_table_ref_return retval = new PLSQLPrinter.general_table_ref_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1556:5: ( ^( TABLE_REF ( alias )? dml_table_expression_clause ( ONLY_VK )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1556:10: ^( TABLE_REF ( alias )? dml_table_expression_clause ( ONLY_VK )? )
			{
			match(input,TABLE_REF,FOLLOW_TABLE_REF_in_general_table_ref14180); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1556:22: ( alias )?
			int alt360=2;
			int LA360_0 = input.LA(1);
			if ( (LA360_0==ALIAS) ) {
				alt360=1;
			}
			switch (alt360) {
				case 1 :
					// PLSQLPrinter.g:1556:22: alias
					{
					pushFollow(FOLLOW_alias_in_general_table_ref14182);
					alias();
					state._fsp--;

					}
					break;

			}

			pushFollow(FOLLOW_dml_table_expression_clause_in_general_table_ref14185);
			dml_table_expression_clause();
			state._fsp--;

			// PLSQLPrinter.g:1556:57: ( ONLY_VK )?
			int alt361=2;
			int LA361_0 = input.LA(1);
			if ( (LA361_0==ONLY_VK) ) {
				alt361=1;
			}
			switch (alt361) {
				case 1 :
					// PLSQLPrinter.g:1556:57: ONLY_VK
					{
					match(input,ONLY_VK,FOLLOW_ONLY_VK_in_general_table_ref14187); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1557:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "general_table_ref"


	public static class static_returning_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "static_returning_clause"
	// PLSQLPrinter.g:1560:1: static_returning_clause : ^( STATIC_RETURNING ( expression )+ into_clause ) -> template( \"not implemented: \";
	public final PLSQLPrinter.static_returning_clause_return static_returning_clause() throws RecognitionException {
		PLSQLPrinter.static_returning_clause_return retval = new PLSQLPrinter.static_returning_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1561:5: ( ^( STATIC_RETURNING ( expression )+ into_clause ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1561:10: ^( STATIC_RETURNING ( expression )+ into_clause )
			{
			match(input,STATIC_RETURNING,FOLLOW_STATIC_RETURNING_in_static_returning_clause14224); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1561:29: ( expression )+
			int cnt362=0;
			loop362:
			while (true) {
				int alt362=2;
				int LA362_0 = input.LA(1);
				if ( (LA362_0==EXPR||LA362_0==LOGIC_EXPR) ) {
					alt362=1;
				}

				switch (alt362) {
				case 1 :
					// PLSQLPrinter.g:1561:29: expression
					{
					pushFollow(FOLLOW_expression_in_static_returning_clause14226);
					expression();
					state._fsp--;

					}
					break;

				default :
					if ( cnt362 >= 1 ) break loop362;
					EarlyExitException eee = new EarlyExitException(362, input);
					throw eee;
				}
				cnt362++;
			}

			pushFollow(FOLLOW_into_clause_in_static_returning_clause14229);
			into_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1562:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "static_returning_clause"


	public static class error_logging_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "error_logging_clause"
	// PLSQLPrinter.g:1565:1: error_logging_clause : ^( LOG_VK ( error_logging_into_part )? ( expression )? ( error_logging_reject_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.error_logging_clause_return error_logging_clause() throws RecognitionException {
		PLSQLPrinter.error_logging_clause_return retval = new PLSQLPrinter.error_logging_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1566:5: ( ^( LOG_VK ( error_logging_into_part )? ( expression )? ( error_logging_reject_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1566:10: ^( LOG_VK ( error_logging_into_part )? ( expression )? ( error_logging_reject_part )? )
			{
			match(input,LOG_VK,FOLLOW_LOG_VK_in_error_logging_clause14265); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1566:19: ( error_logging_into_part )?
				int alt363=2;
				int LA363_0 = input.LA(1);
				if ( (LA363_0==SQL92_RESERVED_INTO) ) {
					alt363=1;
				}
				switch (alt363) {
					case 1 :
						// PLSQLPrinter.g:1566:19: error_logging_into_part
						{
						pushFollow(FOLLOW_error_logging_into_part_in_error_logging_clause14267);
						error_logging_into_part();
						state._fsp--;

						}
						break;

				}

				// PLSQLPrinter.g:1566:44: ( expression )?
				int alt364=2;
				int LA364_0 = input.LA(1);
				if ( (LA364_0==EXPR||LA364_0==LOGIC_EXPR) ) {
					alt364=1;
				}
				switch (alt364) {
					case 1 :
						// PLSQLPrinter.g:1566:44: expression
						{
						pushFollow(FOLLOW_expression_in_error_logging_clause14270);
						expression();
						state._fsp--;

						}
						break;

				}

				// PLSQLPrinter.g:1566:56: ( error_logging_reject_part )?
				int alt365=2;
				int LA365_0 = input.LA(1);
				if ( (LA365_0==REJECT_VK) ) {
					alt365=1;
				}
				switch (alt365) {
					case 1 :
						// PLSQLPrinter.g:1566:56: error_logging_reject_part
						{
						pushFollow(FOLLOW_error_logging_reject_part_in_error_logging_clause14273);
						error_logging_reject_part();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1567:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "error_logging_clause"


	public static class error_logging_into_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "error_logging_into_part"
	// PLSQLPrinter.g:1570:1: error_logging_into_part : ^( SQL92_RESERVED_INTO tableview_name ) -> template( \"not implemented: \";
	public final PLSQLPrinter.error_logging_into_part_return error_logging_into_part() throws RecognitionException {
		PLSQLPrinter.error_logging_into_part_return retval = new PLSQLPrinter.error_logging_into_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1571:5: ( ^( SQL92_RESERVED_INTO tableview_name ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1571:10: ^( SQL92_RESERVED_INTO tableview_name )
			{
			match(input,SQL92_RESERVED_INTO,FOLLOW_SQL92_RESERVED_INTO_in_error_logging_into_part14310); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_tableview_name_in_error_logging_into_part14312);
			tableview_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1572:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "error_logging_into_part"


	public static class error_logging_reject_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "error_logging_reject_part"
	// PLSQLPrinter.g:1575:1: error_logging_reject_part : ^( REJECT_VK ( UNLIMITED_VK | expression ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.error_logging_reject_part_return error_logging_reject_part() throws RecognitionException {
		PLSQLPrinter.error_logging_reject_part_return retval = new PLSQLPrinter.error_logging_reject_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1576:5: ( ^( REJECT_VK ( UNLIMITED_VK | expression ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1576:10: ^( REJECT_VK ( UNLIMITED_VK | expression ) )
			{
			match(input,REJECT_VK,FOLLOW_REJECT_VK_in_error_logging_reject_part14348); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1576:22: ( UNLIMITED_VK | expression )
			int alt366=2;
			int LA366_0 = input.LA(1);
			if ( (LA366_0==UNLIMITED_VK) ) {
				alt366=1;
			}
			else if ( (LA366_0==EXPR||LA366_0==LOGIC_EXPR) ) {
				alt366=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 366, 0, input);
				throw nvae;
			}

			switch (alt366) {
				case 1 :
					// PLSQLPrinter.g:1576:23: UNLIMITED_VK
					{
					match(input,UNLIMITED_VK,FOLLOW_UNLIMITED_VK_in_error_logging_reject_part14351); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1576:36: expression
					{
					pushFollow(FOLLOW_expression_in_error_logging_reject_part14353);
					expression();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1577:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "error_logging_reject_part"


	public static class dml_table_expression_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "dml_table_expression_clause"
	// PLSQLPrinter.g:1580:1: dml_table_expression_clause : ( ^( TABLE_EXPRESSION ( ^( COLLECTION_MODE expression ( PLUS_SIGN )? ) | ^( SELECT_MODE select_statement ( subquery_restriction_clause )? ) | ^( DIRECT_MODE tableview_name ( sample_clause )? ) | table_ref | general_element ) ) -> template( \"not implemented: \"| table_ref -> template( \"not implemented: \");
	public final PLSQLPrinter.dml_table_expression_clause_return dml_table_expression_clause() throws RecognitionException {
		PLSQLPrinter.dml_table_expression_clause_return retval = new PLSQLPrinter.dml_table_expression_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1581:5: ( ^( TABLE_EXPRESSION ( ^( COLLECTION_MODE expression ( PLUS_SIGN )? ) | ^( SELECT_MODE select_statement ( subquery_restriction_clause )? ) | ^( DIRECT_MODE tableview_name ( sample_clause )? ) | table_ref | general_element ) ) -> template( \"not implemented: \"| table_ref -> template( \"not implemented: \")
			int alt371=2;
			int LA371_0 = input.LA(1);
			if ( (LA371_0==TABLE_EXPRESSION) ) {
				alt371=1;
			}
			else if ( (LA371_0==TABLE_REF) ) {
				alt371=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 371, 0, input);
				throw nvae;
			}

			switch (alt371) {
				case 1 :
					// PLSQLPrinter.g:1581:10: ^( TABLE_EXPRESSION ( ^( COLLECTION_MODE expression ( PLUS_SIGN )? ) | ^( SELECT_MODE select_statement ( subquery_restriction_clause )? ) | ^( DIRECT_MODE tableview_name ( sample_clause )? ) | table_ref | general_element ) )
					{
					match(input,TABLE_EXPRESSION,FOLLOW_TABLE_EXPRESSION_in_dml_table_expression_clause14390); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1582:9: ( ^( COLLECTION_MODE expression ( PLUS_SIGN )? ) | ^( SELECT_MODE select_statement ( subquery_restriction_clause )? ) | ^( DIRECT_MODE tableview_name ( sample_clause )? ) | table_ref | general_element )
					int alt370=5;
					switch ( input.LA(1) ) {
					case COLLECTION_MODE:
						{
						alt370=1;
						}
						break;
					case SELECT_MODE:
						{
						alt370=2;
						}
						break;
					case DIRECT_MODE:
						{
						alt370=3;
						}
						break;
					case TABLE_REF:
						{
						alt370=4;
						}
						break;
					case ANY_ELEMENT:
					case CASCATED_ELEMENT:
					case HOSTED_VARIABLE:
					case HOSTED_VARIABLE_ROUTINE_CALL:
					case ROUTINE_CALL:
						{
						alt370=5;
						}
						break;
					default:
						NoViableAltException nvae =
							new NoViableAltException("", 370, 0, input);
						throw nvae;
					}
					switch (alt370) {
						case 1 :
							// PLSQLPrinter.g:1582:14: ^( COLLECTION_MODE expression ( PLUS_SIGN )? )
							{
							match(input,COLLECTION_MODE,FOLLOW_COLLECTION_MODE_in_dml_table_expression_clause14407); 
							match(input, Token.DOWN, null); 
							pushFollow(FOLLOW_expression_in_dml_table_expression_clause14409);
							expression();
							state._fsp--;

							// PLSQLPrinter.g:1582:43: ( PLUS_SIGN )?
							int alt367=2;
							int LA367_0 = input.LA(1);
							if ( (LA367_0==PLUS_SIGN) ) {
								alt367=1;
							}
							switch (alt367) {
								case 1 :
									// PLSQLPrinter.g:1582:43: PLUS_SIGN
									{
									match(input,PLUS_SIGN,FOLLOW_PLUS_SIGN_in_dml_table_expression_clause14411); 
									}
									break;

							}

							match(input, Token.UP, null); 

							}
							break;
						case 2 :
							// PLSQLPrinter.g:1583:14: ^( SELECT_MODE select_statement ( subquery_restriction_clause )? )
							{
							match(input,SELECT_MODE,FOLLOW_SELECT_MODE_in_dml_table_expression_clause14429); 
							match(input, Token.DOWN, null); 
							pushFollow(FOLLOW_select_statement_in_dml_table_expression_clause14431);
							select_statement();
							state._fsp--;

							// PLSQLPrinter.g:1583:45: ( subquery_restriction_clause )?
							int alt368=2;
							int LA368_0 = input.LA(1);
							if ( (LA368_0==SQL92_RESERVED_WITH) ) {
								alt368=1;
							}
							switch (alt368) {
								case 1 :
									// PLSQLPrinter.g:1583:45: subquery_restriction_clause
									{
									pushFollow(FOLLOW_subquery_restriction_clause_in_dml_table_expression_clause14433);
									subquery_restriction_clause();
									state._fsp--;

									}
									break;

							}

							match(input, Token.UP, null); 

							}
							break;
						case 3 :
							// PLSQLPrinter.g:1584:14: ^( DIRECT_MODE tableview_name ( sample_clause )? )
							{
							match(input,DIRECT_MODE,FOLLOW_DIRECT_MODE_in_dml_table_expression_clause14451); 
							match(input, Token.DOWN, null); 
							pushFollow(FOLLOW_tableview_name_in_dml_table_expression_clause14453);
							tableview_name();
							state._fsp--;

							// PLSQLPrinter.g:1584:43: ( sample_clause )?
							int alt369=2;
							int LA369_0 = input.LA(1);
							if ( (LA369_0==SAMPLE_VK) ) {
								alt369=1;
							}
							switch (alt369) {
								case 1 :
									// PLSQLPrinter.g:1584:43: sample_clause
									{
									pushFollow(FOLLOW_sample_clause_in_dml_table_expression_clause14455);
									sample_clause();
									state._fsp--;

									}
									break;

							}

							match(input, Token.UP, null); 

							}
							break;
						case 4 :
							// PLSQLPrinter.g:1585:14: table_ref
							{
							pushFollow(FOLLOW_table_ref_in_dml_table_expression_clause14472);
							table_ref();
							state._fsp--;

							}
							break;
						case 5 :
							// PLSQLPrinter.g:1586:14: general_element
							{
							pushFollow(FOLLOW_general_element_in_dml_table_expression_clause14487);
							general_element();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1589:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1590:14: table_ref
					{
					pushFollow(FOLLOW_table_ref_in_dml_table_expression_clause14536);
					table_ref();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1591:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "dml_table_expression_clause"


	public static class subquery_restriction_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "subquery_restriction_clause"
	// PLSQLPrinter.g:1594:1: subquery_restriction_clause : ^( SQL92_RESERVED_WITH ( READ_VK | SQL92_RESERVED_CHECK ( constraint_name )? ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.subquery_restriction_clause_return subquery_restriction_clause() throws RecognitionException {
		PLSQLPrinter.subquery_restriction_clause_return retval = new PLSQLPrinter.subquery_restriction_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1595:5: ( ^( SQL92_RESERVED_WITH ( READ_VK | SQL92_RESERVED_CHECK ( constraint_name )? ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1595:10: ^( SQL92_RESERVED_WITH ( READ_VK | SQL92_RESERVED_CHECK ( constraint_name )? ) )
			{
			match(input,SQL92_RESERVED_WITH,FOLLOW_SQL92_RESERVED_WITH_in_subquery_restriction_clause14571); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1595:32: ( READ_VK | SQL92_RESERVED_CHECK ( constraint_name )? )
			int alt373=2;
			int LA373_0 = input.LA(1);
			if ( (LA373_0==READ_VK) ) {
				alt373=1;
			}
			else if ( (LA373_0==SQL92_RESERVED_CHECK) ) {
				alt373=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 373, 0, input);
				throw nvae;
			}

			switch (alt373) {
				case 1 :
					// PLSQLPrinter.g:1595:33: READ_VK
					{
					match(input,READ_VK,FOLLOW_READ_VK_in_subquery_restriction_clause14574); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1595:41: SQL92_RESERVED_CHECK ( constraint_name )?
					{
					match(input,SQL92_RESERVED_CHECK,FOLLOW_SQL92_RESERVED_CHECK_in_subquery_restriction_clause14576); 
					// PLSQLPrinter.g:1595:62: ( constraint_name )?
					int alt372=2;
					int LA372_0 = input.LA(1);
					if ( (LA372_0==CONSTRAINT_NAME) ) {
						alt372=1;
					}
					switch (alt372) {
						case 1 :
							// PLSQLPrinter.g:1595:62: constraint_name
							{
							pushFollow(FOLLOW_constraint_name_in_subquery_restriction_clause14578);
							constraint_name();
							state._fsp--;

							}
							break;

					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1596:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "subquery_restriction_clause"


	public static class sample_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "sample_clause"
	// PLSQLPrinter.g:1599:1: sample_clause : ^( SAMPLE_VK ( BLOCK_VK )? expression ( seed_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.sample_clause_return sample_clause() throws RecognitionException {
		PLSQLPrinter.sample_clause_return retval = new PLSQLPrinter.sample_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1600:5: ( ^( SAMPLE_VK ( BLOCK_VK )? expression ( seed_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1600:10: ^( SAMPLE_VK ( BLOCK_VK )? expression ( seed_part )? )
			{
			match(input,SAMPLE_VK,FOLLOW_SAMPLE_VK_in_sample_clause14616); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1600:22: ( BLOCK_VK )?
			int alt374=2;
			int LA374_0 = input.LA(1);
			if ( (LA374_0==BLOCK_VK) ) {
				alt374=1;
			}
			switch (alt374) {
				case 1 :
					// PLSQLPrinter.g:1600:22: BLOCK_VK
					{
					match(input,BLOCK_VK,FOLLOW_BLOCK_VK_in_sample_clause14618); 
					}
					break;

			}

			pushFollow(FOLLOW_expression_in_sample_clause14621);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:1600:43: ( seed_part )?
			int alt375=2;
			int LA375_0 = input.LA(1);
			if ( (LA375_0==SEED_VK) ) {
				alt375=1;
			}
			switch (alt375) {
				case 1 :
					// PLSQLPrinter.g:1600:43: seed_part
					{
					pushFollow(FOLLOW_seed_part_in_sample_clause14623);
					seed_part();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1601:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sample_clause"


	public static class seed_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "seed_part"
	// PLSQLPrinter.g:1604:1: seed_part : ^( SEED_VK expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.seed_part_return seed_part() throws RecognitionException {
		PLSQLPrinter.seed_part_return retval = new PLSQLPrinter.seed_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1605:5: ( ^( SEED_VK expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1605:10: ^( SEED_VK expression )
			{
			match(input,SEED_VK,FOLLOW_SEED_VK_in_seed_part14661); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_seed_part14663);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1606:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "seed_part"


	public static class cursor_manipulation_statements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "cursor_manipulation_statements"
	// PLSQLPrinter.g:1615:1: cursor_manipulation_statements : ( close_statement -> template( \"not implemented: \"| open_statement -> template( \"not implemented: \"| fetch_statement -> template( \"not implemented: \"| open_for_statement -> template( \"not implemented: \");
	public final PLSQLPrinter.cursor_manipulation_statements_return cursor_manipulation_statements() throws RecognitionException {
		PLSQLPrinter.cursor_manipulation_statements_return retval = new PLSQLPrinter.cursor_manipulation_statements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1616:5: ( close_statement -> template( \"not implemented: \"| open_statement -> template( \"not implemented: \"| fetch_statement -> template( \"not implemented: \"| open_for_statement -> template( \"not implemented: \")
			int alt376=4;
			switch ( input.LA(1) ) {
			case CLOSE_VK:
				{
				alt376=1;
				}
				break;
			case OPEN_VK:
				{
				int LA376_2 = input.LA(2);
				if ( (LA376_2==DOWN) ) {
					int LA376_4 = input.LA(3);
					if ( (LA376_4==CURSOR_NAME) ) {
						alt376=2;
					}
					else if ( (LA376_4==HOSTED_VARIABLE_NAME||LA376_4==VARIABLE_NAME) ) {
						alt376=4;
					}

					else {
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 376, 4, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 376, 2, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case SQL92_RESERVED_FETCH:
				{
				alt376=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 376, 0, input);
				throw nvae;
			}
			switch (alt376) {
				case 1 :
					// PLSQLPrinter.g:1616:10: close_statement
					{
					pushFollow(FOLLOW_close_statement_in_cursor_manipulation_statements14704);
					close_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1617:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1618:10: open_statement
					{
					pushFollow(FOLLOW_open_statement_in_cursor_manipulation_statements14729);
					open_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1619:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1620:10: fetch_statement
					{
					pushFollow(FOLLOW_fetch_statement_in_cursor_manipulation_statements14754);
					fetch_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1621:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1622:10: open_for_statement
					{
					pushFollow(FOLLOW_open_for_statement_in_cursor_manipulation_statements14779);
					open_for_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1623:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cursor_manipulation_statements"


	public static class close_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "close_statement"
	// PLSQLPrinter.g:1626:1: close_statement : ^( CLOSE_VK variable_name ) -> template( \"not implemented: \";
	public final PLSQLPrinter.close_statement_return close_statement() throws RecognitionException {
		PLSQLPrinter.close_statement_return retval = new PLSQLPrinter.close_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1627:5: ( ^( CLOSE_VK variable_name ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1627:11: ^( CLOSE_VK variable_name )
			{
			match(input,CLOSE_VK,FOLLOW_CLOSE_VK_in_close_statement14815); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_variable_name_in_close_statement14817);
			variable_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1628:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "close_statement"


	public static class open_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "open_statement"
	// PLSQLPrinter.g:1631:1: open_statement : ^( OPEN_VK cursor_name ( expression_list )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.open_statement_return open_statement() throws RecognitionException {
		PLSQLPrinter.open_statement_return retval = new PLSQLPrinter.open_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1632:5: ( ^( OPEN_VK cursor_name ( expression_list )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1632:10: ^( OPEN_VK cursor_name ( expression_list )? )
			{
			match(input,OPEN_VK,FOLLOW_OPEN_VK_in_open_statement14854); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_cursor_name_in_open_statement14856);
			cursor_name();
			state._fsp--;

			// PLSQLPrinter.g:1632:32: ( expression_list )?
			int alt377=2;
			int LA377_0 = input.LA(1);
			if ( (LA377_0==EXPR_LIST) ) {
				alt377=1;
			}
			switch (alt377) {
				case 1 :
					// PLSQLPrinter.g:1632:32: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_open_statement14858);
					expression_list();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1633:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "open_statement"


	public static class fetch_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "fetch_statement"
	// PLSQLPrinter.g:1636:1: fetch_statement : ^( SQL92_RESERVED_FETCH cursor_name ( ^( SQL92_RESERVED_INTO ( variable_name )+ ) | ^( BULK_VK ( variable_name )+ ) ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.fetch_statement_return fetch_statement() throws RecognitionException {
		PLSQLPrinter.fetch_statement_return retval = new PLSQLPrinter.fetch_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1637:5: ( ^( SQL92_RESERVED_FETCH cursor_name ( ^( SQL92_RESERVED_INTO ( variable_name )+ ) | ^( BULK_VK ( variable_name )+ ) ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1637:10: ^( SQL92_RESERVED_FETCH cursor_name ( ^( SQL92_RESERVED_INTO ( variable_name )+ ) | ^( BULK_VK ( variable_name )+ ) ) )
			{
			match(input,SQL92_RESERVED_FETCH,FOLLOW_SQL92_RESERVED_FETCH_in_fetch_statement14895); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_cursor_name_in_fetch_statement14897);
			cursor_name();
			state._fsp--;

			// PLSQLPrinter.g:1638:13: ( ^( SQL92_RESERVED_INTO ( variable_name )+ ) | ^( BULK_VK ( variable_name )+ ) )
			int alt380=2;
			int LA380_0 = input.LA(1);
			if ( (LA380_0==SQL92_RESERVED_INTO) ) {
				alt380=1;
			}
			else if ( (LA380_0==BULK_VK) ) {
				alt380=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 380, 0, input);
				throw nvae;
			}

			switch (alt380) {
				case 1 :
					// PLSQLPrinter.g:1638:18: ^( SQL92_RESERVED_INTO ( variable_name )+ )
					{
					match(input,SQL92_RESERVED_INTO,FOLLOW_SQL92_RESERVED_INTO_in_fetch_statement14918); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1638:40: ( variable_name )+
					int cnt378=0;
					loop378:
					while (true) {
						int alt378=2;
						int LA378_0 = input.LA(1);
						if ( (LA378_0==HOSTED_VARIABLE_NAME||LA378_0==VARIABLE_NAME) ) {
							alt378=1;
						}

						switch (alt378) {
						case 1 :
							// PLSQLPrinter.g:1638:40: variable_name
							{
							pushFollow(FOLLOW_variable_name_in_fetch_statement14920);
							variable_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt378 >= 1 ) break loop378;
							EarlyExitException eee = new EarlyExitException(378, input);
							throw eee;
						}
						cnt378++;
					}

					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1639:18: ^( BULK_VK ( variable_name )+ )
					{
					match(input,BULK_VK,FOLLOW_BULK_VK_in_fetch_statement14942); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1639:28: ( variable_name )+
					int cnt379=0;
					loop379:
					while (true) {
						int alt379=2;
						int LA379_0 = input.LA(1);
						if ( (LA379_0==HOSTED_VARIABLE_NAME||LA379_0==VARIABLE_NAME) ) {
							alt379=1;
						}

						switch (alt379) {
						case 1 :
							// PLSQLPrinter.g:1639:28: variable_name
							{
							pushFollow(FOLLOW_variable_name_in_fetch_statement14944);
							variable_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt379 >= 1 ) break loop379;
							EarlyExitException eee = new EarlyExitException(379, input);
							throw eee;
						}
						cnt379++;
					}

					match(input, Token.UP, null); 

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1642:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "fetch_statement"


	public static class open_for_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "open_for_statement"
	// PLSQLPrinter.g:1645:1: open_for_statement : ^( OPEN_VK variable_name ( expression | select_statement ) ( using_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.open_for_statement_return open_for_statement() throws RecognitionException {
		PLSQLPrinter.open_for_statement_return retval = new PLSQLPrinter.open_for_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1646:5: ( ^( OPEN_VK variable_name ( expression | select_statement ) ( using_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1646:10: ^( OPEN_VK variable_name ( expression | select_statement ) ( using_clause )? )
			{
			match(input,OPEN_VK,FOLLOW_OPEN_VK_in_open_for_statement15005); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_variable_name_in_open_for_statement15007);
			variable_name();
			state._fsp--;

			// PLSQLPrinter.g:1646:34: ( expression | select_statement )
			int alt381=2;
			int LA381_0 = input.LA(1);
			if ( (LA381_0==EXPR||LA381_0==LOGIC_EXPR) ) {
				alt381=1;
			}
			else if ( (LA381_0==SELECT_STATEMENT) ) {
				alt381=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 381, 0, input);
				throw nvae;
			}

			switch (alt381) {
				case 1 :
					// PLSQLPrinter.g:1646:35: expression
					{
					pushFollow(FOLLOW_expression_in_open_for_statement15010);
					expression();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1646:46: select_statement
					{
					pushFollow(FOLLOW_select_statement_in_open_for_statement15012);
					select_statement();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:1646:64: ( using_clause )?
			int alt382=2;
			int LA382_0 = input.LA(1);
			if ( (LA382_0==PLSQL_NON_RESERVED_USING) ) {
				alt382=1;
			}
			switch (alt382) {
				case 1 :
					// PLSQLPrinter.g:1646:64: using_clause
					{
					pushFollow(FOLLOW_using_clause_in_open_for_statement15015);
					using_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1647:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "open_for_statement"


	public static class transaction_control_statements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "transaction_control_statements"
	// PLSQLPrinter.g:1654:1: transaction_control_statements : ( set_transaction_command -> template( \"not implemented: \"| set_constraint_command -> template( \"not implemented: \"| commit_statement -> template( \"not implemented: \"| rollback_statement -> template( \"not implemented: \"| savepoint_statement -> template( \"not implemented: \");
	public final PLSQLPrinter.transaction_control_statements_return transaction_control_statements() throws RecognitionException {
		PLSQLPrinter.transaction_control_statements_return retval = new PLSQLPrinter.transaction_control_statements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1655:5: ( set_transaction_command -> template( \"not implemented: \"| set_constraint_command -> template( \"not implemented: \"| commit_statement -> template( \"not implemented: \"| rollback_statement -> template( \"not implemented: \"| savepoint_statement -> template( \"not implemented: \")
			int alt383=5;
			switch ( input.LA(1) ) {
			case SET_TRANSACTION:
				{
				alt383=1;
				}
				break;
			case SET_CONSTRAINT:
				{
				alt383=2;
				}
				break;
			case COMMIT_VK:
				{
				alt383=3;
				}
				break;
			case ROLLBACK_VK:
				{
				alt383=4;
				}
				break;
			case SAVEPOINT_VK:
				{
				alt383=5;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 383, 0, input);
				throw nvae;
			}
			switch (alt383) {
				case 1 :
					// PLSQLPrinter.g:1655:10: set_transaction_command
					{
					pushFollow(FOLLOW_set_transaction_command_in_transaction_control_statements15055);
					set_transaction_command();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1656:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1657:10: set_constraint_command
					{
					pushFollow(FOLLOW_set_constraint_command_in_transaction_control_statements15080);
					set_constraint_command();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1658:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1659:10: commit_statement
					{
					pushFollow(FOLLOW_commit_statement_in_transaction_control_statements15105);
					commit_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1660:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1661:10: rollback_statement
					{
					pushFollow(FOLLOW_rollback_statement_in_transaction_control_statements15130);
					rollback_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1662:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:1663:10: savepoint_statement
					{
					pushFollow(FOLLOW_savepoint_statement_in_transaction_control_statements15155);
					savepoint_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1664:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "transaction_control_statements"


	public static class set_transaction_command_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "set_transaction_command"
	// PLSQLPrinter.g:1667:1: set_transaction_command : ^( SET_TRANSACTION ( CHAR_STRING )? ( ^( READ_VK ( ONLY_VK | WRITE_VK ) ) | ^( ISOLATION_VK ( SERIALIZABLE_VK | COMMITTED_VK ) ) | ^( ROLLBACK_VK rollback_segment_name ) )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.set_transaction_command_return set_transaction_command() throws RecognitionException {
		PLSQLPrinter.set_transaction_command_return retval = new PLSQLPrinter.set_transaction_command_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1668:5: ( ^( SET_TRANSACTION ( CHAR_STRING )? ( ^( READ_VK ( ONLY_VK | WRITE_VK ) ) | ^( ISOLATION_VK ( SERIALIZABLE_VK | COMMITTED_VK ) ) | ^( ROLLBACK_VK rollback_segment_name ) )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1668:10: ^( SET_TRANSACTION ( CHAR_STRING )? ( ^( READ_VK ( ONLY_VK | WRITE_VK ) ) | ^( ISOLATION_VK ( SERIALIZABLE_VK | COMMITTED_VK ) ) | ^( ROLLBACK_VK rollback_segment_name ) )? )
			{
			match(input,SET_TRANSACTION,FOLLOW_SET_TRANSACTION_in_set_transaction_command15190); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1668:28: ( CHAR_STRING )?
				int alt384=2;
				int LA384_0 = input.LA(1);
				if ( (LA384_0==CHAR_STRING) ) {
					alt384=1;
				}
				switch (alt384) {
					case 1 :
						// PLSQLPrinter.g:1668:28: CHAR_STRING
						{
						match(input,CHAR_STRING,FOLLOW_CHAR_STRING_in_set_transaction_command15192); 
						}
						break;

				}

				// PLSQLPrinter.g:1669:13: ( ^( READ_VK ( ONLY_VK | WRITE_VK ) ) | ^( ISOLATION_VK ( SERIALIZABLE_VK | COMMITTED_VK ) ) | ^( ROLLBACK_VK rollback_segment_name ) )?
				int alt387=4;
				switch ( input.LA(1) ) {
					case READ_VK:
						{
						alt387=1;
						}
						break;
					case ISOLATION_VK:
						{
						alt387=2;
						}
						break;
					case ROLLBACK_VK:
						{
						alt387=3;
						}
						break;
				}
				switch (alt387) {
					case 1 :
						// PLSQLPrinter.g:1669:18: ^( READ_VK ( ONLY_VK | WRITE_VK ) )
						{
						match(input,READ_VK,FOLLOW_READ_VK_in_set_transaction_command15213); 
						match(input, Token.DOWN, null); 
						// PLSQLPrinter.g:1669:28: ( ONLY_VK | WRITE_VK )
						int alt385=2;
						int LA385_0 = input.LA(1);
						if ( (LA385_0==ONLY_VK) ) {
							alt385=1;
						}
						else if ( (LA385_0==WRITE_VK) ) {
							alt385=2;
						}

						else {
							NoViableAltException nvae =
								new NoViableAltException("", 385, 0, input);
							throw nvae;
						}

						switch (alt385) {
							case 1 :
								// PLSQLPrinter.g:1669:29: ONLY_VK
								{
								match(input,ONLY_VK,FOLLOW_ONLY_VK_in_set_transaction_command15216); 
								}
								break;
							case 2 :
								// PLSQLPrinter.g:1669:37: WRITE_VK
								{
								match(input,WRITE_VK,FOLLOW_WRITE_VK_in_set_transaction_command15218); 
								}
								break;

						}

						match(input, Token.UP, null); 

						}
						break;
					case 2 :
						// PLSQLPrinter.g:1670:18: ^( ISOLATION_VK ( SERIALIZABLE_VK | COMMITTED_VK ) )
						{
						match(input,ISOLATION_VK,FOLLOW_ISOLATION_VK_in_set_transaction_command15240); 
						match(input, Token.DOWN, null); 
						// PLSQLPrinter.g:1670:33: ( SERIALIZABLE_VK | COMMITTED_VK )
						int alt386=2;
						int LA386_0 = input.LA(1);
						if ( (LA386_0==SERIALIZABLE_VK) ) {
							alt386=1;
						}
						else if ( (LA386_0==COMMITTED_VK) ) {
							alt386=2;
						}

						else {
							NoViableAltException nvae =
								new NoViableAltException("", 386, 0, input);
							throw nvae;
						}

						switch (alt386) {
							case 1 :
								// PLSQLPrinter.g:1670:34: SERIALIZABLE_VK
								{
								match(input,SERIALIZABLE_VK,FOLLOW_SERIALIZABLE_VK_in_set_transaction_command15243); 
								}
								break;
							case 2 :
								// PLSQLPrinter.g:1670:50: COMMITTED_VK
								{
								match(input,COMMITTED_VK,FOLLOW_COMMITTED_VK_in_set_transaction_command15245); 
								}
								break;

						}

						match(input, Token.UP, null); 

						}
						break;
					case 3 :
						// PLSQLPrinter.g:1671:18: ^( ROLLBACK_VK rollback_segment_name )
						{
						match(input,ROLLBACK_VK,FOLLOW_ROLLBACK_VK_in_set_transaction_command15267); 
						match(input, Token.DOWN, null); 
						pushFollow(FOLLOW_rollback_segment_name_in_set_transaction_command15269);
						rollback_segment_name();
						state._fsp--;

						match(input, Token.UP, null); 

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1674:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "set_transaction_command"


	public static class set_constraint_command_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "set_constraint_command"
	// PLSQLPrinter.g:1677:1: set_constraint_command : ^( SET_CONSTRAINT ( SQL92_RESERVED_ALL | ( constraint_name )+ ) ( IMMEDIATE_VK | DEFERRED_VK ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.set_constraint_command_return set_constraint_command() throws RecognitionException {
		PLSQLPrinter.set_constraint_command_return retval = new PLSQLPrinter.set_constraint_command_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1678:5: ( ^( SET_CONSTRAINT ( SQL92_RESERVED_ALL | ( constraint_name )+ ) ( IMMEDIATE_VK | DEFERRED_VK ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1678:10: ^( SET_CONSTRAINT ( SQL92_RESERVED_ALL | ( constraint_name )+ ) ( IMMEDIATE_VK | DEFERRED_VK ) )
			{
			match(input,SET_CONSTRAINT,FOLLOW_SET_CONSTRAINT_in_set_constraint_command15330); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1678:27: ( SQL92_RESERVED_ALL | ( constraint_name )+ )
			int alt389=2;
			int LA389_0 = input.LA(1);
			if ( (LA389_0==SQL92_RESERVED_ALL) ) {
				alt389=1;
			}
			else if ( (LA389_0==CONSTRAINT_NAME) ) {
				alt389=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 389, 0, input);
				throw nvae;
			}

			switch (alt389) {
				case 1 :
					// PLSQLPrinter.g:1678:28: SQL92_RESERVED_ALL
					{
					match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_set_constraint_command15333); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1678:47: ( constraint_name )+
					{
					// PLSQLPrinter.g:1678:47: ( constraint_name )+
					int cnt388=0;
					loop388:
					while (true) {
						int alt388=2;
						int LA388_0 = input.LA(1);
						if ( (LA388_0==CONSTRAINT_NAME) ) {
							alt388=1;
						}

						switch (alt388) {
						case 1 :
							// PLSQLPrinter.g:1678:47: constraint_name
							{
							pushFollow(FOLLOW_constraint_name_in_set_constraint_command15335);
							constraint_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt388 >= 1 ) break loop388;
							EarlyExitException eee = new EarlyExitException(388, input);
							throw eee;
						}
						cnt388++;
					}

					}
					break;

			}

			// PLSQLPrinter.g:1678:65: ( IMMEDIATE_VK | DEFERRED_VK )
			int alt390=2;
			int LA390_0 = input.LA(1);
			if ( (LA390_0==IMMEDIATE_VK) ) {
				alt390=1;
			}
			else if ( (LA390_0==DEFERRED_VK) ) {
				alt390=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 390, 0, input);
				throw nvae;
			}

			switch (alt390) {
				case 1 :
					// PLSQLPrinter.g:1678:66: IMMEDIATE_VK
					{
					match(input,IMMEDIATE_VK,FOLLOW_IMMEDIATE_VK_in_set_constraint_command15340); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1678:79: DEFERRED_VK
					{
					match(input,DEFERRED_VK,FOLLOW_DEFERRED_VK_in_set_constraint_command15342); 
					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1679:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "set_constraint_command"


	public static class commit_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "commit_statement"
	// PLSQLPrinter.g:1682:1: commit_statement : ^( COMMIT_VK ( WORK_VK )? ( ^( COMMENT_VK expression ) | ^( FORCE_VK ( CORRUPT_XID_VK expression | CORRUPT_XID_ALL_VK | expression ( expression )? ) ) )? ( write_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.commit_statement_return commit_statement() throws RecognitionException {
		PLSQLPrinter.commit_statement_return retval = new PLSQLPrinter.commit_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1683:5: ( ^( COMMIT_VK ( WORK_VK )? ( ^( COMMENT_VK expression ) | ^( FORCE_VK ( CORRUPT_XID_VK expression | CORRUPT_XID_ALL_VK | expression ( expression )? ) ) )? ( write_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1683:11: ^( COMMIT_VK ( WORK_VK )? ( ^( COMMENT_VK expression ) | ^( FORCE_VK ( CORRUPT_XID_VK expression | CORRUPT_XID_ALL_VK | expression ( expression )? ) ) )? ( write_clause )? )
			{
			match(input,COMMIT_VK,FOLLOW_COMMIT_VK_in_commit_statement15380); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1683:23: ( WORK_VK )?
				int alt391=2;
				int LA391_0 = input.LA(1);
				if ( (LA391_0==WORK_VK) ) {
					alt391=1;
				}
				switch (alt391) {
					case 1 :
						// PLSQLPrinter.g:1683:23: WORK_VK
						{
						match(input,WORK_VK,FOLLOW_WORK_VK_in_commit_statement15382); 
						}
						break;

				}

				// PLSQLPrinter.g:1684:13: ( ^( COMMENT_VK expression ) | ^( FORCE_VK ( CORRUPT_XID_VK expression | CORRUPT_XID_ALL_VK | expression ( expression )? ) ) )?
				int alt394=3;
				int LA394_0 = input.LA(1);
				if ( (LA394_0==COMMENT_VK) ) {
					alt394=1;
				}
				else if ( (LA394_0==FORCE_VK) ) {
					alt394=2;
				}
				switch (alt394) {
					case 1 :
						// PLSQLPrinter.g:1684:18: ^( COMMENT_VK expression )
						{
						match(input,COMMENT_VK,FOLLOW_COMMENT_VK_in_commit_statement15404); 
						match(input, Token.DOWN, null); 
						pushFollow(FOLLOW_expression_in_commit_statement15406);
						expression();
						state._fsp--;

						match(input, Token.UP, null); 

						}
						break;
					case 2 :
						// PLSQLPrinter.g:1685:18: ^( FORCE_VK ( CORRUPT_XID_VK expression | CORRUPT_XID_ALL_VK | expression ( expression )? ) )
						{
						match(input,FORCE_VK,FOLLOW_FORCE_VK_in_commit_statement15427); 
						match(input, Token.DOWN, null); 
						// PLSQLPrinter.g:1685:29: ( CORRUPT_XID_VK expression | CORRUPT_XID_ALL_VK | expression ( expression )? )
						int alt393=3;
						switch ( input.LA(1) ) {
						case CORRUPT_XID_VK:
							{
							alt393=1;
							}
							break;
						case CORRUPT_XID_ALL_VK:
							{
							alt393=2;
							}
							break;
						case EXPR:
						case LOGIC_EXPR:
							{
							alt393=3;
							}
							break;
						default:
							NoViableAltException nvae =
								new NoViableAltException("", 393, 0, input);
							throw nvae;
						}
						switch (alt393) {
							case 1 :
								// PLSQLPrinter.g:1685:30: CORRUPT_XID_VK expression
								{
								match(input,CORRUPT_XID_VK,FOLLOW_CORRUPT_XID_VK_in_commit_statement15430); 
								pushFollow(FOLLOW_expression_in_commit_statement15432);
								expression();
								state._fsp--;

								}
								break;
							case 2 :
								// PLSQLPrinter.g:1685:56: CORRUPT_XID_ALL_VK
								{
								match(input,CORRUPT_XID_ALL_VK,FOLLOW_CORRUPT_XID_ALL_VK_in_commit_statement15434); 
								}
								break;
							case 3 :
								// PLSQLPrinter.g:1685:75: expression ( expression )?
								{
								pushFollow(FOLLOW_expression_in_commit_statement15436);
								expression();
								state._fsp--;

								// PLSQLPrinter.g:1685:86: ( expression )?
								int alt392=2;
								int LA392_0 = input.LA(1);
								if ( (LA392_0==EXPR||LA392_0==LOGIC_EXPR) ) {
									alt392=1;
								}
								switch (alt392) {
									case 1 :
										// PLSQLPrinter.g:1685:86: expression
										{
										pushFollow(FOLLOW_expression_in_commit_statement15438);
										expression();
										state._fsp--;

										}
										break;

								}

								}
								break;

						}

						match(input, Token.UP, null); 

						}
						break;

				}

				// PLSQLPrinter.g:1687:13: ( write_clause )?
				int alt395=2;
				int LA395_0 = input.LA(1);
				if ( (LA395_0==WRITE_VK) ) {
					alt395=1;
				}
				switch (alt395) {
					case 1 :
						// PLSQLPrinter.g:1687:13: write_clause
						{
						pushFollow(FOLLOW_write_clause_in_commit_statement15470);
						write_clause();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1689:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "commit_statement"


	public static class write_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "write_clause"
	// PLSQLPrinter.g:1692:1: write_clause : ^( WRITE_VK ( WAIT_VK | PLSQL_RESERVED_NOWAIT )? ( IMMEDIATE_VK | BATCH_VK )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.write_clause_return write_clause() throws RecognitionException {
		PLSQLPrinter.write_clause_return retval = new PLSQLPrinter.write_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1693:5: ( ^( WRITE_VK ( WAIT_VK | PLSQL_RESERVED_NOWAIT )? ( IMMEDIATE_VK | BATCH_VK )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1693:10: ^( WRITE_VK ( WAIT_VK | PLSQL_RESERVED_NOWAIT )? ( IMMEDIATE_VK | BATCH_VK )? )
			{
			match(input,WRITE_VK,FOLLOW_WRITE_VK_in_write_clause15516); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1693:21: ( WAIT_VK | PLSQL_RESERVED_NOWAIT )?
				int alt396=3;
				int LA396_0 = input.LA(1);
				if ( (LA396_0==WAIT_VK) ) {
					alt396=1;
				}
				else if ( (LA396_0==PLSQL_RESERVED_NOWAIT) ) {
					alt396=2;
				}
				switch (alt396) {
					case 1 :
						// PLSQLPrinter.g:1693:22: WAIT_VK
						{
						match(input,WAIT_VK,FOLLOW_WAIT_VK_in_write_clause15519); 
						}
						break;
					case 2 :
						// PLSQLPrinter.g:1693:30: PLSQL_RESERVED_NOWAIT
						{
						match(input,PLSQL_RESERVED_NOWAIT,FOLLOW_PLSQL_RESERVED_NOWAIT_in_write_clause15521); 
						}
						break;

				}

				// PLSQLPrinter.g:1693:54: ( IMMEDIATE_VK | BATCH_VK )?
				int alt397=3;
				int LA397_0 = input.LA(1);
				if ( (LA397_0==IMMEDIATE_VK) ) {
					alt397=1;
				}
				else if ( (LA397_0==BATCH_VK) ) {
					alt397=2;
				}
				switch (alt397) {
					case 1 :
						// PLSQLPrinter.g:1693:55: IMMEDIATE_VK
						{
						match(input,IMMEDIATE_VK,FOLLOW_IMMEDIATE_VK_in_write_clause15526); 
						}
						break;
					case 2 :
						// PLSQLPrinter.g:1693:68: BATCH_VK
						{
						match(input,BATCH_VK,FOLLOW_BATCH_VK_in_write_clause15528); 
						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1694:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "write_clause"


	public static class rollback_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "rollback_statement"
	// PLSQLPrinter.g:1697:1: rollback_statement : ^( ROLLBACK_VK ( WORK_VK )? ( ^( SQL92_RESERVED_TO savepoint_name ) | ^( FORCE_VK CHAR_STRING ) )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.rollback_statement_return rollback_statement() throws RecognitionException {
		PLSQLPrinter.rollback_statement_return retval = new PLSQLPrinter.rollback_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1698:5: ( ^( ROLLBACK_VK ( WORK_VK )? ( ^( SQL92_RESERVED_TO savepoint_name ) | ^( FORCE_VK CHAR_STRING ) )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1698:11: ^( ROLLBACK_VK ( WORK_VK )? ( ^( SQL92_RESERVED_TO savepoint_name ) | ^( FORCE_VK CHAR_STRING ) )? )
			{
			match(input,ROLLBACK_VK,FOLLOW_ROLLBACK_VK_in_rollback_statement15567); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1698:25: ( WORK_VK )?
				int alt398=2;
				int LA398_0 = input.LA(1);
				if ( (LA398_0==WORK_VK) ) {
					alt398=1;
				}
				switch (alt398) {
					case 1 :
						// PLSQLPrinter.g:1698:25: WORK_VK
						{
						match(input,WORK_VK,FOLLOW_WORK_VK_in_rollback_statement15569); 
						}
						break;

				}

				// PLSQLPrinter.g:1699:13: ( ^( SQL92_RESERVED_TO savepoint_name ) | ^( FORCE_VK CHAR_STRING ) )?
				int alt399=3;
				int LA399_0 = input.LA(1);
				if ( (LA399_0==SQL92_RESERVED_TO) ) {
					alt399=1;
				}
				else if ( (LA399_0==FORCE_VK) ) {
					alt399=2;
				}
				switch (alt399) {
					case 1 :
						// PLSQLPrinter.g:1699:18: ^( SQL92_RESERVED_TO savepoint_name )
						{
						match(input,SQL92_RESERVED_TO,FOLLOW_SQL92_RESERVED_TO_in_rollback_statement15591); 
						match(input, Token.DOWN, null); 
						pushFollow(FOLLOW_savepoint_name_in_rollback_statement15593);
						savepoint_name();
						state._fsp--;

						match(input, Token.UP, null); 

						}
						break;
					case 2 :
						// PLSQLPrinter.g:1700:18: ^( FORCE_VK CHAR_STRING )
						{
						match(input,FORCE_VK,FOLLOW_FORCE_VK_in_rollback_statement15614); 
						match(input, Token.DOWN, null); 
						match(input,CHAR_STRING,FOLLOW_CHAR_STRING_in_rollback_statement15616); 
						match(input, Token.UP, null); 

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1703:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "rollback_statement"


	public static class savepoint_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "savepoint_statement"
	// PLSQLPrinter.g:1706:1: savepoint_statement : ^( SAVEPOINT_VK savepoint_name ) -> template( \"not implemented: \";
	public final PLSQLPrinter.savepoint_statement_return savepoint_statement() throws RecognitionException {
		PLSQLPrinter.savepoint_statement_return retval = new PLSQLPrinter.savepoint_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1707:5: ( ^( SAVEPOINT_VK savepoint_name ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1707:10: ^( SAVEPOINT_VK savepoint_name )
			{
			match(input,SAVEPOINT_VK,FOLLOW_SAVEPOINT_VK_in_savepoint_statement15677); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_savepoint_name_in_savepoint_statement15679);
			savepoint_name();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1708:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "savepoint_statement"


	public static class pipe_row_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "pipe_row_statement"
	// PLSQLPrinter.g:1711:1: pipe_row_statement : ^( PIPE_ROW expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.pipe_row_statement_return pipe_row_statement() throws RecognitionException {
		PLSQLPrinter.pipe_row_statement_return retval = new PLSQLPrinter.pipe_row_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1712:5: ( ^( PIPE_ROW expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1712:10: ^( PIPE_ROW expression )
			{
			match(input,PIPE_ROW,FOLLOW_PIPE_ROW_in_pipe_row_statement15720); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_pipe_row_statement15722);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1713:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "pipe_row_statement"


	public static class expression_list_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "expression_list"
	// PLSQLPrinter.g:1720:1: expression_list : ^( EXPR_LIST ( expression )* ) -> template( \"not implemented: \";
	public final PLSQLPrinter.expression_list_return expression_list() throws RecognitionException {
		PLSQLPrinter.expression_list_return retval = new PLSQLPrinter.expression_list_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1721:5: ( ^( EXPR_LIST ( expression )* ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1721:10: ^( EXPR_LIST ( expression )* )
			{
			match(input,EXPR_LIST,FOLLOW_EXPR_LIST_in_expression_list15762); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1721:22: ( expression )*
				loop400:
				while (true) {
					int alt400=2;
					int LA400_0 = input.LA(1);
					if ( (LA400_0==EXPR||LA400_0==LOGIC_EXPR) ) {
						alt400=1;
					}

					switch (alt400) {
					case 1 :
						// PLSQLPrinter.g:1721:22: expression
						{
						pushFollow(FOLLOW_expression_in_expression_list15764);
						expression();
						state._fsp--;

						}
						break;

					default :
						break loop400;
					}
				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1722:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "expression_list"


	public static class expression_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "expression"
	// PLSQLPrinter.g:1725:1: expression : ( ^( LOGIC_EXPR expression_element ) -> template( \"not implemented: \"| ^( EXPR expression_element ) -> template( \"not implemented: \");
	public final PLSQLPrinter.expression_return expression() throws RecognitionException {
		PLSQLPrinter.expression_return retval = new PLSQLPrinter.expression_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1726:5: ( ^( LOGIC_EXPR expression_element ) -> template( \"not implemented: \"| ^( EXPR expression_element ) -> template( \"not implemented: \")
			int alt401=2;
			int LA401_0 = input.LA(1);
			if ( (LA401_0==LOGIC_EXPR) ) {
				alt401=1;
			}
			else if ( (LA401_0==EXPR) ) {
				alt401=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 401, 0, input);
				throw nvae;
			}

			switch (alt401) {
				case 1 :
					// PLSQLPrinter.g:1726:10: ^( LOGIC_EXPR expression_element )
					{
					match(input,LOGIC_EXPR,FOLLOW_LOGIC_EXPR_in_expression15801); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression15803);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1727:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1728:10: ^( EXPR expression_element )
					{
					match(input,EXPR,FOLLOW_EXPR_in_expression15830); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression15832);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1729:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "expression"


	public static class expression_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "expression_element"
	// PLSQLPrinter.g:1732:1: expression_element : ( ^( SQL92_RESERVED_OR expression_element expression_element ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_AND expression_element expression_element ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_NOT expression_element ) -> template( \"not implemented: \"| ^( ( EQUALS_OP | NOT_EQUAL_OP | LESS_THAN_OP | GREATER_THAN_OP | LESS_THAN_OR_EQUALS_OP | GREATER_THAN_OR_EQUALS_OP ) expression_element expression_element ) -> template( \"not implemented: \"| ^( IS_NOT_NULL expression_element ) -> template( \"not implemented: \"| ^( IS_NULL expression_element ) -> template( \"not implemented: \"| ^( IS_NOT_NAN expression_element ) -> template( \"not implemented: \"| ^( IS_NAN expression_element ) -> template( \"not implemented: \"| ^( IS_NOT_PRESENT expression_element ) -> template( \"not implemented: \"| ^( IS_PRESENT expression_element ) -> template( \"not implemented: \"| ^( IS_NOT_INFINITE expression_element ) -> template( \"not implemented: \"| ^( IS_INFINITE expression_element ) -> template( \"not implemented: \"| ^( IS_NOT_A_SET expression_element ) -> template( \"not implemented: \"| ^( IS_A_SET expression_element ) -> template( \"not implemented: \"| ^( IS_NOT_EMPTY expression_element ) -> template( \"not implemented: \"| ^( IS_EMPTY expression_element ) -> template( \"not implemented: \"| ^( IS_NOT_OF_TYPE expression_element ( type_spec )+ ) -> template( \"not implemented: \"| ^( IS_OF_TYPE expression_element ( type_spec )+ ) -> template( \"not implemented: \"| ^( ( MEMBER_VK | SUBMULTISET_VK ) expression_element expression_element ) -> template( \"not implemented: \"| ^( NOT_IN expression_element in_elements ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_IN expression_element in_elements ) -> template( \"not implemented: \"| ^( NOT_BETWEEN expression_element expression_element expression_element ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_BETWEEN expression_element expression_element expression_element ) -> template( \"not implemented: \"| ^( NOT_LIKE expression_element expression_element ( expression_element )? ) -> template( \"not implemented: \"| ^( ( SQL92_RESERVED_LIKE | LIKEC_VK | LIKE2_VK | LIKE4_VK ) expression_element expression_element ( expression_element )? ) -> template( \"not implemented: \"| ^( CONCATENATION_OP expression_element expression_element ) -> template( \"not implemented: \"| ^( PLUS_SIGN expression_element expression_element ) -> template( \"not implemented: \"| ^( MINUS_SIGN expression_element expression_element ) -> template( \"not implemented: \"| ^( ASTERISK expression_element expression_element ) -> template( \"not implemented: \"| ^( SOLIDUS expression_element expression_element ) -> template( \"not implemented: \"| ^( MOD_VK expression_element expression_element ) -> template( \"not implemented: \"| ^( DIV_VK expression_element expression_element ) -> template( \"not implemented: \"| ^( PIPE_VK expression_element expression_element ) -> template( \"not implemented: \"| ^( UNARY_OPERATOR expression_element ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_PRIOR expression_element ) -> template( \"not implemented: \"| ^( NEW_VK expression ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_DISTINCT expression_element ) -> template( \"not implemented: \"| ^( STANDARD_FUNCTION standard_function ) -> template( \"not implemented: \"| ^( ( SOME_VK | SQL92_RESERVED_EXISTS | SQL92_RESERVED_ALL | SQL92_RESERVED_ANY ) expression_element ) -> template( \"not implemented: \"| ^( VECTOR_EXPR ( expression_element )+ ) -> template( \"not implemented: \"| ^( DATETIME_OP expression_element datetime_element ) -> template( \"not implemented: \"| model_expression -> template( \"not implemented: \"| ^( KEEP_VK expression_element DENSE_RANK_VK ( FIRST_VK | LAST_VK ) order_by_clause ( over_clause )? ) -> template( \"not implemented: \"| ^( DOT_ASTERISK tableview_name ) -> template( \"not implemented: \"| ^( ( PERCENT_FOUND_VK | PERCENT_NOTFOUND_VK | PERCENT_ROWCOUNT_VK | PERCENT_ISOPEN_VK ) cursor_name ) -> template( \"not implemented: \"| ^( OUTER_JOIN_SIGN expression_element ) -> template( \"not implemented: \"| case_statement -> template( \"not implemented: \"| constant -> template( \"not implemented: \"| general_element -> template( \"not implemented: \"| subquery -> template( \"not implemented: \");
	public final PLSQLPrinter.expression_element_return expression_element() throws RecognitionException {
		PLSQLPrinter.expression_element_return retval = new PLSQLPrinter.expression_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1733:5: ( ^( SQL92_RESERVED_OR expression_element expression_element ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_AND expression_element expression_element ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_NOT expression_element ) -> template( \"not implemented: \"| ^( ( EQUALS_OP | NOT_EQUAL_OP | LESS_THAN_OP | GREATER_THAN_OP | LESS_THAN_OR_EQUALS_OP | GREATER_THAN_OR_EQUALS_OP ) expression_element expression_element ) -> template( \"not implemented: \"| ^( IS_NOT_NULL expression_element ) -> template( \"not implemented: \"| ^( IS_NULL expression_element ) -> template( \"not implemented: \"| ^( IS_NOT_NAN expression_element ) -> template( \"not implemented: \"| ^( IS_NAN expression_element ) -> template( \"not implemented: \"| ^( IS_NOT_PRESENT expression_element ) -> template( \"not implemented: \"| ^( IS_PRESENT expression_element ) -> template( \"not implemented: \"| ^( IS_NOT_INFINITE expression_element ) -> template( \"not implemented: \"| ^( IS_INFINITE expression_element ) -> template( \"not implemented: \"| ^( IS_NOT_A_SET expression_element ) -> template( \"not implemented: \"| ^( IS_A_SET expression_element ) -> template( \"not implemented: \"| ^( IS_NOT_EMPTY expression_element ) -> template( \"not implemented: \"| ^( IS_EMPTY expression_element ) -> template( \"not implemented: \"| ^( IS_NOT_OF_TYPE expression_element ( type_spec )+ ) -> template( \"not implemented: \"| ^( IS_OF_TYPE expression_element ( type_spec )+ ) -> template( \"not implemented: \"| ^( ( MEMBER_VK | SUBMULTISET_VK ) expression_element expression_element ) -> template( \"not implemented: \"| ^( NOT_IN expression_element in_elements ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_IN expression_element in_elements ) -> template( \"not implemented: \"| ^( NOT_BETWEEN expression_element expression_element expression_element ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_BETWEEN expression_element expression_element expression_element ) -> template( \"not implemented: \"| ^( NOT_LIKE expression_element expression_element ( expression_element )? ) -> template( \"not implemented: \"| ^( ( SQL92_RESERVED_LIKE | LIKEC_VK | LIKE2_VK | LIKE4_VK ) expression_element expression_element ( expression_element )? ) -> template( \"not implemented: \"| ^( CONCATENATION_OP expression_element expression_element ) -> template( \"not implemented: \"| ^( PLUS_SIGN expression_element expression_element ) -> template( \"not implemented: \"| ^( MINUS_SIGN expression_element expression_element ) -> template( \"not implemented: \"| ^( ASTERISK expression_element expression_element ) -> template( \"not implemented: \"| ^( SOLIDUS expression_element expression_element ) -> template( \"not implemented: \"| ^( MOD_VK expression_element expression_element ) -> template( \"not implemented: \"| ^( DIV_VK expression_element expression_element ) -> template( \"not implemented: \"| ^( PIPE_VK expression_element expression_element ) -> template( \"not implemented: \"| ^( UNARY_OPERATOR expression_element ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_PRIOR expression_element ) -> template( \"not implemented: \"| ^( NEW_VK expression ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_DISTINCT expression_element ) -> template( \"not implemented: \"| ^( STANDARD_FUNCTION standard_function ) -> template( \"not implemented: \"| ^( ( SOME_VK | SQL92_RESERVED_EXISTS | SQL92_RESERVED_ALL | SQL92_RESERVED_ANY ) expression_element ) -> template( \"not implemented: \"| ^( VECTOR_EXPR ( expression_element )+ ) -> template( \"not implemented: \"| ^( DATETIME_OP expression_element datetime_element ) -> template( \"not implemented: \"| model_expression -> template( \"not implemented: \"| ^( KEEP_VK expression_element DENSE_RANK_VK ( FIRST_VK | LAST_VK ) order_by_clause ( over_clause )? ) -> template( \"not implemented: \"| ^( DOT_ASTERISK tableview_name ) -> template( \"not implemented: \"| ^( ( PERCENT_FOUND_VK | PERCENT_NOTFOUND_VK | PERCENT_ROWCOUNT_VK | PERCENT_ISOPEN_VK ) cursor_name ) -> template( \"not implemented: \"| ^( OUTER_JOIN_SIGN expression_element ) -> template( \"not implemented: \"| case_statement -> template( \"not implemented: \"| constant -> template( \"not implemented: \"| general_element -> template( \"not implemented: \"| subquery -> template( \"not implemented: \")
			int alt414=50;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_OR:
				{
				alt414=1;
				}
				break;
			case SQL92_RESERVED_AND:
				{
				alt414=2;
				}
				break;
			case SQL92_RESERVED_NOT:
				{
				alt414=3;
				}
				break;
			case EQUALS_OP:
			case GREATER_THAN_OP:
			case GREATER_THAN_OR_EQUALS_OP:
			case LESS_THAN_OP:
			case LESS_THAN_OR_EQUALS_OP:
			case NOT_EQUAL_OP:
				{
				alt414=4;
				}
				break;
			case IS_NOT_NULL:
				{
				alt414=5;
				}
				break;
			case IS_NULL:
				{
				alt414=6;
				}
				break;
			case IS_NOT_NAN:
				{
				alt414=7;
				}
				break;
			case IS_NAN:
				{
				alt414=8;
				}
				break;
			case IS_NOT_PRESENT:
				{
				alt414=9;
				}
				break;
			case IS_PRESENT:
				{
				alt414=10;
				}
				break;
			case IS_NOT_INFINITE:
				{
				alt414=11;
				}
				break;
			case IS_INFINITE:
				{
				alt414=12;
				}
				break;
			case IS_NOT_A_SET:
				{
				alt414=13;
				}
				break;
			case IS_A_SET:
				{
				alt414=14;
				}
				break;
			case IS_NOT_EMPTY:
				{
				alt414=15;
				}
				break;
			case IS_EMPTY:
				{
				alt414=16;
				}
				break;
			case IS_NOT_OF_TYPE:
				{
				alt414=17;
				}
				break;
			case IS_OF_TYPE:
				{
				alt414=18;
				}
				break;
			case MEMBER_VK:
			case SUBMULTISET_VK:
				{
				alt414=19;
				}
				break;
			case NOT_IN:
				{
				alt414=20;
				}
				break;
			case SQL92_RESERVED_IN:
				{
				alt414=21;
				}
				break;
			case NOT_BETWEEN:
				{
				alt414=22;
				}
				break;
			case SQL92_RESERVED_BETWEEN:
				{
				alt414=23;
				}
				break;
			case NOT_LIKE:
				{
				alt414=24;
				}
				break;
			case SQL92_RESERVED_LIKE:
			case LIKE2_VK:
			case LIKE4_VK:
			case LIKEC_VK:
				{
				alt414=25;
				}
				break;
			case CONCATENATION_OP:
				{
				alt414=26;
				}
				break;
			case PLUS_SIGN:
				{
				alt414=27;
				}
				break;
			case MINUS_SIGN:
				{
				int LA414_28 = input.LA(2);
				if ( (LA414_28==DOWN) ) {
					int LA414_51 = input.LA(3);
					if ( (LA414_51==UNSIGNED_INTEGER) ) {
						int LA414_52 = input.LA(4);
						if ( (LA414_52==UP) ) {
							alt414=48;
						}
						else if ( (LA414_52==APPROXIMATE_NUM_LIT||LA414_52==ASTERISK||LA414_52==CHAR_STRING||LA414_52==CONCATENATION_OP||(LA414_52 >= EQUALS_OP && LA414_52 <= EXACT_NUM_LIT)||(LA414_52 >= GREATER_THAN_OP && LA414_52 <= GREATER_THAN_OR_EQUALS_OP)||(LA414_52 >= LESS_THAN_OP && LA414_52 <= LESS_THAN_OR_EQUALS_OP)||LA414_52==MINUS_SIGN||LA414_52==NOT_EQUAL_OP||LA414_52==PLUS_SIGN||LA414_52==SOLIDUS||LA414_52==SQL92_RESERVED_ALL||(LA414_52 >= SQL92_RESERVED_AND && LA414_52 <= SQL92_RESERVED_ANY)||LA414_52==SQL92_RESERVED_BETWEEN||LA414_52==SQL92_RESERVED_DEFAULT||LA414_52==SQL92_RESERVED_DISTINCT||(LA414_52 >= SQL92_RESERVED_EXISTS && LA414_52 <= SQL92_RESERVED_FALSE)||LA414_52==SQL92_RESERVED_IN||(LA414_52 >= SQL92_RESERVED_LIKE && LA414_52 <= SQL92_RESERVED_NULL)||LA414_52==SQL92_RESERVED_OR||LA414_52==SQL92_RESERVED_PRIOR||LA414_52==SQL92_RESERVED_TRUE||LA414_52==UNSIGNED_INTEGER||LA414_52==ANY_ELEMENT||LA414_52==CASCATED_ELEMENT||LA414_52==DATETIME_OP||LA414_52==DBTIMEZONE_VK||LA414_52==DIV_VK||LA414_52==DOT_ASTERISK||LA414_52==HOSTED_VARIABLE||LA414_52==HOSTED_VARIABLE_ROUTINE_CALL||(LA414_52 >= IS_A_SET && LA414_52 <= IS_PRESENT)||LA414_52==KEEP_VK||(LA414_52 >= LIKE2_VK && LA414_52 <= LIKEC_VK)||LA414_52==MAXVALUE_VK||LA414_52==MEMBER_VK||LA414_52==MINVALUE_VK||LA414_52==MODEL_EXPRESSION||LA414_52==MOD_VK||LA414_52==NEW_VK||LA414_52==NOT_BETWEEN||(LA414_52 >= NOT_IN && LA414_52 <= NOT_LIKE)||LA414_52==OUTER_JOIN_SIGN||(LA414_52 >= PERCENT_FOUND_VK && LA414_52 <= PERCENT_ROWCOUNT_VK)||LA414_52==PIPE_VK||LA414_52==ROUTINE_CALL||LA414_52==SEARCHED_CASE||LA414_52==SESSIONTIMEZONE_VK||LA414_52==SIMPLE_CASE||LA414_52==SOME_VK||LA414_52==STANDARD_FUNCTION||LA414_52==SUBMULTISET_VK||LA414_52==SUBQUERY||LA414_52==UNARY_OPERATOR||LA414_52==VECTOR_EXPR) ) {
							alt414=28;
						}

						else {
							int nvaeMark = input.mark();
							try {
								for (int nvaeConsume = 0; nvaeConsume < 4 - 1; nvaeConsume++) {
									input.consume();
								}
								NoViableAltException nvae =
									new NoViableAltException("", 414, 52, input);
								throw nvae;
							} finally {
								input.rewind(nvaeMark);
							}
						}

					}
					else if ( (LA414_51==APPROXIMATE_NUM_LIT||LA414_51==ASTERISK||LA414_51==CHAR_STRING||LA414_51==CONCATENATION_OP||(LA414_51 >= EQUALS_OP && LA414_51 <= EXACT_NUM_LIT)||(LA414_51 >= GREATER_THAN_OP && LA414_51 <= GREATER_THAN_OR_EQUALS_OP)||(LA414_51 >= LESS_THAN_OP && LA414_51 <= LESS_THAN_OR_EQUALS_OP)||LA414_51==MINUS_SIGN||LA414_51==NOT_EQUAL_OP||LA414_51==PLUS_SIGN||LA414_51==SOLIDUS||LA414_51==SQL92_RESERVED_ALL||(LA414_51 >= SQL92_RESERVED_AND && LA414_51 <= SQL92_RESERVED_ANY)||LA414_51==SQL92_RESERVED_BETWEEN||LA414_51==SQL92_RESERVED_DEFAULT||LA414_51==SQL92_RESERVED_DISTINCT||(LA414_51 >= SQL92_RESERVED_EXISTS && LA414_51 <= SQL92_RESERVED_FALSE)||LA414_51==SQL92_RESERVED_IN||(LA414_51 >= SQL92_RESERVED_LIKE && LA414_51 <= SQL92_RESERVED_NULL)||LA414_51==SQL92_RESERVED_OR||LA414_51==SQL92_RESERVED_PRIOR||LA414_51==SQL92_RESERVED_TRUE||LA414_51==ANY_ELEMENT||LA414_51==CASCATED_ELEMENT||LA414_51==DATETIME_OP||LA414_51==DBTIMEZONE_VK||LA414_51==DIV_VK||LA414_51==DOT_ASTERISK||LA414_51==HOSTED_VARIABLE||LA414_51==HOSTED_VARIABLE_ROUTINE_CALL||(LA414_51 >= IS_A_SET && LA414_51 <= IS_PRESENT)||LA414_51==KEEP_VK||(LA414_51 >= LIKE2_VK && LA414_51 <= LIKEC_VK)||LA414_51==MAXVALUE_VK||LA414_51==MEMBER_VK||LA414_51==MINVALUE_VK||LA414_51==MODEL_EXPRESSION||LA414_51==MOD_VK||LA414_51==NEW_VK||LA414_51==NOT_BETWEEN||(LA414_51 >= NOT_IN && LA414_51 <= NOT_LIKE)||LA414_51==OUTER_JOIN_SIGN||(LA414_51 >= PERCENT_FOUND_VK && LA414_51 <= PERCENT_ROWCOUNT_VK)||LA414_51==PIPE_VK||LA414_51==ROUTINE_CALL||LA414_51==SEARCHED_CASE||LA414_51==SESSIONTIMEZONE_VK||LA414_51==SIMPLE_CASE||LA414_51==SOME_VK||LA414_51==STANDARD_FUNCTION||LA414_51==SUBMULTISET_VK||LA414_51==SUBQUERY||LA414_51==UNARY_OPERATOR||LA414_51==VECTOR_EXPR) ) {
						alt414=28;
					}

					else {
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 414, 51, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 414, 28, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

				}
				break;
			case ASTERISK:
				{
				alt414=29;
				}
				break;
			case SOLIDUS:
				{
				alt414=30;
				}
				break;
			case MOD_VK:
				{
				alt414=31;
				}
				break;
			case DIV_VK:
				{
				alt414=32;
				}
				break;
			case PIPE_VK:
				{
				alt414=33;
				}
				break;
			case UNARY_OPERATOR:
				{
				alt414=34;
				}
				break;
			case SQL92_RESERVED_PRIOR:
				{
				alt414=35;
				}
				break;
			case NEW_VK:
				{
				alt414=36;
				}
				break;
			case SQL92_RESERVED_DISTINCT:
				{
				alt414=37;
				}
				break;
			case STANDARD_FUNCTION:
				{
				alt414=38;
				}
				break;
			case SQL92_RESERVED_ALL:
			case SQL92_RESERVED_ANY:
			case SQL92_RESERVED_EXISTS:
			case SOME_VK:
				{
				alt414=39;
				}
				break;
			case VECTOR_EXPR:
				{
				alt414=40;
				}
				break;
			case DATETIME_OP:
				{
				alt414=41;
				}
				break;
			case MODEL_EXPRESSION:
				{
				alt414=42;
				}
				break;
			case KEEP_VK:
				{
				alt414=43;
				}
				break;
			case DOT_ASTERISK:
				{
				alt414=44;
				}
				break;
			case PERCENT_FOUND_VK:
			case PERCENT_ISOPEN_VK:
			case PERCENT_NOTFOUND_VK:
			case PERCENT_ROWCOUNT_VK:
				{
				alt414=45;
				}
				break;
			case OUTER_JOIN_SIGN:
				{
				alt414=46;
				}
				break;
			case SEARCHED_CASE:
			case SIMPLE_CASE:
				{
				alt414=47;
				}
				break;
			case APPROXIMATE_NUM_LIT:
			case CHAR_STRING:
			case EXACT_NUM_LIT:
			case SQL92_RESERVED_DEFAULT:
			case SQL92_RESERVED_FALSE:
			case SQL92_RESERVED_NULL:
			case SQL92_RESERVED_TRUE:
			case UNSIGNED_INTEGER:
			case DBTIMEZONE_VK:
			case MAXVALUE_VK:
			case MINVALUE_VK:
			case SESSIONTIMEZONE_VK:
				{
				alt414=48;
				}
				break;
			case ANY_ELEMENT:
			case CASCATED_ELEMENT:
			case HOSTED_VARIABLE:
			case HOSTED_VARIABLE_ROUTINE_CALL:
			case ROUTINE_CALL:
				{
				alt414=49;
				}
				break;
			case SUBQUERY:
				{
				alt414=50;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 414, 0, input);
				throw nvae;
			}
			switch (alt414) {
				case 1 :
					// PLSQLPrinter.g:1733:10: ^( SQL92_RESERVED_OR expression_element expression_element )
					{
					match(input,SQL92_RESERVED_OR,FOLLOW_SQL92_RESERVED_OR_in_expression_element15868); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element15870);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element15872);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1734:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1735:10: ^( SQL92_RESERVED_AND expression_element expression_element )
					{
					match(input,SQL92_RESERVED_AND,FOLLOW_SQL92_RESERVED_AND_in_expression_element15899); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element15901);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element15903);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1736:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1737:10: ^( SQL92_RESERVED_NOT expression_element )
					{
					match(input,SQL92_RESERVED_NOT,FOLLOW_SQL92_RESERVED_NOT_in_expression_element15930); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element15932);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1738:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1739:10: ^( ( EQUALS_OP | NOT_EQUAL_OP | LESS_THAN_OP | GREATER_THAN_OP | LESS_THAN_OR_EQUALS_OP | GREATER_THAN_OR_EQUALS_OP ) expression_element expression_element )
					{
					// PLSQLPrinter.g:1739:12: ( EQUALS_OP | NOT_EQUAL_OP | LESS_THAN_OP | GREATER_THAN_OP | LESS_THAN_OR_EQUALS_OP | GREATER_THAN_OR_EQUALS_OP )
					int alt402=6;
					switch ( input.LA(1) ) {
					case EQUALS_OP:
						{
						alt402=1;
						}
						break;
					case NOT_EQUAL_OP:
						{
						alt402=2;
						}
						break;
					case LESS_THAN_OP:
						{
						alt402=3;
						}
						break;
					case GREATER_THAN_OP:
						{
						alt402=4;
						}
						break;
					case LESS_THAN_OR_EQUALS_OP:
						{
						alt402=5;
						}
						break;
					case GREATER_THAN_OR_EQUALS_OP:
						{
						alt402=6;
						}
						break;
					default:
						NoViableAltException nvae =
							new NoViableAltException("", 402, 0, input);
						throw nvae;
					}
					switch (alt402) {
						case 1 :
							// PLSQLPrinter.g:1739:13: EQUALS_OP
							{
							match(input,EQUALS_OP,FOLLOW_EQUALS_OP_in_expression_element15960); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1739:23: NOT_EQUAL_OP
							{
							match(input,NOT_EQUAL_OP,FOLLOW_NOT_EQUAL_OP_in_expression_element15962); 
							}
							break;
						case 3 :
							// PLSQLPrinter.g:1739:36: LESS_THAN_OP
							{
							match(input,LESS_THAN_OP,FOLLOW_LESS_THAN_OP_in_expression_element15964); 
							}
							break;
						case 4 :
							// PLSQLPrinter.g:1739:49: GREATER_THAN_OP
							{
							match(input,GREATER_THAN_OP,FOLLOW_GREATER_THAN_OP_in_expression_element15966); 
							}
							break;
						case 5 :
							// PLSQLPrinter.g:1739:65: LESS_THAN_OR_EQUALS_OP
							{
							match(input,LESS_THAN_OR_EQUALS_OP,FOLLOW_LESS_THAN_OR_EQUALS_OP_in_expression_element15968); 
							}
							break;
						case 6 :
							// PLSQLPrinter.g:1739:88: GREATER_THAN_OR_EQUALS_OP
							{
							match(input,GREATER_THAN_OR_EQUALS_OP,FOLLOW_GREATER_THAN_OR_EQUALS_OP_in_expression_element15970); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element15973);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element15975);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1741:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:1742:10: ^( IS_NOT_NULL expression_element )
					{
					match(input,IS_NOT_NULL,FOLLOW_IS_NOT_NULL_in_expression_element16003); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16005);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1743:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:1744:10: ^( IS_NULL expression_element )
					{
					match(input,IS_NULL,FOLLOW_IS_NULL_in_expression_element16032); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16034);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1745:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:1746:10: ^( IS_NOT_NAN expression_element )
					{
					match(input,IS_NOT_NAN,FOLLOW_IS_NOT_NAN_in_expression_element16061); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16063);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1747:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:1748:10: ^( IS_NAN expression_element )
					{
					match(input,IS_NAN,FOLLOW_IS_NAN_in_expression_element16090); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16092);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1749:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:1750:10: ^( IS_NOT_PRESENT expression_element )
					{
					match(input,IS_NOT_PRESENT,FOLLOW_IS_NOT_PRESENT_in_expression_element16119); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16121);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1751:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:1752:10: ^( IS_PRESENT expression_element )
					{
					match(input,IS_PRESENT,FOLLOW_IS_PRESENT_in_expression_element16148); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16150);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1753:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:1754:10: ^( IS_NOT_INFINITE expression_element )
					{
					match(input,IS_NOT_INFINITE,FOLLOW_IS_NOT_INFINITE_in_expression_element16177); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16179);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1755:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:1756:10: ^( IS_INFINITE expression_element )
					{
					match(input,IS_INFINITE,FOLLOW_IS_INFINITE_in_expression_element16206); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16208);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1757:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 13 :
					// PLSQLPrinter.g:1758:10: ^( IS_NOT_A_SET expression_element )
					{
					match(input,IS_NOT_A_SET,FOLLOW_IS_NOT_A_SET_in_expression_element16235); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16237);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1759:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 14 :
					// PLSQLPrinter.g:1760:10: ^( IS_A_SET expression_element )
					{
					match(input,IS_A_SET,FOLLOW_IS_A_SET_in_expression_element16264); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16266);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1761:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 15 :
					// PLSQLPrinter.g:1762:10: ^( IS_NOT_EMPTY expression_element )
					{
					match(input,IS_NOT_EMPTY,FOLLOW_IS_NOT_EMPTY_in_expression_element16293); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16295);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1763:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 16 :
					// PLSQLPrinter.g:1764:10: ^( IS_EMPTY expression_element )
					{
					match(input,IS_EMPTY,FOLLOW_IS_EMPTY_in_expression_element16322); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16324);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1765:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 17 :
					// PLSQLPrinter.g:1766:10: ^( IS_NOT_OF_TYPE expression_element ( type_spec )+ )
					{
					match(input,IS_NOT_OF_TYPE,FOLLOW_IS_NOT_OF_TYPE_in_expression_element16351); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16353);
					expression_element();
					state._fsp--;

					// PLSQLPrinter.g:1766:46: ( type_spec )+
					int cnt403=0;
					loop403:
					while (true) {
						int alt403=2;
						int LA403_0 = input.LA(1);
						if ( (LA403_0==CUSTOM_TYPE||LA403_0==INTERVAL_DATATYPE||LA403_0==NATIVE_DATATYPE) ) {
							alt403=1;
						}

						switch (alt403) {
						case 1 :
							// PLSQLPrinter.g:1766:46: type_spec
							{
							pushFollow(FOLLOW_type_spec_in_expression_element16355);
							type_spec();
							state._fsp--;

							}
							break;

						default :
							if ( cnt403 >= 1 ) break loop403;
							EarlyExitException eee = new EarlyExitException(403, input);
							throw eee;
						}
						cnt403++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1767:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 18 :
					// PLSQLPrinter.g:1768:10: ^( IS_OF_TYPE expression_element ( type_spec )+ )
					{
					match(input,IS_OF_TYPE,FOLLOW_IS_OF_TYPE_in_expression_element16383); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16385);
					expression_element();
					state._fsp--;

					// PLSQLPrinter.g:1768:42: ( type_spec )+
					int cnt404=0;
					loop404:
					while (true) {
						int alt404=2;
						int LA404_0 = input.LA(1);
						if ( (LA404_0==CUSTOM_TYPE||LA404_0==INTERVAL_DATATYPE||LA404_0==NATIVE_DATATYPE) ) {
							alt404=1;
						}

						switch (alt404) {
						case 1 :
							// PLSQLPrinter.g:1768:42: type_spec
							{
							pushFollow(FOLLOW_type_spec_in_expression_element16387);
							type_spec();
							state._fsp--;

							}
							break;

						default :
							if ( cnt404 >= 1 ) break loop404;
							EarlyExitException eee = new EarlyExitException(404, input);
							throw eee;
						}
						cnt404++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1769:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 19 :
					// PLSQLPrinter.g:1771:10: ^( ( MEMBER_VK | SUBMULTISET_VK ) expression_element expression_element )
					{
					// PLSQLPrinter.g:1771:12: ( MEMBER_VK | SUBMULTISET_VK )
					int alt405=2;
					int LA405_0 = input.LA(1);
					if ( (LA405_0==MEMBER_VK) ) {
						alt405=1;
					}
					else if ( (LA405_0==SUBMULTISET_VK) ) {
						alt405=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 405, 0, input);
						throw nvae;
					}

					switch (alt405) {
						case 1 :
							// PLSQLPrinter.g:1771:13: MEMBER_VK
							{
							match(input,MEMBER_VK,FOLLOW_MEMBER_VK_in_expression_element16417); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1771:23: SUBMULTISET_VK
							{
							match(input,SUBMULTISET_VK,FOLLOW_SUBMULTISET_VK_in_expression_element16419); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16422);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16424);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1772:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 20 :
					// PLSQLPrinter.g:1774:10: ^( NOT_IN expression_element in_elements )
					{
					match(input,NOT_IN,FOLLOW_NOT_IN_in_expression_element16452); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16454);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_in_elements_in_expression_element16456);
					in_elements();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1775:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 21 :
					// PLSQLPrinter.g:1776:10: ^( SQL92_RESERVED_IN expression_element in_elements )
					{
					match(input,SQL92_RESERVED_IN,FOLLOW_SQL92_RESERVED_IN_in_expression_element16483); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16485);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_in_elements_in_expression_element16487);
					in_elements();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1777:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 22 :
					// PLSQLPrinter.g:1778:10: ^( NOT_BETWEEN expression_element expression_element expression_element )
					{
					match(input,NOT_BETWEEN,FOLLOW_NOT_BETWEEN_in_expression_element16514); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16516);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16518);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16520);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1779:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 23 :
					// PLSQLPrinter.g:1780:10: ^( SQL92_RESERVED_BETWEEN expression_element expression_element expression_element )
					{
					match(input,SQL92_RESERVED_BETWEEN,FOLLOW_SQL92_RESERVED_BETWEEN_in_expression_element16547); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16549);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16551);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16553);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1781:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 24 :
					// PLSQLPrinter.g:1782:10: ^( NOT_LIKE expression_element expression_element ( expression_element )? )
					{
					match(input,NOT_LIKE,FOLLOW_NOT_LIKE_in_expression_element16580); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16582);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16584);
					expression_element();
					state._fsp--;

					// PLSQLPrinter.g:1782:59: ( expression_element )?
					int alt406=2;
					int LA406_0 = input.LA(1);
					if ( (LA406_0==APPROXIMATE_NUM_LIT||LA406_0==ASTERISK||LA406_0==CHAR_STRING||LA406_0==CONCATENATION_OP||(LA406_0 >= EQUALS_OP && LA406_0 <= EXACT_NUM_LIT)||(LA406_0 >= GREATER_THAN_OP && LA406_0 <= GREATER_THAN_OR_EQUALS_OP)||(LA406_0 >= LESS_THAN_OP && LA406_0 <= LESS_THAN_OR_EQUALS_OP)||LA406_0==MINUS_SIGN||LA406_0==NOT_EQUAL_OP||LA406_0==PLUS_SIGN||LA406_0==SOLIDUS||LA406_0==SQL92_RESERVED_ALL||(LA406_0 >= SQL92_RESERVED_AND && LA406_0 <= SQL92_RESERVED_ANY)||LA406_0==SQL92_RESERVED_BETWEEN||LA406_0==SQL92_RESERVED_DEFAULT||LA406_0==SQL92_RESERVED_DISTINCT||(LA406_0 >= SQL92_RESERVED_EXISTS && LA406_0 <= SQL92_RESERVED_FALSE)||LA406_0==SQL92_RESERVED_IN||(LA406_0 >= SQL92_RESERVED_LIKE && LA406_0 <= SQL92_RESERVED_NULL)||LA406_0==SQL92_RESERVED_OR||LA406_0==SQL92_RESERVED_PRIOR||LA406_0==SQL92_RESERVED_TRUE||LA406_0==UNSIGNED_INTEGER||LA406_0==ANY_ELEMENT||LA406_0==CASCATED_ELEMENT||LA406_0==DATETIME_OP||LA406_0==DBTIMEZONE_VK||LA406_0==DIV_VK||LA406_0==DOT_ASTERISK||LA406_0==HOSTED_VARIABLE||LA406_0==HOSTED_VARIABLE_ROUTINE_CALL||(LA406_0 >= IS_A_SET && LA406_0 <= IS_PRESENT)||LA406_0==KEEP_VK||(LA406_0 >= LIKE2_VK && LA406_0 <= LIKEC_VK)||LA406_0==MAXVALUE_VK||LA406_0==MEMBER_VK||LA406_0==MINVALUE_VK||LA406_0==MODEL_EXPRESSION||LA406_0==MOD_VK||LA406_0==NEW_VK||LA406_0==NOT_BETWEEN||(LA406_0 >= NOT_IN && LA406_0 <= NOT_LIKE)||LA406_0==OUTER_JOIN_SIGN||(LA406_0 >= PERCENT_FOUND_VK && LA406_0 <= PERCENT_ROWCOUNT_VK)||LA406_0==PIPE_VK||LA406_0==ROUTINE_CALL||LA406_0==SEARCHED_CASE||LA406_0==SESSIONTIMEZONE_VK||LA406_0==SIMPLE_CASE||LA406_0==SOME_VK||LA406_0==STANDARD_FUNCTION||LA406_0==SUBMULTISET_VK||LA406_0==SUBQUERY||LA406_0==UNARY_OPERATOR||LA406_0==VECTOR_EXPR) ) {
						alt406=1;
					}
					switch (alt406) {
						case 1 :
							// PLSQLPrinter.g:1782:59: expression_element
							{
							pushFollow(FOLLOW_expression_element_in_expression_element16586);
							expression_element();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1783:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 25 :
					// PLSQLPrinter.g:1784:10: ^( ( SQL92_RESERVED_LIKE | LIKEC_VK | LIKE2_VK | LIKE4_VK ) expression_element expression_element ( expression_element )? )
					{
					// PLSQLPrinter.g:1784:12: ( SQL92_RESERVED_LIKE | LIKEC_VK | LIKE2_VK | LIKE4_VK )
					int alt407=4;
					switch ( input.LA(1) ) {
					case SQL92_RESERVED_LIKE:
						{
						alt407=1;
						}
						break;
					case LIKEC_VK:
						{
						alt407=2;
						}
						break;
					case LIKE2_VK:
						{
						alt407=3;
						}
						break;
					case LIKE4_VK:
						{
						alt407=4;
						}
						break;
					default:
						NoViableAltException nvae =
							new NoViableAltException("", 407, 0, input);
						throw nvae;
					}
					switch (alt407) {
						case 1 :
							// PLSQLPrinter.g:1784:13: SQL92_RESERVED_LIKE
							{
							match(input,SQL92_RESERVED_LIKE,FOLLOW_SQL92_RESERVED_LIKE_in_expression_element16615); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1784:33: LIKEC_VK
							{
							match(input,LIKEC_VK,FOLLOW_LIKEC_VK_in_expression_element16617); 
							}
							break;
						case 3 :
							// PLSQLPrinter.g:1784:42: LIKE2_VK
							{
							match(input,LIKE2_VK,FOLLOW_LIKE2_VK_in_expression_element16619); 
							}
							break;
						case 4 :
							// PLSQLPrinter.g:1784:51: LIKE4_VK
							{
							match(input,LIKE4_VK,FOLLOW_LIKE4_VK_in_expression_element16621); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16624);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16626);
					expression_element();
					state._fsp--;

					// PLSQLPrinter.g:1784:99: ( expression_element )?
					int alt408=2;
					int LA408_0 = input.LA(1);
					if ( (LA408_0==APPROXIMATE_NUM_LIT||LA408_0==ASTERISK||LA408_0==CHAR_STRING||LA408_0==CONCATENATION_OP||(LA408_0 >= EQUALS_OP && LA408_0 <= EXACT_NUM_LIT)||(LA408_0 >= GREATER_THAN_OP && LA408_0 <= GREATER_THAN_OR_EQUALS_OP)||(LA408_0 >= LESS_THAN_OP && LA408_0 <= LESS_THAN_OR_EQUALS_OP)||LA408_0==MINUS_SIGN||LA408_0==NOT_EQUAL_OP||LA408_0==PLUS_SIGN||LA408_0==SOLIDUS||LA408_0==SQL92_RESERVED_ALL||(LA408_0 >= SQL92_RESERVED_AND && LA408_0 <= SQL92_RESERVED_ANY)||LA408_0==SQL92_RESERVED_BETWEEN||LA408_0==SQL92_RESERVED_DEFAULT||LA408_0==SQL92_RESERVED_DISTINCT||(LA408_0 >= SQL92_RESERVED_EXISTS && LA408_0 <= SQL92_RESERVED_FALSE)||LA408_0==SQL92_RESERVED_IN||(LA408_0 >= SQL92_RESERVED_LIKE && LA408_0 <= SQL92_RESERVED_NULL)||LA408_0==SQL92_RESERVED_OR||LA408_0==SQL92_RESERVED_PRIOR||LA408_0==SQL92_RESERVED_TRUE||LA408_0==UNSIGNED_INTEGER||LA408_0==ANY_ELEMENT||LA408_0==CASCATED_ELEMENT||LA408_0==DATETIME_OP||LA408_0==DBTIMEZONE_VK||LA408_0==DIV_VK||LA408_0==DOT_ASTERISK||LA408_0==HOSTED_VARIABLE||LA408_0==HOSTED_VARIABLE_ROUTINE_CALL||(LA408_0 >= IS_A_SET && LA408_0 <= IS_PRESENT)||LA408_0==KEEP_VK||(LA408_0 >= LIKE2_VK && LA408_0 <= LIKEC_VK)||LA408_0==MAXVALUE_VK||LA408_0==MEMBER_VK||LA408_0==MINVALUE_VK||LA408_0==MODEL_EXPRESSION||LA408_0==MOD_VK||LA408_0==NEW_VK||LA408_0==NOT_BETWEEN||(LA408_0 >= NOT_IN && LA408_0 <= NOT_LIKE)||LA408_0==OUTER_JOIN_SIGN||(LA408_0 >= PERCENT_FOUND_VK && LA408_0 <= PERCENT_ROWCOUNT_VK)||LA408_0==PIPE_VK||LA408_0==ROUTINE_CALL||LA408_0==SEARCHED_CASE||LA408_0==SESSIONTIMEZONE_VK||LA408_0==SIMPLE_CASE||LA408_0==SOME_VK||LA408_0==STANDARD_FUNCTION||LA408_0==SUBMULTISET_VK||LA408_0==SUBQUERY||LA408_0==UNARY_OPERATOR||LA408_0==VECTOR_EXPR) ) {
						alt408=1;
					}
					switch (alt408) {
						case 1 :
							// PLSQLPrinter.g:1784:99: expression_element
							{
							pushFollow(FOLLOW_expression_element_in_expression_element16628);
							expression_element();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1785:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 26 :
					// PLSQLPrinter.g:1787:10: ^( CONCATENATION_OP expression_element expression_element )
					{
					match(input,CONCATENATION_OP,FOLLOW_CONCATENATION_OP_in_expression_element16657); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16659);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16661);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1788:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 27 :
					// PLSQLPrinter.g:1789:10: ^( PLUS_SIGN expression_element expression_element )
					{
					match(input,PLUS_SIGN,FOLLOW_PLUS_SIGN_in_expression_element16688); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16690);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16692);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1790:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 28 :
					// PLSQLPrinter.g:1791:10: ^( MINUS_SIGN expression_element expression_element )
					{
					match(input,MINUS_SIGN,FOLLOW_MINUS_SIGN_in_expression_element16719); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16721);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16723);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1792:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 29 :
					// PLSQLPrinter.g:1793:10: ^( ASTERISK expression_element expression_element )
					{
					match(input,ASTERISK,FOLLOW_ASTERISK_in_expression_element16750); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16752);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16754);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1794:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 30 :
					// PLSQLPrinter.g:1795:10: ^( SOLIDUS expression_element expression_element )
					{
					match(input,SOLIDUS,FOLLOW_SOLIDUS_in_expression_element16781); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16783);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16785);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1796:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 31 :
					// PLSQLPrinter.g:1797:10: ^( MOD_VK expression_element expression_element )
					{
					match(input,MOD_VK,FOLLOW_MOD_VK_in_expression_element16812); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16814);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16816);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1798:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 32 :
					// PLSQLPrinter.g:1799:10: ^( DIV_VK expression_element expression_element )
					{
					match(input,DIV_VK,FOLLOW_DIV_VK_in_expression_element16843); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16845);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16847);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1800:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 33 :
					// PLSQLPrinter.g:1801:10: ^( PIPE_VK expression_element expression_element )
					{
					match(input,PIPE_VK,FOLLOW_PIPE_VK_in_expression_element16874); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16876);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_expression_element_in_expression_element16878);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1802:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 34 :
					// PLSQLPrinter.g:1804:10: ^( UNARY_OPERATOR expression_element )
					{
					match(input,UNARY_OPERATOR,FOLLOW_UNARY_OPERATOR_in_expression_element16906); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16908);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1805:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 35 :
					// PLSQLPrinter.g:1806:10: ^( SQL92_RESERVED_PRIOR expression_element )
					{
					match(input,SQL92_RESERVED_PRIOR,FOLLOW_SQL92_RESERVED_PRIOR_in_expression_element16935); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16937);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1807:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 36 :
					// PLSQLPrinter.g:1808:10: ^( NEW_VK expression )
					{
					match(input,NEW_VK,FOLLOW_NEW_VK_in_expression_element16964); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_expression_element16966);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1809:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 37 :
					// PLSQLPrinter.g:1810:10: ^( SQL92_RESERVED_DISTINCT expression_element )
					{
					match(input,SQL92_RESERVED_DISTINCT,FOLLOW_SQL92_RESERVED_DISTINCT_in_expression_element16993); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element16995);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1811:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 38 :
					// PLSQLPrinter.g:1812:10: ^( STANDARD_FUNCTION standard_function )
					{
					match(input,STANDARD_FUNCTION,FOLLOW_STANDARD_FUNCTION_in_expression_element17022); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_standard_function_in_expression_element17024);
					standard_function();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1813:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 39 :
					// PLSQLPrinter.g:1814:10: ^( ( SOME_VK | SQL92_RESERVED_EXISTS | SQL92_RESERVED_ALL | SQL92_RESERVED_ANY ) expression_element )
					{
					// PLSQLPrinter.g:1814:12: ( SOME_VK | SQL92_RESERVED_EXISTS | SQL92_RESERVED_ALL | SQL92_RESERVED_ANY )
					int alt409=4;
					switch ( input.LA(1) ) {
					case SOME_VK:
						{
						alt409=1;
						}
						break;
					case SQL92_RESERVED_EXISTS:
						{
						alt409=2;
						}
						break;
					case SQL92_RESERVED_ALL:
						{
						alt409=3;
						}
						break;
					case SQL92_RESERVED_ANY:
						{
						alt409=4;
						}
						break;
					default:
						NoViableAltException nvae =
							new NoViableAltException("", 409, 0, input);
						throw nvae;
					}
					switch (alt409) {
						case 1 :
							// PLSQLPrinter.g:1814:13: SOME_VK
							{
							match(input,SOME_VK,FOLLOW_SOME_VK_in_expression_element17052); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1814:21: SQL92_RESERVED_EXISTS
							{
							match(input,SQL92_RESERVED_EXISTS,FOLLOW_SQL92_RESERVED_EXISTS_in_expression_element17054); 
							}
							break;
						case 3 :
							// PLSQLPrinter.g:1814:43: SQL92_RESERVED_ALL
							{
							match(input,SQL92_RESERVED_ALL,FOLLOW_SQL92_RESERVED_ALL_in_expression_element17056); 
							}
							break;
						case 4 :
							// PLSQLPrinter.g:1814:62: SQL92_RESERVED_ANY
							{
							match(input,SQL92_RESERVED_ANY,FOLLOW_SQL92_RESERVED_ANY_in_expression_element17058); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element17061);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1815:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 40 :
					// PLSQLPrinter.g:1816:10: ^( VECTOR_EXPR ( expression_element )+ )
					{
					match(input,VECTOR_EXPR,FOLLOW_VECTOR_EXPR_in_expression_element17088); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1816:24: ( expression_element )+
					int cnt410=0;
					loop410:
					while (true) {
						int alt410=2;
						int LA410_0 = input.LA(1);
						if ( (LA410_0==APPROXIMATE_NUM_LIT||LA410_0==ASTERISK||LA410_0==CHAR_STRING||LA410_0==CONCATENATION_OP||(LA410_0 >= EQUALS_OP && LA410_0 <= EXACT_NUM_LIT)||(LA410_0 >= GREATER_THAN_OP && LA410_0 <= GREATER_THAN_OR_EQUALS_OP)||(LA410_0 >= LESS_THAN_OP && LA410_0 <= LESS_THAN_OR_EQUALS_OP)||LA410_0==MINUS_SIGN||LA410_0==NOT_EQUAL_OP||LA410_0==PLUS_SIGN||LA410_0==SOLIDUS||LA410_0==SQL92_RESERVED_ALL||(LA410_0 >= SQL92_RESERVED_AND && LA410_0 <= SQL92_RESERVED_ANY)||LA410_0==SQL92_RESERVED_BETWEEN||LA410_0==SQL92_RESERVED_DEFAULT||LA410_0==SQL92_RESERVED_DISTINCT||(LA410_0 >= SQL92_RESERVED_EXISTS && LA410_0 <= SQL92_RESERVED_FALSE)||LA410_0==SQL92_RESERVED_IN||(LA410_0 >= SQL92_RESERVED_LIKE && LA410_0 <= SQL92_RESERVED_NULL)||LA410_0==SQL92_RESERVED_OR||LA410_0==SQL92_RESERVED_PRIOR||LA410_0==SQL92_RESERVED_TRUE||LA410_0==UNSIGNED_INTEGER||LA410_0==ANY_ELEMENT||LA410_0==CASCATED_ELEMENT||LA410_0==DATETIME_OP||LA410_0==DBTIMEZONE_VK||LA410_0==DIV_VK||LA410_0==DOT_ASTERISK||LA410_0==HOSTED_VARIABLE||LA410_0==HOSTED_VARIABLE_ROUTINE_CALL||(LA410_0 >= IS_A_SET && LA410_0 <= IS_PRESENT)||LA410_0==KEEP_VK||(LA410_0 >= LIKE2_VK && LA410_0 <= LIKEC_VK)||LA410_0==MAXVALUE_VK||LA410_0==MEMBER_VK||LA410_0==MINVALUE_VK||LA410_0==MODEL_EXPRESSION||LA410_0==MOD_VK||LA410_0==NEW_VK||LA410_0==NOT_BETWEEN||(LA410_0 >= NOT_IN && LA410_0 <= NOT_LIKE)||LA410_0==OUTER_JOIN_SIGN||(LA410_0 >= PERCENT_FOUND_VK && LA410_0 <= PERCENT_ROWCOUNT_VK)||LA410_0==PIPE_VK||LA410_0==ROUTINE_CALL||LA410_0==SEARCHED_CASE||LA410_0==SESSIONTIMEZONE_VK||LA410_0==SIMPLE_CASE||LA410_0==SOME_VK||LA410_0==STANDARD_FUNCTION||LA410_0==SUBMULTISET_VK||LA410_0==SUBQUERY||LA410_0==UNARY_OPERATOR||LA410_0==VECTOR_EXPR) ) {
							alt410=1;
						}

						switch (alt410) {
						case 1 :
							// PLSQLPrinter.g:1816:24: expression_element
							{
							pushFollow(FOLLOW_expression_element_in_expression_element17090);
							expression_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt410 >= 1 ) break loop410;
							EarlyExitException eee = new EarlyExitException(410, input);
							throw eee;
						}
						cnt410++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1817:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 41 :
					// PLSQLPrinter.g:1819:10: ^( DATETIME_OP expression_element datetime_element )
					{
					match(input,DATETIME_OP,FOLLOW_DATETIME_OP_in_expression_element17119); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element17121);
					expression_element();
					state._fsp--;

					pushFollow(FOLLOW_datetime_element_in_expression_element17123);
					datetime_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1820:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 42 :
					// PLSQLPrinter.g:1821:10: model_expression
					{
					pushFollow(FOLLOW_model_expression_in_expression_element17149);
					model_expression();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1822:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 43 :
					// PLSQLPrinter.g:1823:10: ^( KEEP_VK expression_element DENSE_RANK_VK ( FIRST_VK | LAST_VK ) order_by_clause ( over_clause )? )
					{
					match(input,KEEP_VK,FOLLOW_KEEP_VK_in_expression_element17175); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element17177);
					expression_element();
					state._fsp--;

					match(input,DENSE_RANK_VK,FOLLOW_DENSE_RANK_VK_in_expression_element17179); 
					// PLSQLPrinter.g:1823:53: ( FIRST_VK | LAST_VK )
					int alt411=2;
					int LA411_0 = input.LA(1);
					if ( (LA411_0==FIRST_VK) ) {
						alt411=1;
					}
					else if ( (LA411_0==LAST_VK) ) {
						alt411=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 411, 0, input);
						throw nvae;
					}

					switch (alt411) {
						case 1 :
							// PLSQLPrinter.g:1823:54: FIRST_VK
							{
							match(input,FIRST_VK,FOLLOW_FIRST_VK_in_expression_element17182); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1823:63: LAST_VK
							{
							match(input,LAST_VK,FOLLOW_LAST_VK_in_expression_element17184); 
							}
							break;

					}

					pushFollow(FOLLOW_order_by_clause_in_expression_element17187);
					order_by_clause();
					state._fsp--;

					// PLSQLPrinter.g:1823:88: ( over_clause )?
					int alt412=2;
					int LA412_0 = input.LA(1);
					if ( (LA412_0==OVER_VK) ) {
						alt412=1;
					}
					switch (alt412) {
						case 1 :
							// PLSQLPrinter.g:1823:88: over_clause
							{
							pushFollow(FOLLOW_over_clause_in_expression_element17189);
							over_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1824:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 44 :
					// PLSQLPrinter.g:1826:10: ^( DOT_ASTERISK tableview_name )
					{
					match(input,DOT_ASTERISK,FOLLOW_DOT_ASTERISK_in_expression_element17218); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_tableview_name_in_expression_element17220);
					tableview_name();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1827:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 45 :
					// PLSQLPrinter.g:1828:10: ^( ( PERCENT_FOUND_VK | PERCENT_NOTFOUND_VK | PERCENT_ROWCOUNT_VK | PERCENT_ISOPEN_VK ) cursor_name )
					{
					// PLSQLPrinter.g:1828:12: ( PERCENT_FOUND_VK | PERCENT_NOTFOUND_VK | PERCENT_ROWCOUNT_VK | PERCENT_ISOPEN_VK )
					int alt413=4;
					switch ( input.LA(1) ) {
					case PERCENT_FOUND_VK:
						{
						alt413=1;
						}
						break;
					case PERCENT_NOTFOUND_VK:
						{
						alt413=2;
						}
						break;
					case PERCENT_ROWCOUNT_VK:
						{
						alt413=3;
						}
						break;
					case PERCENT_ISOPEN_VK:
						{
						alt413=4;
						}
						break;
					default:
						NoViableAltException nvae =
							new NoViableAltException("", 413, 0, input);
						throw nvae;
					}
					switch (alt413) {
						case 1 :
							// PLSQLPrinter.g:1828:13: PERCENT_FOUND_VK
							{
							match(input,PERCENT_FOUND_VK,FOLLOW_PERCENT_FOUND_VK_in_expression_element17248); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1828:30: PERCENT_NOTFOUND_VK
							{
							match(input,PERCENT_NOTFOUND_VK,FOLLOW_PERCENT_NOTFOUND_VK_in_expression_element17250); 
							}
							break;
						case 3 :
							// PLSQLPrinter.g:1828:50: PERCENT_ROWCOUNT_VK
							{
							match(input,PERCENT_ROWCOUNT_VK,FOLLOW_PERCENT_ROWCOUNT_VK_in_expression_element17252); 
							}
							break;
						case 4 :
							// PLSQLPrinter.g:1828:70: PERCENT_ISOPEN_VK
							{
							match(input,PERCENT_ISOPEN_VK,FOLLOW_PERCENT_ISOPEN_VK_in_expression_element17254); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_cursor_name_in_expression_element17257);
					cursor_name();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1829:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 46 :
					// PLSQLPrinter.g:1830:10: ^( OUTER_JOIN_SIGN expression_element )
					{
					match(input,OUTER_JOIN_SIGN,FOLLOW_OUTER_JOIN_SIGN_in_expression_element17284); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_expression_element17286);
					expression_element();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1831:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 47 :
					// PLSQLPrinter.g:1833:10: case_statement
					{
					pushFollow(FOLLOW_case_statement_in_expression_element17313);
					case_statement();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1834:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 48 :
					// PLSQLPrinter.g:1835:10: constant
					{
					pushFollow(FOLLOW_constant_in_expression_element17338);
					constant();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1836:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 49 :
					// PLSQLPrinter.g:1837:10: general_element
					{
					pushFollow(FOLLOW_general_element_in_expression_element17363);
					general_element();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1838:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 50 :
					// PLSQLPrinter.g:1839:10: subquery
					{
					pushFollow(FOLLOW_subquery_in_expression_element17388);
					subquery();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1840:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "expression_element"


	public static class in_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "in_elements"
	// PLSQLPrinter.g:1843:1: in_elements : ( subquery -> template( \"not implemented: \"| expression_list -> template( \"not implemented: \");
	public final PLSQLPrinter.in_elements_return in_elements() throws RecognitionException {
		PLSQLPrinter.in_elements_return retval = new PLSQLPrinter.in_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1844:5: ( subquery -> template( \"not implemented: \"| expression_list -> template( \"not implemented: \")
			int alt415=2;
			int LA415_0 = input.LA(1);
			if ( (LA415_0==SUBQUERY) ) {
				alt415=1;
			}
			else if ( (LA415_0==EXPR_LIST) ) {
				alt415=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 415, 0, input);
				throw nvae;
			}

			switch (alt415) {
				case 1 :
					// PLSQLPrinter.g:1844:10: subquery
					{
					pushFollow(FOLLOW_subquery_in_in_elements17422);
					subquery();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1845:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1846:10: expression_list
					{
					pushFollow(FOLLOW_expression_list_in_in_elements17447);
					expression_list();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1847:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "in_elements"


	public static class datetime_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "datetime_element"
	// PLSQLPrinter.g:1850:1: datetime_element : ( ^( AT_VK expression_element ( LOCAL_VK | TIME_VK expression ) ) -> template( \"not implemented: \"| ^( DAY_VK SECOND_VK ( expression )* ) -> template( \"not implemented: \"| ^( YEAR_VK MONTH_VK expression ) -> template( \"not implemented: \");
	public final PLSQLPrinter.datetime_element_return datetime_element() throws RecognitionException {
		PLSQLPrinter.datetime_element_return retval = new PLSQLPrinter.datetime_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1851:5: ( ^( AT_VK expression_element ( LOCAL_VK | TIME_VK expression ) ) -> template( \"not implemented: \"| ^( DAY_VK SECOND_VK ( expression )* ) -> template( \"not implemented: \"| ^( YEAR_VK MONTH_VK expression ) -> template( \"not implemented: \")
			int alt418=3;
			switch ( input.LA(1) ) {
			case AT_VK:
				{
				alt418=1;
				}
				break;
			case DAY_VK:
				{
				alt418=2;
				}
				break;
			case YEAR_VK:
				{
				alt418=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 418, 0, input);
				throw nvae;
			}
			switch (alt418) {
				case 1 :
					// PLSQLPrinter.g:1851:10: ^( AT_VK expression_element ( LOCAL_VK | TIME_VK expression ) )
					{
					match(input,AT_VK,FOLLOW_AT_VK_in_datetime_element17482); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_element_in_datetime_element17484);
					expression_element();
					state._fsp--;

					// PLSQLPrinter.g:1851:37: ( LOCAL_VK | TIME_VK expression )
					int alt416=2;
					int LA416_0 = input.LA(1);
					if ( (LA416_0==LOCAL_VK) ) {
						alt416=1;
					}
					else if ( (LA416_0==TIME_VK) ) {
						alt416=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 416, 0, input);
						throw nvae;
					}

					switch (alt416) {
						case 1 :
							// PLSQLPrinter.g:1851:38: LOCAL_VK
							{
							match(input,LOCAL_VK,FOLLOW_LOCAL_VK_in_datetime_element17487); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1851:47: TIME_VK expression
							{
							match(input,TIME_VK,FOLLOW_TIME_VK_in_datetime_element17489); 
							pushFollow(FOLLOW_expression_in_datetime_element17491);
							expression();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1852:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1853:10: ^( DAY_VK SECOND_VK ( expression )* )
					{
					match(input,DAY_VK,FOLLOW_DAY_VK_in_datetime_element17519); 
					match(input, Token.DOWN, null); 
					match(input,SECOND_VK,FOLLOW_SECOND_VK_in_datetime_element17521); 
					// PLSQLPrinter.g:1853:29: ( expression )*
					loop417:
					while (true) {
						int alt417=2;
						int LA417_0 = input.LA(1);
						if ( (LA417_0==EXPR||LA417_0==LOGIC_EXPR) ) {
							alt417=1;
						}

						switch (alt417) {
						case 1 :
							// PLSQLPrinter.g:1853:29: expression
							{
							pushFollow(FOLLOW_expression_in_datetime_element17523);
							expression();
							state._fsp--;

							}
							break;

						default :
							break loop417;
						}
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1854:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1855:10: ^( YEAR_VK MONTH_VK expression )
					{
					match(input,YEAR_VK,FOLLOW_YEAR_VK_in_datetime_element17551); 
					match(input, Token.DOWN, null); 
					match(input,MONTH_VK,FOLLOW_MONTH_VK_in_datetime_element17553); 
					pushFollow(FOLLOW_expression_in_datetime_element17555);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1856:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "datetime_element"


	public static class model_expression_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_expression"
	// PLSQLPrinter.g:1859:1: model_expression : ^( MODEL_EXPRESSION expression_element ( model_expression_element )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.model_expression_return model_expression() throws RecognitionException {
		PLSQLPrinter.model_expression_return retval = new PLSQLPrinter.model_expression_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1860:5: ( ^( MODEL_EXPRESSION expression_element ( model_expression_element )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1860:10: ^( MODEL_EXPRESSION expression_element ( model_expression_element )+ )
			{
			match(input,MODEL_EXPRESSION,FOLLOW_MODEL_EXPRESSION_in_model_expression17591); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_element_in_model_expression17593);
			expression_element();
			state._fsp--;

			// PLSQLPrinter.g:1860:48: ( model_expression_element )+
			int cnt419=0;
			loop419:
			while (true) {
				int alt419=2;
				int LA419_0 = input.LA(1);
				if ( (LA419_0==SQL92_RESERVED_ANY||LA419_0==EXPR||(LA419_0 >= FOR_MULTI_COLUMN && LA419_0 <= FOR_SINGLE_COLUMN)||LA419_0==LOGIC_EXPR) ) {
					alt419=1;
				}

				switch (alt419) {
				case 1 :
					// PLSQLPrinter.g:1860:48: model_expression_element
					{
					pushFollow(FOLLOW_model_expression_element_in_model_expression17595);
					model_expression_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt419 >= 1 ) break loop419;
					EarlyExitException eee = new EarlyExitException(419, input);
					throw eee;
				}
				cnt419++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1861:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_expression"


	public static class model_expression_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "model_expression_element"
	// PLSQLPrinter.g:1864:1: model_expression_element : ( SQL92_RESERVED_ANY -> template( \"not implemented: \"| expression -> template( \"not implemented: \"| ^( FOR_SINGLE_COLUMN column_name for_single_column_element ( for_like_part )? ) -> template( \"not implemented: \"| ^( FOR_MULTI_COLUMN ( column_name )+ ^( SQL92_RESERVED_IN ( subquery | ( expression_list )+ ) ) ) -> template( \"not implemented: \");
	public final PLSQLPrinter.model_expression_element_return model_expression_element() throws RecognitionException {
		PLSQLPrinter.model_expression_element_return retval = new PLSQLPrinter.model_expression_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1865:5: ( SQL92_RESERVED_ANY -> template( \"not implemented: \"| expression -> template( \"not implemented: \"| ^( FOR_SINGLE_COLUMN column_name for_single_column_element ( for_like_part )? ) -> template( \"not implemented: \"| ^( FOR_MULTI_COLUMN ( column_name )+ ^( SQL92_RESERVED_IN ( subquery | ( expression_list )+ ) ) ) -> template( \"not implemented: \")
			int alt424=4;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_ANY:
				{
				alt424=1;
				}
				break;
			case EXPR:
			case LOGIC_EXPR:
				{
				alt424=2;
				}
				break;
			case FOR_SINGLE_COLUMN:
				{
				alt424=3;
				}
				break;
			case FOR_MULTI_COLUMN:
				{
				alt424=4;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 424, 0, input);
				throw nvae;
			}
			switch (alt424) {
				case 1 :
					// PLSQLPrinter.g:1865:10: SQL92_RESERVED_ANY
					{
					match(input,SQL92_RESERVED_ANY,FOLLOW_SQL92_RESERVED_ANY_in_model_expression_element17631); 
					// TEMPLATE REWRITE
					// 1866:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1867:10: expression
					{
					pushFollow(FOLLOW_expression_in_model_expression_element17656);
					expression();
					state._fsp--;

					// TEMPLATE REWRITE
					// 1868:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1869:10: ^( FOR_SINGLE_COLUMN column_name for_single_column_element ( for_like_part )? )
					{
					match(input,FOR_SINGLE_COLUMN,FOLLOW_FOR_SINGLE_COLUMN_in_model_expression_element17682); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_column_name_in_model_expression_element17684);
					column_name();
					state._fsp--;

					pushFollow(FOLLOW_for_single_column_element_in_model_expression_element17686);
					for_single_column_element();
					state._fsp--;

					// PLSQLPrinter.g:1869:68: ( for_like_part )?
					int alt420=2;
					int LA420_0 = input.LA(1);
					if ( (LA420_0==SQL92_RESERVED_LIKE) ) {
						alt420=1;
					}
					switch (alt420) {
						case 1 :
							// PLSQLPrinter.g:1869:68: for_like_part
							{
							pushFollow(FOLLOW_for_like_part_in_model_expression_element17688);
							for_like_part();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1870:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1871:10: ^( FOR_MULTI_COLUMN ( column_name )+ ^( SQL92_RESERVED_IN ( subquery | ( expression_list )+ ) ) )
					{
					match(input,FOR_MULTI_COLUMN,FOLLOW_FOR_MULTI_COLUMN_in_model_expression_element17716); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1871:29: ( column_name )+
					int cnt421=0;
					loop421:
					while (true) {
						int alt421=2;
						int LA421_0 = input.LA(1);
						if ( (LA421_0==COLUMN_NAME) ) {
							alt421=1;
						}

						switch (alt421) {
						case 1 :
							// PLSQLPrinter.g:1871:29: column_name
							{
							pushFollow(FOLLOW_column_name_in_model_expression_element17718);
							column_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt421 >= 1 ) break loop421;
							EarlyExitException eee = new EarlyExitException(421, input);
							throw eee;
						}
						cnt421++;
					}

					match(input,SQL92_RESERVED_IN,FOLLOW_SQL92_RESERVED_IN_in_model_expression_element17722); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1871:62: ( subquery | ( expression_list )+ )
					int alt423=2;
					int LA423_0 = input.LA(1);
					if ( (LA423_0==SUBQUERY) ) {
						alt423=1;
					}
					else if ( (LA423_0==EXPR_LIST) ) {
						alt423=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 423, 0, input);
						throw nvae;
					}

					switch (alt423) {
						case 1 :
							// PLSQLPrinter.g:1871:63: subquery
							{
							pushFollow(FOLLOW_subquery_in_model_expression_element17725);
							subquery();
							state._fsp--;

							}
							break;
						case 2 :
							// PLSQLPrinter.g:1871:72: ( expression_list )+
							{
							// PLSQLPrinter.g:1871:72: ( expression_list )+
							int cnt422=0;
							loop422:
							while (true) {
								int alt422=2;
								int LA422_0 = input.LA(1);
								if ( (LA422_0==EXPR_LIST) ) {
									alt422=1;
								}

								switch (alt422) {
								case 1 :
									// PLSQLPrinter.g:1871:72: expression_list
									{
									pushFollow(FOLLOW_expression_list_in_model_expression_element17727);
									expression_list();
									state._fsp--;

									}
									break;

								default :
									if ( cnt422 >= 1 ) break loop422;
									EarlyExitException eee = new EarlyExitException(422, input);
									throw eee;
								}
								cnt422++;
							}

							}
							break;

					}

					match(input, Token.UP, null); 

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1872:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "model_expression_element"


	public static class for_single_column_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "for_single_column_element"
	// PLSQLPrinter.g:1875:1: for_single_column_element : ( ^( SQL92_RESERVED_IN expression_list ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_FROM expression ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_TO expression ) -> template( \"not implemented: \"| ^( ( INCREMENT_VK | DECREMENT_VK ) expression ) -> template( \"not implemented: \");
	public final PLSQLPrinter.for_single_column_element_return for_single_column_element() throws RecognitionException {
		PLSQLPrinter.for_single_column_element_return retval = new PLSQLPrinter.for_single_column_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1876:5: ( ^( SQL92_RESERVED_IN expression_list ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_FROM expression ) -> template( \"not implemented: \"| ^( SQL92_RESERVED_TO expression ) -> template( \"not implemented: \"| ^( ( INCREMENT_VK | DECREMENT_VK ) expression ) -> template( \"not implemented: \")
			int alt426=4;
			switch ( input.LA(1) ) {
			case SQL92_RESERVED_IN:
				{
				alt426=1;
				}
				break;
			case SQL92_RESERVED_FROM:
				{
				alt426=2;
				}
				break;
			case SQL92_RESERVED_TO:
				{
				alt426=3;
				}
				break;
			case DECREMENT_VK:
			case INCREMENT_VK:
				{
				alt426=4;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 426, 0, input);
				throw nvae;
			}
			switch (alt426) {
				case 1 :
					// PLSQLPrinter.g:1876:10: ^( SQL92_RESERVED_IN expression_list )
					{
					match(input,SQL92_RESERVED_IN,FOLLOW_SQL92_RESERVED_IN_in_for_single_column_element17766); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_list_in_for_single_column_element17768);
					expression_list();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1877:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1878:10: ^( SQL92_RESERVED_FROM expression )
					{
					match(input,SQL92_RESERVED_FROM,FOLLOW_SQL92_RESERVED_FROM_in_for_single_column_element17795); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_for_single_column_element17797);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1879:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1880:10: ^( SQL92_RESERVED_TO expression )
					{
					match(input,SQL92_RESERVED_TO,FOLLOW_SQL92_RESERVED_TO_in_for_single_column_element17825); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_for_single_column_element17827);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1881:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1882:10: ^( ( INCREMENT_VK | DECREMENT_VK ) expression )
					{
					// PLSQLPrinter.g:1882:12: ( INCREMENT_VK | DECREMENT_VK )
					int alt425=2;
					int LA425_0 = input.LA(1);
					if ( (LA425_0==INCREMENT_VK) ) {
						alt425=1;
					}
					else if ( (LA425_0==DECREMENT_VK) ) {
						alt425=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 425, 0, input);
						throw nvae;
					}

					switch (alt425) {
						case 1 :
							// PLSQLPrinter.g:1882:13: INCREMENT_VK
							{
							match(input,INCREMENT_VK,FOLLOW_INCREMENT_VK_in_for_single_column_element17856); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1882:26: DECREMENT_VK
							{
							match(input,DECREMENT_VK,FOLLOW_DECREMENT_VK_in_for_single_column_element17858); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_for_single_column_element17861);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1883:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "for_single_column_element"


	public static class for_like_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "for_like_part"
	// PLSQLPrinter.g:1886:1: for_like_part : ^( SQL92_RESERVED_LIKE expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.for_like_part_return for_like_part() throws RecognitionException {
		PLSQLPrinter.for_like_part_return retval = new PLSQLPrinter.for_like_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1887:5: ( ^( SQL92_RESERVED_LIKE expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1887:10: ^( SQL92_RESERVED_LIKE expression )
			{
			match(input,SQL92_RESERVED_LIKE,FOLLOW_SQL92_RESERVED_LIKE_in_for_like_part17898); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_for_like_part17900);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1888:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "for_like_part"


	public static class case_statement_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "case_statement"
	// PLSQLPrinter.g:1891:1: case_statement : ( ^( SIMPLE_CASE ( label_name )* expression ( case_when_part )+ ( case_else_part )? ) -> template( \"not implemented: \"| ^( SEARCHED_CASE ( label_name )* ( case_when_part )+ ( case_else_part )? ) -> template( \"not implemented: \");
	public final PLSQLPrinter.case_statement_return case_statement() throws RecognitionException {
		PLSQLPrinter.case_statement_return retval = new PLSQLPrinter.case_statement_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1892:5: ( ^( SIMPLE_CASE ( label_name )* expression ( case_when_part )+ ( case_else_part )? ) -> template( \"not implemented: \"| ^( SEARCHED_CASE ( label_name )* ( case_when_part )+ ( case_else_part )? ) -> template( \"not implemented: \")
			int alt433=2;
			int LA433_0 = input.LA(1);
			if ( (LA433_0==SIMPLE_CASE) ) {
				alt433=1;
			}
			else if ( (LA433_0==SEARCHED_CASE) ) {
				alt433=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 433, 0, input);
				throw nvae;
			}

			switch (alt433) {
				case 1 :
					// PLSQLPrinter.g:1892:10: ^( SIMPLE_CASE ( label_name )* expression ( case_when_part )+ ( case_else_part )? )
					{
					match(input,SIMPLE_CASE,FOLLOW_SIMPLE_CASE_in_case_statement17936); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1892:24: ( label_name )*
					loop427:
					while (true) {
						int alt427=2;
						int LA427_0 = input.LA(1);
						if ( (LA427_0==LABEL_NAME) ) {
							alt427=1;
						}

						switch (alt427) {
						case 1 :
							// PLSQLPrinter.g:1892:24: label_name
							{
							pushFollow(FOLLOW_label_name_in_case_statement17938);
							label_name();
							state._fsp--;

							}
							break;

						default :
							break loop427;
						}
					}

					pushFollow(FOLLOW_expression_in_case_statement17941);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1892:47: ( case_when_part )+
					int cnt428=0;
					loop428:
					while (true) {
						int alt428=2;
						int LA428_0 = input.LA(1);
						if ( (LA428_0==SQL92_RESERVED_WHEN) ) {
							alt428=1;
						}

						switch (alt428) {
						case 1 :
							// PLSQLPrinter.g:1892:47: case_when_part
							{
							pushFollow(FOLLOW_case_when_part_in_case_statement17943);
							case_when_part();
							state._fsp--;

							}
							break;

						default :
							if ( cnt428 >= 1 ) break loop428;
							EarlyExitException eee = new EarlyExitException(428, input);
							throw eee;
						}
						cnt428++;
					}

					// PLSQLPrinter.g:1892:63: ( case_else_part )?
					int alt429=2;
					int LA429_0 = input.LA(1);
					if ( (LA429_0==SQL92_RESERVED_ELSE) ) {
						alt429=1;
					}
					switch (alt429) {
						case 1 :
							// PLSQLPrinter.g:1892:63: case_else_part
							{
							pushFollow(FOLLOW_case_else_part_in_case_statement17946);
							case_else_part();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1893:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1894:10: ^( SEARCHED_CASE ( label_name )* ( case_when_part )+ ( case_else_part )? )
					{
					match(input,SEARCHED_CASE,FOLLOW_SEARCHED_CASE_in_case_statement17976); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1894:26: ( label_name )*
					loop430:
					while (true) {
						int alt430=2;
						int LA430_0 = input.LA(1);
						if ( (LA430_0==LABEL_NAME) ) {
							alt430=1;
						}

						switch (alt430) {
						case 1 :
							// PLSQLPrinter.g:1894:26: label_name
							{
							pushFollow(FOLLOW_label_name_in_case_statement17978);
							label_name();
							state._fsp--;

							}
							break;

						default :
							break loop430;
						}
					}

					// PLSQLPrinter.g:1894:38: ( case_when_part )+
					int cnt431=0;
					loop431:
					while (true) {
						int alt431=2;
						int LA431_0 = input.LA(1);
						if ( (LA431_0==SQL92_RESERVED_WHEN) ) {
							alt431=1;
						}

						switch (alt431) {
						case 1 :
							// PLSQLPrinter.g:1894:38: case_when_part
							{
							pushFollow(FOLLOW_case_when_part_in_case_statement17981);
							case_when_part();
							state._fsp--;

							}
							break;

						default :
							if ( cnt431 >= 1 ) break loop431;
							EarlyExitException eee = new EarlyExitException(431, input);
							throw eee;
						}
						cnt431++;
					}

					// PLSQLPrinter.g:1894:54: ( case_else_part )?
					int alt432=2;
					int LA432_0 = input.LA(1);
					if ( (LA432_0==SQL92_RESERVED_ELSE) ) {
						alt432=1;
					}
					switch (alt432) {
						case 1 :
							// PLSQLPrinter.g:1894:54: case_else_part
							{
							pushFollow(FOLLOW_case_else_part_in_case_statement17984);
							case_else_part();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1895:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "case_statement"


	public static class case_when_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "case_when_part"
	// PLSQLPrinter.g:1900:1: case_when_part : ^( SQL92_RESERVED_WHEN expression ( seq_of_statements | expression ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.case_when_part_return case_when_part() throws RecognitionException {
		PLSQLPrinter.case_when_part_return retval = new PLSQLPrinter.case_when_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1901:5: ( ^( SQL92_RESERVED_WHEN expression ( seq_of_statements | expression ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1901:10: ^( SQL92_RESERVED_WHEN expression ( seq_of_statements | expression ) )
			{
			match(input,SQL92_RESERVED_WHEN,FOLLOW_SQL92_RESERVED_WHEN_in_case_when_part18024); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_case_when_part18026);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:1901:43: ( seq_of_statements | expression )
			int alt434=2;
			int LA434_0 = input.LA(1);
			if ( (LA434_0==STATEMENTS) ) {
				alt434=1;
			}
			else if ( (LA434_0==EXPR||LA434_0==LOGIC_EXPR) ) {
				alt434=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 434, 0, input);
				throw nvae;
			}

			switch (alt434) {
				case 1 :
					// PLSQLPrinter.g:1901:44: seq_of_statements
					{
					pushFollow(FOLLOW_seq_of_statements_in_case_when_part18029);
					seq_of_statements();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1901:62: expression
					{
					pushFollow(FOLLOW_expression_in_case_when_part18031);
					expression();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1902:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "case_when_part"


	public static class case_else_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "case_else_part"
	// PLSQLPrinter.g:1905:1: case_else_part : ^( SQL92_RESERVED_ELSE ( seq_of_statements | expression ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.case_else_part_return case_else_part() throws RecognitionException {
		PLSQLPrinter.case_else_part_return retval = new PLSQLPrinter.case_else_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1906:5: ( ^( SQL92_RESERVED_ELSE ( seq_of_statements | expression ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1906:10: ^( SQL92_RESERVED_ELSE ( seq_of_statements | expression ) )
			{
			match(input,SQL92_RESERVED_ELSE,FOLLOW_SQL92_RESERVED_ELSE_in_case_else_part18068); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1906:32: ( seq_of_statements | expression )
			int alt435=2;
			int LA435_0 = input.LA(1);
			if ( (LA435_0==STATEMENTS) ) {
				alt435=1;
			}
			else if ( (LA435_0==EXPR||LA435_0==LOGIC_EXPR) ) {
				alt435=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 435, 0, input);
				throw nvae;
			}

			switch (alt435) {
				case 1 :
					// PLSQLPrinter.g:1906:33: seq_of_statements
					{
					pushFollow(FOLLOW_seq_of_statements_in_case_else_part18071);
					seq_of_statements();
					state._fsp--;

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1906:51: expression
					{
					pushFollow(FOLLOW_expression_in_case_else_part18073);
					expression();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1907:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "case_else_part"


	public static class standard_function_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "standard_function"
	// PLSQLPrinter.g:1911:1: standard_function : ( ^( FUNCTION_ENABLING_OVER function_argument ( over_clause )? ) -> template( \"not implemented: \"| ^( FUNCTION_ENABLING_USING function_argument ( using_clause )? ) -> template( \"not implemented: \"| ^( COUNT_VK ( ASTERISK | expression ) ( over_clause )? ) -> template( \"not implemented: \"| ^( ( CAST_VK | XMLCAST_VK ) ( subquery | expression ) type_spec ) -> template( \"not implemented: \"| ^( CHR_VK expression NCHAR_CS_VK ) -> template( \"not implemented: \"| ^( COLLECT_VK ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )? column_name ( collect_order_by_part )? ) -> template( \"not implemented: \"| ^( FUNCTION_ENABLING_WITHIN_OR_OVER function_argument ( within_clause | over_clause )+ ) -> template( \"not implemented: \"| ^( DECOMPOSE_VK expression ( CANONICAL_VK | COMPATIBILITY_VK )? ) -> template( \"not implemented: \"| ^( EXTRACT_VK REGULAR_ID expression ) -> template( \"not implemented: \"| ^( ( FIRST_VALUE_VK | LAST_VALUE_VK ) expression ( NULLS_VK )? over_clause ) -> template( \"not implemented: \"| ^( PREDICTION_FUNCTION ( expression )+ ( cost_matrix_clause )? ( using_clause )? ) -> template( \"not implemented: \"| ^( TRANSLATE_VK expression ( CHAR_CS_VK | NCHAR_CS_VK )? ( expression )* ) -> template( \"not implemented: \"| ^( TREAT_VK expression ( REF_VK )? type_spec ) -> template( \"not implemented: \"| ^( TRIM_VK ( LEADING_VK | TRAILING_VK | BOTH_VK )? expression ( expression )? ) -> template( \"not implemented: \"| ^( XMLAGG_VK expression ( order_by_clause )? ) -> template( \"not implemented: \"| ^( ( XMLCOLATTVAL_VK | XMLFOREST_VK ) ( xml_multiuse_expression_element )+ ) -> template( \"not implemented: \"| ^( XMLEXISTS_VK expression ( xml_passing_clause )? ) -> template( \"not implemented: \"| ^( XMLPARSE_VK ( DOCUMENT_VK | CONTENT_VK ) expression ( WELLFORMED_VK )? ) -> template( \"not implemented: \"| ^( XMLQUERY_VK expression ( xml_passing_clause )? ( SQL92_RESERVED_NULL )? ) -> template( \"not implemented: \"| ^( XMLROOT_VK expression xml_param_version_part ( xmlroot_param_standalone_part )? ) -> template( \"not implemented: \"| ^( XMLTABLE_VK ( xml_namespaces_clause )? expression ( xml_passing_clause )? ( xml_table_column )* ) -> template( \"not implemented: \"| ^( XMLELEMENT_VK ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )? ( NAME_VK | EVALNAME_VK )? expression ( xml_attributes_clause )? ( expression ( alias )? )* ) -> template( \"not implemented: \"| ^( XMLPI_VK ( NAME_VK ( char_set_name )? ID | EVALNAME_VK expression ) ( expression )? ) -> template( \"not implemented: \"| ^( XMLSERIALIZE_VK ( DOCUMENT_VK | CONTENT_VK ) expression ( type_spec )? ( xmlserialize_param_enconding_part )? ( xml_param_version_part )? ( xmlserialize_param_ident_part )? ( ( HIDE_VK | SHOW_VK ) DEFAULTS_VK )? ) -> template( \"not implemented: \");
	public final PLSQLPrinter.standard_function_return standard_function() throws RecognitionException {
		PLSQLPrinter.standard_function_return retval = new PLSQLPrinter.standard_function_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1912:5: ( ^( FUNCTION_ENABLING_OVER function_argument ( over_clause )? ) -> template( \"not implemented: \"| ^( FUNCTION_ENABLING_USING function_argument ( using_clause )? ) -> template( \"not implemented: \"| ^( COUNT_VK ( ASTERISK | expression ) ( over_clause )? ) -> template( \"not implemented: \"| ^( ( CAST_VK | XMLCAST_VK ) ( subquery | expression ) type_spec ) -> template( \"not implemented: \"| ^( CHR_VK expression NCHAR_CS_VK ) -> template( \"not implemented: \"| ^( COLLECT_VK ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )? column_name ( collect_order_by_part )? ) -> template( \"not implemented: \"| ^( FUNCTION_ENABLING_WITHIN_OR_OVER function_argument ( within_clause | over_clause )+ ) -> template( \"not implemented: \"| ^( DECOMPOSE_VK expression ( CANONICAL_VK | COMPATIBILITY_VK )? ) -> template( \"not implemented: \"| ^( EXTRACT_VK REGULAR_ID expression ) -> template( \"not implemented: \"| ^( ( FIRST_VALUE_VK | LAST_VALUE_VK ) expression ( NULLS_VK )? over_clause ) -> template( \"not implemented: \"| ^( PREDICTION_FUNCTION ( expression )+ ( cost_matrix_clause )? ( using_clause )? ) -> template( \"not implemented: \"| ^( TRANSLATE_VK expression ( CHAR_CS_VK | NCHAR_CS_VK )? ( expression )* ) -> template( \"not implemented: \"| ^( TREAT_VK expression ( REF_VK )? type_spec ) -> template( \"not implemented: \"| ^( TRIM_VK ( LEADING_VK | TRAILING_VK | BOTH_VK )? expression ( expression )? ) -> template( \"not implemented: \"| ^( XMLAGG_VK expression ( order_by_clause )? ) -> template( \"not implemented: \"| ^( ( XMLCOLATTVAL_VK | XMLFOREST_VK ) ( xml_multiuse_expression_element )+ ) -> template( \"not implemented: \"| ^( XMLEXISTS_VK expression ( xml_passing_clause )? ) -> template( \"not implemented: \"| ^( XMLPARSE_VK ( DOCUMENT_VK | CONTENT_VK ) expression ( WELLFORMED_VK )? ) -> template( \"not implemented: \"| ^( XMLQUERY_VK expression ( xml_passing_clause )? ( SQL92_RESERVED_NULL )? ) -> template( \"not implemented: \"| ^( XMLROOT_VK expression xml_param_version_part ( xmlroot_param_standalone_part )? ) -> template( \"not implemented: \"| ^( XMLTABLE_VK ( xml_namespaces_clause )? expression ( xml_passing_clause )? ( xml_table_column )* ) -> template( \"not implemented: \"| ^( XMLELEMENT_VK ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )? ( NAME_VK | EVALNAME_VK )? expression ( xml_attributes_clause )? ( expression ( alias )? )* ) -> template( \"not implemented: \"| ^( XMLPI_VK ( NAME_VK ( char_set_name )? ID | EVALNAME_VK expression ) ( expression )? ) -> template( \"not implemented: \"| ^( XMLSERIALIZE_VK ( DOCUMENT_VK | CONTENT_VK ) expression ( type_spec )? ( xmlserialize_param_enconding_part )? ( xml_param_version_part )? ( xmlserialize_param_ident_part )? ( ( HIDE_VK | SHOW_VK ) DEFAULTS_VK )? ) -> template( \"not implemented: \")
			int alt483=24;
			switch ( input.LA(1) ) {
			case FUNCTION_ENABLING_OVER:
				{
				alt483=1;
				}
				break;
			case FUNCTION_ENABLING_USING:
				{
				alt483=2;
				}
				break;
			case COUNT_VK:
				{
				alt483=3;
				}
				break;
			case CAST_VK:
			case XMLCAST_VK:
				{
				alt483=4;
				}
				break;
			case CHR_VK:
				{
				alt483=5;
				}
				break;
			case COLLECT_VK:
				{
				alt483=6;
				}
				break;
			case FUNCTION_ENABLING_WITHIN_OR_OVER:
				{
				alt483=7;
				}
				break;
			case DECOMPOSE_VK:
				{
				alt483=8;
				}
				break;
			case EXTRACT_VK:
				{
				alt483=9;
				}
				break;
			case FIRST_VALUE_VK:
			case LAST_VALUE_VK:
				{
				alt483=10;
				}
				break;
			case PREDICTION_FUNCTION:
				{
				alt483=11;
				}
				break;
			case TRANSLATE_VK:
				{
				alt483=12;
				}
				break;
			case TREAT_VK:
				{
				alt483=13;
				}
				break;
			case TRIM_VK:
				{
				alt483=14;
				}
				break;
			case XMLAGG_VK:
				{
				alt483=15;
				}
				break;
			case XMLCOLATTVAL_VK:
			case XMLFOREST_VK:
				{
				alt483=16;
				}
				break;
			case XMLEXISTS_VK:
				{
				alt483=17;
				}
				break;
			case XMLPARSE_VK:
				{
				alt483=18;
				}
				break;
			case XMLQUERY_VK:
				{
				alt483=19;
				}
				break;
			case XMLROOT_VK:
				{
				alt483=20;
				}
				break;
			case XMLTABLE_VK:
				{
				alt483=21;
				}
				break;
			case XMLELEMENT_VK:
				{
				alt483=22;
				}
				break;
			case XMLPI_VK:
				{
				alt483=23;
				}
				break;
			case XMLSERIALIZE_VK:
				{
				alt483=24;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 483, 0, input);
				throw nvae;
			}
			switch (alt483) {
				case 1 :
					// PLSQLPrinter.g:1912:10: ^( FUNCTION_ENABLING_OVER function_argument ( over_clause )? )
					{
					match(input,FUNCTION_ENABLING_OVER,FOLLOW_FUNCTION_ENABLING_OVER_in_standard_function18111); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_function_argument_in_standard_function18113);
					function_argument();
					state._fsp--;

					// PLSQLPrinter.g:1912:53: ( over_clause )?
					int alt436=2;
					int LA436_0 = input.LA(1);
					if ( (LA436_0==OVER_VK) ) {
						alt436=1;
					}
					switch (alt436) {
						case 1 :
							// PLSQLPrinter.g:1912:53: over_clause
							{
							pushFollow(FOLLOW_over_clause_in_standard_function18115);
							over_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1913:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1914:10: ^( FUNCTION_ENABLING_USING function_argument ( using_clause )? )
					{
					match(input,FUNCTION_ENABLING_USING,FOLLOW_FUNCTION_ENABLING_USING_in_standard_function18143); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_function_argument_in_standard_function18145);
					function_argument();
					state._fsp--;

					// PLSQLPrinter.g:1914:54: ( using_clause )?
					int alt437=2;
					int LA437_0 = input.LA(1);
					if ( (LA437_0==PLSQL_NON_RESERVED_USING) ) {
						alt437=1;
					}
					switch (alt437) {
						case 1 :
							// PLSQLPrinter.g:1914:54: using_clause
							{
							pushFollow(FOLLOW_using_clause_in_standard_function18147);
							using_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1915:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1916:10: ^( COUNT_VK ( ASTERISK | expression ) ( over_clause )? )
					{
					match(input,COUNT_VK,FOLLOW_COUNT_VK_in_standard_function18175); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1916:21: ( ASTERISK | expression )
					int alt438=2;
					int LA438_0 = input.LA(1);
					if ( (LA438_0==ASTERISK) ) {
						alt438=1;
					}
					else if ( (LA438_0==EXPR||LA438_0==LOGIC_EXPR) ) {
						alt438=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 438, 0, input);
						throw nvae;
					}

					switch (alt438) {
						case 1 :
							// PLSQLPrinter.g:1916:23: ASTERISK
							{
							match(input,ASTERISK,FOLLOW_ASTERISK_in_standard_function18179); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1916:34: expression
							{
							pushFollow(FOLLOW_expression_in_standard_function18183);
							expression();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1916:47: ( over_clause )?
					int alt439=2;
					int LA439_0 = input.LA(1);
					if ( (LA439_0==OVER_VK) ) {
						alt439=1;
					}
					switch (alt439) {
						case 1 :
							// PLSQLPrinter.g:1916:47: over_clause
							{
							pushFollow(FOLLOW_over_clause_in_standard_function18187);
							over_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1917:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:1918:10: ^( ( CAST_VK | XMLCAST_VK ) ( subquery | expression ) type_spec )
					{
					// PLSQLPrinter.g:1918:12: ( CAST_VK | XMLCAST_VK )
					int alt440=2;
					int LA440_0 = input.LA(1);
					if ( (LA440_0==CAST_VK) ) {
						alt440=1;
					}
					else if ( (LA440_0==XMLCAST_VK) ) {
						alt440=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 440, 0, input);
						throw nvae;
					}

					switch (alt440) {
						case 1 :
							// PLSQLPrinter.g:1918:13: CAST_VK
							{
							match(input,CAST_VK,FOLLOW_CAST_VK_in_standard_function18216); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1918:21: XMLCAST_VK
							{
							match(input,XMLCAST_VK,FOLLOW_XMLCAST_VK_in_standard_function18218); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1918:33: ( subquery | expression )
					int alt441=2;
					int LA441_0 = input.LA(1);
					if ( (LA441_0==SUBQUERY) ) {
						alt441=1;
					}
					else if ( (LA441_0==EXPR||LA441_0==LOGIC_EXPR) ) {
						alt441=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 441, 0, input);
						throw nvae;
					}

					switch (alt441) {
						case 1 :
							// PLSQLPrinter.g:1918:34: subquery
							{
							pushFollow(FOLLOW_subquery_in_standard_function18222);
							subquery();
							state._fsp--;

							}
							break;
						case 2 :
							// PLSQLPrinter.g:1918:43: expression
							{
							pushFollow(FOLLOW_expression_in_standard_function18224);
							expression();
							state._fsp--;

							}
							break;

					}

					pushFollow(FOLLOW_type_spec_in_standard_function18227);
					type_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1919:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:1920:10: ^( CHR_VK expression NCHAR_CS_VK )
					{
					match(input,CHR_VK,FOLLOW_CHR_VK_in_standard_function18254); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18256);
					expression();
					state._fsp--;

					match(input,NCHAR_CS_VK,FOLLOW_NCHAR_CS_VK_in_standard_function18258); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1921:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:1922:10: ^( COLLECT_VK ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )? column_name ( collect_order_by_part )? )
					{
					match(input,COLLECT_VK,FOLLOW_COLLECT_VK_in_standard_function18285); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1922:23: ( SQL92_RESERVED_DISTINCT | SQL92_RESERVED_UNIQUE )?
					int alt442=3;
					int LA442_0 = input.LA(1);
					if ( (LA442_0==SQL92_RESERVED_DISTINCT) ) {
						alt442=1;
					}
					else if ( (LA442_0==SQL92_RESERVED_UNIQUE) ) {
						alt442=2;
					}
					switch (alt442) {
						case 1 :
							// PLSQLPrinter.g:1922:24: SQL92_RESERVED_DISTINCT
							{
							match(input,SQL92_RESERVED_DISTINCT,FOLLOW_SQL92_RESERVED_DISTINCT_in_standard_function18288); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1922:48: SQL92_RESERVED_UNIQUE
							{
							match(input,SQL92_RESERVED_UNIQUE,FOLLOW_SQL92_RESERVED_UNIQUE_in_standard_function18290); 
							}
							break;

					}

					pushFollow(FOLLOW_column_name_in_standard_function18294);
					column_name();
					state._fsp--;

					// PLSQLPrinter.g:1922:84: ( collect_order_by_part )?
					int alt443=2;
					int LA443_0 = input.LA(1);
					if ( (LA443_0==SQL92_RESERVED_ORDER) ) {
						alt443=1;
					}
					switch (alt443) {
						case 1 :
							// PLSQLPrinter.g:1922:84: collect_order_by_part
							{
							pushFollow(FOLLOW_collect_order_by_part_in_standard_function18296);
							collect_order_by_part();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1923:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:1924:10: ^( FUNCTION_ENABLING_WITHIN_OR_OVER function_argument ( within_clause | over_clause )+ )
					{
					match(input,FUNCTION_ENABLING_WITHIN_OR_OVER,FOLLOW_FUNCTION_ENABLING_WITHIN_OR_OVER_in_standard_function18324); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_function_argument_in_standard_function18326);
					function_argument();
					state._fsp--;

					// PLSQLPrinter.g:1924:63: ( within_clause | over_clause )+
					int cnt444=0;
					loop444:
					while (true) {
						int alt444=3;
						int LA444_0 = input.LA(1);
						if ( (LA444_0==WITHIN_VK) ) {
							alt444=1;
						}
						else if ( (LA444_0==OVER_VK) ) {
							alt444=2;
						}

						switch (alt444) {
						case 1 :
							// PLSQLPrinter.g:1924:64: within_clause
							{
							pushFollow(FOLLOW_within_clause_in_standard_function18329);
							within_clause();
							state._fsp--;

							}
							break;
						case 2 :
							// PLSQLPrinter.g:1924:78: over_clause
							{
							pushFollow(FOLLOW_over_clause_in_standard_function18331);
							over_clause();
							state._fsp--;

							}
							break;

						default :
							if ( cnt444 >= 1 ) break loop444;
							EarlyExitException eee = new EarlyExitException(444, input);
							throw eee;
						}
						cnt444++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1925:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:1926:10: ^( DECOMPOSE_VK expression ( CANONICAL_VK | COMPATIBILITY_VK )? )
					{
					match(input,DECOMPOSE_VK,FOLLOW_DECOMPOSE_VK_in_standard_function18361); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18363);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1926:36: ( CANONICAL_VK | COMPATIBILITY_VK )?
					int alt445=3;
					int LA445_0 = input.LA(1);
					if ( (LA445_0==CANONICAL_VK) ) {
						alt445=1;
					}
					else if ( (LA445_0==COMPATIBILITY_VK) ) {
						alt445=2;
					}
					switch (alt445) {
						case 1 :
							// PLSQLPrinter.g:1926:37: CANONICAL_VK
							{
							match(input,CANONICAL_VK,FOLLOW_CANONICAL_VK_in_standard_function18366); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1926:50: COMPATIBILITY_VK
							{
							match(input,COMPATIBILITY_VK,FOLLOW_COMPATIBILITY_VK_in_standard_function18368); 
							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1927:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:1928:10: ^( EXTRACT_VK REGULAR_ID expression )
					{
					match(input,EXTRACT_VK,FOLLOW_EXTRACT_VK_in_standard_function18398); 
					match(input, Token.DOWN, null); 
					match(input,REGULAR_ID,FOLLOW_REGULAR_ID_in_standard_function18400); 
					pushFollow(FOLLOW_expression_in_standard_function18402);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1929:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:1930:10: ^( ( FIRST_VALUE_VK | LAST_VALUE_VK ) expression ( NULLS_VK )? over_clause )
					{
					// PLSQLPrinter.g:1930:12: ( FIRST_VALUE_VK | LAST_VALUE_VK )
					int alt446=2;
					int LA446_0 = input.LA(1);
					if ( (LA446_0==FIRST_VALUE_VK) ) {
						alt446=1;
					}
					else if ( (LA446_0==LAST_VALUE_VK) ) {
						alt446=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 446, 0, input);
						throw nvae;
					}

					switch (alt446) {
						case 1 :
							// PLSQLPrinter.g:1930:13: FIRST_VALUE_VK
							{
							match(input,FIRST_VALUE_VK,FOLLOW_FIRST_VALUE_VK_in_standard_function18430); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1930:28: LAST_VALUE_VK
							{
							match(input,LAST_VALUE_VK,FOLLOW_LAST_VALUE_VK_in_standard_function18432); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18435);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1930:54: ( NULLS_VK )?
					int alt447=2;
					int LA447_0 = input.LA(1);
					if ( (LA447_0==NULLS_VK) ) {
						alt447=1;
					}
					switch (alt447) {
						case 1 :
							// PLSQLPrinter.g:1930:54: NULLS_VK
							{
							match(input,NULLS_VK,FOLLOW_NULLS_VK_in_standard_function18437); 
							}
							break;

					}

					pushFollow(FOLLOW_over_clause_in_standard_function18440);
					over_clause();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1931:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:1932:10: ^( PREDICTION_FUNCTION ( expression )+ ( cost_matrix_clause )? ( using_clause )? )
					{
					match(input,PREDICTION_FUNCTION,FOLLOW_PREDICTION_FUNCTION_in_standard_function18468); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1932:32: ( expression )+
					int cnt448=0;
					loop448:
					while (true) {
						int alt448=2;
						int LA448_0 = input.LA(1);
						if ( (LA448_0==EXPR||LA448_0==LOGIC_EXPR) ) {
							alt448=1;
						}

						switch (alt448) {
						case 1 :
							// PLSQLPrinter.g:1932:32: expression
							{
							pushFollow(FOLLOW_expression_in_standard_function18470);
							expression();
							state._fsp--;

							}
							break;

						default :
							if ( cnt448 >= 1 ) break loop448;
							EarlyExitException eee = new EarlyExitException(448, input);
							throw eee;
						}
						cnt448++;
					}

					// PLSQLPrinter.g:1932:44: ( cost_matrix_clause )?
					int alt449=2;
					int LA449_0 = input.LA(1);
					if ( (LA449_0==COST_VK) ) {
						alt449=1;
					}
					switch (alt449) {
						case 1 :
							// PLSQLPrinter.g:1932:44: cost_matrix_clause
							{
							pushFollow(FOLLOW_cost_matrix_clause_in_standard_function18473);
							cost_matrix_clause();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1932:64: ( using_clause )?
					int alt450=2;
					int LA450_0 = input.LA(1);
					if ( (LA450_0==PLSQL_NON_RESERVED_USING) ) {
						alt450=1;
					}
					switch (alt450) {
						case 1 :
							// PLSQLPrinter.g:1932:64: using_clause
							{
							pushFollow(FOLLOW_using_clause_in_standard_function18476);
							using_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1933:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:1934:10: ^( TRANSLATE_VK expression ( CHAR_CS_VK | NCHAR_CS_VK )? ( expression )* )
					{
					match(input,TRANSLATE_VK,FOLLOW_TRANSLATE_VK_in_standard_function18504); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18506);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1934:36: ( CHAR_CS_VK | NCHAR_CS_VK )?
					int alt451=3;
					int LA451_0 = input.LA(1);
					if ( (LA451_0==CHAR_CS_VK) ) {
						alt451=1;
					}
					else if ( (LA451_0==NCHAR_CS_VK) ) {
						alt451=2;
					}
					switch (alt451) {
						case 1 :
							// PLSQLPrinter.g:1934:37: CHAR_CS_VK
							{
							match(input,CHAR_CS_VK,FOLLOW_CHAR_CS_VK_in_standard_function18509); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1934:48: NCHAR_CS_VK
							{
							match(input,NCHAR_CS_VK,FOLLOW_NCHAR_CS_VK_in_standard_function18511); 
							}
							break;

					}

					// PLSQLPrinter.g:1934:62: ( expression )*
					loop452:
					while (true) {
						int alt452=2;
						int LA452_0 = input.LA(1);
						if ( (LA452_0==EXPR||LA452_0==LOGIC_EXPR) ) {
							alt452=1;
						}

						switch (alt452) {
						case 1 :
							// PLSQLPrinter.g:1934:62: expression
							{
							pushFollow(FOLLOW_expression_in_standard_function18515);
							expression();
							state._fsp--;

							}
							break;

						default :
							break loop452;
						}
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1935:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 13 :
					// PLSQLPrinter.g:1936:10: ^( TREAT_VK expression ( REF_VK )? type_spec )
					{
					match(input,TREAT_VK,FOLLOW_TREAT_VK_in_standard_function18543); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18545);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1936:32: ( REF_VK )?
					int alt453=2;
					int LA453_0 = input.LA(1);
					if ( (LA453_0==REF_VK) ) {
						alt453=1;
					}
					switch (alt453) {
						case 1 :
							// PLSQLPrinter.g:1936:32: REF_VK
							{
							match(input,REF_VK,FOLLOW_REF_VK_in_standard_function18547); 
							}
							break;

					}

					pushFollow(FOLLOW_type_spec_in_standard_function18550);
					type_spec();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1937:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 14 :
					// PLSQLPrinter.g:1938:10: ^( TRIM_VK ( LEADING_VK | TRAILING_VK | BOTH_VK )? expression ( expression )? )
					{
					match(input,TRIM_VK,FOLLOW_TRIM_VK_in_standard_function18577); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1938:20: ( LEADING_VK | TRAILING_VK | BOTH_VK )?
					int alt454=4;
					switch ( input.LA(1) ) {
						case LEADING_VK:
							{
							alt454=1;
							}
							break;
						case TRAILING_VK:
							{
							alt454=2;
							}
							break;
						case BOTH_VK:
							{
							alt454=3;
							}
							break;
					}
					switch (alt454) {
						case 1 :
							// PLSQLPrinter.g:1938:21: LEADING_VK
							{
							match(input,LEADING_VK,FOLLOW_LEADING_VK_in_standard_function18580); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1938:32: TRAILING_VK
							{
							match(input,TRAILING_VK,FOLLOW_TRAILING_VK_in_standard_function18582); 
							}
							break;
						case 3 :
							// PLSQLPrinter.g:1938:44: BOTH_VK
							{
							match(input,BOTH_VK,FOLLOW_BOTH_VK_in_standard_function18584); 
							}
							break;

					}

					pushFollow(FOLLOW_expression_in_standard_function18588);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1938:65: ( expression )?
					int alt455=2;
					int LA455_0 = input.LA(1);
					if ( (LA455_0==EXPR||LA455_0==LOGIC_EXPR) ) {
						alt455=1;
					}
					switch (alt455) {
						case 1 :
							// PLSQLPrinter.g:1938:65: expression
							{
							pushFollow(FOLLOW_expression_in_standard_function18590);
							expression();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1939:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 15 :
					// PLSQLPrinter.g:1941:10: ^( XMLAGG_VK expression ( order_by_clause )? )
					{
					match(input,XMLAGG_VK,FOLLOW_XMLAGG_VK_in_standard_function18620); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18622);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1941:33: ( order_by_clause )?
					int alt456=2;
					int LA456_0 = input.LA(1);
					if ( (LA456_0==SQL92_RESERVED_ORDER) ) {
						alt456=1;
					}
					switch (alt456) {
						case 1 :
							// PLSQLPrinter.g:1941:33: order_by_clause
							{
							pushFollow(FOLLOW_order_by_clause_in_standard_function18624);
							order_by_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1942:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 16 :
					// PLSQLPrinter.g:1943:10: ^( ( XMLCOLATTVAL_VK | XMLFOREST_VK ) ( xml_multiuse_expression_element )+ )
					{
					// PLSQLPrinter.g:1943:12: ( XMLCOLATTVAL_VK | XMLFOREST_VK )
					int alt457=2;
					int LA457_0 = input.LA(1);
					if ( (LA457_0==XMLCOLATTVAL_VK) ) {
						alt457=1;
					}
					else if ( (LA457_0==XMLFOREST_VK) ) {
						alt457=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 457, 0, input);
						throw nvae;
					}

					switch (alt457) {
						case 1 :
							// PLSQLPrinter.g:1943:13: XMLCOLATTVAL_VK
							{
							match(input,XMLCOLATTVAL_VK,FOLLOW_XMLCOLATTVAL_VK_in_standard_function18653); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1943:29: XMLFOREST_VK
							{
							match(input,XMLFOREST_VK,FOLLOW_XMLFOREST_VK_in_standard_function18655); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1943:43: ( xml_multiuse_expression_element )+
					int cnt458=0;
					loop458:
					while (true) {
						int alt458=2;
						int LA458_0 = input.LA(1);
						if ( (LA458_0==XML_ELEMENT) ) {
							alt458=1;
						}

						switch (alt458) {
						case 1 :
							// PLSQLPrinter.g:1943:43: xml_multiuse_expression_element
							{
							pushFollow(FOLLOW_xml_multiuse_expression_element_in_standard_function18658);
							xml_multiuse_expression_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt458 >= 1 ) break loop458;
							EarlyExitException eee = new EarlyExitException(458, input);
							throw eee;
						}
						cnt458++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1944:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 17 :
					// PLSQLPrinter.g:1945:10: ^( XMLEXISTS_VK expression ( xml_passing_clause )? )
					{
					match(input,XMLEXISTS_VK,FOLLOW_XMLEXISTS_VK_in_standard_function18686); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18688);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1945:36: ( xml_passing_clause )?
					int alt459=2;
					int LA459_0 = input.LA(1);
					if ( (LA459_0==PASSING_VK) ) {
						alt459=1;
					}
					switch (alt459) {
						case 1 :
							// PLSQLPrinter.g:1945:36: xml_passing_clause
							{
							pushFollow(FOLLOW_xml_passing_clause_in_standard_function18690);
							xml_passing_clause();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1946:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 18 :
					// PLSQLPrinter.g:1947:10: ^( XMLPARSE_VK ( DOCUMENT_VK | CONTENT_VK ) expression ( WELLFORMED_VK )? )
					{
					match(input,XMLPARSE_VK,FOLLOW_XMLPARSE_VK_in_standard_function18718); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1947:24: ( DOCUMENT_VK | CONTENT_VK )
					int alt460=2;
					int LA460_0 = input.LA(1);
					if ( (LA460_0==DOCUMENT_VK) ) {
						alt460=1;
					}
					else if ( (LA460_0==CONTENT_VK) ) {
						alt460=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 460, 0, input);
						throw nvae;
					}

					switch (alt460) {
						case 1 :
							// PLSQLPrinter.g:1947:25: DOCUMENT_VK
							{
							match(input,DOCUMENT_VK,FOLLOW_DOCUMENT_VK_in_standard_function18721); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1947:37: CONTENT_VK
							{
							match(input,CONTENT_VK,FOLLOW_CONTENT_VK_in_standard_function18723); 
							}
							break;

					}

					pushFollow(FOLLOW_expression_in_standard_function18726);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1947:60: ( WELLFORMED_VK )?
					int alt461=2;
					int LA461_0 = input.LA(1);
					if ( (LA461_0==WELLFORMED_VK) ) {
						alt461=1;
					}
					switch (alt461) {
						case 1 :
							// PLSQLPrinter.g:1947:60: WELLFORMED_VK
							{
							match(input,WELLFORMED_VK,FOLLOW_WELLFORMED_VK_in_standard_function18728); 
							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1948:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 19 :
					// PLSQLPrinter.g:1949:10: ^( XMLQUERY_VK expression ( xml_passing_clause )? ( SQL92_RESERVED_NULL )? )
					{
					match(input,XMLQUERY_VK,FOLLOW_XMLQUERY_VK_in_standard_function18756); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18758);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1949:35: ( xml_passing_clause )?
					int alt462=2;
					int LA462_0 = input.LA(1);
					if ( (LA462_0==PASSING_VK) ) {
						alt462=1;
					}
					switch (alt462) {
						case 1 :
							// PLSQLPrinter.g:1949:35: xml_passing_clause
							{
							pushFollow(FOLLOW_xml_passing_clause_in_standard_function18760);
							xml_passing_clause();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1949:55: ( SQL92_RESERVED_NULL )?
					int alt463=2;
					int LA463_0 = input.LA(1);
					if ( (LA463_0==SQL92_RESERVED_NULL) ) {
						alt463=1;
					}
					switch (alt463) {
						case 1 :
							// PLSQLPrinter.g:1949:55: SQL92_RESERVED_NULL
							{
							match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_standard_function18763); 
							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1950:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 20 :
					// PLSQLPrinter.g:1951:10: ^( XMLROOT_VK expression xml_param_version_part ( xmlroot_param_standalone_part )? )
					{
					match(input,XMLROOT_VK,FOLLOW_XMLROOT_VK_in_standard_function18791); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_standard_function18793);
					expression();
					state._fsp--;

					pushFollow(FOLLOW_xml_param_version_part_in_standard_function18795);
					xml_param_version_part();
					state._fsp--;

					// PLSQLPrinter.g:1951:57: ( xmlroot_param_standalone_part )?
					int alt464=2;
					int LA464_0 = input.LA(1);
					if ( (LA464_0==STANDALONE_VK) ) {
						alt464=1;
					}
					switch (alt464) {
						case 1 :
							// PLSQLPrinter.g:1951:57: xmlroot_param_standalone_part
							{
							pushFollow(FOLLOW_xmlroot_param_standalone_part_in_standard_function18797);
							xmlroot_param_standalone_part();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1952:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 21 :
					// PLSQLPrinter.g:1953:10: ^( XMLTABLE_VK ( xml_namespaces_clause )? expression ( xml_passing_clause )? ( xml_table_column )* )
					{
					match(input,XMLTABLE_VK,FOLLOW_XMLTABLE_VK_in_standard_function18825); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1953:24: ( xml_namespaces_clause )?
					int alt465=2;
					int LA465_0 = input.LA(1);
					if ( (LA465_0==XMLNAMESPACES_VK) ) {
						alt465=1;
					}
					switch (alt465) {
						case 1 :
							// PLSQLPrinter.g:1953:24: xml_namespaces_clause
							{
							pushFollow(FOLLOW_xml_namespaces_clause_in_standard_function18827);
							xml_namespaces_clause();
							state._fsp--;

							}
							break;

					}

					pushFollow(FOLLOW_expression_in_standard_function18830);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1953:58: ( xml_passing_clause )?
					int alt466=2;
					int LA466_0 = input.LA(1);
					if ( (LA466_0==PASSING_VK) ) {
						alt466=1;
					}
					switch (alt466) {
						case 1 :
							// PLSQLPrinter.g:1953:58: xml_passing_clause
							{
							pushFollow(FOLLOW_xml_passing_clause_in_standard_function18832);
							xml_passing_clause();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1953:78: ( xml_table_column )*
					loop467:
					while (true) {
						int alt467=2;
						int LA467_0 = input.LA(1);
						if ( (LA467_0==XML_COLUMN) ) {
							alt467=1;
						}

						switch (alt467) {
						case 1 :
							// PLSQLPrinter.g:1953:78: xml_table_column
							{
							pushFollow(FOLLOW_xml_table_column_in_standard_function18835);
							xml_table_column();
							state._fsp--;

							}
							break;

						default :
							break loop467;
						}
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1954:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 22 :
					// PLSQLPrinter.g:1955:10: ^( XMLELEMENT_VK ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )? ( NAME_VK | EVALNAME_VK )? expression ( xml_attributes_clause )? ( expression ( alias )? )* )
					{
					match(input,XMLELEMENT_VK,FOLLOW_XMLELEMENT_VK_in_standard_function18863); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1956:13: ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )?
					int alt468=3;
					int LA468_0 = input.LA(1);
					if ( (LA468_0==ENTITYESCAPING_VK) ) {
						alt468=1;
					}
					else if ( (LA468_0==NOENTITYESCAPING_VK) ) {
						alt468=2;
					}
					switch (alt468) {
						case 1 :
							// PLSQLPrinter.g:1956:14: ENTITYESCAPING_VK
							{
							match(input,ENTITYESCAPING_VK,FOLLOW_ENTITYESCAPING_VK_in_standard_function18878); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1956:32: NOENTITYESCAPING_VK
							{
							match(input,NOENTITYESCAPING_VK,FOLLOW_NOENTITYESCAPING_VK_in_standard_function18880); 
							}
							break;

					}

					// PLSQLPrinter.g:1957:13: ( NAME_VK | EVALNAME_VK )?
					int alt469=3;
					int LA469_0 = input.LA(1);
					if ( (LA469_0==NAME_VK) ) {
						alt469=1;
					}
					else if ( (LA469_0==EVALNAME_VK) ) {
						alt469=2;
					}
					switch (alt469) {
						case 1 :
							// PLSQLPrinter.g:1957:14: NAME_VK
							{
							match(input,NAME_VK,FOLLOW_NAME_VK_in_standard_function18897); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1957:22: EVALNAME_VK
							{
							match(input,EVALNAME_VK,FOLLOW_EVALNAME_VK_in_standard_function18899); 
							}
							break;

					}

					pushFollow(FOLLOW_expression_in_standard_function18903);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1958:13: ( xml_attributes_clause )?
					int alt470=2;
					int LA470_0 = input.LA(1);
					if ( (LA470_0==XMLATTRIBUTES_VK) ) {
						alt470=1;
					}
					switch (alt470) {
						case 1 :
							// PLSQLPrinter.g:1958:13: xml_attributes_clause
							{
							pushFollow(FOLLOW_xml_attributes_clause_in_standard_function18917);
							xml_attributes_clause();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1958:36: ( expression ( alias )? )*
					loop472:
					while (true) {
						int alt472=2;
						int LA472_0 = input.LA(1);
						if ( (LA472_0==EXPR||LA472_0==LOGIC_EXPR) ) {
							alt472=1;
						}

						switch (alt472) {
						case 1 :
							// PLSQLPrinter.g:1958:37: expression ( alias )?
							{
							pushFollow(FOLLOW_expression_in_standard_function18921);
							expression();
							state._fsp--;

							// PLSQLPrinter.g:1958:48: ( alias )?
							int alt471=2;
							int LA471_0 = input.LA(1);
							if ( (LA471_0==ALIAS) ) {
								alt471=1;
							}
							switch (alt471) {
								case 1 :
									// PLSQLPrinter.g:1958:48: alias
									{
									pushFollow(FOLLOW_alias_in_standard_function18923);
									alias();
									state._fsp--;

									}
									break;

							}

							}
							break;

						default :
							break loop472;
						}
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1960:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 23 :
					// PLSQLPrinter.g:1961:10: ^( XMLPI_VK ( NAME_VK ( char_set_name )? ID | EVALNAME_VK expression ) ( expression )? )
					{
					match(input,XMLPI_VK,FOLLOW_XMLPI_VK_in_standard_function18962); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1962:17: ( NAME_VK ( char_set_name )? ID | EVALNAME_VK expression )
					int alt474=2;
					int LA474_0 = input.LA(1);
					if ( (LA474_0==NAME_VK) ) {
						alt474=1;
					}
					else if ( (LA474_0==EVALNAME_VK) ) {
						alt474=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 474, 0, input);
						throw nvae;
					}

					switch (alt474) {
						case 1 :
							// PLSQLPrinter.g:1962:22: NAME_VK ( char_set_name )? ID
							{
							match(input,NAME_VK,FOLLOW_NAME_VK_in_standard_function18985); 
							// PLSQLPrinter.g:1962:30: ( char_set_name )?
							int alt473=2;
							int LA473_0 = input.LA(1);
							if ( (LA473_0==CHAR_SET_NAME) ) {
								alt473=1;
							}
							switch (alt473) {
								case 1 :
									// PLSQLPrinter.g:1962:30: char_set_name
									{
									pushFollow(FOLLOW_char_set_name_in_standard_function18987);
									char_set_name();
									state._fsp--;

									}
									break;

							}

							match(input,ID,FOLLOW_ID_in_standard_function18990); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1963:22: EVALNAME_VK expression
							{
							match(input,EVALNAME_VK,FOLLOW_EVALNAME_VK_in_standard_function19013); 
							pushFollow(FOLLOW_expression_in_standard_function19015);
							expression();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1965:17: ( expression )?
					int alt475=2;
					int LA475_0 = input.LA(1);
					if ( (LA475_0==EXPR||LA475_0==LOGIC_EXPR) ) {
						alt475=1;
					}
					switch (alt475) {
						case 1 :
							// PLSQLPrinter.g:1965:17: expression
							{
							pushFollow(FOLLOW_expression_in_standard_function19051);
							expression();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1967:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 24 :
					// PLSQLPrinter.g:1968:10: ^( XMLSERIALIZE_VK ( DOCUMENT_VK | CONTENT_VK ) expression ( type_spec )? ( xmlserialize_param_enconding_part )? ( xml_param_version_part )? ( xmlserialize_param_ident_part )? ( ( HIDE_VK | SHOW_VK ) DEFAULTS_VK )? )
					{
					match(input,XMLSERIALIZE_VK,FOLLOW_XMLSERIALIZE_VK_in_standard_function19088); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:1969:17: ( DOCUMENT_VK | CONTENT_VK )
					int alt476=2;
					int LA476_0 = input.LA(1);
					if ( (LA476_0==DOCUMENT_VK) ) {
						alt476=1;
					}
					else if ( (LA476_0==CONTENT_VK) ) {
						alt476=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 476, 0, input);
						throw nvae;
					}

					switch (alt476) {
						case 1 :
							// PLSQLPrinter.g:1969:18: DOCUMENT_VK
							{
							match(input,DOCUMENT_VK,FOLLOW_DOCUMENT_VK_in_standard_function19107); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1969:30: CONTENT_VK
							{
							match(input,CONTENT_VK,FOLLOW_CONTENT_VK_in_standard_function19109); 
							}
							break;

					}

					pushFollow(FOLLOW_expression_in_standard_function19128);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:1970:28: ( type_spec )?
					int alt477=2;
					int LA477_0 = input.LA(1);
					if ( (LA477_0==CUSTOM_TYPE||LA477_0==INTERVAL_DATATYPE||LA477_0==NATIVE_DATATYPE) ) {
						alt477=1;
					}
					switch (alt477) {
						case 1 :
							// PLSQLPrinter.g:1970:28: type_spec
							{
							pushFollow(FOLLOW_type_spec_in_standard_function19130);
							type_spec();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1971:17: ( xmlserialize_param_enconding_part )?
					int alt478=2;
					int LA478_0 = input.LA(1);
					if ( (LA478_0==ENCODING_VK) ) {
						alt478=1;
					}
					switch (alt478) {
						case 1 :
							// PLSQLPrinter.g:1971:17: xmlserialize_param_enconding_part
							{
							pushFollow(FOLLOW_xmlserialize_param_enconding_part_in_standard_function19149);
							xmlserialize_param_enconding_part();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1972:17: ( xml_param_version_part )?
					int alt479=2;
					int LA479_0 = input.LA(1);
					if ( (LA479_0==VERSION_VK) ) {
						alt479=1;
					}
					switch (alt479) {
						case 1 :
							// PLSQLPrinter.g:1972:17: xml_param_version_part
							{
							pushFollow(FOLLOW_xml_param_version_part_in_standard_function19168);
							xml_param_version_part();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1973:17: ( xmlserialize_param_ident_part )?
					int alt480=2;
					int LA480_0 = input.LA(1);
					if ( (LA480_0==INDENT_VK||LA480_0==NO_VK) ) {
						alt480=1;
					}
					switch (alt480) {
						case 1 :
							// PLSQLPrinter.g:1973:17: xmlserialize_param_ident_part
							{
							pushFollow(FOLLOW_xmlserialize_param_ident_part_in_standard_function19187);
							xmlserialize_param_ident_part();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:1974:17: ( ( HIDE_VK | SHOW_VK ) DEFAULTS_VK )?
					int alt482=2;
					int LA482_0 = input.LA(1);
					if ( (LA482_0==HIDE_VK||LA482_0==SHOW_VK) ) {
						alt482=1;
					}
					switch (alt482) {
						case 1 :
							// PLSQLPrinter.g:1974:18: ( HIDE_VK | SHOW_VK ) DEFAULTS_VK
							{
							// PLSQLPrinter.g:1974:18: ( HIDE_VK | SHOW_VK )
							int alt481=2;
							int LA481_0 = input.LA(1);
							if ( (LA481_0==HIDE_VK) ) {
								alt481=1;
							}
							else if ( (LA481_0==SHOW_VK) ) {
								alt481=2;
							}

							else {
								NoViableAltException nvae =
									new NoViableAltException("", 481, 0, input);
								throw nvae;
							}

							switch (alt481) {
								case 1 :
									// PLSQLPrinter.g:1974:19: HIDE_VK
									{
									match(input,HIDE_VK,FOLLOW_HIDE_VK_in_standard_function19208); 
									}
									break;
								case 2 :
									// PLSQLPrinter.g:1974:27: SHOW_VK
									{
									match(input,SHOW_VK,FOLLOW_SHOW_VK_in_standard_function19210); 
									}
									break;

							}

							match(input,DEFAULTS_VK,FOLLOW_DEFAULTS_VK_in_standard_function19213); 
							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1976:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "standard_function"


	public static class over_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "over_clause"
	// PLSQLPrinter.g:1979:1: over_clause : ^( OVER_VK ( query_partition_clause )? ( order_by_clause ( windowing_clause )? )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.over_clause_return over_clause() throws RecognitionException {
		PLSQLPrinter.over_clause_return retval = new PLSQLPrinter.over_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1980:5: ( ^( OVER_VK ( query_partition_clause )? ( order_by_clause ( windowing_clause )? )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1980:10: ^( OVER_VK ( query_partition_clause )? ( order_by_clause ( windowing_clause )? )? )
			{
			match(input,OVER_VK,FOLLOW_OVER_VK_in_over_clause19260); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:1980:20: ( query_partition_clause )?
				int alt484=2;
				int LA484_0 = input.LA(1);
				if ( (LA484_0==PARTITION_VK) ) {
					alt484=1;
				}
				switch (alt484) {
					case 1 :
						// PLSQLPrinter.g:1980:20: query_partition_clause
						{
						pushFollow(FOLLOW_query_partition_clause_in_over_clause19262);
						query_partition_clause();
						state._fsp--;

						}
						break;

				}

				// PLSQLPrinter.g:1980:44: ( order_by_clause ( windowing_clause )? )?
				int alt486=2;
				int LA486_0 = input.LA(1);
				if ( (LA486_0==SQL92_RESERVED_ORDER) ) {
					alt486=1;
				}
				switch (alt486) {
					case 1 :
						// PLSQLPrinter.g:1980:45: order_by_clause ( windowing_clause )?
						{
						pushFollow(FOLLOW_order_by_clause_in_over_clause19266);
						order_by_clause();
						state._fsp--;

						// PLSQLPrinter.g:1980:61: ( windowing_clause )?
						int alt485=2;
						int LA485_0 = input.LA(1);
						if ( (LA485_0==RANGE_VK||LA485_0==ROWS_VK) ) {
							alt485=1;
						}
						switch (alt485) {
							case 1 :
								// PLSQLPrinter.g:1980:61: windowing_clause
								{
								pushFollow(FOLLOW_windowing_clause_in_over_clause19268);
								windowing_clause();
								state._fsp--;

								}
								break;

						}

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 1981:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "over_clause"


	public static class windowing_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "windowing_clause"
	// PLSQLPrinter.g:1984:1: windowing_clause : ^( ( ROWS_VK | RANGE_VK ) ( ^( SQL92_RESERVED_BETWEEN windowing_elements windowing_elements ) | ( windowing_elements )+ ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.windowing_clause_return windowing_clause() throws RecognitionException {
		PLSQLPrinter.windowing_clause_return retval = new PLSQLPrinter.windowing_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1985:5: ( ^( ( ROWS_VK | RANGE_VK ) ( ^( SQL92_RESERVED_BETWEEN windowing_elements windowing_elements ) | ( windowing_elements )+ ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:1985:10: ^( ( ROWS_VK | RANGE_VK ) ( ^( SQL92_RESERVED_BETWEEN windowing_elements windowing_elements ) | ( windowing_elements )+ ) )
			{
			// PLSQLPrinter.g:1985:12: ( ROWS_VK | RANGE_VK )
			int alt487=2;
			int LA487_0 = input.LA(1);
			if ( (LA487_0==ROWS_VK) ) {
				alt487=1;
			}
			else if ( (LA487_0==RANGE_VK) ) {
				alt487=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 487, 0, input);
				throw nvae;
			}

			switch (alt487) {
				case 1 :
					// PLSQLPrinter.g:1985:13: ROWS_VK
					{
					match(input,ROWS_VK,FOLLOW_ROWS_VK_in_windowing_clause19308); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:1985:21: RANGE_VK
					{
					match(input,RANGE_VK,FOLLOW_RANGE_VK_in_windowing_clause19310); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:1986:13: ( ^( SQL92_RESERVED_BETWEEN windowing_elements windowing_elements ) | ( windowing_elements )+ )
			int alt489=2;
			int LA489_0 = input.LA(1);
			if ( (LA489_0==SQL92_RESERVED_BETWEEN) ) {
				alt489=1;
			}
			else if ( (LA489_0==CURRENT_VK||LA489_0==FOLLOWING_VK||LA489_0==PRECEDING_VK||LA489_0==UNBOUNDED_VK) ) {
				alt489=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 489, 0, input);
				throw nvae;
			}

			switch (alt489) {
				case 1 :
					// PLSQLPrinter.g:1986:18: ^( SQL92_RESERVED_BETWEEN windowing_elements windowing_elements )
					{
					match(input,SQL92_RESERVED_BETWEEN,FOLLOW_SQL92_RESERVED_BETWEEN_in_windowing_clause19331); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_windowing_elements_in_windowing_clause19333);
					windowing_elements();
					state._fsp--;

					pushFollow(FOLLOW_windowing_elements_in_windowing_clause19335);
					windowing_elements();
					state._fsp--;

					match(input, Token.UP, null); 

					}
					break;
				case 2 :
					// PLSQLPrinter.g:1987:18: ( windowing_elements )+
					{
					// PLSQLPrinter.g:1987:18: ( windowing_elements )+
					int cnt488=0;
					loop488:
					while (true) {
						int alt488=2;
						int LA488_0 = input.LA(1);
						if ( (LA488_0==CURRENT_VK||LA488_0==FOLLOWING_VK||LA488_0==PRECEDING_VK||LA488_0==UNBOUNDED_VK) ) {
							alt488=1;
						}

						switch (alt488) {
						case 1 :
							// PLSQLPrinter.g:1987:18: windowing_elements
							{
							pushFollow(FOLLOW_windowing_elements_in_windowing_clause19355);
							windowing_elements();
							state._fsp--;

							}
							break;

						default :
							if ( cnt488 >= 1 ) break loop488;
							EarlyExitException eee = new EarlyExitException(488, input);
							throw eee;
						}
						cnt488++;
					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 1990:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "windowing_clause"


	public static class windowing_elements_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "windowing_elements"
	// PLSQLPrinter.g:1993:1: windowing_elements : ( ^( UNBOUNDED_VK PRECEDING_VK ) -> template( \"not implemented: \"| ^( CURRENT_VK ROW_VK ) -> template( \"not implemented: \"| ^( ( PRECEDING_VK | FOLLOWING_VK ) expression ) -> template( \"not implemented: \");
	public final PLSQLPrinter.windowing_elements_return windowing_elements() throws RecognitionException {
		PLSQLPrinter.windowing_elements_return retval = new PLSQLPrinter.windowing_elements_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:1994:5: ( ^( UNBOUNDED_VK PRECEDING_VK ) -> template( \"not implemented: \"| ^( CURRENT_VK ROW_VK ) -> template( \"not implemented: \"| ^( ( PRECEDING_VK | FOLLOWING_VK ) expression ) -> template( \"not implemented: \")
			int alt491=3;
			switch ( input.LA(1) ) {
			case UNBOUNDED_VK:
				{
				alt491=1;
				}
				break;
			case CURRENT_VK:
				{
				alt491=2;
				}
				break;
			case FOLLOWING_VK:
			case PRECEDING_VK:
				{
				alt491=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 491, 0, input);
				throw nvae;
			}
			switch (alt491) {
				case 1 :
					// PLSQLPrinter.g:1994:10: ^( UNBOUNDED_VK PRECEDING_VK )
					{
					match(input,UNBOUNDED_VK,FOLLOW_UNBOUNDED_VK_in_windowing_elements19415); 
					match(input, Token.DOWN, null); 
					match(input,PRECEDING_VK,FOLLOW_PRECEDING_VK_in_windowing_elements19417); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1995:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:1996:10: ^( CURRENT_VK ROW_VK )
					{
					match(input,CURRENT_VK,FOLLOW_CURRENT_VK_in_windowing_elements19444); 
					match(input, Token.DOWN, null); 
					match(input,ROW_VK,FOLLOW_ROW_VK_in_windowing_elements19446); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1997:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:1998:10: ^( ( PRECEDING_VK | FOLLOWING_VK ) expression )
					{
					// PLSQLPrinter.g:1998:12: ( PRECEDING_VK | FOLLOWING_VK )
					int alt490=2;
					int LA490_0 = input.LA(1);
					if ( (LA490_0==PRECEDING_VK) ) {
						alt490=1;
					}
					else if ( (LA490_0==FOLLOWING_VK) ) {
						alt490=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 490, 0, input);
						throw nvae;
					}

					switch (alt490) {
						case 1 :
							// PLSQLPrinter.g:1998:13: PRECEDING_VK
							{
							match(input,PRECEDING_VK,FOLLOW_PRECEDING_VK_in_windowing_elements19474); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:1998:26: FOLLOWING_VK
							{
							match(input,FOLLOWING_VK,FOLLOW_FOLLOWING_VK_in_windowing_elements19476); 
							}
							break;

					}

					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_windowing_elements19479);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 1999:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "windowing_elements"


	public static class using_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "using_clause"
	// PLSQLPrinter.g:2002:1: using_clause : ^( PLSQL_NON_RESERVED_USING ( using_element )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.using_clause_return using_clause() throws RecognitionException {
		PLSQLPrinter.using_clause_return retval = new PLSQLPrinter.using_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2003:5: ( ^( PLSQL_NON_RESERVED_USING ( using_element )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2003:10: ^( PLSQL_NON_RESERVED_USING ( using_element )+ )
			{
			match(input,PLSQL_NON_RESERVED_USING,FOLLOW_PLSQL_NON_RESERVED_USING_in_using_clause19515); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2003:37: ( using_element )+
			int cnt492=0;
			loop492:
			while (true) {
				int alt492=2;
				int LA492_0 = input.LA(1);
				if ( (LA492_0==ASTERISK||LA492_0==ELEMENT) ) {
					alt492=1;
				}

				switch (alt492) {
				case 1 :
					// PLSQLPrinter.g:2003:37: using_element
					{
					pushFollow(FOLLOW_using_element_in_using_clause19517);
					using_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt492 >= 1 ) break loop492;
					EarlyExitException eee = new EarlyExitException(492, input);
					throw eee;
				}
				cnt492++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2004:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "using_clause"


	public static class using_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "using_element"
	// PLSQLPrinter.g:2007:1: using_element : ( ^( ELEMENT ( SQL92_RESERVED_IN )? ( OUT_VK )? expression ( alias )? ) -> template( \"not implemented: \"| ASTERISK -> template( \"not implemented: \");
	public final PLSQLPrinter.using_element_return using_element() throws RecognitionException {
		PLSQLPrinter.using_element_return retval = new PLSQLPrinter.using_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2008:5: ( ^( ELEMENT ( SQL92_RESERVED_IN )? ( OUT_VK )? expression ( alias )? ) -> template( \"not implemented: \"| ASTERISK -> template( \"not implemented: \")
			int alt496=2;
			int LA496_0 = input.LA(1);
			if ( (LA496_0==ELEMENT) ) {
				alt496=1;
			}
			else if ( (LA496_0==ASTERISK) ) {
				alt496=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 496, 0, input);
				throw nvae;
			}

			switch (alt496) {
				case 1 :
					// PLSQLPrinter.g:2008:10: ^( ELEMENT ( SQL92_RESERVED_IN )? ( OUT_VK )? expression ( alias )? )
					{
					match(input,ELEMENT,FOLLOW_ELEMENT_in_using_element19554); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:2008:20: ( SQL92_RESERVED_IN )?
					int alt493=2;
					int LA493_0 = input.LA(1);
					if ( (LA493_0==SQL92_RESERVED_IN) ) {
						alt493=1;
					}
					switch (alt493) {
						case 1 :
							// PLSQLPrinter.g:2008:20: SQL92_RESERVED_IN
							{
							match(input,SQL92_RESERVED_IN,FOLLOW_SQL92_RESERVED_IN_in_using_element19556); 
							}
							break;

					}

					// PLSQLPrinter.g:2008:39: ( OUT_VK )?
					int alt494=2;
					int LA494_0 = input.LA(1);
					if ( (LA494_0==OUT_VK) ) {
						alt494=1;
					}
					switch (alt494) {
						case 1 :
							// PLSQLPrinter.g:2008:39: OUT_VK
							{
							match(input,OUT_VK,FOLLOW_OUT_VK_in_using_element19559); 
							}
							break;

					}

					pushFollow(FOLLOW_expression_in_using_element19562);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:2008:58: ( alias )?
					int alt495=2;
					int LA495_0 = input.LA(1);
					if ( (LA495_0==ALIAS) ) {
						alt495=1;
					}
					switch (alt495) {
						case 1 :
							// PLSQLPrinter.g:2008:58: alias
							{
							pushFollow(FOLLOW_alias_in_using_element19564);
							alias();
							state._fsp--;

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2009:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2010:10: ASTERISK
					{
					match(input,ASTERISK,FOLLOW_ASTERISK_in_using_element19591); 
					// TEMPLATE REWRITE
					// 2011:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "using_element"


	public static class collect_order_by_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "collect_order_by_part"
	// PLSQLPrinter.g:2014:1: collect_order_by_part : ^( SQL92_RESERVED_ORDER expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.collect_order_by_part_return collect_order_by_part() throws RecognitionException {
		PLSQLPrinter.collect_order_by_part_return retval = new PLSQLPrinter.collect_order_by_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2015:5: ( ^( SQL92_RESERVED_ORDER expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2015:10: ^( SQL92_RESERVED_ORDER expression )
			{
			match(input,SQL92_RESERVED_ORDER,FOLLOW_SQL92_RESERVED_ORDER_in_collect_order_by_part19626); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_collect_order_by_part19628);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2016:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "collect_order_by_part"


	public static class within_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "within_clause"
	// PLSQLPrinter.g:2019:1: within_clause : ^( WITHIN_VK order_by_clause ) -> template( \"not implemented: \";
	public final PLSQLPrinter.within_clause_return within_clause() throws RecognitionException {
		PLSQLPrinter.within_clause_return retval = new PLSQLPrinter.within_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2020:5: ( ^( WITHIN_VK order_by_clause ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2020:10: ^( WITHIN_VK order_by_clause )
			{
			match(input,WITHIN_VK,FOLLOW_WITHIN_VK_in_within_clause19664); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_order_by_clause_in_within_clause19666);
			order_by_clause();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2021:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "within_clause"


	public static class cost_matrix_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "cost_matrix_clause"
	// PLSQLPrinter.g:2024:1: cost_matrix_clause : ^( COST_VK ( PLSQL_NON_RESERVED_MODEL ( AUTO_VK )? | ( cost_class_name )+ expression_list ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.cost_matrix_clause_return cost_matrix_clause() throws RecognitionException {
		PLSQLPrinter.cost_matrix_clause_return retval = new PLSQLPrinter.cost_matrix_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2025:5: ( ^( COST_VK ( PLSQL_NON_RESERVED_MODEL ( AUTO_VK )? | ( cost_class_name )+ expression_list ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2025:10: ^( COST_VK ( PLSQL_NON_RESERVED_MODEL ( AUTO_VK )? | ( cost_class_name )+ expression_list ) )
			{
			match(input,COST_VK,FOLLOW_COST_VK_in_cost_matrix_clause19702); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2026:13: ( PLSQL_NON_RESERVED_MODEL ( AUTO_VK )? | ( cost_class_name )+ expression_list )
			int alt499=2;
			int LA499_0 = input.LA(1);
			if ( (LA499_0==PLSQL_NON_RESERVED_MODEL) ) {
				alt499=1;
			}
			else if ( (LA499_0==COST_CLASS_NAME) ) {
				alt499=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 499, 0, input);
				throw nvae;
			}

			switch (alt499) {
				case 1 :
					// PLSQLPrinter.g:2026:18: PLSQL_NON_RESERVED_MODEL ( AUTO_VK )?
					{
					match(input,PLSQL_NON_RESERVED_MODEL,FOLLOW_PLSQL_NON_RESERVED_MODEL_in_cost_matrix_clause19721); 
					// PLSQLPrinter.g:2026:43: ( AUTO_VK )?
					int alt497=2;
					int LA497_0 = input.LA(1);
					if ( (LA497_0==AUTO_VK) ) {
						alt497=1;
					}
					switch (alt497) {
						case 1 :
							// PLSQLPrinter.g:2026:43: AUTO_VK
							{
							match(input,AUTO_VK,FOLLOW_AUTO_VK_in_cost_matrix_clause19723); 
							}
							break;

					}

					}
					break;
				case 2 :
					// PLSQLPrinter.g:2027:18: ( cost_class_name )+ expression_list
					{
					// PLSQLPrinter.g:2027:18: ( cost_class_name )+
					int cnt498=0;
					loop498:
					while (true) {
						int alt498=2;
						int LA498_0 = input.LA(1);
						if ( (LA498_0==COST_CLASS_NAME) ) {
							alt498=1;
						}

						switch (alt498) {
						case 1 :
							// PLSQLPrinter.g:2027:18: cost_class_name
							{
							pushFollow(FOLLOW_cost_class_name_in_cost_matrix_clause19743);
							cost_class_name();
							state._fsp--;

							}
							break;

						default :
							if ( cnt498 >= 1 ) break loop498;
							EarlyExitException eee = new EarlyExitException(498, input);
							throw eee;
						}
						cnt498++;
					}

					pushFollow(FOLLOW_expression_list_in_cost_matrix_clause19746);
					expression_list();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2030:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cost_matrix_clause"


	public static class xml_passing_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_passing_clause"
	// PLSQLPrinter.g:2033:1: xml_passing_clause : ^( PASSING_VK ( VALUE_VK )? expression ( alias )? ( expression ( alias )? )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.xml_passing_clause_return xml_passing_clause() throws RecognitionException {
		PLSQLPrinter.xml_passing_clause_return retval = new PLSQLPrinter.xml_passing_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2034:5: ( ^( PASSING_VK ( VALUE_VK )? expression ( alias )? ( expression ( alias )? )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2034:10: ^( PASSING_VK ( VALUE_VK )? expression ( alias )? ( expression ( alias )? )? )
			{
			match(input,PASSING_VK,FOLLOW_PASSING_VK_in_xml_passing_clause19805); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2034:23: ( VALUE_VK )?
			int alt500=2;
			int LA500_0 = input.LA(1);
			if ( (LA500_0==VALUE_VK) ) {
				alt500=1;
			}
			switch (alt500) {
				case 1 :
					// PLSQLPrinter.g:2034:23: VALUE_VK
					{
					match(input,VALUE_VK,FOLLOW_VALUE_VK_in_xml_passing_clause19807); 
					}
					break;

			}

			pushFollow(FOLLOW_expression_in_xml_passing_clause19810);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:2034:44: ( alias )?
			int alt501=2;
			int LA501_0 = input.LA(1);
			if ( (LA501_0==ALIAS) ) {
				alt501=1;
			}
			switch (alt501) {
				case 1 :
					// PLSQLPrinter.g:2034:44: alias
					{
					pushFollow(FOLLOW_alias_in_xml_passing_clause19812);
					alias();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2034:51: ( expression ( alias )? )?
			int alt503=2;
			int LA503_0 = input.LA(1);
			if ( (LA503_0==EXPR||LA503_0==LOGIC_EXPR) ) {
				alt503=1;
			}
			switch (alt503) {
				case 1 :
					// PLSQLPrinter.g:2034:52: expression ( alias )?
					{
					pushFollow(FOLLOW_expression_in_xml_passing_clause19816);
					expression();
					state._fsp--;

					// PLSQLPrinter.g:2034:63: ( alias )?
					int alt502=2;
					int LA502_0 = input.LA(1);
					if ( (LA502_0==ALIAS) ) {
						alt502=1;
					}
					switch (alt502) {
						case 1 :
							// PLSQLPrinter.g:2034:63: alias
							{
							pushFollow(FOLLOW_alias_in_xml_passing_clause19818);
							alias();
							state._fsp--;

							}
							break;

					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2035:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_passing_clause"


	public static class xml_attributes_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_attributes_clause"
	// PLSQLPrinter.g:2038:1: xml_attributes_clause : ^( XMLATTRIBUTES_VK ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )? ( SCHEMACHECK_VK | NOSCHEMACHECK_VK )? ( xml_multiuse_expression_element )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.xml_attributes_clause_return xml_attributes_clause() throws RecognitionException {
		PLSQLPrinter.xml_attributes_clause_return retval = new PLSQLPrinter.xml_attributes_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2039:5: ( ^( XMLATTRIBUTES_VK ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )? ( SCHEMACHECK_VK | NOSCHEMACHECK_VK )? ( xml_multiuse_expression_element )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2039:10: ^( XMLATTRIBUTES_VK ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )? ( SCHEMACHECK_VK | NOSCHEMACHECK_VK )? ( xml_multiuse_expression_element )+ )
			{
			match(input,XMLATTRIBUTES_VK,FOLLOW_XMLATTRIBUTES_VK_in_xml_attributes_clause19857); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2040:13: ( ENTITYESCAPING_VK | NOENTITYESCAPING_VK )?
			int alt504=3;
			int LA504_0 = input.LA(1);
			if ( (LA504_0==ENTITYESCAPING_VK) ) {
				alt504=1;
			}
			else if ( (LA504_0==NOENTITYESCAPING_VK) ) {
				alt504=2;
			}
			switch (alt504) {
				case 1 :
					// PLSQLPrinter.g:2040:14: ENTITYESCAPING_VK
					{
					match(input,ENTITYESCAPING_VK,FOLLOW_ENTITYESCAPING_VK_in_xml_attributes_clause19872); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2040:32: NOENTITYESCAPING_VK
					{
					match(input,NOENTITYESCAPING_VK,FOLLOW_NOENTITYESCAPING_VK_in_xml_attributes_clause19874); 
					}
					break;

			}

			// PLSQLPrinter.g:2041:13: ( SCHEMACHECK_VK | NOSCHEMACHECK_VK )?
			int alt505=3;
			int LA505_0 = input.LA(1);
			if ( (LA505_0==SCHEMACHECK_VK) ) {
				alt505=1;
			}
			else if ( (LA505_0==NOSCHEMACHECK_VK) ) {
				alt505=2;
			}
			switch (alt505) {
				case 1 :
					// PLSQLPrinter.g:2041:14: SCHEMACHECK_VK
					{
					match(input,SCHEMACHECK_VK,FOLLOW_SCHEMACHECK_VK_in_xml_attributes_clause19891); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2041:29: NOSCHEMACHECK_VK
					{
					match(input,NOSCHEMACHECK_VK,FOLLOW_NOSCHEMACHECK_VK_in_xml_attributes_clause19893); 
					}
					break;

			}

			// PLSQLPrinter.g:2042:13: ( xml_multiuse_expression_element )+
			int cnt506=0;
			loop506:
			while (true) {
				int alt506=2;
				int LA506_0 = input.LA(1);
				if ( (LA506_0==XML_ELEMENT) ) {
					alt506=1;
				}

				switch (alt506) {
				case 1 :
					// PLSQLPrinter.g:2042:13: xml_multiuse_expression_element
					{
					pushFollow(FOLLOW_xml_multiuse_expression_element_in_xml_attributes_clause19909);
					xml_multiuse_expression_element();
					state._fsp--;

					}
					break;

				default :
					if ( cnt506 >= 1 ) break loop506;
					EarlyExitException eee = new EarlyExitException(506, input);
					throw eee;
				}
				cnt506++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2044:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_attributes_clause"


	public static class xml_namespaces_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_namespaces_clause"
	// PLSQLPrinter.g:2047:1: xml_namespaces_clause : ^( XMLNAMESPACES_VK ( expression ( alias )? )* ( xml_general_default_part )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.xml_namespaces_clause_return xml_namespaces_clause() throws RecognitionException {
		PLSQLPrinter.xml_namespaces_clause_return retval = new PLSQLPrinter.xml_namespaces_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2048:5: ( ^( XMLNAMESPACES_VK ( expression ( alias )? )* ( xml_general_default_part )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2048:10: ^( XMLNAMESPACES_VK ( expression ( alias )? )* ( xml_general_default_part )? )
			{
			match(input,XMLNAMESPACES_VK,FOLLOW_XMLNAMESPACES_VK_in_xml_namespaces_clause19955); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:2049:13: ( expression ( alias )? )*
				loop508:
				while (true) {
					int alt508=2;
					int LA508_0 = input.LA(1);
					if ( (LA508_0==EXPR||LA508_0==LOGIC_EXPR) ) {
						alt508=1;
					}

					switch (alt508) {
					case 1 :
						// PLSQLPrinter.g:2049:14: expression ( alias )?
						{
						pushFollow(FOLLOW_expression_in_xml_namespaces_clause19970);
						expression();
						state._fsp--;

						// PLSQLPrinter.g:2049:25: ( alias )?
						int alt507=2;
						int LA507_0 = input.LA(1);
						if ( (LA507_0==ALIAS) ) {
							alt507=1;
						}
						switch (alt507) {
							case 1 :
								// PLSQLPrinter.g:2049:25: alias
								{
								pushFollow(FOLLOW_alias_in_xml_namespaces_clause19972);
								alias();
								state._fsp--;

								}
								break;

						}

						}
						break;

					default :
						break loop508;
					}
				}

				// PLSQLPrinter.g:2049:34: ( xml_general_default_part )?
				int alt509=2;
				int LA509_0 = input.LA(1);
				if ( (LA509_0==SQL92_RESERVED_DEFAULT) ) {
					alt509=1;
				}
				switch (alt509) {
					case 1 :
						// PLSQLPrinter.g:2049:34: xml_general_default_part
						{
						pushFollow(FOLLOW_xml_general_default_part_in_xml_namespaces_clause19977);
						xml_general_default_part();
						state._fsp--;

						}
						break;

				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 2051:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_namespaces_clause"


	public static class xml_table_column_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_table_column"
	// PLSQLPrinter.g:2054:1: xml_table_column : ^( XML_COLUMN xml_column_name ( ORDINALITY_VK | type_spec ( expression )? ( xml_general_default_part )? ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.xml_table_column_return xml_table_column() throws RecognitionException {
		PLSQLPrinter.xml_table_column_return retval = new PLSQLPrinter.xml_table_column_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2055:5: ( ^( XML_COLUMN xml_column_name ( ORDINALITY_VK | type_spec ( expression )? ( xml_general_default_part )? ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2055:10: ^( XML_COLUMN xml_column_name ( ORDINALITY_VK | type_spec ( expression )? ( xml_general_default_part )? ) )
			{
			match(input,XML_COLUMN,FOLLOW_XML_COLUMN_in_xml_table_column20023); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_xml_column_name_in_xml_table_column20025);
			xml_column_name();
			state._fsp--;

			// PLSQLPrinter.g:2055:39: ( ORDINALITY_VK | type_spec ( expression )? ( xml_general_default_part )? )
			int alt512=2;
			int LA512_0 = input.LA(1);
			if ( (LA512_0==ORDINALITY_VK) ) {
				alt512=1;
			}
			else if ( (LA512_0==CUSTOM_TYPE||LA512_0==INTERVAL_DATATYPE||LA512_0==NATIVE_DATATYPE) ) {
				alt512=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 512, 0, input);
				throw nvae;
			}

			switch (alt512) {
				case 1 :
					// PLSQLPrinter.g:2055:40: ORDINALITY_VK
					{
					match(input,ORDINALITY_VK,FOLLOW_ORDINALITY_VK_in_xml_table_column20028); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2055:54: type_spec ( expression )? ( xml_general_default_part )?
					{
					pushFollow(FOLLOW_type_spec_in_xml_table_column20030);
					type_spec();
					state._fsp--;

					// PLSQLPrinter.g:2055:64: ( expression )?
					int alt510=2;
					int LA510_0 = input.LA(1);
					if ( (LA510_0==EXPR||LA510_0==LOGIC_EXPR) ) {
						alt510=1;
					}
					switch (alt510) {
						case 1 :
							// PLSQLPrinter.g:2055:64: expression
							{
							pushFollow(FOLLOW_expression_in_xml_table_column20032);
							expression();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:2055:76: ( xml_general_default_part )?
					int alt511=2;
					int LA511_0 = input.LA(1);
					if ( (LA511_0==SQL92_RESERVED_DEFAULT) ) {
						alt511=1;
					}
					switch (alt511) {
						case 1 :
							// PLSQLPrinter.g:2055:76: xml_general_default_part
							{
							pushFollow(FOLLOW_xml_general_default_part_in_xml_table_column20035);
							xml_general_default_part();
							state._fsp--;

							}
							break;

					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2056:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_table_column"


	public static class xml_general_default_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_general_default_part"
	// PLSQLPrinter.g:2059:1: xml_general_default_part : ^( SQL92_RESERVED_DEFAULT expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.xml_general_default_part_return xml_general_default_part() throws RecognitionException {
		PLSQLPrinter.xml_general_default_part_return retval = new PLSQLPrinter.xml_general_default_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2060:5: ( ^( SQL92_RESERVED_DEFAULT expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2060:10: ^( SQL92_RESERVED_DEFAULT expression )
			{
			match(input,SQL92_RESERVED_DEFAULT,FOLLOW_SQL92_RESERVED_DEFAULT_in_xml_general_default_part20074); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_xml_general_default_part20076);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2061:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_general_default_part"


	public static class xml_multiuse_expression_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_multiuse_expression_element"
	// PLSQLPrinter.g:2064:1: xml_multiuse_expression_element : ^( XML_ELEMENT expression ( xml_alias )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.xml_multiuse_expression_element_return xml_multiuse_expression_element() throws RecognitionException {
		PLSQLPrinter.xml_multiuse_expression_element_return retval = new PLSQLPrinter.xml_multiuse_expression_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2065:5: ( ^( XML_ELEMENT expression ( xml_alias )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2065:10: ^( XML_ELEMENT expression ( xml_alias )? )
			{
			match(input,XML_ELEMENT,FOLLOW_XML_ELEMENT_in_xml_multiuse_expression_element20112); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_xml_multiuse_expression_element20114);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:2065:35: ( xml_alias )?
			int alt513=2;
			int LA513_0 = input.LA(1);
			if ( (LA513_0==XML_ALIAS) ) {
				alt513=1;
			}
			switch (alt513) {
				case 1 :
					// PLSQLPrinter.g:2065:35: xml_alias
					{
					pushFollow(FOLLOW_xml_alias_in_xml_multiuse_expression_element20116);
					xml_alias();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2066:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_multiuse_expression_element"


	public static class xml_alias_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_alias"
	// PLSQLPrinter.g:2069:1: xml_alias : ( ^( XML_ALIAS ID ) -> template( \"not implemented: \"| ^( XML_ALIAS ^( EVALNAME_VK expression ) ) -> template( \"not implemented: \");
	public final PLSQLPrinter.xml_alias_return xml_alias() throws RecognitionException {
		PLSQLPrinter.xml_alias_return retval = new PLSQLPrinter.xml_alias_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2070:5: ( ^( XML_ALIAS ID ) -> template( \"not implemented: \"| ^( XML_ALIAS ^( EVALNAME_VK expression ) ) -> template( \"not implemented: \")
			int alt514=2;
			int LA514_0 = input.LA(1);
			if ( (LA514_0==XML_ALIAS) ) {
				int LA514_1 = input.LA(2);
				if ( (LA514_1==DOWN) ) {
					int LA514_2 = input.LA(3);
					if ( (LA514_2==ID) ) {
						alt514=1;
					}
					else if ( (LA514_2==EVALNAME_VK) ) {
						alt514=2;
					}

					else {
						int nvaeMark = input.mark();
						try {
							for (int nvaeConsume = 0; nvaeConsume < 3 - 1; nvaeConsume++) {
								input.consume();
							}
							NoViableAltException nvae =
								new NoViableAltException("", 514, 2, input);
							throw nvae;
						} finally {
							input.rewind(nvaeMark);
						}
					}

				}

				else {
					int nvaeMark = input.mark();
					try {
						input.consume();
						NoViableAltException nvae =
							new NoViableAltException("", 514, 1, input);
						throw nvae;
					} finally {
						input.rewind(nvaeMark);
					}
				}

			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 514, 0, input);
				throw nvae;
			}

			switch (alt514) {
				case 1 :
					// PLSQLPrinter.g:2070:10: ^( XML_ALIAS ID )
					{
					match(input,XML_ALIAS,FOLLOW_XML_ALIAS_in_xml_alias20153); 
					match(input, Token.DOWN, null); 
					match(input,ID,FOLLOW_ID_in_xml_alias20155); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2071:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2072:10: ^( XML_ALIAS ^( EVALNAME_VK expression ) )
					{
					match(input,XML_ALIAS,FOLLOW_XML_ALIAS_in_xml_alias20182); 
					match(input, Token.DOWN, null); 
					match(input,EVALNAME_VK,FOLLOW_EVALNAME_VK_in_xml_alias20185); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_expression_in_xml_alias20187);
					expression();
					state._fsp--;

					match(input, Token.UP, null); 

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2073:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_alias"


	public static class xml_param_version_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_param_version_part"
	// PLSQLPrinter.g:2076:1: xml_param_version_part : ^( VERSION_VK ( NO_VK VALUE_VK | expression ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.xml_param_version_part_return xml_param_version_part() throws RecognitionException {
		PLSQLPrinter.xml_param_version_part_return retval = new PLSQLPrinter.xml_param_version_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2077:5: ( ^( VERSION_VK ( NO_VK VALUE_VK | expression ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2077:10: ^( VERSION_VK ( NO_VK VALUE_VK | expression ) )
			{
			match(input,VERSION_VK,FOLLOW_VERSION_VK_in_xml_param_version_part20224); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2077:23: ( NO_VK VALUE_VK | expression )
			int alt515=2;
			int LA515_0 = input.LA(1);
			if ( (LA515_0==NO_VK) ) {
				alt515=1;
			}
			else if ( (LA515_0==EXPR||LA515_0==LOGIC_EXPR) ) {
				alt515=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 515, 0, input);
				throw nvae;
			}

			switch (alt515) {
				case 1 :
					// PLSQLPrinter.g:2077:24: NO_VK VALUE_VK
					{
					match(input,NO_VK,FOLLOW_NO_VK_in_xml_param_version_part20227); 
					match(input,VALUE_VK,FOLLOW_VALUE_VK_in_xml_param_version_part20229); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2077:39: expression
					{
					pushFollow(FOLLOW_expression_in_xml_param_version_part20231);
					expression();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2078:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_param_version_part"


	public static class xmlroot_param_standalone_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xmlroot_param_standalone_part"
	// PLSQLPrinter.g:2081:1: xmlroot_param_standalone_part : ^( STANDALONE_VK ( YES_VK | NO_VK ( VALUE_VK )? ) ) -> template( \"not implemented: \";
	public final PLSQLPrinter.xmlroot_param_standalone_part_return xmlroot_param_standalone_part() throws RecognitionException {
		PLSQLPrinter.xmlroot_param_standalone_part_return retval = new PLSQLPrinter.xmlroot_param_standalone_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2082:5: ( ^( STANDALONE_VK ( YES_VK | NO_VK ( VALUE_VK )? ) ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2082:10: ^( STANDALONE_VK ( YES_VK | NO_VK ( VALUE_VK )? ) )
			{
			match(input,STANDALONE_VK,FOLLOW_STANDALONE_VK_in_xmlroot_param_standalone_part20268); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2082:26: ( YES_VK | NO_VK ( VALUE_VK )? )
			int alt517=2;
			int LA517_0 = input.LA(1);
			if ( (LA517_0==YES_VK) ) {
				alt517=1;
			}
			else if ( (LA517_0==NO_VK) ) {
				alt517=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 517, 0, input);
				throw nvae;
			}

			switch (alt517) {
				case 1 :
					// PLSQLPrinter.g:2082:27: YES_VK
					{
					match(input,YES_VK,FOLLOW_YES_VK_in_xmlroot_param_standalone_part20271); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2082:34: NO_VK ( VALUE_VK )?
					{
					match(input,NO_VK,FOLLOW_NO_VK_in_xmlroot_param_standalone_part20273); 
					// PLSQLPrinter.g:2082:40: ( VALUE_VK )?
					int alt516=2;
					int LA516_0 = input.LA(1);
					if ( (LA516_0==VALUE_VK) ) {
						alt516=1;
					}
					switch (alt516) {
						case 1 :
							// PLSQLPrinter.g:2082:40: VALUE_VK
							{
							match(input,VALUE_VK,FOLLOW_VALUE_VK_in_xmlroot_param_standalone_part20275); 
							}
							break;

					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2083:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xmlroot_param_standalone_part"


	public static class xmlserialize_param_enconding_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xmlserialize_param_enconding_part"
	// PLSQLPrinter.g:2086:1: xmlserialize_param_enconding_part : ^( ENCODING_VK expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.xmlserialize_param_enconding_part_return xmlserialize_param_enconding_part() throws RecognitionException {
		PLSQLPrinter.xmlserialize_param_enconding_part_return retval = new PLSQLPrinter.xmlserialize_param_enconding_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2087:5: ( ^( ENCODING_VK expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2087:10: ^( ENCODING_VK expression )
			{
			match(input,ENCODING_VK,FOLLOW_ENCODING_VK_in_xmlserialize_param_enconding_part20313); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_xmlserialize_param_enconding_part20315);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2088:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xmlserialize_param_enconding_part"


	public static class xmlserialize_param_ident_part_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xmlserialize_param_ident_part"
	// PLSQLPrinter.g:2091:1: xmlserialize_param_ident_part : ( NO_VK INDENT_VK -> template( \"not implemented: \"| ^( INDENT_VK ( expression )? ) -> template( \"not implemented: \");
	public final PLSQLPrinter.xmlserialize_param_ident_part_return xmlserialize_param_ident_part() throws RecognitionException {
		PLSQLPrinter.xmlserialize_param_ident_part_return retval = new PLSQLPrinter.xmlserialize_param_ident_part_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2092:5: ( NO_VK INDENT_VK -> template( \"not implemented: \"| ^( INDENT_VK ( expression )? ) -> template( \"not implemented: \")
			int alt519=2;
			int LA519_0 = input.LA(1);
			if ( (LA519_0==NO_VK) ) {
				alt519=1;
			}
			else if ( (LA519_0==INDENT_VK) ) {
				alt519=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 519, 0, input);
				throw nvae;
			}

			switch (alt519) {
				case 1 :
					// PLSQLPrinter.g:2092:10: NO_VK INDENT_VK
					{
					match(input,NO_VK,FOLLOW_NO_VK_in_xmlserialize_param_ident_part20350); 
					match(input,INDENT_VK,FOLLOW_INDENT_VK_in_xmlserialize_param_ident_part20352); 
					// TEMPLATE REWRITE
					// 2093:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2094:10: ^( INDENT_VK ( expression )? )
					{
					match(input,INDENT_VK,FOLLOW_INDENT_VK_in_xmlserialize_param_ident_part20378); 
					if ( input.LA(1)==Token.DOWN ) {
						match(input, Token.DOWN, null); 
						// PLSQLPrinter.g:2094:22: ( expression )?
						int alt518=2;
						int LA518_0 = input.LA(1);
						if ( (LA518_0==EXPR||LA518_0==LOGIC_EXPR) ) {
							alt518=1;
						}
						switch (alt518) {
							case 1 :
								// PLSQLPrinter.g:2094:22: expression
								{
								pushFollow(FOLLOW_expression_in_xmlserialize_param_ident_part20380);
								expression();
								state._fsp--;

								}
								break;

						}

						match(input, Token.UP, null); 
					}

					// TEMPLATE REWRITE
					// 2095:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xmlserialize_param_ident_part"


	public static class partition_extension_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "partition_extension_clause"
	// PLSQLPrinter.g:2102:1: partition_extension_clause : ^( ( SUBPARTITION_VK | PARTITION_VK ) expression_list ) -> template( \"not implemented: \";
	public final PLSQLPrinter.partition_extension_clause_return partition_extension_clause() throws RecognitionException {
		PLSQLPrinter.partition_extension_clause_return retval = new PLSQLPrinter.partition_extension_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2103:5: ( ^( ( SUBPARTITION_VK | PARTITION_VK ) expression_list ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2103:10: ^( ( SUBPARTITION_VK | PARTITION_VK ) expression_list )
			{
			// PLSQLPrinter.g:2103:12: ( SUBPARTITION_VK | PARTITION_VK )
			int alt520=2;
			int LA520_0 = input.LA(1);
			if ( (LA520_0==SUBPARTITION_VK) ) {
				alt520=1;
			}
			else if ( (LA520_0==PARTITION_VK) ) {
				alt520=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 520, 0, input);
				throw nvae;
			}

			switch (alt520) {
				case 1 :
					// PLSQLPrinter.g:2103:13: SUBPARTITION_VK
					{
					match(input,SUBPARTITION_VK,FOLLOW_SUBPARTITION_VK_in_partition_extension_clause20422); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2103:29: PARTITION_VK
					{
					match(input,PARTITION_VK,FOLLOW_PARTITION_VK_in_partition_extension_clause20424); 
					}
					break;

			}

			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_list_in_partition_extension_clause20427);
			expression_list();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2104:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "partition_extension_clause"


	public static class alias_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "alias"
	// PLSQLPrinter.g:2107:1: alias : ^( ALIAS ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.alias_return alias() throws RecognitionException {
		PLSQLPrinter.alias_return retval = new PLSQLPrinter.alias_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2108:5: ( ^( ALIAS ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2108:10: ^( ALIAS ( char_set_name )? ID )
			{
			match(input,ALIAS,FOLLOW_ALIAS_in_alias20463); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2108:18: ( char_set_name )?
			int alt521=2;
			int LA521_0 = input.LA(1);
			if ( (LA521_0==CHAR_SET_NAME) ) {
				alt521=1;
			}
			switch (alt521) {
				case 1 :
					// PLSQLPrinter.g:2108:18: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_alias20465);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_alias20468); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2109:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "alias"


	public static class where_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "where_clause"
	// PLSQLPrinter.g:2112:1: where_clause : ^( SQL92_RESERVED_WHERE expression ) -> template( \"not implemented: \";
	public final PLSQLPrinter.where_clause_return where_clause() throws RecognitionException {
		PLSQLPrinter.where_clause_return retval = new PLSQLPrinter.where_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2113:5: ( ^( SQL92_RESERVED_WHERE expression ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2113:10: ^( SQL92_RESERVED_WHERE expression )
			{
			match(input,SQL92_RESERVED_WHERE,FOLLOW_SQL92_RESERVED_WHERE_in_where_clause20504); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_where_clause20506);
			expression();
			state._fsp--;

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2114:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "where_clause"


	public static class into_clause_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "into_clause"
	// PLSQLPrinter.g:2117:1: into_clause : ( ^( SQL92_RESERVED_INTO ( general_element )+ ) -> template( \"not implemented: \"| ^( BULK_VK ( general_element )+ ) -> template( \"not implemented: \");
	public final PLSQLPrinter.into_clause_return into_clause() throws RecognitionException {
		PLSQLPrinter.into_clause_return retval = new PLSQLPrinter.into_clause_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2118:5: ( ^( SQL92_RESERVED_INTO ( general_element )+ ) -> template( \"not implemented: \"| ^( BULK_VK ( general_element )+ ) -> template( \"not implemented: \")
			int alt524=2;
			int LA524_0 = input.LA(1);
			if ( (LA524_0==SQL92_RESERVED_INTO) ) {
				alt524=1;
			}
			else if ( (LA524_0==BULK_VK) ) {
				alt524=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 524, 0, input);
				throw nvae;
			}

			switch (alt524) {
				case 1 :
					// PLSQLPrinter.g:2118:10: ^( SQL92_RESERVED_INTO ( general_element )+ )
					{
					match(input,SQL92_RESERVED_INTO,FOLLOW_SQL92_RESERVED_INTO_in_into_clause20542); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:2118:32: ( general_element )+
					int cnt522=0;
					loop522:
					while (true) {
						int alt522=2;
						int LA522_0 = input.LA(1);
						if ( (LA522_0==ANY_ELEMENT||LA522_0==CASCATED_ELEMENT||LA522_0==HOSTED_VARIABLE||LA522_0==HOSTED_VARIABLE_ROUTINE_CALL||LA522_0==ROUTINE_CALL) ) {
							alt522=1;
						}

						switch (alt522) {
						case 1 :
							// PLSQLPrinter.g:2118:32: general_element
							{
							pushFollow(FOLLOW_general_element_in_into_clause20544);
							general_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt522 >= 1 ) break loop522;
							EarlyExitException eee = new EarlyExitException(522, input);
							throw eee;
						}
						cnt522++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2119:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2120:10: ^( BULK_VK ( general_element )+ )
					{
					match(input,BULK_VK,FOLLOW_BULK_VK_in_into_clause20573); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:2120:20: ( general_element )+
					int cnt523=0;
					loop523:
					while (true) {
						int alt523=2;
						int LA523_0 = input.LA(1);
						if ( (LA523_0==ANY_ELEMENT||LA523_0==CASCATED_ELEMENT||LA523_0==HOSTED_VARIABLE||LA523_0==HOSTED_VARIABLE_ROUTINE_CALL||LA523_0==ROUTINE_CALL) ) {
							alt523=1;
						}

						switch (alt523) {
						case 1 :
							// PLSQLPrinter.g:2120:20: general_element
							{
							pushFollow(FOLLOW_general_element_in_into_clause20575);
							general_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt523 >= 1 ) break loop523;
							EarlyExitException eee = new EarlyExitException(523, input);
							throw eee;
						}
						cnt523++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2121:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "into_clause"


	public static class xml_column_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "xml_column_name"
	// PLSQLPrinter.g:2128:1: xml_column_name : ^( XML_COLUMN_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.xml_column_name_return xml_column_name() throws RecognitionException {
		PLSQLPrinter.xml_column_name_return retval = new PLSQLPrinter.xml_column_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2129:5: ( ^( XML_COLUMN_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2129:10: ^( XML_COLUMN_NAME ( char_set_name )? ID )
			{
			match(input,XML_COLUMN_NAME,FOLLOW_XML_COLUMN_NAME_in_xml_column_name20617); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2129:28: ( char_set_name )?
			int alt525=2;
			int LA525_0 = input.LA(1);
			if ( (LA525_0==CHAR_SET_NAME) ) {
				alt525=1;
			}
			switch (alt525) {
				case 1 :
					// PLSQLPrinter.g:2129:28: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_xml_column_name20619);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_xml_column_name20622); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2130:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "xml_column_name"


	public static class cost_class_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "cost_class_name"
	// PLSQLPrinter.g:2133:1: cost_class_name : ^( COST_CLASS_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.cost_class_name_return cost_class_name() throws RecognitionException {
		PLSQLPrinter.cost_class_name_return retval = new PLSQLPrinter.cost_class_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2134:5: ( ^( COST_CLASS_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2134:10: ^( COST_CLASS_NAME ( char_set_name )? ID )
			{
			match(input,COST_CLASS_NAME,FOLLOW_COST_CLASS_NAME_in_cost_class_name20658); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2134:28: ( char_set_name )?
			int alt526=2;
			int LA526_0 = input.LA(1);
			if ( (LA526_0==CHAR_SET_NAME) ) {
				alt526=1;
			}
			switch (alt526) {
				case 1 :
					// PLSQLPrinter.g:2134:28: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_cost_class_name20660);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_cost_class_name20663); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2135:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cost_class_name"


	public static class attribute_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "attribute_name"
	// PLSQLPrinter.g:2138:1: attribute_name : ^( ATTRIBUTE_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.attribute_name_return attribute_name() throws RecognitionException {
		PLSQLPrinter.attribute_name_return retval = new PLSQLPrinter.attribute_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2139:5: ( ^( ATTRIBUTE_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2139:10: ^( ATTRIBUTE_NAME ( char_set_name )? ID )
			{
			match(input,ATTRIBUTE_NAME,FOLLOW_ATTRIBUTE_NAME_in_attribute_name20699); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2139:27: ( char_set_name )?
			int alt527=2;
			int LA527_0 = input.LA(1);
			if ( (LA527_0==CHAR_SET_NAME) ) {
				alt527=1;
			}
			switch (alt527) {
				case 1 :
					// PLSQLPrinter.g:2139:27: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_attribute_name20701);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_attribute_name20704); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2140:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "attribute_name"


	public static class savepoint_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "savepoint_name"
	// PLSQLPrinter.g:2143:1: savepoint_name : ^( SAVEPOINT_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.savepoint_name_return savepoint_name() throws RecognitionException {
		PLSQLPrinter.savepoint_name_return retval = new PLSQLPrinter.savepoint_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2144:5: ( ^( SAVEPOINT_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2144:10: ^( SAVEPOINT_NAME ( char_set_name )? ID )
			{
			match(input,SAVEPOINT_NAME,FOLLOW_SAVEPOINT_NAME_in_savepoint_name20740); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2144:27: ( char_set_name )?
			int alt528=2;
			int LA528_0 = input.LA(1);
			if ( (LA528_0==CHAR_SET_NAME) ) {
				alt528=1;
			}
			switch (alt528) {
				case 1 :
					// PLSQLPrinter.g:2144:27: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_savepoint_name20742);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_savepoint_name20745); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2145:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "savepoint_name"


	public static class rollback_segment_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "rollback_segment_name"
	// PLSQLPrinter.g:2148:1: rollback_segment_name : ^( ROLLBACK_SEGMENT_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.rollback_segment_name_return rollback_segment_name() throws RecognitionException {
		PLSQLPrinter.rollback_segment_name_return retval = new PLSQLPrinter.rollback_segment_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2149:5: ( ^( ROLLBACK_SEGMENT_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2149:10: ^( ROLLBACK_SEGMENT_NAME ( char_set_name )? ID )
			{
			match(input,ROLLBACK_SEGMENT_NAME,FOLLOW_ROLLBACK_SEGMENT_NAME_in_rollback_segment_name20781); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2149:34: ( char_set_name )?
			int alt529=2;
			int LA529_0 = input.LA(1);
			if ( (LA529_0==CHAR_SET_NAME) ) {
				alt529=1;
			}
			switch (alt529) {
				case 1 :
					// PLSQLPrinter.g:2149:34: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_rollback_segment_name20783);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_rollback_segment_name20786); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2150:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "rollback_segment_name"


	public static class table_var_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "table_var_name"
	// PLSQLPrinter.g:2154:1: table_var_name : ^( TABLE_VAR_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.table_var_name_return table_var_name() throws RecognitionException {
		PLSQLPrinter.table_var_name_return retval = new PLSQLPrinter.table_var_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2155:5: ( ^( TABLE_VAR_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2155:10: ^( TABLE_VAR_NAME ( char_set_name )? ID )
			{
			match(input,TABLE_VAR_NAME,FOLLOW_TABLE_VAR_NAME_in_table_var_name20823); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2155:27: ( char_set_name )?
			int alt530=2;
			int LA530_0 = input.LA(1);
			if ( (LA530_0==CHAR_SET_NAME) ) {
				alt530=1;
			}
			switch (alt530) {
				case 1 :
					// PLSQLPrinter.g:2155:27: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_table_var_name20825);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_table_var_name20828); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2156:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "table_var_name"


	public static class schema_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "schema_name"
	// PLSQLPrinter.g:2159:1: schema_name : ^( SCHEMA_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.schema_name_return schema_name() throws RecognitionException {
		PLSQLPrinter.schema_name_return retval = new PLSQLPrinter.schema_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2160:5: ( ^( SCHEMA_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2160:10: ^( SCHEMA_NAME ( char_set_name )? ID )
			{
			match(input,SCHEMA_NAME,FOLLOW_SCHEMA_NAME_in_schema_name20864); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2160:24: ( char_set_name )?
			int alt531=2;
			int LA531_0 = input.LA(1);
			if ( (LA531_0==CHAR_SET_NAME) ) {
				alt531=1;
			}
			switch (alt531) {
				case 1 :
					// PLSQLPrinter.g:2160:24: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_schema_name20866);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_schema_name20869); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2161:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "schema_name"


	public static class routine_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "routine_name"
	// PLSQLPrinter.g:2164:1: routine_name : ^( ROUTINE_NAME ( char_set_name )? ( ID )+ ( link_name )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.routine_name_return routine_name() throws RecognitionException {
		PLSQLPrinter.routine_name_return retval = new PLSQLPrinter.routine_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2165:5: ( ^( ROUTINE_NAME ( char_set_name )? ( ID )+ ( link_name )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2165:10: ^( ROUTINE_NAME ( char_set_name )? ( ID )+ ( link_name )? )
			{
			match(input,ROUTINE_NAME,FOLLOW_ROUTINE_NAME_in_routine_name20905); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2165:25: ( char_set_name )?
			int alt532=2;
			int LA532_0 = input.LA(1);
			if ( (LA532_0==CHAR_SET_NAME) ) {
				alt532=1;
			}
			switch (alt532) {
				case 1 :
					// PLSQLPrinter.g:2165:25: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_routine_name20907);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2165:40: ( ID )+
			int cnt533=0;
			loop533:
			while (true) {
				int alt533=2;
				int LA533_0 = input.LA(1);
				if ( (LA533_0==ID) ) {
					alt533=1;
				}

				switch (alt533) {
				case 1 :
					// PLSQLPrinter.g:2165:40: ID
					{
					match(input,ID,FOLLOW_ID_in_routine_name20910); 
					}
					break;

				default :
					if ( cnt533 >= 1 ) break loop533;
					EarlyExitException eee = new EarlyExitException(533, input);
					throw eee;
				}
				cnt533++;
			}

			// PLSQLPrinter.g:2165:44: ( link_name )?
			int alt534=2;
			int LA534_0 = input.LA(1);
			if ( (LA534_0==LINK_NAME) ) {
				alt534=1;
			}
			switch (alt534) {
				case 1 :
					// PLSQLPrinter.g:2165:44: link_name
					{
					pushFollow(FOLLOW_link_name_in_routine_name20913);
					link_name();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2166:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "routine_name"


	public static class package_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "package_name"
	// PLSQLPrinter.g:2169:1: package_name : ^( PACKAGE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.package_name_return package_name() throws RecognitionException {
		PLSQLPrinter.package_name_return retval = new PLSQLPrinter.package_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2170:5: ( ^( PACKAGE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2170:10: ^( PACKAGE_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,PACKAGE_NAME,FOLLOW_PACKAGE_NAME_in_package_name20950); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2170:25: ( char_set_name )?
			int alt535=2;
			int LA535_0 = input.LA(1);
			if ( (LA535_0==CHAR_SET_NAME) ) {
				alt535=1;
			}
			switch (alt535) {
				case 1 :
					// PLSQLPrinter.g:2170:25: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_package_name20952);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2170:40: ( ID )+
			int cnt536=0;
			loop536:
			while (true) {
				int alt536=2;
				int LA536_0 = input.LA(1);
				if ( (LA536_0==ID) ) {
					alt536=1;
				}

				switch (alt536) {
				case 1 :
					// PLSQLPrinter.g:2170:40: ID
					{
					match(input,ID,FOLLOW_ID_in_package_name20955); 
					}
					break;

				default :
					if ( cnt536 >= 1 ) break loop536;
					EarlyExitException eee = new EarlyExitException(536, input);
					throw eee;
				}
				cnt536++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2171:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "package_name"


	public static class implementation_type_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "implementation_type_name"
	// PLSQLPrinter.g:2174:1: implementation_type_name : ^( IMPLEMENTATION_TYPE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.implementation_type_name_return implementation_type_name() throws RecognitionException {
		PLSQLPrinter.implementation_type_name_return retval = new PLSQLPrinter.implementation_type_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2175:5: ( ^( IMPLEMENTATION_TYPE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2175:10: ^( IMPLEMENTATION_TYPE_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,IMPLEMENTATION_TYPE_NAME,FOLLOW_IMPLEMENTATION_TYPE_NAME_in_implementation_type_name20992); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2175:37: ( char_set_name )?
			int alt537=2;
			int LA537_0 = input.LA(1);
			if ( (LA537_0==CHAR_SET_NAME) ) {
				alt537=1;
			}
			switch (alt537) {
				case 1 :
					// PLSQLPrinter.g:2175:37: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_implementation_type_name20994);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2175:52: ( ID )+
			int cnt538=0;
			loop538:
			while (true) {
				int alt538=2;
				int LA538_0 = input.LA(1);
				if ( (LA538_0==ID) ) {
					alt538=1;
				}

				switch (alt538) {
				case 1 :
					// PLSQLPrinter.g:2175:52: ID
					{
					match(input,ID,FOLLOW_ID_in_implementation_type_name20997); 
					}
					break;

				default :
					if ( cnt538 >= 1 ) break loop538;
					EarlyExitException eee = new EarlyExitException(538, input);
					throw eee;
				}
				cnt538++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2176:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "implementation_type_name"


	public static class parameter_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "parameter_name"
	// PLSQLPrinter.g:2179:1: parameter_name : ^( PARAMETER_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.parameter_name_return parameter_name() throws RecognitionException {
		PLSQLPrinter.parameter_name_return retval = new PLSQLPrinter.parameter_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2180:5: ( ^( PARAMETER_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2180:10: ^( PARAMETER_NAME ( char_set_name )? ID )
			{
			match(input,PARAMETER_NAME,FOLLOW_PARAMETER_NAME_in_parameter_name21034); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2180:27: ( char_set_name )?
			int alt539=2;
			int LA539_0 = input.LA(1);
			if ( (LA539_0==CHAR_SET_NAME) ) {
				alt539=1;
			}
			switch (alt539) {
				case 1 :
					// PLSQLPrinter.g:2180:27: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_parameter_name21036);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_parameter_name21039); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2181:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "parameter_name"


	public static class reference_model_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "reference_model_name"
	// PLSQLPrinter.g:2184:1: reference_model_name : ^( REFERENCE_MODEL_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.reference_model_name_return reference_model_name() throws RecognitionException {
		PLSQLPrinter.reference_model_name_return retval = new PLSQLPrinter.reference_model_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2185:5: ( ^( REFERENCE_MODEL_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2185:10: ^( REFERENCE_MODEL_NAME ( char_set_name )? ID )
			{
			match(input,REFERENCE_MODEL_NAME,FOLLOW_REFERENCE_MODEL_NAME_in_reference_model_name21075); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2185:33: ( char_set_name )?
			int alt540=2;
			int LA540_0 = input.LA(1);
			if ( (LA540_0==CHAR_SET_NAME) ) {
				alt540=1;
			}
			switch (alt540) {
				case 1 :
					// PLSQLPrinter.g:2185:33: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_reference_model_name21077);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_reference_model_name21080); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2186:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "reference_model_name"


	public static class main_model_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "main_model_name"
	// PLSQLPrinter.g:2189:1: main_model_name : ^( MAIN_MODEL_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.main_model_name_return main_model_name() throws RecognitionException {
		PLSQLPrinter.main_model_name_return retval = new PLSQLPrinter.main_model_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2190:5: ( ^( MAIN_MODEL_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2190:10: ^( MAIN_MODEL_NAME ( char_set_name )? ID )
			{
			match(input,MAIN_MODEL_NAME,FOLLOW_MAIN_MODEL_NAME_in_main_model_name21116); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2190:28: ( char_set_name )?
			int alt541=2;
			int LA541_0 = input.LA(1);
			if ( (LA541_0==CHAR_SET_NAME) ) {
				alt541=1;
			}
			switch (alt541) {
				case 1 :
					// PLSQLPrinter.g:2190:28: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_main_model_name21118);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_main_model_name21121); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2191:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "main_model_name"


	public static class query_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "query_name"
	// PLSQLPrinter.g:2194:1: query_name : ^( QUERY_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.query_name_return query_name() throws RecognitionException {
		PLSQLPrinter.query_name_return retval = new PLSQLPrinter.query_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2195:5: ( ^( QUERY_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2195:10: ^( QUERY_NAME ( char_set_name )? ID )
			{
			match(input,QUERY_NAME,FOLLOW_QUERY_NAME_in_query_name21157); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2195:23: ( char_set_name )?
			int alt542=2;
			int LA542_0 = input.LA(1);
			if ( (LA542_0==CHAR_SET_NAME) ) {
				alt542=1;
			}
			switch (alt542) {
				case 1 :
					// PLSQLPrinter.g:2195:23: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_query_name21159);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_query_name21162); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2196:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "query_name"


	public static class constraint_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "constraint_name"
	// PLSQLPrinter.g:2199:1: constraint_name : ^( CONSTRAINT_NAME ( char_set_name )? ( ID )+ ( link_name )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.constraint_name_return constraint_name() throws RecognitionException {
		PLSQLPrinter.constraint_name_return retval = new PLSQLPrinter.constraint_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2200:5: ( ^( CONSTRAINT_NAME ( char_set_name )? ( ID )+ ( link_name )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2200:10: ^( CONSTRAINT_NAME ( char_set_name )? ( ID )+ ( link_name )? )
			{
			match(input,CONSTRAINT_NAME,FOLLOW_CONSTRAINT_NAME_in_constraint_name21198); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2200:28: ( char_set_name )?
			int alt543=2;
			int LA543_0 = input.LA(1);
			if ( (LA543_0==CHAR_SET_NAME) ) {
				alt543=1;
			}
			switch (alt543) {
				case 1 :
					// PLSQLPrinter.g:2200:28: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_constraint_name21200);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2200:43: ( ID )+
			int cnt544=0;
			loop544:
			while (true) {
				int alt544=2;
				int LA544_0 = input.LA(1);
				if ( (LA544_0==ID) ) {
					alt544=1;
				}

				switch (alt544) {
				case 1 :
					// PLSQLPrinter.g:2200:43: ID
					{
					match(input,ID,FOLLOW_ID_in_constraint_name21203); 
					}
					break;

				default :
					if ( cnt544 >= 1 ) break loop544;
					EarlyExitException eee = new EarlyExitException(544, input);
					throw eee;
				}
				cnt544++;
			}

			// PLSQLPrinter.g:2200:47: ( link_name )?
			int alt545=2;
			int LA545_0 = input.LA(1);
			if ( (LA545_0==LINK_NAME) ) {
				alt545=1;
			}
			switch (alt545) {
				case 1 :
					// PLSQLPrinter.g:2200:47: link_name
					{
					pushFollow(FOLLOW_link_name_in_constraint_name21206);
					link_name();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2201:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "constraint_name"


	public static class label_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "label_name"
	// PLSQLPrinter.g:2204:1: label_name : ^( LABEL_NAME ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.label_name_return label_name() throws RecognitionException {
		PLSQLPrinter.label_name_return retval = new PLSQLPrinter.label_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2205:5: ( ^( LABEL_NAME ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2205:10: ^( LABEL_NAME ID )
			{
			match(input,LABEL_NAME,FOLLOW_LABEL_NAME_in_label_name21243); 
			match(input, Token.DOWN, null); 
			match(input,ID,FOLLOW_ID_in_label_name21245); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2206:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "label_name"


	public static class type_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "type_name"
	// PLSQLPrinter.g:2209:1: type_name : ^( TYPE_NAME ( ID )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.type_name_return type_name() throws RecognitionException {
		PLSQLPrinter.type_name_return retval = new PLSQLPrinter.type_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2210:5: ( ^( TYPE_NAME ( ID )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2210:10: ^( TYPE_NAME ( ID )+ )
			{
			match(input,TYPE_NAME,FOLLOW_TYPE_NAME_in_type_name21281); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2210:22: ( ID )+
			int cnt546=0;
			loop546:
			while (true) {
				int alt546=2;
				int LA546_0 = input.LA(1);
				if ( (LA546_0==ID) ) {
					alt546=1;
				}

				switch (alt546) {
				case 1 :
					// PLSQLPrinter.g:2210:22: ID
					{
					match(input,ID,FOLLOW_ID_in_type_name21283); 
					}
					break;

				default :
					if ( cnt546 >= 1 ) break loop546;
					EarlyExitException eee = new EarlyExitException(546, input);
					throw eee;
				}
				cnt546++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2211:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "type_name"


	public static class sequence_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "sequence_name"
	// PLSQLPrinter.g:2214:1: sequence_name : ^( SEQUENCE_NAME ( ID )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.sequence_name_return sequence_name() throws RecognitionException {
		PLSQLPrinter.sequence_name_return retval = new PLSQLPrinter.sequence_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2215:5: ( ^( SEQUENCE_NAME ( ID )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2215:10: ^( SEQUENCE_NAME ( ID )+ )
			{
			match(input,SEQUENCE_NAME,FOLLOW_SEQUENCE_NAME_in_sequence_name21320); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2215:26: ( ID )+
			int cnt547=0;
			loop547:
			while (true) {
				int alt547=2;
				int LA547_0 = input.LA(1);
				if ( (LA547_0==ID) ) {
					alt547=1;
				}

				switch (alt547) {
				case 1 :
					// PLSQLPrinter.g:2215:26: ID
					{
					match(input,ID,FOLLOW_ID_in_sequence_name21322); 
					}
					break;

				default :
					if ( cnt547 >= 1 ) break loop547;
					EarlyExitException eee = new EarlyExitException(547, input);
					throw eee;
				}
				cnt547++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2216:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "sequence_name"


	public static class exception_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "exception_name"
	// PLSQLPrinter.g:2219:1: exception_name : ^( EXCEPTION_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.exception_name_return exception_name() throws RecognitionException {
		PLSQLPrinter.exception_name_return retval = new PLSQLPrinter.exception_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2220:5: ( ^( EXCEPTION_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2220:10: ^( EXCEPTION_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,EXCEPTION_NAME,FOLLOW_EXCEPTION_NAME_in_exception_name21359); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2220:27: ( char_set_name )?
			int alt548=2;
			int LA548_0 = input.LA(1);
			if ( (LA548_0==CHAR_SET_NAME) ) {
				alt548=1;
			}
			switch (alt548) {
				case 1 :
					// PLSQLPrinter.g:2220:27: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_exception_name21361);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2220:42: ( ID )+
			int cnt549=0;
			loop549:
			while (true) {
				int alt549=2;
				int LA549_0 = input.LA(1);
				if ( (LA549_0==ID) ) {
					alt549=1;
				}

				switch (alt549) {
				case 1 :
					// PLSQLPrinter.g:2220:42: ID
					{
					match(input,ID,FOLLOW_ID_in_exception_name21364); 
					}
					break;

				default :
					if ( cnt549 >= 1 ) break loop549;
					EarlyExitException eee = new EarlyExitException(549, input);
					throw eee;
				}
				cnt549++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2221:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "exception_name"


	public static class function_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "function_name"
	// PLSQLPrinter.g:2224:1: function_name : ^( FUNCTION_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.function_name_return function_name() throws RecognitionException {
		PLSQLPrinter.function_name_return retval = new PLSQLPrinter.function_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2225:5: ( ^( FUNCTION_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2225:10: ^( FUNCTION_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,FUNCTION_NAME,FOLLOW_FUNCTION_NAME_in_function_name21401); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2225:26: ( char_set_name )?
			int alt550=2;
			int LA550_0 = input.LA(1);
			if ( (LA550_0==CHAR_SET_NAME) ) {
				alt550=1;
			}
			switch (alt550) {
				case 1 :
					// PLSQLPrinter.g:2225:26: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_function_name21403);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2225:41: ( ID )+
			int cnt551=0;
			loop551:
			while (true) {
				int alt551=2;
				int LA551_0 = input.LA(1);
				if ( (LA551_0==ID) ) {
					alt551=1;
				}

				switch (alt551) {
				case 1 :
					// PLSQLPrinter.g:2225:41: ID
					{
					match(input,ID,FOLLOW_ID_in_function_name21406); 
					}
					break;

				default :
					if ( cnt551 >= 1 ) break loop551;
					EarlyExitException eee = new EarlyExitException(551, input);
					throw eee;
				}
				cnt551++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2226:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "function_name"


	public static class procedure_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "procedure_name"
	// PLSQLPrinter.g:2229:1: procedure_name : ^( PROCEDURE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.procedure_name_return procedure_name() throws RecognitionException {
		PLSQLPrinter.procedure_name_return retval = new PLSQLPrinter.procedure_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2230:5: ( ^( PROCEDURE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2230:10: ^( PROCEDURE_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,PROCEDURE_NAME,FOLLOW_PROCEDURE_NAME_in_procedure_name21443); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2230:27: ( char_set_name )?
			int alt552=2;
			int LA552_0 = input.LA(1);
			if ( (LA552_0==CHAR_SET_NAME) ) {
				alt552=1;
			}
			switch (alt552) {
				case 1 :
					// PLSQLPrinter.g:2230:27: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_procedure_name21445);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2230:42: ( ID )+
			int cnt553=0;
			loop553:
			while (true) {
				int alt553=2;
				int LA553_0 = input.LA(1);
				if ( (LA553_0==ID) ) {
					alt553=1;
				}

				switch (alt553) {
				case 1 :
					// PLSQLPrinter.g:2230:42: ID
					{
					match(input,ID,FOLLOW_ID_in_procedure_name21448); 
					}
					break;

				default :
					if ( cnt553 >= 1 ) break loop553;
					EarlyExitException eee = new EarlyExitException(553, input);
					throw eee;
				}
				cnt553++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2231:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "procedure_name"


	public static class trigger_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "trigger_name"
	// PLSQLPrinter.g:2234:1: trigger_name : ^( TRIGGER_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.trigger_name_return trigger_name() throws RecognitionException {
		PLSQLPrinter.trigger_name_return retval = new PLSQLPrinter.trigger_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2235:5: ( ^( TRIGGER_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2235:10: ^( TRIGGER_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,TRIGGER_NAME,FOLLOW_TRIGGER_NAME_in_trigger_name21485); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2235:25: ( char_set_name )?
			int alt554=2;
			int LA554_0 = input.LA(1);
			if ( (LA554_0==CHAR_SET_NAME) ) {
				alt554=1;
			}
			switch (alt554) {
				case 1 :
					// PLSQLPrinter.g:2235:25: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_trigger_name21487);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2235:40: ( ID )+
			int cnt555=0;
			loop555:
			while (true) {
				int alt555=2;
				int LA555_0 = input.LA(1);
				if ( (LA555_0==ID) ) {
					alt555=1;
				}

				switch (alt555) {
				case 1 :
					// PLSQLPrinter.g:2235:40: ID
					{
					match(input,ID,FOLLOW_ID_in_trigger_name21490); 
					}
					break;

				default :
					if ( cnt555 >= 1 ) break loop555;
					EarlyExitException eee = new EarlyExitException(555, input);
					throw eee;
				}
				cnt555++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2236:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "trigger_name"


	public static class variable_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "variable_name"
	// PLSQLPrinter.g:2239:1: variable_name : ( ^( HOSTED_VARIABLE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \"| ^( VARIABLE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \");
	public final PLSQLPrinter.variable_name_return variable_name() throws RecognitionException {
		PLSQLPrinter.variable_name_return retval = new PLSQLPrinter.variable_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2240:5: ( ^( HOSTED_VARIABLE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \"| ^( VARIABLE_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \")
			int alt560=2;
			int LA560_0 = input.LA(1);
			if ( (LA560_0==HOSTED_VARIABLE_NAME) ) {
				alt560=1;
			}
			else if ( (LA560_0==VARIABLE_NAME) ) {
				alt560=2;
			}

			else {
				NoViableAltException nvae =
					new NoViableAltException("", 560, 0, input);
				throw nvae;
			}

			switch (alt560) {
				case 1 :
					// PLSQLPrinter.g:2240:10: ^( HOSTED_VARIABLE_NAME ( char_set_name )? ( ID )+ )
					{
					match(input,HOSTED_VARIABLE_NAME,FOLLOW_HOSTED_VARIABLE_NAME_in_variable_name21527); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:2240:33: ( char_set_name )?
					int alt556=2;
					int LA556_0 = input.LA(1);
					if ( (LA556_0==CHAR_SET_NAME) ) {
						alt556=1;
					}
					switch (alt556) {
						case 1 :
							// PLSQLPrinter.g:2240:33: char_set_name
							{
							pushFollow(FOLLOW_char_set_name_in_variable_name21529);
							char_set_name();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:2240:48: ( ID )+
					int cnt557=0;
					loop557:
					while (true) {
						int alt557=2;
						int LA557_0 = input.LA(1);
						if ( (LA557_0==ID) ) {
							alt557=1;
						}

						switch (alt557) {
						case 1 :
							// PLSQLPrinter.g:2240:48: ID
							{
							match(input,ID,FOLLOW_ID_in_variable_name21532); 
							}
							break;

						default :
							if ( cnt557 >= 1 ) break loop557;
							EarlyExitException eee = new EarlyExitException(557, input);
							throw eee;
						}
						cnt557++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2241:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2242:10: ^( VARIABLE_NAME ( char_set_name )? ( ID )+ )
					{
					match(input,VARIABLE_NAME,FOLLOW_VARIABLE_NAME_in_variable_name21560); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:2242:26: ( char_set_name )?
					int alt558=2;
					int LA558_0 = input.LA(1);
					if ( (LA558_0==CHAR_SET_NAME) ) {
						alt558=1;
					}
					switch (alt558) {
						case 1 :
							// PLSQLPrinter.g:2242:26: char_set_name
							{
							pushFollow(FOLLOW_char_set_name_in_variable_name21562);
							char_set_name();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:2242:41: ( ID )+
					int cnt559=0;
					loop559:
					while (true) {
						int alt559=2;
						int LA559_0 = input.LA(1);
						if ( (LA559_0==ID) ) {
							alt559=1;
						}

						switch (alt559) {
						case 1 :
							// PLSQLPrinter.g:2242:41: ID
							{
							match(input,ID,FOLLOW_ID_in_variable_name21565); 
							}
							break;

						default :
							if ( cnt559 >= 1 ) break loop559;
							EarlyExitException eee = new EarlyExitException(559, input);
							throw eee;
						}
						cnt559++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2243:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "variable_name"


	public static class index_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "index_name"
	// PLSQLPrinter.g:2246:1: index_name : ^( INDEX_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.index_name_return index_name() throws RecognitionException {
		PLSQLPrinter.index_name_return retval = new PLSQLPrinter.index_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2247:5: ( ^( INDEX_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2247:10: ^( INDEX_NAME ( char_set_name )? ID )
			{
			match(input,INDEX_NAME,FOLLOW_INDEX_NAME_in_index_name21602); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2247:23: ( char_set_name )?
			int alt561=2;
			int LA561_0 = input.LA(1);
			if ( (LA561_0==CHAR_SET_NAME) ) {
				alt561=1;
			}
			switch (alt561) {
				case 1 :
					// PLSQLPrinter.g:2247:23: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_index_name21604);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_index_name21607); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2248:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "index_name"


	public static class cursor_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "cursor_name"
	// PLSQLPrinter.g:2251:1: cursor_name : ^( CURSOR_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.cursor_name_return cursor_name() throws RecognitionException {
		PLSQLPrinter.cursor_name_return retval = new PLSQLPrinter.cursor_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2252:5: ( ^( CURSOR_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2252:10: ^( CURSOR_NAME ( char_set_name )? ID )
			{
			match(input,CURSOR_NAME,FOLLOW_CURSOR_NAME_in_cursor_name21643); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2252:24: ( char_set_name )?
			int alt562=2;
			int LA562_0 = input.LA(1);
			if ( (LA562_0==CHAR_SET_NAME) ) {
				alt562=1;
			}
			switch (alt562) {
				case 1 :
					// PLSQLPrinter.g:2252:24: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_cursor_name21645);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_cursor_name21648); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2253:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "cursor_name"


	public static class record_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "record_name"
	// PLSQLPrinter.g:2256:1: record_name : ^( RECORD_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.record_name_return record_name() throws RecognitionException {
		PLSQLPrinter.record_name_return retval = new PLSQLPrinter.record_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2257:5: ( ^( RECORD_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2257:10: ^( RECORD_NAME ( char_set_name )? ID )
			{
			match(input,RECORD_NAME,FOLLOW_RECORD_NAME_in_record_name21684); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2257:24: ( char_set_name )?
			int alt563=2;
			int LA563_0 = input.LA(1);
			if ( (LA563_0==CHAR_SET_NAME) ) {
				alt563=1;
			}
			switch (alt563) {
				case 1 :
					// PLSQLPrinter.g:2257:24: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_record_name21686);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_record_name21689); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2258:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "record_name"


	public static class collection_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "collection_name"
	// PLSQLPrinter.g:2261:1: collection_name : ^( COLLECTION_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.collection_name_return collection_name() throws RecognitionException {
		PLSQLPrinter.collection_name_return retval = new PLSQLPrinter.collection_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2262:5: ( ^( COLLECTION_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2262:10: ^( COLLECTION_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,COLLECTION_NAME,FOLLOW_COLLECTION_NAME_in_collection_name21725); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2262:28: ( char_set_name )?
			int alt564=2;
			int LA564_0 = input.LA(1);
			if ( (LA564_0==CHAR_SET_NAME) ) {
				alt564=1;
			}
			switch (alt564) {
				case 1 :
					// PLSQLPrinter.g:2262:28: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_collection_name21727);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2262:43: ( ID )+
			int cnt565=0;
			loop565:
			while (true) {
				int alt565=2;
				int LA565_0 = input.LA(1);
				if ( (LA565_0==ID) ) {
					alt565=1;
				}

				switch (alt565) {
				case 1 :
					// PLSQLPrinter.g:2262:43: ID
					{
					match(input,ID,FOLLOW_ID_in_collection_name21730); 
					}
					break;

				default :
					if ( cnt565 >= 1 ) break loop565;
					EarlyExitException eee = new EarlyExitException(565, input);
					throw eee;
				}
				cnt565++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2263:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "collection_name"


	public static class link_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "link_name"
	// PLSQLPrinter.g:2266:1: link_name : ^( LINK_NAME ( char_set_name )? ID ) -> template( \"not implemented: \";
	public final PLSQLPrinter.link_name_return link_name() throws RecognitionException {
		PLSQLPrinter.link_name_return retval = new PLSQLPrinter.link_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2267:5: ( ^( LINK_NAME ( char_set_name )? ID ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2267:10: ^( LINK_NAME ( char_set_name )? ID )
			{
			match(input,LINK_NAME,FOLLOW_LINK_NAME_in_link_name21767); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2267:22: ( char_set_name )?
			int alt566=2;
			int LA566_0 = input.LA(1);
			if ( (LA566_0==CHAR_SET_NAME) ) {
				alt566=1;
			}
			switch (alt566) {
				case 1 :
					// PLSQLPrinter.g:2267:22: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_link_name21769);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_link_name21772); 
			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2268:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "link_name"


	public static class column_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "column_name"
	// PLSQLPrinter.g:2271:1: column_name : ^( COLUMN_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.column_name_return column_name() throws RecognitionException {
		PLSQLPrinter.column_name_return retval = new PLSQLPrinter.column_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2272:5: ( ^( COLUMN_NAME ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2272:10: ^( COLUMN_NAME ( char_set_name )? ( ID )+ )
			{
			match(input,COLUMN_NAME,FOLLOW_COLUMN_NAME_in_column_name21808); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2272:24: ( char_set_name )?
			int alt567=2;
			int LA567_0 = input.LA(1);
			if ( (LA567_0==CHAR_SET_NAME) ) {
				alt567=1;
			}
			switch (alt567) {
				case 1 :
					// PLSQLPrinter.g:2272:24: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_column_name21810);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2272:39: ( ID )+
			int cnt568=0;
			loop568:
			while (true) {
				int alt568=2;
				int LA568_0 = input.LA(1);
				if ( (LA568_0==ID) ) {
					alt568=1;
				}

				switch (alt568) {
				case 1 :
					// PLSQLPrinter.g:2272:39: ID
					{
					match(input,ID,FOLLOW_ID_in_column_name21813); 
					}
					break;

				default :
					if ( cnt568 >= 1 ) break loop568;
					EarlyExitException eee = new EarlyExitException(568, input);
					throw eee;
				}
				cnt568++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2273:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "column_name"


	public static class tableview_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "tableview_name"
	// PLSQLPrinter.g:2276:1: tableview_name : ^( TABLEVIEW_NAME ( char_set_name )? ( ID )+ ( link_name )? ( partition_extension_clause )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.tableview_name_return tableview_name() throws RecognitionException {
		PLSQLPrinter.tableview_name_return retval = new PLSQLPrinter.tableview_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2277:5: ( ^( TABLEVIEW_NAME ( char_set_name )? ( ID )+ ( link_name )? ( partition_extension_clause )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2277:10: ^( TABLEVIEW_NAME ( char_set_name )? ( ID )+ ( link_name )? ( partition_extension_clause )? )
			{
			match(input,TABLEVIEW_NAME,FOLLOW_TABLEVIEW_NAME_in_tableview_name21850); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2277:27: ( char_set_name )?
			int alt569=2;
			int LA569_0 = input.LA(1);
			if ( (LA569_0==CHAR_SET_NAME) ) {
				alt569=1;
			}
			switch (alt569) {
				case 1 :
					// PLSQLPrinter.g:2277:27: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_tableview_name21852);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2277:42: ( ID )+
			int cnt570=0;
			loop570:
			while (true) {
				int alt570=2;
				int LA570_0 = input.LA(1);
				if ( (LA570_0==ID) ) {
					alt570=1;
				}

				switch (alt570) {
				case 1 :
					// PLSQLPrinter.g:2277:42: ID
					{
					match(input,ID,FOLLOW_ID_in_tableview_name21855); 
					}
					break;

				default :
					if ( cnt570 >= 1 ) break loop570;
					EarlyExitException eee = new EarlyExitException(570, input);
					throw eee;
				}
				cnt570++;
			}

			// PLSQLPrinter.g:2277:46: ( link_name )?
			int alt571=2;
			int LA571_0 = input.LA(1);
			if ( (LA571_0==LINK_NAME) ) {
				alt571=1;
			}
			switch (alt571) {
				case 1 :
					// PLSQLPrinter.g:2277:46: link_name
					{
					pushFollow(FOLLOW_link_name_in_tableview_name21858);
					link_name();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2277:57: ( partition_extension_clause )?
			int alt572=2;
			int LA572_0 = input.LA(1);
			if ( (LA572_0==PARTITION_VK||LA572_0==SUBPARTITION_VK) ) {
				alt572=1;
			}
			switch (alt572) {
				case 1 :
					// PLSQLPrinter.g:2277:57: partition_extension_clause
					{
					pushFollow(FOLLOW_partition_extension_clause_in_tableview_name21861);
					partition_extension_clause();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2278:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "tableview_name"


	public static class char_set_name_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "char_set_name"
	// PLSQLPrinter.g:2281:1: char_set_name : ^( CHAR_SET_NAME ( ID )+ ) -> template( \"not implemented: \";
	public final PLSQLPrinter.char_set_name_return char_set_name() throws RecognitionException {
		PLSQLPrinter.char_set_name_return retval = new PLSQLPrinter.char_set_name_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2282:5: ( ^( CHAR_SET_NAME ( ID )+ ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2282:10: ^( CHAR_SET_NAME ( ID )+ )
			{
			match(input,CHAR_SET_NAME,FOLLOW_CHAR_SET_NAME_in_char_set_name21898); 
			match(input, Token.DOWN, null); 
			// PLSQLPrinter.g:2282:26: ( ID )+
			int cnt573=0;
			loop573:
			while (true) {
				int alt573=2;
				int LA573_0 = input.LA(1);
				if ( (LA573_0==ID) ) {
					alt573=1;
				}

				switch (alt573) {
				case 1 :
					// PLSQLPrinter.g:2282:26: ID
					{
					match(input,ID,FOLLOW_ID_in_char_set_name21900); 
					}
					break;

				default :
					if ( cnt573 >= 1 ) break loop573;
					EarlyExitException eee = new EarlyExitException(573, input);
					throw eee;
				}
				cnt573++;
			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2283:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "char_set_name"


	public static class function_argument_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "function_argument"
	// PLSQLPrinter.g:2290:1: function_argument : ^( ARGUMENTS ( argument )* ) -> template( \"not implemented: \";
	public final PLSQLPrinter.function_argument_return function_argument() throws RecognitionException {
		PLSQLPrinter.function_argument_return retval = new PLSQLPrinter.function_argument_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2291:5: ( ^( ARGUMENTS ( argument )* ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2291:10: ^( ARGUMENTS ( argument )* )
			{
			match(input,ARGUMENTS,FOLLOW_ARGUMENTS_in_function_argument21941); 
			if ( input.LA(1)==Token.DOWN ) {
				match(input, Token.DOWN, null); 
				// PLSQLPrinter.g:2291:22: ( argument )*
				loop574:
				while (true) {
					int alt574=2;
					int LA574_0 = input.LA(1);
					if ( (LA574_0==ARGUMENT) ) {
						alt574=1;
					}

					switch (alt574) {
					case 1 :
						// PLSQLPrinter.g:2291:22: argument
						{
						pushFollow(FOLLOW_argument_in_function_argument21943);
						argument();
						state._fsp--;

						}
						break;

					default :
						break loop574;
					}
				}

				match(input, Token.UP, null); 
			}

			// TEMPLATE REWRITE
			// 2292:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "function_argument"


	public static class argument_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "argument"
	// PLSQLPrinter.g:2295:1: argument : ^( ARGUMENT expression ( parameter_name )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.argument_return argument() throws RecognitionException {
		PLSQLPrinter.argument_return retval = new PLSQLPrinter.argument_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2296:5: ( ^( ARGUMENT expression ( parameter_name )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2296:10: ^( ARGUMENT expression ( parameter_name )? )
			{
			match(input,ARGUMENT,FOLLOW_ARGUMENT_in_argument21980); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_expression_in_argument21982);
			expression();
			state._fsp--;

			// PLSQLPrinter.g:2296:32: ( parameter_name )?
			int alt575=2;
			int LA575_0 = input.LA(1);
			if ( (LA575_0==PARAMETER_NAME) ) {
				alt575=1;
			}
			switch (alt575) {
				case 1 :
					// PLSQLPrinter.g:2296:32: parameter_name
					{
					pushFollow(FOLLOW_parameter_name_in_argument21984);
					parameter_name();
					state._fsp--;

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2297:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "argument"


	public static class type_spec_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "type_spec"
	// PLSQLPrinter.g:2300:1: type_spec : ( ^( CUSTOM_TYPE type_name ( REF_VK )? ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK )? ) -> template( \"not implemented: \"| ^( NATIVE_DATATYPE native_datatype_element ( type_precision )? ( TIME_VK ( LOCAL_VK )? )? ) -> template( \"not implemented: \"| ^( INTERVAL_DATATYPE ( YEAR_VK | DAY_VK ) ( MONTH_VK | SECOND_VK ) ( expression )* ) -> template( \"not implemented: \");
	public final PLSQLPrinter.type_spec_return type_spec() throws RecognitionException {
		PLSQLPrinter.type_spec_return retval = new PLSQLPrinter.type_spec_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2301:5: ( ^( CUSTOM_TYPE type_name ( REF_VK )? ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK )? ) -> template( \"not implemented: \"| ^( NATIVE_DATATYPE native_datatype_element ( type_precision )? ( TIME_VK ( LOCAL_VK )? )? ) -> template( \"not implemented: \"| ^( INTERVAL_DATATYPE ( YEAR_VK | DAY_VK ) ( MONTH_VK | SECOND_VK ) ( expression )* ) -> template( \"not implemented: \")
			int alt584=3;
			switch ( input.LA(1) ) {
			case CUSTOM_TYPE:
				{
				alt584=1;
				}
				break;
			case NATIVE_DATATYPE:
				{
				alt584=2;
				}
				break;
			case INTERVAL_DATATYPE:
				{
				alt584=3;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 584, 0, input);
				throw nvae;
			}
			switch (alt584) {
				case 1 :
					// PLSQLPrinter.g:2301:11: ^( CUSTOM_TYPE type_name ( REF_VK )? ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK )? )
					{
					match(input,CUSTOM_TYPE,FOLLOW_CUSTOM_TYPE_in_type_spec22022); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_type_name_in_type_spec22024);
					type_name();
					state._fsp--;

					// PLSQLPrinter.g:2301:35: ( REF_VK )?
					int alt576=2;
					int LA576_0 = input.LA(1);
					if ( (LA576_0==REF_VK) ) {
						alt576=1;
					}
					switch (alt576) {
						case 1 :
							// PLSQLPrinter.g:2301:35: REF_VK
							{
							match(input,REF_VK,FOLLOW_REF_VK_in_type_spec22026); 
							}
							break;

					}

					// PLSQLPrinter.g:2301:43: ( PERCENT_ROWTYPE_VK | PERCENT_TYPE_VK )?
					int alt577=3;
					int LA577_0 = input.LA(1);
					if ( (LA577_0==PERCENT_ROWTYPE_VK) ) {
						alt577=1;
					}
					else if ( (LA577_0==PERCENT_TYPE_VK) ) {
						alt577=2;
					}
					switch (alt577) {
						case 1 :
							// PLSQLPrinter.g:2301:44: PERCENT_ROWTYPE_VK
							{
							match(input,PERCENT_ROWTYPE_VK,FOLLOW_PERCENT_ROWTYPE_VK_in_type_spec22030); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:2301:63: PERCENT_TYPE_VK
							{
							match(input,PERCENT_TYPE_VK,FOLLOW_PERCENT_TYPE_VK_in_type_spec22032); 
							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2302:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2303:10: ^( NATIVE_DATATYPE native_datatype_element ( type_precision )? ( TIME_VK ( LOCAL_VK )? )? )
					{
					match(input,NATIVE_DATATYPE,FOLLOW_NATIVE_DATATYPE_in_type_spec22061); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_native_datatype_element_in_type_spec22063);
					native_datatype_element();
					state._fsp--;

					// PLSQLPrinter.g:2303:52: ( type_precision )?
					int alt578=2;
					int LA578_0 = input.LA(1);
					if ( (LA578_0==PRECISION) ) {
						alt578=1;
					}
					switch (alt578) {
						case 1 :
							// PLSQLPrinter.g:2303:52: type_precision
							{
							pushFollow(FOLLOW_type_precision_in_type_spec22065);
							type_precision();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:2303:68: ( TIME_VK ( LOCAL_VK )? )?
					int alt580=2;
					int LA580_0 = input.LA(1);
					if ( (LA580_0==TIME_VK) ) {
						alt580=1;
					}
					switch (alt580) {
						case 1 :
							// PLSQLPrinter.g:2303:69: TIME_VK ( LOCAL_VK )?
							{
							match(input,TIME_VK,FOLLOW_TIME_VK_in_type_spec22069); 
							// PLSQLPrinter.g:2303:77: ( LOCAL_VK )?
							int alt579=2;
							int LA579_0 = input.LA(1);
							if ( (LA579_0==LOCAL_VK) ) {
								alt579=1;
							}
							switch (alt579) {
								case 1 :
									// PLSQLPrinter.g:2303:77: LOCAL_VK
									{
									match(input,LOCAL_VK,FOLLOW_LOCAL_VK_in_type_spec22071); 
									}
									break;

							}

							}
							break;

					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2304:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:2305:10: ^( INTERVAL_DATATYPE ( YEAR_VK | DAY_VK ) ( MONTH_VK | SECOND_VK ) ( expression )* )
					{
					match(input,INTERVAL_DATATYPE,FOLLOW_INTERVAL_DATATYPE_in_type_spec22101); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:2305:30: ( YEAR_VK | DAY_VK )
					int alt581=2;
					int LA581_0 = input.LA(1);
					if ( (LA581_0==YEAR_VK) ) {
						alt581=1;
					}
					else if ( (LA581_0==DAY_VK) ) {
						alt581=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 581, 0, input);
						throw nvae;
					}

					switch (alt581) {
						case 1 :
							// PLSQLPrinter.g:2305:31: YEAR_VK
							{
							match(input,YEAR_VK,FOLLOW_YEAR_VK_in_type_spec22104); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:2305:39: DAY_VK
							{
							match(input,DAY_VK,FOLLOW_DAY_VK_in_type_spec22106); 
							}
							break;

					}

					// PLSQLPrinter.g:2305:47: ( MONTH_VK | SECOND_VK )
					int alt582=2;
					int LA582_0 = input.LA(1);
					if ( (LA582_0==MONTH_VK) ) {
						alt582=1;
					}
					else if ( (LA582_0==SECOND_VK) ) {
						alt582=2;
					}

					else {
						NoViableAltException nvae =
							new NoViableAltException("", 582, 0, input);
						throw nvae;
					}

					switch (alt582) {
						case 1 :
							// PLSQLPrinter.g:2305:48: MONTH_VK
							{
							match(input,MONTH_VK,FOLLOW_MONTH_VK_in_type_spec22110); 
							}
							break;
						case 2 :
							// PLSQLPrinter.g:2305:57: SECOND_VK
							{
							match(input,SECOND_VK,FOLLOW_SECOND_VK_in_type_spec22112); 
							}
							break;

					}

					// PLSQLPrinter.g:2305:68: ( expression )*
					loop583:
					while (true) {
						int alt583=2;
						int LA583_0 = input.LA(1);
						if ( (LA583_0==EXPR||LA583_0==LOGIC_EXPR) ) {
							alt583=1;
						}

						switch (alt583) {
						case 1 :
							// PLSQLPrinter.g:2305:68: expression
							{
							pushFollow(FOLLOW_expression_in_type_spec22115);
							expression();
							state._fsp--;

							}
							break;

						default :
							break loop583;
						}
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2306:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "type_spec"


	public static class type_precision_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "type_precision"
	// PLSQLPrinter.g:2309:1: type_precision : ^( PRECISION constant ( constant )? ( CHAR_VK | BYTE_VK )? ( TIME_VK ( LOCAL_VK )? )? ) -> template( \"not implemented: \";
	public final PLSQLPrinter.type_precision_return type_precision() throws RecognitionException {
		PLSQLPrinter.type_precision_return retval = new PLSQLPrinter.type_precision_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2310:5: ( ^( PRECISION constant ( constant )? ( CHAR_VK | BYTE_VK )? ( TIME_VK ( LOCAL_VK )? )? ) -> template( \"not implemented: \")
			// PLSQLPrinter.g:2310:10: ^( PRECISION constant ( constant )? ( CHAR_VK | BYTE_VK )? ( TIME_VK ( LOCAL_VK )? )? )
			{
			match(input,PRECISION,FOLLOW_PRECISION_in_type_precision22152); 
			match(input, Token.DOWN, null); 
			pushFollow(FOLLOW_constant_in_type_precision22154);
			constant();
			state._fsp--;

			// PLSQLPrinter.g:2310:31: ( constant )?
			int alt585=2;
			int LA585_0 = input.LA(1);
			if ( (LA585_0==APPROXIMATE_NUM_LIT||LA585_0==CHAR_STRING||LA585_0==EXACT_NUM_LIT||LA585_0==MINUS_SIGN||LA585_0==SQL92_RESERVED_DEFAULT||LA585_0==SQL92_RESERVED_FALSE||LA585_0==SQL92_RESERVED_NULL||LA585_0==SQL92_RESERVED_TRUE||LA585_0==UNSIGNED_INTEGER||LA585_0==DBTIMEZONE_VK||LA585_0==MAXVALUE_VK||LA585_0==MINVALUE_VK||LA585_0==SESSIONTIMEZONE_VK) ) {
				alt585=1;
			}
			switch (alt585) {
				case 1 :
					// PLSQLPrinter.g:2310:31: constant
					{
					pushFollow(FOLLOW_constant_in_type_precision22156);
					constant();
					state._fsp--;

					}
					break;

			}

			// PLSQLPrinter.g:2310:41: ( CHAR_VK | BYTE_VK )?
			int alt586=3;
			int LA586_0 = input.LA(1);
			if ( (LA586_0==CHAR_VK) ) {
				alt586=1;
			}
			else if ( (LA586_0==BYTE_VK) ) {
				alt586=2;
			}
			switch (alt586) {
				case 1 :
					// PLSQLPrinter.g:2310:42: CHAR_VK
					{
					match(input,CHAR_VK,FOLLOW_CHAR_VK_in_type_precision22160); 
					}
					break;
				case 2 :
					// PLSQLPrinter.g:2310:50: BYTE_VK
					{
					match(input,BYTE_VK,FOLLOW_BYTE_VK_in_type_precision22162); 
					}
					break;

			}

			// PLSQLPrinter.g:2310:60: ( TIME_VK ( LOCAL_VK )? )?
			int alt588=2;
			int LA588_0 = input.LA(1);
			if ( (LA588_0==TIME_VK) ) {
				alt588=1;
			}
			switch (alt588) {
				case 1 :
					// PLSQLPrinter.g:2310:61: TIME_VK ( LOCAL_VK )?
					{
					match(input,TIME_VK,FOLLOW_TIME_VK_in_type_precision22167); 
					// PLSQLPrinter.g:2310:69: ( LOCAL_VK )?
					int alt587=2;
					int LA587_0 = input.LA(1);
					if ( (LA587_0==LOCAL_VK) ) {
						alt587=1;
					}
					switch (alt587) {
						case 1 :
							// PLSQLPrinter.g:2310:69: LOCAL_VK
							{
							match(input,LOCAL_VK,FOLLOW_LOCAL_VK_in_type_precision22169); 
							}
							break;

					}

					}
					break;

			}

			match(input, Token.UP, null); 

			// TEMPLATE REWRITE
			// 2311:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "type_precision"


	public static class native_datatype_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "native_datatype_element"
	// PLSQLPrinter.g:2314:1: native_datatype_element : ( BINARY_INTEGER_VK -> template( \"not implemented: \"| PLS_INTEGER_VK -> template( \"not implemented: \"| NATURAL_VK -> template( \"not implemented: \"| BINARY_FLOAT_VK -> template( \"not implemented: \"| BINARY_DOUBLE_VK -> template( \"not implemented: \"| NATURALN_VK -> template( \"not implemented: \"| POSITIVE_VK -> template( \"not implemented: \"| POSITIVEN_VK -> template( \"not implemented: \"| SIGNTYPE_VK -> template( \"not implemented: \"| SIMPLE_INTEGER_VK -> template( \"not implemented: \"| NVARCHAR2_VK -> template( \"not implemented: \"| DEC_VK -> template( \"not implemented: \"| INTEGER_VK -> template( \"not implemented: \"| INT_VK -> template( \"not implemented: \"| NUMERIC_VK -> template( \"not implemented: \"| SMALLINT_VK -> template( \"not implemented: \"| NUMBER_VK -> template( \"not implemented: \"| DECIMAL_VK -> template( \"not implemented: \"| DOUBLE_VK ( PRECISION_VK )? -> template( \"not implemented: \"| FLOAT_VK -> template( \"not implemented: \"| REAL_VK -> template( \"not implemented: \"| NCHAR_VK -> template( \"not implemented: \"| LONG_VK ( RAW_VK )? -> template( \"not implemented: \"| CHAR_VK -> template( \"not implemented: \"| CHARACTER_VK -> template( \"not implemented: \"| VARCHAR2_VK -> template( \"not implemented: \"| VARCHAR_VK -> template( \"not implemented: \"| STRING_VK -> template( \"not implemented: \"| RAW_VK -> template( \"not implemented: \"| BOOLEAN_VK -> template( \"not implemented: \"| DATE_VK -> template( \"not implemented: \"| ROWID_VK -> template( \"not implemented: \"| UROWID_VK -> template( \"not implemented: \"| YEAR_VK -> template( \"not implemented: \"| MONTH_VK -> template( \"not implemented: \"| DAY_VK -> template( \"not implemented: \"| HOUR_VK -> template( \"not implemented: \"| MINUTE_VK -> template( \"not implemented: \"| SECOND_VK -> template( \"not implemented: \"| TIMEZONE_HOUR_VK -> template( \"not implemented: \"| TIMEZONE_MINUTE_VK -> template( \"not implemented: \"| TIMEZONE_REGION_VK -> template( \"not implemented: \"| TIMEZONE_ABBR_VK -> template( \"not implemented: \"| TIMESTAMP_VK -> template( \"not implemented: \"| TIMESTAMP_UNCONSTRAINED_VK -> template( \"not implemented: \"| TIMESTAMP_TZ_UNCONSTRAINED_VK -> template( \"not implemented: \"| TIMESTAMP_LTZ_UNCONSTRAINED_VK -> template( \"not implemented: \"| YMINTERVAL_UNCONSTRAINED_VK -> template( \"not implemented: \"| DSINTERVAL_UNCONSTRAINED_VK -> template( \"not implemented: \"| BFILE_VK -> template( \"not implemented: \"| BLOB_VK -> template( \"not implemented: \"| CLOB_VK -> template( \"not implemented: \"| NCLOB_VK -> template( \"not implemented: \"| MLSLABEL_VK -> template( \"not implemented: \");
	public final PLSQLPrinter.native_datatype_element_return native_datatype_element() throws RecognitionException {
		PLSQLPrinter.native_datatype_element_return retval = new PLSQLPrinter.native_datatype_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2315:5: ( BINARY_INTEGER_VK -> template( \"not implemented: \"| PLS_INTEGER_VK -> template( \"not implemented: \"| NATURAL_VK -> template( \"not implemented: \"| BINARY_FLOAT_VK -> template( \"not implemented: \"| BINARY_DOUBLE_VK -> template( \"not implemented: \"| NATURALN_VK -> template( \"not implemented: \"| POSITIVE_VK -> template( \"not implemented: \"| POSITIVEN_VK -> template( \"not implemented: \"| SIGNTYPE_VK -> template( \"not implemented: \"| SIMPLE_INTEGER_VK -> template( \"not implemented: \"| NVARCHAR2_VK -> template( \"not implemented: \"| DEC_VK -> template( \"not implemented: \"| INTEGER_VK -> template( \"not implemented: \"| INT_VK -> template( \"not implemented: \"| NUMERIC_VK -> template( \"not implemented: \"| SMALLINT_VK -> template( \"not implemented: \"| NUMBER_VK -> template( \"not implemented: \"| DECIMAL_VK -> template( \"not implemented: \"| DOUBLE_VK ( PRECISION_VK )? -> template( \"not implemented: \"| FLOAT_VK -> template( \"not implemented: \"| REAL_VK -> template( \"not implemented: \"| NCHAR_VK -> template( \"not implemented: \"| LONG_VK ( RAW_VK )? -> template( \"not implemented: \"| CHAR_VK -> template( \"not implemented: \"| CHARACTER_VK -> template( \"not implemented: \"| VARCHAR2_VK -> template( \"not implemented: \"| VARCHAR_VK -> template( \"not implemented: \"| STRING_VK -> template( \"not implemented: \"| RAW_VK -> template( \"not implemented: \"| BOOLEAN_VK -> template( \"not implemented: \"| DATE_VK -> template( \"not implemented: \"| ROWID_VK -> template( \"not implemented: \"| UROWID_VK -> template( \"not implemented: \"| YEAR_VK -> template( \"not implemented: \"| MONTH_VK -> template( \"not implemented: \"| DAY_VK -> template( \"not implemented: \"| HOUR_VK -> template( \"not implemented: \"| MINUTE_VK -> template( \"not implemented: \"| SECOND_VK -> template( \"not implemented: \"| TIMEZONE_HOUR_VK -> template( \"not implemented: \"| TIMEZONE_MINUTE_VK -> template( \"not implemented: \"| TIMEZONE_REGION_VK -> template( \"not implemented: \"| TIMEZONE_ABBR_VK -> template( \"not implemented: \"| TIMESTAMP_VK -> template( \"not implemented: \"| TIMESTAMP_UNCONSTRAINED_VK -> template( \"not implemented: \"| TIMESTAMP_TZ_UNCONSTRAINED_VK -> template( \"not implemented: \"| TIMESTAMP_LTZ_UNCONSTRAINED_VK -> template( \"not implemented: \"| YMINTERVAL_UNCONSTRAINED_VK -> template( \"not implemented: \"| DSINTERVAL_UNCONSTRAINED_VK -> template( \"not implemented: \"| BFILE_VK -> template( \"not implemented: \"| BLOB_VK -> template( \"not implemented: \"| CLOB_VK -> template( \"not implemented: \"| NCLOB_VK -> template( \"not implemented: \"| MLSLABEL_VK -> template( \"not implemented: \")
			int alt591=54;
			switch ( input.LA(1) ) {
			case BINARY_INTEGER_VK:
				{
				alt591=1;
				}
				break;
			case PLS_INTEGER_VK:
				{
				alt591=2;
				}
				break;
			case NATURAL_VK:
				{
				alt591=3;
				}
				break;
			case BINARY_FLOAT_VK:
				{
				alt591=4;
				}
				break;
			case BINARY_DOUBLE_VK:
				{
				alt591=5;
				}
				break;
			case NATURALN_VK:
				{
				alt591=6;
				}
				break;
			case POSITIVE_VK:
				{
				alt591=7;
				}
				break;
			case POSITIVEN_VK:
				{
				alt591=8;
				}
				break;
			case SIGNTYPE_VK:
				{
				alt591=9;
				}
				break;
			case SIMPLE_INTEGER_VK:
				{
				alt591=10;
				}
				break;
			case NVARCHAR2_VK:
				{
				alt591=11;
				}
				break;
			case DEC_VK:
				{
				alt591=12;
				}
				break;
			case INTEGER_VK:
				{
				alt591=13;
				}
				break;
			case INT_VK:
				{
				alt591=14;
				}
				break;
			case NUMERIC_VK:
				{
				alt591=15;
				}
				break;
			case SMALLINT_VK:
				{
				alt591=16;
				}
				break;
			case NUMBER_VK:
				{
				alt591=17;
				}
				break;
			case DECIMAL_VK:
				{
				alt591=18;
				}
				break;
			case DOUBLE_VK:
				{
				alt591=19;
				}
				break;
			case FLOAT_VK:
				{
				alt591=20;
				}
				break;
			case REAL_VK:
				{
				alt591=21;
				}
				break;
			case NCHAR_VK:
				{
				alt591=22;
				}
				break;
			case LONG_VK:
				{
				alt591=23;
				}
				break;
			case CHAR_VK:
				{
				alt591=24;
				}
				break;
			case CHARACTER_VK:
				{
				alt591=25;
				}
				break;
			case VARCHAR2_VK:
				{
				alt591=26;
				}
				break;
			case VARCHAR_VK:
				{
				alt591=27;
				}
				break;
			case STRING_VK:
				{
				alt591=28;
				}
				break;
			case RAW_VK:
				{
				alt591=29;
				}
				break;
			case BOOLEAN_VK:
				{
				alt591=30;
				}
				break;
			case DATE_VK:
				{
				alt591=31;
				}
				break;
			case ROWID_VK:
				{
				alt591=32;
				}
				break;
			case UROWID_VK:
				{
				alt591=33;
				}
				break;
			case YEAR_VK:
				{
				alt591=34;
				}
				break;
			case MONTH_VK:
				{
				alt591=35;
				}
				break;
			case DAY_VK:
				{
				alt591=36;
				}
				break;
			case HOUR_VK:
				{
				alt591=37;
				}
				break;
			case MINUTE_VK:
				{
				alt591=38;
				}
				break;
			case SECOND_VK:
				{
				alt591=39;
				}
				break;
			case TIMEZONE_HOUR_VK:
				{
				alt591=40;
				}
				break;
			case TIMEZONE_MINUTE_VK:
				{
				alt591=41;
				}
				break;
			case TIMEZONE_REGION_VK:
				{
				alt591=42;
				}
				break;
			case TIMEZONE_ABBR_VK:
				{
				alt591=43;
				}
				break;
			case TIMESTAMP_VK:
				{
				alt591=44;
				}
				break;
			case TIMESTAMP_UNCONSTRAINED_VK:
				{
				alt591=45;
				}
				break;
			case TIMESTAMP_TZ_UNCONSTRAINED_VK:
				{
				alt591=46;
				}
				break;
			case TIMESTAMP_LTZ_UNCONSTRAINED_VK:
				{
				alt591=47;
				}
				break;
			case YMINTERVAL_UNCONSTRAINED_VK:
				{
				alt591=48;
				}
				break;
			case DSINTERVAL_UNCONSTRAINED_VK:
				{
				alt591=49;
				}
				break;
			case BFILE_VK:
				{
				alt591=50;
				}
				break;
			case BLOB_VK:
				{
				alt591=51;
				}
				break;
			case CLOB_VK:
				{
				alt591=52;
				}
				break;
			case NCLOB_VK:
				{
				alt591=53;
				}
				break;
			case MLSLABEL_VK:
				{
				alt591=54;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 591, 0, input);
				throw nvae;
			}
			switch (alt591) {
				case 1 :
					// PLSQLPrinter.g:2315:10: BINARY_INTEGER_VK
					{
					match(input,BINARY_INTEGER_VK,FOLLOW_BINARY_INTEGER_VK_in_native_datatype_element22207); 
					// TEMPLATE REWRITE
					// 2316:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2317:10: PLS_INTEGER_VK
					{
					match(input,PLS_INTEGER_VK,FOLLOW_PLS_INTEGER_VK_in_native_datatype_element22232); 
					// TEMPLATE REWRITE
					// 2318:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:2319:10: NATURAL_VK
					{
					match(input,NATURAL_VK,FOLLOW_NATURAL_VK_in_native_datatype_element22257); 
					// TEMPLATE REWRITE
					// 2320:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:2321:10: BINARY_FLOAT_VK
					{
					match(input,BINARY_FLOAT_VK,FOLLOW_BINARY_FLOAT_VK_in_native_datatype_element22282); 
					// TEMPLATE REWRITE
					// 2322:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:2323:10: BINARY_DOUBLE_VK
					{
					match(input,BINARY_DOUBLE_VK,FOLLOW_BINARY_DOUBLE_VK_in_native_datatype_element22307); 
					// TEMPLATE REWRITE
					// 2324:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:2325:10: NATURALN_VK
					{
					match(input,NATURALN_VK,FOLLOW_NATURALN_VK_in_native_datatype_element22332); 
					// TEMPLATE REWRITE
					// 2326:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:2327:10: POSITIVE_VK
					{
					match(input,POSITIVE_VK,FOLLOW_POSITIVE_VK_in_native_datatype_element22357); 
					// TEMPLATE REWRITE
					// 2328:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:2329:10: POSITIVEN_VK
					{
					match(input,POSITIVEN_VK,FOLLOW_POSITIVEN_VK_in_native_datatype_element22382); 
					// TEMPLATE REWRITE
					// 2330:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:2331:10: SIGNTYPE_VK
					{
					match(input,SIGNTYPE_VK,FOLLOW_SIGNTYPE_VK_in_native_datatype_element22407); 
					// TEMPLATE REWRITE
					// 2332:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:2333:10: SIMPLE_INTEGER_VK
					{
					match(input,SIMPLE_INTEGER_VK,FOLLOW_SIMPLE_INTEGER_VK_in_native_datatype_element22432); 
					// TEMPLATE REWRITE
					// 2334:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:2335:10: NVARCHAR2_VK
					{
					match(input,NVARCHAR2_VK,FOLLOW_NVARCHAR2_VK_in_native_datatype_element22457); 
					// TEMPLATE REWRITE
					// 2336:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:2337:10: DEC_VK
					{
					match(input,DEC_VK,FOLLOW_DEC_VK_in_native_datatype_element22482); 
					// TEMPLATE REWRITE
					// 2338:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 13 :
					// PLSQLPrinter.g:2339:10: INTEGER_VK
					{
					match(input,INTEGER_VK,FOLLOW_INTEGER_VK_in_native_datatype_element22507); 
					// TEMPLATE REWRITE
					// 2340:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 14 :
					// PLSQLPrinter.g:2341:10: INT_VK
					{
					match(input,INT_VK,FOLLOW_INT_VK_in_native_datatype_element22532); 
					// TEMPLATE REWRITE
					// 2342:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 15 :
					// PLSQLPrinter.g:2343:10: NUMERIC_VK
					{
					match(input,NUMERIC_VK,FOLLOW_NUMERIC_VK_in_native_datatype_element22557); 
					// TEMPLATE REWRITE
					// 2344:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 16 :
					// PLSQLPrinter.g:2345:10: SMALLINT_VK
					{
					match(input,SMALLINT_VK,FOLLOW_SMALLINT_VK_in_native_datatype_element22582); 
					// TEMPLATE REWRITE
					// 2346:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 17 :
					// PLSQLPrinter.g:2347:10: NUMBER_VK
					{
					match(input,NUMBER_VK,FOLLOW_NUMBER_VK_in_native_datatype_element22607); 
					// TEMPLATE REWRITE
					// 2348:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 18 :
					// PLSQLPrinter.g:2349:10: DECIMAL_VK
					{
					match(input,DECIMAL_VK,FOLLOW_DECIMAL_VK_in_native_datatype_element22632); 
					// TEMPLATE REWRITE
					// 2350:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 19 :
					// PLSQLPrinter.g:2351:10: DOUBLE_VK ( PRECISION_VK )?
					{
					match(input,DOUBLE_VK,FOLLOW_DOUBLE_VK_in_native_datatype_element22658); 
					// PLSQLPrinter.g:2351:20: ( PRECISION_VK )?
					int alt589=2;
					int LA589_0 = input.LA(1);
					if ( (LA589_0==PRECISION_VK) ) {
						alt589=1;
					}
					switch (alt589) {
						case 1 :
							// PLSQLPrinter.g:2351:20: PRECISION_VK
							{
							match(input,PRECISION_VK,FOLLOW_PRECISION_VK_in_native_datatype_element22660); 
							}
							break;

					}

					// TEMPLATE REWRITE
					// 2352:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 20 :
					// PLSQLPrinter.g:2353:10: FLOAT_VK
					{
					match(input,FLOAT_VK,FOLLOW_FLOAT_VK_in_native_datatype_element22686); 
					// TEMPLATE REWRITE
					// 2354:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 21 :
					// PLSQLPrinter.g:2355:10: REAL_VK
					{
					match(input,REAL_VK,FOLLOW_REAL_VK_in_native_datatype_element22711); 
					// TEMPLATE REWRITE
					// 2356:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 22 :
					// PLSQLPrinter.g:2357:10: NCHAR_VK
					{
					match(input,NCHAR_VK,FOLLOW_NCHAR_VK_in_native_datatype_element22736); 
					// TEMPLATE REWRITE
					// 2358:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 23 :
					// PLSQLPrinter.g:2359:10: LONG_VK ( RAW_VK )?
					{
					match(input,LONG_VK,FOLLOW_LONG_VK_in_native_datatype_element22761); 
					// PLSQLPrinter.g:2359:18: ( RAW_VK )?
					int alt590=2;
					int LA590_0 = input.LA(1);
					if ( (LA590_0==RAW_VK) ) {
						alt590=1;
					}
					switch (alt590) {
						case 1 :
							// PLSQLPrinter.g:2359:18: RAW_VK
							{
							match(input,RAW_VK,FOLLOW_RAW_VK_in_native_datatype_element22763); 
							}
							break;

					}

					// TEMPLATE REWRITE
					// 2360:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 24 :
					// PLSQLPrinter.g:2361:10: CHAR_VK
					{
					match(input,CHAR_VK,FOLLOW_CHAR_VK_in_native_datatype_element22789); 
					// TEMPLATE REWRITE
					// 2362:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 25 :
					// PLSQLPrinter.g:2363:10: CHARACTER_VK
					{
					match(input,CHARACTER_VK,FOLLOW_CHARACTER_VK_in_native_datatype_element22816); 
					// TEMPLATE REWRITE
					// 2364:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 26 :
					// PLSQLPrinter.g:2365:10: VARCHAR2_VK
					{
					match(input,VARCHAR2_VK,FOLLOW_VARCHAR2_VK_in_native_datatype_element22842); 
					// TEMPLATE REWRITE
					// 2366:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 27 :
					// PLSQLPrinter.g:2367:10: VARCHAR_VK
					{
					match(input,VARCHAR_VK,FOLLOW_VARCHAR_VK_in_native_datatype_element22867); 
					// TEMPLATE REWRITE
					// 2368:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 28 :
					// PLSQLPrinter.g:2369:10: STRING_VK
					{
					match(input,STRING_VK,FOLLOW_STRING_VK_in_native_datatype_element22892); 
					// TEMPLATE REWRITE
					// 2370:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 29 :
					// PLSQLPrinter.g:2371:10: RAW_VK
					{
					match(input,RAW_VK,FOLLOW_RAW_VK_in_native_datatype_element22917); 
					// TEMPLATE REWRITE
					// 2372:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 30 :
					// PLSQLPrinter.g:2373:10: BOOLEAN_VK
					{
					match(input,BOOLEAN_VK,FOLLOW_BOOLEAN_VK_in_native_datatype_element22942); 
					// TEMPLATE REWRITE
					// 2374:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 31 :
					// PLSQLPrinter.g:2375:10: DATE_VK
					{
					match(input,DATE_VK,FOLLOW_DATE_VK_in_native_datatype_element22967); 
					// TEMPLATE REWRITE
					// 2376:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 32 :
					// PLSQLPrinter.g:2377:10: ROWID_VK
					{
					match(input,ROWID_VK,FOLLOW_ROWID_VK_in_native_datatype_element22992); 
					// TEMPLATE REWRITE
					// 2378:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 33 :
					// PLSQLPrinter.g:2379:10: UROWID_VK
					{
					match(input,UROWID_VK,FOLLOW_UROWID_VK_in_native_datatype_element23017); 
					// TEMPLATE REWRITE
					// 2380:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 34 :
					// PLSQLPrinter.g:2381:10: YEAR_VK
					{
					match(input,YEAR_VK,FOLLOW_YEAR_VK_in_native_datatype_element23042); 
					// TEMPLATE REWRITE
					// 2382:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 35 :
					// PLSQLPrinter.g:2383:10: MONTH_VK
					{
					match(input,MONTH_VK,FOLLOW_MONTH_VK_in_native_datatype_element23067); 
					// TEMPLATE REWRITE
					// 2384:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 36 :
					// PLSQLPrinter.g:2385:10: DAY_VK
					{
					match(input,DAY_VK,FOLLOW_DAY_VK_in_native_datatype_element23092); 
					// TEMPLATE REWRITE
					// 2386:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 37 :
					// PLSQLPrinter.g:2387:10: HOUR_VK
					{
					match(input,HOUR_VK,FOLLOW_HOUR_VK_in_native_datatype_element23117); 
					// TEMPLATE REWRITE
					// 2388:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 38 :
					// PLSQLPrinter.g:2389:10: MINUTE_VK
					{
					match(input,MINUTE_VK,FOLLOW_MINUTE_VK_in_native_datatype_element23142); 
					// TEMPLATE REWRITE
					// 2390:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 39 :
					// PLSQLPrinter.g:2391:10: SECOND_VK
					{
					match(input,SECOND_VK,FOLLOW_SECOND_VK_in_native_datatype_element23167); 
					// TEMPLATE REWRITE
					// 2392:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 40 :
					// PLSQLPrinter.g:2393:10: TIMEZONE_HOUR_VK
					{
					match(input,TIMEZONE_HOUR_VK,FOLLOW_TIMEZONE_HOUR_VK_in_native_datatype_element23192); 
					// TEMPLATE REWRITE
					// 2394:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 41 :
					// PLSQLPrinter.g:2395:10: TIMEZONE_MINUTE_VK
					{
					match(input,TIMEZONE_MINUTE_VK,FOLLOW_TIMEZONE_MINUTE_VK_in_native_datatype_element23217); 
					// TEMPLATE REWRITE
					// 2396:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 42 :
					// PLSQLPrinter.g:2397:10: TIMEZONE_REGION_VK
					{
					match(input,TIMEZONE_REGION_VK,FOLLOW_TIMEZONE_REGION_VK_in_native_datatype_element23242); 
					// TEMPLATE REWRITE
					// 2398:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 43 :
					// PLSQLPrinter.g:2399:10: TIMEZONE_ABBR_VK
					{
					match(input,TIMEZONE_ABBR_VK,FOLLOW_TIMEZONE_ABBR_VK_in_native_datatype_element23267); 
					// TEMPLATE REWRITE
					// 2400:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 44 :
					// PLSQLPrinter.g:2401:10: TIMESTAMP_VK
					{
					match(input,TIMESTAMP_VK,FOLLOW_TIMESTAMP_VK_in_native_datatype_element23292); 
					// TEMPLATE REWRITE
					// 2402:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 45 :
					// PLSQLPrinter.g:2403:10: TIMESTAMP_UNCONSTRAINED_VK
					{
					match(input,TIMESTAMP_UNCONSTRAINED_VK,FOLLOW_TIMESTAMP_UNCONSTRAINED_VK_in_native_datatype_element23317); 
					// TEMPLATE REWRITE
					// 2404:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 46 :
					// PLSQLPrinter.g:2405:10: TIMESTAMP_TZ_UNCONSTRAINED_VK
					{
					match(input,TIMESTAMP_TZ_UNCONSTRAINED_VK,FOLLOW_TIMESTAMP_TZ_UNCONSTRAINED_VK_in_native_datatype_element23342); 
					// TEMPLATE REWRITE
					// 2406:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 47 :
					// PLSQLPrinter.g:2407:10: TIMESTAMP_LTZ_UNCONSTRAINED_VK
					{
					match(input,TIMESTAMP_LTZ_UNCONSTRAINED_VK,FOLLOW_TIMESTAMP_LTZ_UNCONSTRAINED_VK_in_native_datatype_element23367); 
					// TEMPLATE REWRITE
					// 2408:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 48 :
					// PLSQLPrinter.g:2409:10: YMINTERVAL_UNCONSTRAINED_VK
					{
					match(input,YMINTERVAL_UNCONSTRAINED_VK,FOLLOW_YMINTERVAL_UNCONSTRAINED_VK_in_native_datatype_element23392); 
					// TEMPLATE REWRITE
					// 2410:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 49 :
					// PLSQLPrinter.g:2411:10: DSINTERVAL_UNCONSTRAINED_VK
					{
					match(input,DSINTERVAL_UNCONSTRAINED_VK,FOLLOW_DSINTERVAL_UNCONSTRAINED_VK_in_native_datatype_element23417); 
					// TEMPLATE REWRITE
					// 2412:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 50 :
					// PLSQLPrinter.g:2413:10: BFILE_VK
					{
					match(input,BFILE_VK,FOLLOW_BFILE_VK_in_native_datatype_element23442); 
					// TEMPLATE REWRITE
					// 2414:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 51 :
					// PLSQLPrinter.g:2415:10: BLOB_VK
					{
					match(input,BLOB_VK,FOLLOW_BLOB_VK_in_native_datatype_element23467); 
					// TEMPLATE REWRITE
					// 2416:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 52 :
					// PLSQLPrinter.g:2417:10: CLOB_VK
					{
					match(input,CLOB_VK,FOLLOW_CLOB_VK_in_native_datatype_element23492); 
					// TEMPLATE REWRITE
					// 2418:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 53 :
					// PLSQLPrinter.g:2419:10: NCLOB_VK
					{
					match(input,NCLOB_VK,FOLLOW_NCLOB_VK_in_native_datatype_element23517); 
					// TEMPLATE REWRITE
					// 2420:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 54 :
					// PLSQLPrinter.g:2421:10: MLSLABEL_VK
					{
					match(input,MLSLABEL_VK,FOLLOW_MLSLABEL_VK_in_native_datatype_element23542); 
					// TEMPLATE REWRITE
					// 2422:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "native_datatype_element"


	public static class general_element_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "general_element"
	// PLSQLPrinter.g:2425:1: general_element : ( ^( CASCATED_ELEMENT ( general_element )+ ) -> template( \"not implemented: \"| ^( HOSTED_VARIABLE_ROUTINE_CALL routine_name function_argument ) -> template( \"not implemented: \"| ^( HOSTED_VARIABLE ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \"| ^( ROUTINE_CALL routine_name function_argument ) -> template( \"not implemented: \"| ^( ANY_ELEMENT ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \");
	public final PLSQLPrinter.general_element_return general_element() throws RecognitionException {
		PLSQLPrinter.general_element_return retval = new PLSQLPrinter.general_element_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2426:5: ( ^( CASCATED_ELEMENT ( general_element )+ ) -> template( \"not implemented: \"| ^( HOSTED_VARIABLE_ROUTINE_CALL routine_name function_argument ) -> template( \"not implemented: \"| ^( HOSTED_VARIABLE ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \"| ^( ROUTINE_CALL routine_name function_argument ) -> template( \"not implemented: \"| ^( ANY_ELEMENT ( char_set_name )? ( ID )+ ) -> template( \"not implemented: \")
			int alt597=5;
			switch ( input.LA(1) ) {
			case CASCATED_ELEMENT:
				{
				alt597=1;
				}
				break;
			case HOSTED_VARIABLE_ROUTINE_CALL:
				{
				alt597=2;
				}
				break;
			case HOSTED_VARIABLE:
				{
				alt597=3;
				}
				break;
			case ROUTINE_CALL:
				{
				alt597=4;
				}
				break;
			case ANY_ELEMENT:
				{
				alt597=5;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 597, 0, input);
				throw nvae;
			}
			switch (alt597) {
				case 1 :
					// PLSQLPrinter.g:2426:10: ^( CASCATED_ELEMENT ( general_element )+ )
					{
					match(input,CASCATED_ELEMENT,FOLLOW_CASCATED_ELEMENT_in_general_element23577); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:2426:29: ( general_element )+
					int cnt592=0;
					loop592:
					while (true) {
						int alt592=2;
						int LA592_0 = input.LA(1);
						if ( (LA592_0==ANY_ELEMENT||LA592_0==CASCATED_ELEMENT||LA592_0==HOSTED_VARIABLE||LA592_0==HOSTED_VARIABLE_ROUTINE_CALL||LA592_0==ROUTINE_CALL) ) {
							alt592=1;
						}

						switch (alt592) {
						case 1 :
							// PLSQLPrinter.g:2426:29: general_element
							{
							pushFollow(FOLLOW_general_element_in_general_element23579);
							general_element();
							state._fsp--;

							}
							break;

						default :
							if ( cnt592 >= 1 ) break loop592;
							EarlyExitException eee = new EarlyExitException(592, input);
							throw eee;
						}
						cnt592++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2427:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2428:10: ^( HOSTED_VARIABLE_ROUTINE_CALL routine_name function_argument )
					{
					match(input,HOSTED_VARIABLE_ROUTINE_CALL,FOLLOW_HOSTED_VARIABLE_ROUTINE_CALL_in_general_element23607); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_routine_name_in_general_element23609);
					routine_name();
					state._fsp--;

					pushFollow(FOLLOW_function_argument_in_general_element23611);
					function_argument();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2429:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:2430:10: ^( HOSTED_VARIABLE ( char_set_name )? ( ID )+ )
					{
					match(input,HOSTED_VARIABLE,FOLLOW_HOSTED_VARIABLE_in_general_element23638); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:2430:28: ( char_set_name )?
					int alt593=2;
					int LA593_0 = input.LA(1);
					if ( (LA593_0==CHAR_SET_NAME) ) {
						alt593=1;
					}
					switch (alt593) {
						case 1 :
							// PLSQLPrinter.g:2430:28: char_set_name
							{
							pushFollow(FOLLOW_char_set_name_in_general_element23640);
							char_set_name();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:2430:43: ( ID )+
					int cnt594=0;
					loop594:
					while (true) {
						int alt594=2;
						int LA594_0 = input.LA(1);
						if ( (LA594_0==ID) ) {
							alt594=1;
						}

						switch (alt594) {
						case 1 :
							// PLSQLPrinter.g:2430:43: ID
							{
							match(input,ID,FOLLOW_ID_in_general_element23643); 
							}
							break;

						default :
							if ( cnt594 >= 1 ) break loop594;
							EarlyExitException eee = new EarlyExitException(594, input);
							throw eee;
						}
						cnt594++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2431:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:2432:10: ^( ROUTINE_CALL routine_name function_argument )
					{
					match(input,ROUTINE_CALL,FOLLOW_ROUTINE_CALL_in_general_element23671); 
					match(input, Token.DOWN, null); 
					pushFollow(FOLLOW_routine_name_in_general_element23673);
					routine_name();
					state._fsp--;

					pushFollow(FOLLOW_function_argument_in_general_element23675);
					function_argument();
					state._fsp--;

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2433:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:2434:10: ^( ANY_ELEMENT ( char_set_name )? ( ID )+ )
					{
					match(input,ANY_ELEMENT,FOLLOW_ANY_ELEMENT_in_general_element23702); 
					match(input, Token.DOWN, null); 
					// PLSQLPrinter.g:2434:24: ( char_set_name )?
					int alt595=2;
					int LA595_0 = input.LA(1);
					if ( (LA595_0==CHAR_SET_NAME) ) {
						alt595=1;
					}
					switch (alt595) {
						case 1 :
							// PLSQLPrinter.g:2434:24: char_set_name
							{
							pushFollow(FOLLOW_char_set_name_in_general_element23704);
							char_set_name();
							state._fsp--;

							}
							break;

					}

					// PLSQLPrinter.g:2434:39: ( ID )+
					int cnt596=0;
					loop596:
					while (true) {
						int alt596=2;
						int LA596_0 = input.LA(1);
						if ( (LA596_0==ID) ) {
							alt596=1;
						}

						switch (alt596) {
						case 1 :
							// PLSQLPrinter.g:2434:39: ID
							{
							match(input,ID,FOLLOW_ID_in_general_element23707); 
							}
							break;

						default :
							if ( cnt596 >= 1 ) break loop596;
							EarlyExitException eee = new EarlyExitException(596, input);
							throw eee;
						}
						cnt596++;
					}

					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2435:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "general_element"


	public static class constant_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "constant"
	// PLSQLPrinter.g:2442:1: constant : ( UNSIGNED_INTEGER -> template( \"not implemented: \"| ^( MINUS_SIGN UNSIGNED_INTEGER ) -> template( \"not implemented: \"| EXACT_NUM_LIT -> template( \"not implemented: \"| APPROXIMATE_NUM_LIT -> template( \"not implemented: \"| CHAR_STRING -> template( \"not implemented: \"| SQL92_RESERVED_NULL -> template( \"not implemented: \"| SQL92_RESERVED_TRUE -> template( \"not implemented: \"| SQL92_RESERVED_FALSE -> template( \"not implemented: \"| DBTIMEZONE_VK -> template( \"not implemented: \"| SESSIONTIMEZONE_VK -> template( \"not implemented: \"| MINVALUE_VK -> template( \"not implemented: \"| MAXVALUE_VK -> template( \"not implemented: \"| SQL92_RESERVED_DEFAULT -> template( \"not implemented: \");
	public final PLSQLPrinter.constant_return constant() throws RecognitionException {
		PLSQLPrinter.constant_return retval = new PLSQLPrinter.constant_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2443:5: ( UNSIGNED_INTEGER -> template( \"not implemented: \"| ^( MINUS_SIGN UNSIGNED_INTEGER ) -> template( \"not implemented: \"| EXACT_NUM_LIT -> template( \"not implemented: \"| APPROXIMATE_NUM_LIT -> template( \"not implemented: \"| CHAR_STRING -> template( \"not implemented: \"| SQL92_RESERVED_NULL -> template( \"not implemented: \"| SQL92_RESERVED_TRUE -> template( \"not implemented: \"| SQL92_RESERVED_FALSE -> template( \"not implemented: \"| DBTIMEZONE_VK -> template( \"not implemented: \"| SESSIONTIMEZONE_VK -> template( \"not implemented: \"| MINVALUE_VK -> template( \"not implemented: \"| MAXVALUE_VK -> template( \"not implemented: \"| SQL92_RESERVED_DEFAULT -> template( \"not implemented: \")
			int alt598=13;
			switch ( input.LA(1) ) {
			case UNSIGNED_INTEGER:
				{
				alt598=1;
				}
				break;
			case MINUS_SIGN:
				{
				alt598=2;
				}
				break;
			case EXACT_NUM_LIT:
				{
				alt598=3;
				}
				break;
			case APPROXIMATE_NUM_LIT:
				{
				alt598=4;
				}
				break;
			case CHAR_STRING:
				{
				alt598=5;
				}
				break;
			case SQL92_RESERVED_NULL:
				{
				alt598=6;
				}
				break;
			case SQL92_RESERVED_TRUE:
				{
				alt598=7;
				}
				break;
			case SQL92_RESERVED_FALSE:
				{
				alt598=8;
				}
				break;
			case DBTIMEZONE_VK:
				{
				alt598=9;
				}
				break;
			case SESSIONTIMEZONE_VK:
				{
				alt598=10;
				}
				break;
			case MINVALUE_VK:
				{
				alt598=11;
				}
				break;
			case MAXVALUE_VK:
				{
				alt598=12;
				}
				break;
			case SQL92_RESERVED_DEFAULT:
				{
				alt598=13;
				}
				break;
			default:
				NoViableAltException nvae =
					new NoViableAltException("", 598, 0, input);
				throw nvae;
			}
			switch (alt598) {
				case 1 :
					// PLSQLPrinter.g:2443:10: UNSIGNED_INTEGER
					{
					match(input,UNSIGNED_INTEGER,FOLLOW_UNSIGNED_INTEGER_in_constant23747); 
					// TEMPLATE REWRITE
					// 2444:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 2 :
					// PLSQLPrinter.g:2445:10: ^( MINUS_SIGN UNSIGNED_INTEGER )
					{
					match(input,MINUS_SIGN,FOLLOW_MINUS_SIGN_in_constant23773); 
					match(input, Token.DOWN, null); 
					match(input,UNSIGNED_INTEGER,FOLLOW_UNSIGNED_INTEGER_in_constant23775); 
					match(input, Token.UP, null); 

					// TEMPLATE REWRITE
					// 2446:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 3 :
					// PLSQLPrinter.g:2447:10: EXACT_NUM_LIT
					{
					match(input,EXACT_NUM_LIT,FOLLOW_EXACT_NUM_LIT_in_constant23801); 
					// TEMPLATE REWRITE
					// 2448:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 4 :
					// PLSQLPrinter.g:2449:10: APPROXIMATE_NUM_LIT
					{
					match(input,APPROXIMATE_NUM_LIT,FOLLOW_APPROXIMATE_NUM_LIT_in_constant23826); 
					// TEMPLATE REWRITE
					// 2450:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 5 :
					// PLSQLPrinter.g:2451:10: CHAR_STRING
					{
					match(input,CHAR_STRING,FOLLOW_CHAR_STRING_in_constant23851); 
					// TEMPLATE REWRITE
					// 2452:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 6 :
					// PLSQLPrinter.g:2453:10: SQL92_RESERVED_NULL
					{
					match(input,SQL92_RESERVED_NULL,FOLLOW_SQL92_RESERVED_NULL_in_constant23876); 
					// TEMPLATE REWRITE
					// 2454:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 7 :
					// PLSQLPrinter.g:2455:10: SQL92_RESERVED_TRUE
					{
					match(input,SQL92_RESERVED_TRUE,FOLLOW_SQL92_RESERVED_TRUE_in_constant23901); 
					// TEMPLATE REWRITE
					// 2456:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 8 :
					// PLSQLPrinter.g:2457:10: SQL92_RESERVED_FALSE
					{
					match(input,SQL92_RESERVED_FALSE,FOLLOW_SQL92_RESERVED_FALSE_in_constant23926); 
					// TEMPLATE REWRITE
					// 2458:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 9 :
					// PLSQLPrinter.g:2459:10: DBTIMEZONE_VK
					{
					match(input,DBTIMEZONE_VK,FOLLOW_DBTIMEZONE_VK_in_constant23951); 
					// TEMPLATE REWRITE
					// 2460:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 10 :
					// PLSQLPrinter.g:2461:10: SESSIONTIMEZONE_VK
					{
					match(input,SESSIONTIMEZONE_VK,FOLLOW_SESSIONTIMEZONE_VK_in_constant23977); 
					// TEMPLATE REWRITE
					// 2462:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 11 :
					// PLSQLPrinter.g:2463:10: MINVALUE_VK
					{
					match(input,MINVALUE_VK,FOLLOW_MINVALUE_VK_in_constant24002); 
					// TEMPLATE REWRITE
					// 2464:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 12 :
					// PLSQLPrinter.g:2465:10: MAXVALUE_VK
					{
					match(input,MAXVALUE_VK,FOLLOW_MAXVALUE_VK_in_constant24027); 
					// TEMPLATE REWRITE
					// 2466:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;
				case 13 :
					// PLSQLPrinter.g:2467:10: SQL92_RESERVED_DEFAULT
					{
					match(input,SQL92_RESERVED_DEFAULT,FOLLOW_SQL92_RESERVED_DEFAULT_in_constant24052); 
					// TEMPLATE REWRITE
					// 2468:5: -> template( \"not implemented: \"
					{
						retval.st = new StringTemplate(templateLib, "not implemented: ");
					}



					}
					break;

			}
		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "constant"


	public static class id_return extends TreeRuleReturnScope {
		public StringTemplate st;
		public Object getTemplate() { return st; }
		public String toString() { return st==null?null:st.toString(); }
	};


	// $ANTLR start "id"
	// PLSQLPrinter.g:2473:1: id : ( char_set_name )? ID -> template( \"not implemented: \";
	public final PLSQLPrinter.id_return id() throws RecognitionException {
		PLSQLPrinter.id_return retval = new PLSQLPrinter.id_return();
		retval.start = input.LT(1);

		try {
			// PLSQLPrinter.g:2474:5: ( ( char_set_name )? ID -> template( \"not implemented: \")
			// PLSQLPrinter.g:2474:10: ( char_set_name )? ID
			{
			// PLSQLPrinter.g:2474:10: ( char_set_name )?
			int alt599=2;
			int LA599_0 = input.LA(1);
			if ( (LA599_0==CHAR_SET_NAME) ) {
				alt599=1;
			}
			switch (alt599) {
				case 1 :
					// PLSQLPrinter.g:2474:10: char_set_name
					{
					pushFollow(FOLLOW_char_set_name_in_id24088);
					char_set_name();
					state._fsp--;

					}
					break;

			}

			match(input,ID,FOLLOW_ID_in_id24091); 
			// TEMPLATE REWRITE
			// 2475:5: -> template( \"not implemented: \"
			{
				retval.st = new StringTemplate(templateLib, "not implemented: ");
			}



			}

		}
		catch (RecognitionException re) {
			reportError(re);
			recover(input,re);
		}
		finally {
			// do for sure before leaving
		}
		return retval;
	}
	// $ANTLR end "id"

	// Delegated rules


	protected DFA324 dfa324 = new DFA324(this);
	static final String DFA324_eotS =
		"\16\uffff";
	static final String DFA324_eofS =
		"\16\uffff";
	static final String DFA324_minS =
		"\1\u00ca\1\2\1\uffff\1\u0103\1\2\1\u00f6\1\2\1\3\1\u018e\1\u0103\1\3\2"+
		"\uffff\1\u018e";
	static final String DFA324_maxS =
		"\1\u0314\1\2\1\uffff\1\u0103\1\2\1\u018e\1\2\2\u018e\1\u02e8\1\u018e\2"+
		"\uffff\1\u018e";
	static final String DFA324_acceptS =
		"\2\uffff\1\3\10\uffff\1\1\1\2\1\uffff";
	static final String DFA324_specialS =
		"\16\uffff}>";
	static final String[] DFA324_transitionS = {
			"\1\1\u0249\uffff\1\2",
			"\1\3",
			"",
			"\1\4",
			"\1\5",
			"\1\6\u0097\uffff\1\7",
			"\1\10",
			"\1\11\u018a\uffff\1\7",
			"\1\12",
			"\1\14\144\uffff\1\13\141\uffff\1\13\u011d\uffff\1\14",
			"\1\15\u018a\uffff\1\12",
			"",
			"",
			"\1\7"
	};

	static final short[] DFA324_eot = DFA.unpackEncodedString(DFA324_eotS);
	static final short[] DFA324_eof = DFA.unpackEncodedString(DFA324_eofS);
	static final char[] DFA324_min = DFA.unpackEncodedStringToUnsignedChars(DFA324_minS);
	static final char[] DFA324_max = DFA.unpackEncodedStringToUnsignedChars(DFA324_maxS);
	static final short[] DFA324_accept = DFA.unpackEncodedString(DFA324_acceptS);
	static final short[] DFA324_special = DFA.unpackEncodedString(DFA324_specialS);
	static final short[][] DFA324_transition;

	static {
		int numStates = DFA324_transitionS.length;
		DFA324_transition = new short[numStates][];
		for (int i=0; i<numStates; i++) {
			DFA324_transition[i] = DFA.unpackEncodedString(DFA324_transitionS[i]);
		}
	}

	protected class DFA324 extends DFA {

		public DFA324(BaseRecognizer recognizer) {
			this.recognizer = recognizer;
			this.decisionNumber = 324;
			this.eot = DFA324_eot;
			this.eof = DFA324_eof;
			this.min = DFA324_min;
			this.max = DFA324_max;
			this.accept = DFA324_accept;
			this.special = DFA324_special;
			this.transition = DFA324_transition;
		}
		@Override
		public String getDescription() {
			return "1415:1: update_set_elements : ( ^( ASSIGN column_name expression ) -> template( \"not implemented: \"| ^( ASSIGN ( column_name )+ subquery ) -> template( \"not implemented: \"| ^( VALUE_VK ( char_set_name )? ID expression ) -> template( \"not implemented: \");";
		}
	}

	public static final BitSet FOLLOW_COMPILATION_UNIT_in_compilation_unit69 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_unit_statement_in_compilation_unit73 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x9000000000000000L,0x000000000000000FL,0x0000001FE0000000L,0x00000000000FC000L});
	public static final BitSet FOLLOW_SQL_SCRIPT_in_sql_script112 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_unit_statement_in_sql_script116 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x9000000000000000L,0x000000000000000FL,0x0000001FE0000000L,0x00000000000FC000L});
	public static final BitSet FOLLOW_SET_SERVEROUTPUT_in_serveroutput_declaration155 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ON_in_serveroutput_declaration158 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_OFF_VK_in_serveroutput_declaration160 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_alter_function_in_unit_statement196 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_package_in_unit_statement221 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_procedure_in_unit_statement246 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_sequence_in_unit_statement271 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_trigger_in_unit_statement296 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_alter_type_in_unit_statement321 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_function_body_in_unit_statement346 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_procedure_body_in_unit_statement359 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_package_in_unit_statement384 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_sequence_in_unit_statement409 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_trigger_in_unit_statement434 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_type_in_unit_statement459 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_function_in_unit_statement484 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_package_in_unit_statement509 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_procedure_in_unit_statement534 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_sequence_in_unit_statement559 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_trigger_in_unit_statement584 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_drop_type_in_unit_statement609 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_FUNCTION_in_drop_function648 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_function_name_in_drop_function650 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_FUNCTION_in_alter_function686 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_function_name_in_alter_function688 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_DEBUG_VK_in_alter_function690 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_REUSE_VK_in_alter_function693 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_compiler_parameters_clause_in_alter_function696 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CREATE_FUNCTION_in_create_function_body733 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REPLACE_VK_in_create_function_body735 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_FUNCTION_NAME_in_create_function_body739 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ID_in_create_function_body743 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_type_spec_in_create_function_body749 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PARAMETERS_in_create_function_body752 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_in_create_function_body756 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_invoker_rights_clause_in_create_function_body774 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000202000080000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_parallel_enable_clause_in_create_function_body779 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000202000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_result_cache_clause_in_create_function_body784 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000202000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_DETERMINISTIC_VK_in_create_function_body787 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000202000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_USING_MODE_in_create_function_body808 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PIPELINED_VK_in_create_function_body810 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_AGGREGATE_VK_in_create_function_body813 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_implementation_type_name_in_create_function_body816 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CALL_MODE_in_create_function_body851 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PIPELINED_VK_in_create_function_body853 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_call_spec_in_create_function_body856 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BODY_MODE_in_create_function_body891 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PIPELINED_VK_in_create_function_body895 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000040120000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060002L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_declare_spec_in_create_function_body898 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000040120000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060002L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_body_in_create_function_body901 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PARALLEL_ENABLE_VK_in_parallel_enable_clause1067 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_partition_by_clause_in_parallel_enable_clause1069 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PARTITION_VK_in_partition_by_clause1106 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_partition_by_clause1108 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ANY_in_partition_by_clause1128 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_HASH_VK_in_partition_by_clause1148 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_COLUMNS_in_partition_by_clause1151 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_partition_by_clause1153 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_RANGE_VK_in_partition_by_clause1176 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_COLUMNS_in_partition_by_clause1179 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_partition_by_clause1181 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_streaming_clause_in_partition_by_clause1213 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RESULT_CACHE_VK_in_result_cache_clause1259 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_relies_on_part_in_result_cache_clause1261 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RELIES_ON_VK_in_relies_on_part1298 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_tableview_name_in_relies_on_part1300 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_STREAMING_CLAUSE_in_streaming_clause1337 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ORDER_in_streaming_clause1340 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CLUSTER_VK_in_streaming_clause1342 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_streaming_clause1345 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_COLUMNS_in_streaming_clause1348 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_streaming_clause1350 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_DROP_PACKAGE_in_drop_package1393 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_package_name_in_drop_package1395 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_BODY_VK_in_drop_package1397 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_PACKAGE_in_alter_package1434 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_package_name_in_alter_package1436 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L,0x0040000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L,0x0000000100000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_DEBUG_VK_in_alter_package1438 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L,0x0000000100000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_REUSE_VK_in_alter_package1441 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PACKAGE_VK_in_alter_package1462 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_BODY_VK_in_alter_package1464 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_SPECIFICATION_VK_in_alter_package1466 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_compiler_parameters_clause_in_alter_package1470 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CREATE_PACKAGE_SPEC_in_create_package1507 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REPLACE_VK_in_create_package1509 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_package_name_in_create_package1512 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L,0x0000040000000000L,0x0000000100000000L,0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000060102L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_invoker_rights_clause_in_create_package1514 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L,0x0000000100000000L,0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000060102L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_package_obj_spec_in_create_package1517 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000040000000000L,0x0000000100000000L,0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000060102L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_CREATE_PACKAGE_BODY_in_create_package1546 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REPLACE_VK_in_create_package1548 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_package_name_in_create_package1551 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000041920000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060000L,0x0000000000000000L,0x0003020100000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_package_obj_body_in_create_package1553 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000041920000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060000L,0x0000000000000000L,0x0003020100000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_seq_of_statements_in_create_package1556 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_variable_declaration_in_package_obj_spec1594 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subtype_declaration_in_package_obj_spec1620 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cursor_declaration_in_package_obj_spec1646 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_exception_declaration_in_package_obj_spec1672 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_record_declaration_in_package_obj_spec1698 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_declaration_in_package_obj_spec1724 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_procedure_spec_in_package_obj_spec1750 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_spec_in_package_obj_spec1776 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pragma_declaration_in_package_obj_spec1802 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PROCEDURE_SPEC_in_procedure_spec1838 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_procedure_name_in_procedure_spec1840 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PARAMETERS_in_procedure_spec1843 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_in_procedure_spec1845 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_CALL_MODE_in_procedure_spec1863 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_call_spec_in_procedure_spec1865 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FUNCTION_SPEC_in_function_spec1910 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_function_name_in_function_spec1912 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L,0x0000000000000000L,0x8000000000000000L});
	public static final BitSet FOLLOW_type_spec_in_function_spec1915 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_SELF_VK_in_function_spec1917 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PARAMETERS_in_function_spec1921 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_in_function_spec1923 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_invoker_rights_clause_in_function_spec1939 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000200000080000L,0x0000000000000000L,0x0000080000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_parallel_enable_clause_in_function_spec1942 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000080000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_result_cache_clause_in_function_spec1945 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000080000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_DETERMINISTIC_VK_in_function_spec1948 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000080000000008L});
	public static final BitSet FOLLOW_CALL_MODE_in_function_spec1969 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_call_spec_in_function_spec1971 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXTERNAL_VK_in_function_spec1992 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_function_spec1994 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_variable_declaration_in_package_obj_body2055 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subtype_declaration_in_package_obj_body2082 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cursor_declaration_in_package_obj_body2109 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_exception_declaration_in_package_obj_body2136 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_record_declaration_in_package_obj_body2163 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_declaration_in_package_obj_body2189 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_procedure_body_in_package_obj_body2215 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_function_body_in_package_obj_body2241 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_type_in_package_obj_body2267 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DROP_PROCEDURE_in_drop_procedure2308 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_procedure_name_in_drop_procedure2310 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_PROCEDURE_in_alter_procedure2346 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_procedure_name_in_alter_procedure2348 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_DEBUG_VK_in_alter_procedure2350 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_REUSE_VK_in_alter_procedure2353 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_compiler_parameters_clause_in_alter_procedure2356 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CREATE_PROCEDURE_in_create_procedure_body2393 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REPLACE_VK_in_create_procedure_body2395 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_procedure_name_in_create_procedure_body2398 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PARAMETERS_in_create_procedure_body2401 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_in_create_procedure_body2403 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_invoker_rights_clause_in_create_procedure_body2407 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000202000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_EXTERNAL_VK_in_create_procedure_body2427 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CALL_MODE_in_create_procedure_body2447 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_call_spec_in_create_procedure_body2449 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BODY_MODE_in_create_procedure_body2470 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_declare_spec_in_create_procedure_body2472 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000040120000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060002L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_body_in_create_procedure_body2475 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DROP_TRIGGER_in_drop_trigger2539 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_trigger_name_in_drop_trigger2541 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_TRIGGER_in_alter_trigger2577 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_trigger_name_in_alter_trigger2579 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000400L,0x0000000002000040L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000104000000L});
	public static final BitSet FOLLOW_ENABLE_VK_in_alter_trigger2600 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DISABLE_VK_in_alter_trigger2602 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RENAME_VK_in_alter_trigger2623 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_trigger_name_in_alter_trigger2625 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DEBUG_VK_in_alter_trigger2645 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_REUSE_VK_in_alter_trigger2648 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_compiler_parameters_clause_in_alter_trigger2651 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CREATE_TRIGGER_in_create_trigger2711 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REPLACE_VK_in_create_trigger2713 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_trigger_name_in_create_trigger2716 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000402000000000L,0x0000000000003000L,0x0020000002000040L,0x0000000000000000L,0x0400000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_simple_dml_trigger_in_create_trigger2732 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000402000000000L,0x0000000000003000L,0x0020000002000040L,0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_compound_dml_trigger_in_create_trigger2735 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000402000000000L,0x0000000000002000L,0x0020000002000040L,0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_non_dml_trigger_in_create_trigger2738 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000402000000000L,0x0000000000002000L,0x0020000002000040L});
	public static final BitSet FOLLOW_trigger_follows_clause_in_create_trigger2753 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000402000000000L,0x0000000000002000L,0x0000000002000040L});
	public static final BitSet FOLLOW_ENABLE_VK_in_create_trigger2757 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000402000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_DISABLE_VK_in_create_trigger2759 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000402000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_trigger_when_clause_in_create_trigger2763 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000402000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_trigger_body_in_create_trigger2766 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FOLLOWS_VK_in_trigger_follows_clause2802 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_trigger_name_in_trigger_follows_clause2804 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WHEN_in_trigger_when_clause2841 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_trigger_when_clause2843 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SIMPLE_DML_in_simple_dml_trigger2880 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_BEFORE_VK_in_simple_dml_trigger2883 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000200L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_AFTER_VK_in_simple_dml_trigger2885 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000200L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_INSTEAD_VK_in_simple_dml_trigger2887 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000200L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_FOR_EACH_ROW_in_simple_dml_trigger2890 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_referencing_clause_in_simple_dml_trigger2893 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_dml_event_clause_in_simple_dml_trigger2896 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COMPOUND_DML_in_compound_dml_trigger2932 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_referencing_clause_in_compound_dml_trigger2934 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_dml_event_clause_in_compound_dml_trigger2937 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NON_DML_in_non_dml_trigger2973 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_BEFORE_VK_in_non_dml_trigger2976 = new BitSet(new long[]{0x0000000000000000L,0x0201002000000000L,0x0000000000800008L,0x0000000000040810L,0x0031000000000020L,0x0020000000000080L,0x0000000000000000L,0x0008000000001800L,0x0000000000000000L,0x0008000004000000L,0x0000000000002040L,0x0000040080000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_AFTER_VK_in_non_dml_trigger2978 = new BitSet(new long[]{0x0000000000000000L,0x0201002000000000L,0x0000000000800008L,0x0000000000040810L,0x0031000000000020L,0x0020000000000080L,0x0000000000000000L,0x0008000000001800L,0x0000000000000000L,0x0008000004000000L,0x0000000000002040L,0x0000040080000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_non_dml_event_in_non_dml_trigger2981 = new BitSet(new long[]{0x0000000000000000L,0x0201002000000000L,0x0000000000800008L,0x0000000000040810L,0x0031000000000020L,0x0020000000000080L,0x0000000000000000L,0x0008000000001800L,0x0000000000000000L,0x000C000004000000L,0x0000000000002040L,0x0000040080000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_DATABASE_VK_in_non_dml_trigger2985 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_schema_name_in_non_dml_trigger2987 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
	public static final BitSet FOLLOW_SCHEMA_VK_in_non_dml_trigger2990 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COMPOUND_VK_in_trigger_body3027 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_trigger_name_in_trigger_body3029 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0030000000000000L,0x0000000003000000L,0x0000040120000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060002L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_declare_spec_in_trigger_body3031 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0030000000000000L,0x0000000003000000L,0x0000040120000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060002L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_timing_point_section_in_trigger_body3034 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0030000000000000L,0x0000000003000000L});
	public static final BitSet FOLLOW_CALL_VK_in_trigger_body3062 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_routine_name_in_trigger_body3064 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_function_argument_in_trigger_body3066 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BODY_MODE_in_trigger_body3095 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_block_in_trigger_body3097 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BEFORE_STATEMENT_in_timing_point_section3133 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_block_in_timing_point_section3135 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BEFORE_EACH_ROW_in_timing_point_section3162 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_block_in_timing_point_section3164 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_AFTER_STATEMENT_in_timing_point_section3191 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_block_in_timing_point_section3193 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_AFTER_EACH_ROW_in_timing_point_section3220 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_block_in_timing_point_section3222 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALTER_in_non_dml_event3257 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ANALYZE_VK_in_non_dml_event3282 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ASSOCIATE_VK_in_non_dml_event3307 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
	public static final BitSet FOLLOW_STATISTICS_VK_in_non_dml_event3309 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AUDIT_VK_in_non_dml_event3334 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_COMMENT_VK_in_non_dml_event3359 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_CREATE_in_non_dml_event3384 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DISASSOCIATE_VK_in_non_dml_event3409 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
	public static final BitSet FOLLOW_STATISTICS_VK_in_non_dml_event3411 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DROP_in_non_dml_event3422 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_GRANT_in_non_dml_event3447 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOAUDIT_VK_in_non_dml_event3472 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RENAME_VK_in_non_dml_event3497 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_REVOKE_in_non_dml_event3522 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TRUNCATE_VK_in_non_dml_event3547 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DDL_VK_in_non_dml_event3572 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STARTUP_VK_in_non_dml_event3597 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SHUTDOWN_VK_in_non_dml_event3622 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DB_ROLE_CHANGE_VK_in_non_dml_event3647 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LOGON_VK_in_non_dml_event3672 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LOGOFF_VK_in_non_dml_event3697 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SERVERERROR_VK_in_non_dml_event3722 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SUSPEND_VK_in_non_dml_event3747 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DATABASE_VK_in_non_dml_event3772 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SCHEMA_VK_in_non_dml_event3797 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FOLLOWS_VK_in_non_dml_event3822 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DML_EVENT_in_dml_event_clause3857 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_dml_event_element_in_dml_event_clause3859 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ON_in_dml_event_clause3863 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_tableview_name_in_dml_event_clause3865 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0002000000000000L});
	public static final BitSet FOLLOW_dml_event_nested_clause_in_dml_event_clause3867 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DML_EVENT_ELEMENT_in_dml_event_element3907 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DELETE_in_dml_event_element3910 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_INSERT_in_dml_event_element3912 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UPDATE_in_dml_event_element3914 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_COLUMNS_in_dml_event_element3918 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_dml_event_element3920 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_NESTED_VK_in_dml_event_nested_clause3958 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_tableview_name_in_dml_event_nested_clause3960 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_REFERENCING_VK_in_referencing_clause3996 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_referencing_element_in_referencing_clause3998 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0000000020000800L});
	public static final BitSet FOLLOW_NEW_VK_in_referencing_element4036 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_OLD_VK_in_referencing_element4038 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PARENT_VK_in_referencing_element4040 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_referencing_element4043 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DROP_TYPE_in_drop_type4084 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_name_in_drop_type4086 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L,0x0000000000000000L,0x0080000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_BODY_VK_in_drop_type4088 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_FORCE_VK_in_drop_type4091 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_VALIDATE_VK_in_drop_type4094 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_TYPE_in_alter_type4131 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_name_in_alter_type4133 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2C00000000000000L,0x0000000000000000L,0x0000000000000800L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_REPLACE_VK_in_alter_type4154 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_OBJECT_MEMBERS_in_alter_type4157 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_element_spec_in_alter_type4159 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_invoker_rights_clause_in_alter_type4163 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_ATTRIBUTE_in_alter_type4185 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ADD_VK_in_alter_type4188 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_MODIFY_VK_in_alter_type4190 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DROP_in_alter_type4192 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ATTRIBUTES_in_alter_type4196 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_attribute_definition_in_alter_type4198 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_ALTER_METHOD_in_alter_type4221 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alter_method_element_in_alter_type4223 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_alter_collection_clauses_in_alter_type4244 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_modifier_clause_in_alter_type4263 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
	public static final BitSet FOLLOW_COMPILE_VK_in_alter_type4283 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SPECIFICATION_VK_in_alter_type4286 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_BODY_VK_in_alter_type4288 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_DEBUG_VK_in_alter_type4292 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_REUSE_VK_in_alter_type4295 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_compiler_parameters_clause_in_alter_type4298 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_dependent_handling_clause_in_alter_type4329 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_METHOD_ELEMENT_in_alter_method_element4377 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ADD_VK_in_alter_method_element4380 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000240000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DROP_in_alter_method_element4382 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000240000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_map_order_function_spec_in_alter_method_element4385 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_subprogram_spec_in_alter_method_element4388 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ATTRIBUTE_in_attribute_definition4425 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_attribute_name_in_attribute_definition4427 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_attribute_definition4429 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_COLLECTION_in_alter_collection_clauses4466 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_TYPE_VK_in_alter_collection_clauses4487 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_spec_in_alter_collection_clauses4489 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_LIMIT_VK_in_alter_collection_clauses4510 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_alter_collection_clauses4512 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DEPENDENT_HANDLING_in_dependent_handling_clause4573 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_INVALIDATE_VK_in_dependent_handling_clause4593 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CASCADE_VK_in_dependent_handling_clause4613 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CONVERT_VK_in_dependent_handling_clause4641 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NOT_in_dependent_handling_clause4668 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_INCLUDING_VK_in_dependent_handling_clause4671 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXCEPTIONS_VK_in_dependent_exceptions_part4771 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_FORCE_VK_in_dependent_exceptions_part4773 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_tableview_name_in_dependent_exceptions_part4776 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CREATE_TYPE_BODY_in_create_type4814 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REPLACE_VK_in_create_type4816 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_type_name_in_create_type4819 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_TYPE_BODY_ELEMENTS_in_create_type4822 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_body_elements_in_create_type4824 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000240000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_CREATE_TYPE_SPEC_in_create_type4853 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REPLACE_VK_in_create_type4855 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_type_name_in_create_type4858 = new BitSet(new long[]{0x0000000000008008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_CHAR_STRING_in_create_type4860 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_object_type_def_in_create_type4863 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_OBJECT_TYPE_DEF_in_object_type_def4900 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_object_as_part_in_object_type_def4903 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L,0x0000000000000000L,0x0000000000000000L,0x0010000000000000L,0x0000000400000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_object_under_part_in_object_type_def4905 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000080000L,0x0000000000000000L,0x0000000000000000L,0x0010000000000000L,0x0000000400000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_invoker_rights_clause_in_object_type_def4908 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0010000000000000L,0x0000000400000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_sqlj_object_type_in_object_type_def4924 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_modifier_clause_in_object_type_def4927 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_OBJECT_MEMBERS_in_object_type_def4931 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_element_spec_in_object_type_def4933 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_OBJECT_AS_in_object_as_part4973 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_OBJECT_VK_in_object_as_part4976 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_varray_type_def_in_object_as_part4978 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_nested_table_type_def_in_object_as_part4980 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_UNDER_VK_in_object_under_part5017 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_spec_in_object_under_part5019 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NESTED_TABLE_TYPE_DEF_in_nested_table_type_def5055 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_spec_in_nested_table_type_def5057 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_nested_table_type_def5059 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_table_indexed_by_part_in_nested_table_type_def5062 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_JAVA_VK_in_sqlj_object_type5099 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_sqlj_object_type5101 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_SQLDATA_VK_in_sqlj_object_type5104 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CUSTOMDATUM_VK_in_sqlj_object_type5106 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ORADATA_VK_in_sqlj_object_type5108 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_map_order_func_declaration_in_type_body_elements5144 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subprog_decl_in_type_in_type_body_elements5169 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MAP_VK_in_map_order_func_declaration5205 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ORDER_in_map_order_func_declaration5207 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_create_function_body_in_map_order_func_declaration5210 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MEMBER_VK_in_subprog_decl_in_type5247 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_STATIC_VK_in_subprog_decl_in_type5249 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_create_procedure_body_in_subprog_decl_in_type5269 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_create_function_body_in_subprog_decl_in_type5288 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_constructor_declaration_in_subprog_decl_in_type5307 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CONSTRUCTOR_VK_in_constructor_declaration5366 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_spec_in_constructor_declaration5368 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0001000000000000L,0x0000000020000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_FINAL_VK_in_constructor_declaration5370 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_INSTANTIABLE_VK_in_constructor_declaration5373 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PARAMETERS_in_constructor_declaration5377 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_elements_parameter_in_constructor_declaration5379 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_CALL_MODE_in_constructor_declaration5402 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_call_spec_in_constructor_declaration5404 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BODY_MODE_in_constructor_declaration5425 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_declare_spec_in_constructor_declaration5427 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000040120000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060002L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_body_in_constructor_declaration5430 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MODIFIER_in_modifier_clause5494 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NOT_in_modifier_clause5496 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0001000000000000L,0x0000000020000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_INSTANTIABLE_VK_in_modifier_clause5500 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FINAL_VK_in_modifier_clause5502 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_OVERRIDING_VK_in_modifier_clause5504 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXTERNAL_VK_in_sqlj_object_type_attr5541 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_sqlj_object_type_attr5543 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ELEMENT_SPEC_in_element_spec5579 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_element_spec_options_in_element_spec5581 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L,0x0000000000000000L,0x0000000000040000L,0x0000800000000000L,0x0000000000000000L,0x0000000400240000L,0x0000000000000000L,0x0000000000000004L,0x0000000000000000L,0x0000000400000000L});
	public static final BitSet FOLLOW_modifier_clause_in_element_spec5584 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_pragma_clause_in_element_spec5587 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_subprogram_spec_in_element_spec_options5623 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_constructor_spec_in_element_spec_options5648 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_map_order_function_spec_in_element_spec_options5673 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FIELD_SPEC_in_element_spec_options5699 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_id_in_element_spec_options5701 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_element_spec_options5703 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_sqlj_object_type_attr_in_element_spec_options5705 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MEMBER_VK_in_subprogram_spec5743 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_STATIC_VK_in_subprogram_spec5745 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_procedure_spec_in_subprogram_spec5765 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_function_spec_in_subprogram_spec5784 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CONSTRUCTOR_SPEC_in_constructor_spec5843 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_spec_in_constructor_spec5845 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0001000000000000L,0x0000000020000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_FINAL_VK_in_constructor_spec5847 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_INSTANTIABLE_VK_in_constructor_spec5850 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PARAMETERS_in_constructor_spec5854 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_elements_parameter_in_constructor_spec5856 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_constructor_call_mode_in_constructor_spec5860 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CALL_MODE_in_constructor_call_mode5897 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_call_spec_in_constructor_call_mode5899 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MAP_VK_in_map_order_function_spec5936 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ORDER_in_map_order_function_spec5938 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_function_spec_in_map_order_function_spec5941 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PRAGMA_VK_in_pragma_clause5977 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_pragma_elements_in_pragma_clause5979 = new BitSet(new long[]{0x0000000000000008L,0x0020000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_id_in_pragma_elements6015 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DEFAULT_in_pragma_elements6040 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PARAMETER_in_type_elements_parameter6075 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_name_in_type_elements_parameter6077 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_type_elements_parameter6079 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DROP_SEQUENCE_in_drop_sequence6120 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_sequence_name_in_drop_sequence6122 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALTER_SEQUENCE_in_alter_sequence6158 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_sequence_name_in_alter_sequence6160 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L,0x0000400000000000L,0x0000000000000000L,0x0000000000100000L,0x0B50000008080000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1800000000000000L});
	public static final BitSet FOLLOW_sequence_spec_in_alter_sequence6162 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L,0x0000400000000000L,0x0000000000000000L,0x0000000000100000L,0x0B50000008080000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1800000000000000L});
	public static final BitSet FOLLOW_CREATE_SEQUENCE_in_create_sequence6199 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_sequence_name_in_create_sequence6201 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L,0x0000400000000000L,0x0000000000000000L,0x0000000000100000L,0x0B50000008080000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1800000000000000L});
	public static final BitSet FOLLOW_sequence_spec_in_create_sequence6203 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L,0x0000400000000000L,0x0000000000000000L,0x0000000000100000L,0x0B50000008080000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1800000000000000L});
	public static final BitSet FOLLOW_START_VK_in_sequence_spec6242 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6244 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_INCREMENT_VK_in_sequence_spec6271 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6273 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MAXVALUE_VK_in_sequence_spec6300 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6302 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MINVALUE_VK_in_sequence_spec6329 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6331 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CACHE_VK_in_sequence_spec6358 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UNSIGNED_INTEGER_in_sequence_spec6360 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NOMAXVALUE_VK_in_sequence_spec6386 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOMINVALUE_VK_in_sequence_spec6411 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CYCLE_VK_in_sequence_spec6436 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOCYCLE_VK_in_sequence_spec6461 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOCACHE_VK_in_sequence_spec6486 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ORDER_VK_in_sequence_spec6511 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NOORDER_VK_in_sequence_spec6536 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AUTHID_VK_in_invoker_rights_clause6577 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CURRENT_USER_VK_in_invoker_rights_clause6580 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DEFINER_VK_in_invoker_rights_clause6582 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COMPILER_PARAMETER_in_compiler_parameters_clause6619 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ASSIGN_in_compiler_parameters_clause6622 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_id_in_compiler_parameters_clause6624 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_compiler_parameters_clause6626 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_LANGUAGE_VK_in_call_spec6663 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_java_spec_in_call_spec6667 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_c_spec_in_call_spec6671 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_JAVA_VK_in_java_spec6711 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CHAR_STRING_in_java_spec6713 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_C_VK_in_c_spec6749 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CHAR_STRING_in_c_spec6751 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_CONTEXT_VK_in_c_spec6754 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_LIBRARY_VK_in_c_spec6758 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_id_in_c_spec6760 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_c_agent_in_clause_in_c_spec6763 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_c_parameters_clause_in_c_spec6766 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_AGENT_VK_in_c_agent_in_clause6803 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_c_agent_in_clause6805 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_PARAMETERS_VK_in_c_parameters_clause6842 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_THREE_DOTS_in_c_parameters_clause6845 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_c_parameters_clause6847 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_PARAMETER_in_parameter6887 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_name_in_parameter6889 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x1000200000000000L,0x0000000000000000L,0x0000000110000000L,0x0000020000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_IN_in_parameter6892 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x1000200000000000L,0x0000000000000000L,0x0000000110000000L,0x0000020000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_OUT_VK_in_parameter6894 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x1000200000000000L,0x0000000000000000L,0x0000000110000000L,0x0000020000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_INOUT_VK_in_parameter6896 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x1000200000000000L,0x0000000000000000L,0x0000000110000000L,0x0000020000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_type_spec_in_parameter6900 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_default_value_part_in_parameter6903 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DEFAULT_VALUE_in_default_value_part6940 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_default_value_part6942 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_variable_declaration_in_declare_spec6983 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subtype_declaration_in_declare_spec7009 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cursor_declaration_in_declare_spec7035 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_exception_declaration_in_declare_spec7061 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pragma_declaration_in_declare_spec7087 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_record_declaration_in_declare_spec7113 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_declaration_in_declare_spec7139 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_procedure_body_in_declare_spec7165 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_create_function_body_in_declare_spec7191 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VARIABLE_DECLARE_in_variable_declaration7227 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_variable_name_in_variable_declaration7229 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_variable_declaration7231 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x1000000000010000L});
	public static final BitSet FOLLOW_CONSTANT_VK_in_variable_declaration7233 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_variable_declaration7236 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_default_value_part_in_variable_declaration7239 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SUBTYPE_DECLARE_in_subtype_declaration7282 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_name_in_subtype_declaration7284 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_subtype_declaration7286 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_subtype_declaration7288 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_subtype_range_in_subtype_declaration7291 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RANGE_VK_in_subtype_range7330 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_subtype_range7332 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CURSOR_DECLARE_in_cursor_declaration7370 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_cursor_name_in_cursor_declaration7372 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L,0x0000000004000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_type_spec_in_cursor_declaration7374 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_select_statement_in_cursor_declaration7377 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_PARAMETERS_in_cursor_declaration7381 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_spec_in_cursor_declaration7383 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_PARAMETER_in_parameter_spec7422 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_parameter_name_in_parameter_spec7424 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_parameter_spec7426 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_default_value_part_in_parameter_spec7429 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXCEPTION_DECLARE_in_exception_declaration7467 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_exception_name_in_exception_declaration7469 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PRAGMA_DECLARE_in_pragma_declaration7518 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SERIALLY_REUSABLE_VK_in_pragma_declaration7538 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_AUTONOMOUS_TRANSACTION_VK_in_pragma_declaration7558 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXCEPTION_INIT_VK_in_pragma_declaration7578 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_exception_name_in_pragma_declaration7580 = new BitSet(new long[]{0x0000200008008040L,0x4020000000000000L,0x0000080040002000L,0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008080000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_constant_in_pragma_declaration7582 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_INLINE_VK_in_pragma_declaration7603 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_id_in_pragma_declaration7605 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_pragma_declaration7607 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RESTRICT_REFERENCES_VK_in_pragma_declaration7628 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DEFAULT_in_pragma_declaration7630 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_id_in_pragma_declaration7633 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_record_type_dec_in_record_declaration7693 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_record_var_dec_in_record_declaration7718 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RECORD_TYPE_DECLARE_in_record_type_dec7756 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_name_in_record_type_dec7758 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000400000000000L,0x0000000100000000L,0x0000020000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_REF_VK_in_record_type_dec7760 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000400000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_record_type_dec7763 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_FIELDS_in_record_type_dec7767 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_field_spec_in_record_type_dec7769 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_FIELD_SPEC_in_field_spec7807 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_field_spec7809 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x1000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_field_spec7811 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_field_spec7814 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_default_value_part_in_field_spec7817 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RECORD_VAR_DECLARE_in_record_var_dec7854 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_record_name_in_record_var_dec7856 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
	public static final BitSet FOLLOW_type_name_in_record_var_dec7858 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000006000000000L});
	public static final BitSet FOLLOW_PERCENT_ROWTYPE_VK_in_record_var_dec7861 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PERCENT_TYPE_VK_in_record_var_dec7863 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_table_type_dec_in_table_declaration7901 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_table_var_dec_in_table_declaration7926 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TABLE_TYPE_DECLARE_in_table_type_dec7961 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_name_in_table_type_dec7963 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000004002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_varray_type_def_in_table_type_dec7983 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_table_type_dec8002 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_TABLE_in_table_type_dec8006 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_spec_in_table_type_dec8008 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_table_indexed_by_part_in_table_type_dec8010 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_INDEXED_BY_in_table_indexed_by_part8071 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_spec_in_table_indexed_by_part8073 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_varray_type_def8108 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
	public static final BitSet FOLLOW_VARR_ARRAY_DEF_in_varray_type_def8112 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_varray_type_def8114 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_varray_type_def8116 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_TABLE_VAR_DECLARE_in_table_var_dec8152 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_table_var_name_in_table_var_dec8154 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_table_var_dec8156 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_STATEMENTS_in_seq_of_statements8197 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_statement_in_seq_of_statements8199 = new BitSet(new long[]{0x0000000000000008L,0x8040000000000024L,0x0000000200002084L,0x1000001400000400L,0x0000000000400080L,0x0240006000000000L,0x0080000000000000L,0x0000000001008000L,0x0000020000002000L,0x4021014080000800L,0x0000000000020500L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_label_declaration_in_statement8235 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_assignment_statement_in_statement8260 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_continue_statement_in_statement8285 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_exit_statement_in_statement8310 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_goto_statement_in_statement8335 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_if_statement_in_statement8360 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_loop_statement_in_statement8385 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_forall_statement_in_statement8410 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_null_statement_in_statement8435 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_raise_statement_in_statement8460 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_return_statement_in_statement8485 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_pipe_row_statement_in_statement8510 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_case_statement_in_statement8535 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_sql_statement_in_statement8560 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_function_call_in_statement8585 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_body_in_statement8610 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_block_in_statement8635 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LABEL_DECLARE_in_label_declaration8670 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_label_declaration8672 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ASSIGN_in_assignment_statement8709 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_general_element_in_assignment_statement8711 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_assignment_statement8713 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CONTINUE_VK_in_continue_statement8749 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_continue_statement8751 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_general_when_in_continue_statement8754 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WHEN_in_general_when8791 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_general_when8793 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXIT_VK_in_exit_statement8829 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_exit_statement8831 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_general_when_in_exit_statement8834 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_GOTO_in_goto_statement8871 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_goto_statement8873 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_IF_in_if_statement8909 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_if_statement8911 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_if_statement8913 = new BitSet(new long[]{0x0080000000000008L,0x0400000000000000L});
	public static final BitSet FOLLOW_elsif_part_in_if_statement8915 = new BitSet(new long[]{0x0080000000000008L,0x0400000000000000L});
	public static final BitSet FOLLOW_else_part_in_if_statement8918 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_NON_RESERVED_ELSIF_in_elsif_part8955 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_elsif_part8957 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_elsif_part8959 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ELSE_in_else_part8995 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_seq_of_statements_in_else_part8997 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_WHILE_LOOP_in_loop_statement9033 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_loop_statement9035 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0100000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_loop_statement9038 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_loop_statement9040 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FOR_LOOP_in_loop_statement9067 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_loop_statement9069 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0000000000000000L,0x0100000000800000L,0x0000000000000000L,0x0000000000000000L,0x0400000000000000L});
	public static final BitSet FOLLOW_cursor_loop_param_in_loop_statement9072 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_loop_statement9074 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_LOOP_VK_in_loop_statement9101 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_loop_statement9103 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_loop_statement9106 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_INDEXED_FOR_in_cursor_loop_param9144 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_index_name_in_cursor_loop_param9146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_REVERSE_VK_in_cursor_loop_param9148 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_SIMPLE_BOUND_in_cursor_loop_param9152 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_cursor_loop_param9154 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_cursor_loop_param9156 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CURSOR_BASED_FOR_in_cursor_loop_param9184 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_record_name_in_cursor_loop_param9186 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_cursor_name_in_cursor_loop_param9188 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_expression_list_in_cursor_loop_param9190 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SELECT_BASED_FOR_in_cursor_loop_param9218 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_record_name_in_cursor_loop_param9220 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_select_statement_in_cursor_loop_param9222 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FORALL_VK_in_forall_statement9260 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_index_name_in_forall_statement9262 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L,0x0000000000000000L,0x0000000000080000L});
	public static final BitSet FOLLOW_bounds_clause_in_forall_statement9264 = new BitSet(new long[]{0x0000000000000000L,0x8040000000000020L,0x0000000200000080L,0x1000000000000000L,0x0000000000000080L,0x0000002000000000L,0x0000000000000000L,0x0000000001000000L,0x0000000000002000L,0x4001004000000000L,0x0000000000000500L});
	public static final BitSet FOLLOW_sql_statement_in_forall_statement9266 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_EXCEPTIONS_VK_in_forall_statement9268 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SIMPLE_BOUND_in_bounds_clause9305 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_bounds_clause9307 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_bounds_clause9309 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_INDICES_BOUND_in_bounds_clause9336 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_collection_name_in_bounds_clause9338 = new BitSet(new long[]{0x0000000000000008L,0x0000080000000000L});
	public static final BitSet FOLLOW_between_bound_in_bounds_clause9340 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_VALUES_BOUND_in_bounds_clause9368 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_index_name_in_bounds_clause9370 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_BETWEEN_in_between_bound9407 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_between_bound9409 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_between_bound9411 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_null_statement9446 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RAISE_VK_in_raise_statement9481 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_exception_name_in_raise_statement9483 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RETURN_VK_in_return_statement9520 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_return_statement9522 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROUTINE_CALL_in_function_call9559 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_general_element_in_function_call9561 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BODY_in_body9597 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_body9599 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_body9602 = new BitSet(new long[]{0x0000000000000008L,0x1000000000000000L});
	public static final BitSet FOLLOW_exception_clause_in_body9604 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_EXCEPTION_in_exception_clause9644 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_exception_handler_in_exception_clause9646 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WHEN_in_exception_handler9683 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_exception_name_in_exception_handler9685 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_exception_handler9688 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BLOCK_in_block9726 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_declare_spec_in_block9728 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000040120000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000060002L,0x0000000000000000L,0x0003020000000000L,0x0000000000800000L});
	public static final BitSet FOLLOW_body_in_block9731 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_execute_immediate_in_sql_statement9770 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_data_manipulation_language_statements_in_sql_statement9795 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_cursor_manipulation_statements_in_sql_statement9820 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_transaction_control_statements_in_sql_statement9845 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_EXECUTE_VK_in_execute_immediate9880 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_execute_immediate9882 = new BitSet(new long[]{0x0800000000000008L,0x0000000000000000L,0x0000000000000200L,0x0000040000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_into_clause_in_execute_immediate9885 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_using_clause_in_execute_immediate9887 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_dynamic_returning_clause_in_execute_immediate9889 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DYNAMIC_RETURN_in_dynamic_returning_clause9929 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_into_clause_in_dynamic_returning_clause9931 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_merge_statement_in_data_manipulation_language_statements9970 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_lock_table_statement_in_data_manipulation_language_statements9995 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_select_statement_in_data_manipulation_language_statements10020 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_update_statement_in_data_manipulation_language_statements10046 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_delete_statement_in_data_manipulation_language_statements10072 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_insert_statement_in_data_manipulation_language_statements10097 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SELECT_STATEMENT_in_select_statement10132 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_subquery_factoring_clause_in_select_statement10134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_subquery_in_select_statement10137 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040001L});
	public static final BitSet FOLLOW_for_update_clause_in_select_statement10139 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040001L});
	public static final BitSet FOLLOW_order_by_clause_in_select_statement10142 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WITH_in_subquery_factoring_clause10182 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_factoring_element_in_subquery_factoring_clause10184 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_FACTORING_in_factoring_element10221 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_query_name_in_factoring_element10223 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_subquery_in_factoring_element10225 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SUBQUERY_in_subquery10261 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_subquery_basic_elements_in_subquery10263 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000040L,0x0000000080000100L});
	public static final BitSet FOLLOW_subquery_operation_part_in_subquery10265 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000040L,0x0000000080000100L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UNION_in_subquery_operation_part10303 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_INTERSECT_in_subquery_operation_part10305 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_MINUS_in_subquery_operation_part10307 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_subquery_operation_part10310 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000001000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_subquery_basic_elements_in_subquery_operation_part10313 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_query_block_in_subquery_basic_elements10348 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subquery_in_subquery_basic_elements10373 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_SELECT_in_query_block10408 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_from_clause_in_query_block10423 = new BitSet(new long[]{0x0000000000000100L,0x0100001000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DISTINCT_in_query_block10439 = new BitSet(new long[]{0x0000000000000100L,0x0000001000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UNIQUE_in_query_block10441 = new BitSet(new long[]{0x0000000000000100L,0x0000001000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_query_block10445 = new BitSet(new long[]{0x0000000000000100L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_ASTERISK_in_query_block10466 = new BitSet(new long[]{0x0100000000000008L,0x0000000000000000L,0x0000002000000230L,0x0000040000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_SELECT_LIST_in_query_block10486 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_selected_element_in_query_block10488 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_into_clause_in_query_block10518 = new BitSet(new long[]{0x0100000000000008L,0x0000000000000000L,0x0000002000000030L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_where_clause_in_query_block10521 = new BitSet(new long[]{0x0100000000000008L,0x0000000000000000L,0x0000000000000030L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_hierarchical_query_clause_in_query_block10524 = new BitSet(new long[]{0x0100000000000008L,0x0000000000000000L,0x0000000000000030L});
	public static final BitSet FOLLOW_group_by_clause_in_query_block10540 = new BitSet(new long[]{0x0100000000000008L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_having_clause_in_query_block10543 = new BitSet(new long[]{0x0100000000000008L});
	public static final BitSet FOLLOW_model_clause_in_query_block10546 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SELECT_ITEM_in_selected_element10592 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_selected_element10594 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_alias_in_selected_element10596 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_FROM_in_from_clause10633 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_table_ref_in_from_clause10635 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_TABLE_REF_in_table_ref10672 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_table_ref_aux_in_table_ref10674 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_join_clause_in_table_ref10676 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_TABLE_REF_ELEMENT_in_table_ref_aux10713 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_table_ref_aux10715 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000600000000000L});
	public static final BitSet FOLLOW_dml_table_expression_clause_in_table_ref_aux10718 = new BitSet(new long[]{0x0000000000000008L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000001000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000800L});
	public static final BitSet FOLLOW_ONLY_VK_in_table_ref_aux10720 = new BitSet(new long[]{0x0000000000000008L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000800L});
	public static final BitSet FOLLOW_pivot_clause_in_table_ref_aux10723 = new BitSet(new long[]{0x0000000000000008L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000800L});
	public static final BitSet FOLLOW_unpivot_clause_in_table_ref_aux10726 = new BitSet(new long[]{0x0000000000000008L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_flashback_query_clause_in_table_ref_aux10729 = new BitSet(new long[]{0x0000000000000008L,0x0000010000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L});
	public static final BitSet FOLLOW_JOIN_DEF_in_join_clause10766 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CROSS_VK_in_join_clause10769 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L,0x8000000008000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_NATURAL_VK_in_join_clause10771 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L,0x8000000008000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_INNER_VK_in_join_clause10776 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_FULL_VK_in_join_clause10778 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_LEFT_VK_in_join_clause10780 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_RIGHT_VK_in_join_clause10782 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_table_ref_aux_in_join_clause10786 = new BitSet(new long[]{0x0800000000000008L,0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_query_partition_clause_in_join_clause10788 = new BitSet(new long[]{0x0800000000000008L,0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_join_on_part_in_join_clause10792 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_join_using_part_in_join_clause10794 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ON_in_join_on_part10833 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_join_on_part10835 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_NON_RESERVED_USING_in_join_using_part10872 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_join_using_part10874 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_PARTITION_VK_in_query_partition_clause10911 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_subquery_in_query_partition_clause10914 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_list_in_query_partition_clause10916 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_query_partition_clause10918 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_VERSIONS_VK_in_flashback_query_clause10957 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_AS_in_flashback_query_clause10959 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SCN_VK_in_flashback_query_clause10963 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_TIMESTAMP_VK_in_flashback_query_clause10965 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_flashback_query_clause10969 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PIVOT_VK_in_pivot_clause11006 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_XML_VK_in_pivot_clause11008 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_pivot_element_in_pivot_clause11011 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_pivot_for_clause_in_pivot_clause11014 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_pivot_in_clause_in_pivot_clause11016 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PIVOT_ELEMENT_in_pivot_element11052 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_pivot_element11054 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_pivot_element11057 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_FOR_in_pivot_for_clause11093 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_pivot_for_clause11095 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_IN_in_pivot_in_clause11132 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_subquery_in_pivot_in_clause11148 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ANY_MODE_in_pivot_in_clause11164 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ANY_in_pivot_in_clause11166 = new BitSet(new long[]{0x0000000000000008L,0x0000008000000000L});
	public static final BitSet FOLLOW_ELEMENTS_MODE_in_pivot_in_clause11184 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_pivot_in_clause_element_in_pivot_in_clause11186 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_PIVOT_IN_ELEMENT_in_pivot_in_clause_element11243 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_pivot_in_clause_element11245 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000030000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_pivot_in_clause_element11249 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_list_in_pivot_in_clause_element11251 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_UNPIVOT_VK_in_unpivot_clause11288 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_INCLUDE_VK_in_unpivot_clause11292 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_EXCLUDE_VK_in_unpivot_clause11294 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_NULLS_VK_in_unpivot_clause11297 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_column_name_in_unpivot_clause11302 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000001L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_pivot_for_clause_in_unpivot_clause11305 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_unpivot_in_clause_in_unpivot_clause11307 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_IN_in_unpivot_in_clause11343 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_unpivot_in_element_in_unpivot_in_clause11345 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_UNPIVOT_IN_ELEMENT_in_unpivot_in_element11382 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_unpivot_in_element11384 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_PIVOT_ALIAS_in_unpivot_in_element11388 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_unpivot_in_element11391 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_list_in_unpivot_in_element11393 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_HIERARCHICAL_in_hierarchical_query_clause11431 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_start_part_in_hierarchical_query_clause11433 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_CONNECT_in_hierarchical_query_clause11437 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_NOCYCLE_VK_in_hierarchical_query_clause11439 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_hierarchical_query_clause11442 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_START_in_start_part11479 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_start_part11481 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_GROUP_in_group_by_clause11517 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_group_by_element_in_group_by_clause11519 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000040L});
	public static final BitSet FOLLOW_GROUP_BY_ELEMENT_in_group_by_element11556 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_group_by_elements_in_group_by_element11558 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_GROUPING_VK_in_group_by_elements11594 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_groupin_set_in_group_by_elements11596 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_grouping_element_in_group_by_elements11623 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_GROUPIN_SET_in_groupin_set11659 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_grouping_element_in_groupin_set11661 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROLLUP_VK_in_grouping_element11698 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CUBE_VK_in_grouping_element11700 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_grouping_element_in_grouping_element11703 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L,0x0000030000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_expression_list_in_grouping_element11730 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_grouping_element11755 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_HAVING_in_having_clause11791 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_having_clause11793 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_NON_RESERVED_MODEL_in_model_clause11829 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_main_model_in_model_clause11831 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000008000L,0x0000000000000000L,0x0000000000000000L,0x0000000080100000L});
	public static final BitSet FOLLOW_cell_reference_options_in_model_clause11833 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000008000L,0x0000000000000000L,0x0000000000000000L,0x0000000080100000L});
	public static final BitSet FOLLOW_return_rows_clause_in_model_clause11836 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_reference_model_in_model_clause11839 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_set_in_cell_reference_options11876 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_NAV_VK_in_cell_reference_options11882 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UNIQUE_in_cell_reference_options11895 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_DIMENSION_VK_in_cell_reference_options11898 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SINGLE_VK_in_cell_reference_options11900 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RETURN_VK_in_return_rows_clause11937 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UPDATED_VK_in_return_rows_clause11940 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_return_rows_clause11942 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_REFERENCE_VK_in_reference_model11979 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_reference_model_name_in_reference_model11981 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_subquery_in_reference_model11983 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_model_column_clauses_in_reference_model11985 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000008000L});
	public static final BitSet FOLLOW_cell_reference_options_in_reference_model11987 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000008000L});
	public static final BitSet FOLLOW_MAIN_MODEL_in_main_model12024 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_main_model_name_in_main_model12026 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_model_column_clauses_in_main_model12029 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_model_rules_clause_in_main_model12031 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000008000L});
	public static final BitSet FOLLOW_cell_reference_options_in_main_model12033 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000008000L});
	public static final BitSet FOLLOW_MODEL_COLUMN_in_model_column_clauses12070 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_DIMENSION_VK_in_model_column_clauses12073 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_model_column_list_in_model_column_clauses12075 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MEASURES_VK_in_model_column_clauses12079 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_model_column_list_in_model_column_clauses12081 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_model_column_partition_part_in_model_column_clauses12084 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PARTITION_VK_in_model_column_partition_part12121 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_model_column_list_in_model_column_partition_part12123 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MODEL_COLUMNS_in_model_column_list12159 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_model_column_in_model_column_list12161 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_MODEL_COLUMN_in_model_column12198 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_model_column12200 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_model_column12203 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MODEL_RULES_in_model_rules_clause12240 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_model_rules_element_in_model_rules_clause12242 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_model_rules_part_in_model_rules_clause12245 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RULES_VK_in_model_rules_part12282 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UPDATE_in_model_rules_part12298 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_UPSERT_VK_in_model_rules_part12300 = new BitSet(new long[]{0x0000000000000008L,0x0000001000000000L,0x0000000000000000L,0x0000000000100000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_model_rules_part12302 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_AUTOMATIC_VK_in_model_rules_part12321 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
	public static final BitSet FOLLOW_SEQUENTIAL_VK_in_model_rules_part12323 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
	public static final BitSet FOLLOW_model_iterate_clause_in_model_rules_part12340 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MODEL_RULE_in_model_rules_element12386 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ASSIGN_in_model_rules_element12402 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_model_expression_in_model_rules_element12404 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_model_rules_element12406 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UPDATE_in_model_rules_element12423 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_UPSERT_VK_in_model_rules_element12425 = new BitSet(new long[]{0x0000000000000008L,0x0000001000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_model_rules_element12427 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_order_by_clause_in_model_rules_element12445 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ITERATE_VK_in_model_iterate_clause12491 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_model_iterate_clause12493 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_until_part_in_model_iterate_clause12495 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_UNTIL_VK_in_until_part12532 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_until_part12534 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ORDER_in_order_by_clause12570 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SIBLINGS_VK_in_order_by_clause12572 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_ORDER_BY_ELEMENTS_in_order_by_clause12576 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_order_by_elements_in_order_by_clause12578 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
	public static final BitSet FOLLOW_ORDER_BY_ELEMENT_in_order_by_elements12616 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_order_by_elements12618 = new BitSet(new long[]{0x0000000000000008L,0x0080020000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ASC_in_order_by_elements12621 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DESC_in_order_by_elements12623 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_NULLS_VK_in_order_by_elements12628 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_FIRST_VK_in_order_by_elements12631 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_LAST_VK_in_order_by_elements12633 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_FOR_in_for_update_clause12672 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_for_update_of_part_in_for_update_clause12674 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000200L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_for_update_options_in_for_update_clause12677 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_OF_in_for_update_of_part12714 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_for_update_of_part12716 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_SKIP_VK_in_for_update_options12752 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_NOWAIT_in_for_update_options12777 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_WAIT_VK_in_for_update_options12803 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_for_update_options12805 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UPDATE_in_update_statement12843 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_general_table_ref_in_update_statement12845 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_update_set_clause_in_update_statement12859 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_where_clause_in_update_statement12873 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_static_returning_clause_in_update_statement12876 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_error_logging_clause_in_update_statement12879 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SET_VK_in_update_set_clause12926 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_update_set_elements_in_update_set_clause12928 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_ASSIGN_in_update_set_elements12965 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_update_set_elements12967 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_update_set_elements12969 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ASSIGN_in_update_set_elements12996 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_update_set_elements12998 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_subquery_in_update_set_elements13001 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_VALUE_VK_in_update_set_elements13028 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_update_set_elements13030 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_update_set_elements13033 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_update_set_elements13035 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DELETE_in_delete_statement13073 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_general_table_ref_in_delete_statement13075 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_where_clause_in_delete_statement13089 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_static_returning_clause_in_delete_statement13092 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_error_logging_clause_in_delete_statement13095 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_INSERT_in_insert_statement13132 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_single_table_insert_in_insert_statement13147 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_multi_table_insert_in_insert_statement13162 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SINGLE_TABLE_MODE_in_single_table_insert13219 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_insert_into_clause_in_single_table_insert13221 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_values_clause_in_single_table_insert13224 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_static_returning_clause_in_single_table_insert13226 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_select_statement_in_single_table_insert13230 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_error_logging_clause_in_single_table_insert13233 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MULTI_TABLE_MODE_in_multi_table_insert13270 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_select_statement_in_multi_table_insert13272 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000008000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_conditional_insert_clause_in_multi_table_insert13275 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_multi_table_element_in_multi_table_insert13277 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_TABLE_ELEMENT_in_multi_table_element13315 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_insert_into_clause_in_multi_table_element13317 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000400000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_values_clause_in_multi_table_element13319 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_error_logging_clause_in_multi_table_element13322 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CONDITIONAL_INSERT_in_conditional_insert_clause13359 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_conditional_insert_clause13362 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_FIRST_VK_in_conditional_insert_clause13364 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_conditional_insert_when_part_in_conditional_insert_clause13368 = new BitSet(new long[]{0x0000000000000008L,0x0400000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_conditional_insert_else_part_in_conditional_insert_clause13371 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WHEN_in_conditional_insert_when_part13409 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_conditional_insert_when_part13411 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_multi_table_element_in_conditional_insert_when_part13413 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ELSE_in_conditional_insert_else_part13450 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_multi_table_element_in_conditional_insert_else_part13452 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_INTO_in_insert_into_clause13489 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_general_table_ref_in_insert_into_clause13491 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
	public static final BitSet FOLLOW_COLUMNS_in_insert_into_clause13494 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_insert_into_clause13496 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_VALUES_in_values_clause13534 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_list_in_values_clause13537 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_values_clause13539 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MERGE_VK_in_merge_statement13577 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_merge_statement13579 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000000000L});
	public static final BitSet FOLLOW_tableview_name_in_merge_statement13582 = new BitSet(new long[]{0x0800000000000000L});
	public static final BitSet FOLLOW_PLSQL_NON_RESERVED_USING_in_merge_statement13598 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_selected_tableview_in_merge_statement13600 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_merge_statement13602 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_merge_update_clause_in_merge_statement13618 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000402000L});
	public static final BitSet FOLLOW_merge_insert_clause_in_merge_statement13621 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_error_logging_clause_in_merge_statement13624 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MERGE_UPDATE_in_merge_update_clause13663 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_merge_element_in_merge_update_clause13665 = new BitSet(new long[]{0x0000000000000008L,0x0040000000000000L,0x0000002000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_where_clause_in_merge_update_clause13668 = new BitSet(new long[]{0x0000000000000008L,0x0040000000000000L});
	public static final BitSet FOLLOW_merge_update_delete_part_in_merge_update_clause13671 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ASSIGN_in_merge_element13708 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_merge_element13710 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_merge_element13712 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DELETE_in_merge_update_delete_part13748 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_where_clause_in_merge_update_delete_part13750 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MERGE_INSERT_in_merge_insert_clause13786 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_COLUMNS_in_merge_insert_clause13789 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_merge_insert_clause13791 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_expression_list_in_merge_insert_clause13795 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_where_clause_in_merge_insert_clause13797 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SELECTED_TABLEVIEW_in_selected_tableview13835 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_selected_tableview13837 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000090000000000L});
	public static final BitSet FOLLOW_tableview_name_in_selected_tableview13841 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_subquery_in_selected_tableview13843 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_LOCK_in_lock_table_statement13882 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_lock_table_element_in_lock_table_statement13884 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000801L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_lock_mode_in_lock_table_statement13887 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000200L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
	public static final BitSet FOLLOW_wait_nowait_part_in_lock_table_statement13889 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_WAIT_VK_in_wait_nowait_part13926 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_wait_nowait_part13928 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_NOWAIT_in_wait_nowait_part13954 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LOCK_TABLE_ELEMENT_in_lock_table_element13991 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_tableview_name_in_lock_table_element13993 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_partition_extension_clause_in_lock_table_element13995 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROW_VK_in_lock_mode14031 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_SHARE_in_lock_mode14033 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ROW_VK_in_lock_mode14058 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_EXCLUSIVE_in_lock_mode14060 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_SHARE_in_lock_mode14085 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UPDATE_in_lock_mode14087 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_SHARE_in_lock_mode14113 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000100000000000L});
	public static final BitSet FOLLOW_ROW_VK_in_lock_mode14115 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_EXCLUSIVE_in_lock_mode14117 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_EXCLUSIVE_in_lock_mode14142 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TABLE_REF_in_general_table_ref14180 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_alias_in_general_table_ref14182 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000600000000000L});
	public static final BitSet FOLLOW_dml_table_expression_clause_in_general_table_ref14185 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_ONLY_VK_in_general_table_ref14187 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_STATIC_RETURNING_in_static_returning_clause14224 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_static_returning_clause14226 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L,0x0000040000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_into_clause_in_static_returning_clause14229 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_LOG_VK_in_error_logging_clause14265 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_error_logging_into_part_in_error_logging_clause14267 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_expression_in_error_logging_clause14270 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_error_logging_reject_part_in_error_logging_clause14273 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_INTO_in_error_logging_into_part14310 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_tableview_name_in_error_logging_into_part14312 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_REJECT_VK_in_error_logging_reject_part14348 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UNLIMITED_VK_in_error_logging_reject_part14351 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_error_logging_reject_part14353 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_TABLE_EXPRESSION_in_dml_table_expression_clause14390 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_COLLECTION_MODE_in_dml_table_expression_clause14407 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_dml_table_expression_clause14409 = new BitSet(new long[]{0x0000000000000008L,0x0000000000008000L});
	public static final BitSet FOLLOW_PLUS_SIGN_in_dml_table_expression_clause14411 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SELECT_MODE_in_dml_table_expression_clause14429 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_select_statement_in_dml_table_expression_clause14431 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000004000000000L});
	public static final BitSet FOLLOW_subquery_restriction_clause_in_dml_table_expression_clause14433 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DIRECT_MODE_in_dml_table_expression_clause14451 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_tableview_name_in_dml_table_expression_clause14453 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
	public static final BitSet FOLLOW_sample_clause_in_dml_table_expression_clause14455 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_table_ref_in_dml_table_expression_clause14472 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_general_element_in_dml_table_expression_clause14487 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_table_ref_in_dml_table_expression_clause14536 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WITH_in_subquery_restriction_clause14571 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_READ_VK_in_subquery_restriction_clause14574 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_CHECK_in_subquery_restriction_clause14576 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_constraint_name_in_subquery_restriction_clause14578 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SAMPLE_VK_in_sample_clause14616 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_BLOCK_VK_in_sample_clause14618 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_sample_clause14621 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_seed_part_in_sample_clause14623 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SEED_VK_in_seed_part14661 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_seed_part14663 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_close_statement_in_cursor_manipulation_statements14704 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_open_statement_in_cursor_manipulation_statements14729 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_fetch_statement_in_cursor_manipulation_statements14754 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_open_for_statement_in_cursor_manipulation_statements14779 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CLOSE_VK_in_close_statement14815 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_variable_name_in_close_statement14817 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_OPEN_VK_in_open_statement14854 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_cursor_name_in_open_statement14856 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_expression_list_in_open_statement14858 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_FETCH_in_fetch_statement14895 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_cursor_name_in_fetch_statement14897 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L,0x0000040000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_INTO_in_fetch_statement14918 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_variable_name_in_fetch_statement14920 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000800L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_BULK_VK_in_fetch_statement14942 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_variable_name_in_fetch_statement14944 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000800L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000001000000L});
	public static final BitSet FOLLOW_OPEN_VK_in_open_for_statement15005 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_variable_name_in_open_for_statement15007 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x4000000000000000L});
	public static final BitSet FOLLOW_expression_in_open_for_statement15010 = new BitSet(new long[]{0x0800000000000008L});
	public static final BitSet FOLLOW_select_statement_in_open_for_statement15012 = new BitSet(new long[]{0x0800000000000008L});
	public static final BitSet FOLLOW_using_clause_in_open_for_statement15015 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_set_transaction_command_in_transaction_control_statements15055 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_set_constraint_command_in_transaction_control_statements15080 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_commit_statement_in_transaction_control_statements15105 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_rollback_statement_in_transaction_control_statements15130 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_savepoint_statement_in_transaction_control_statements15155 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SET_TRANSACTION_in_set_transaction_command15190 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CHAR_STRING_in_set_transaction_command15192 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004000004000L});
	public static final BitSet FOLLOW_READ_VK_in_set_transaction_command15213 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ONLY_VK_in_set_transaction_command15216 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_WRITE_VK_in_set_transaction_command15218 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ISOLATION_VK_in_set_transaction_command15240 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SERIALIZABLE_VK_in_set_transaction_command15243 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COMMITTED_VK_in_set_transaction_command15245 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROLLBACK_VK_in_set_transaction_command15267 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_rollback_segment_name_in_set_transaction_command15269 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SET_CONSTRAINT_in_set_constraint_command15330 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_set_constraint_command15333 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_constraint_name_in_set_constraint_command15335 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x2000000000020000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_IMMEDIATE_VK_in_set_constraint_command15340 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DEFERRED_VK_in_set_constraint_command15342 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COMMIT_VK_in_commit_statement15380 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_WORK_VK_in_commit_statement15382 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L,0x0080000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
	public static final BitSet FOLLOW_COMMENT_VK_in_commit_statement15404 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_commit_statement15406 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FORCE_VK_in_commit_statement15427 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CORRUPT_XID_VK_in_commit_statement15430 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_commit_statement15432 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CORRUPT_XID_ALL_VK_in_commit_statement15434 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_commit_statement15436 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_commit_statement15438 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_write_clause_in_commit_statement15470 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_WRITE_VK_in_write_clause15516 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_WAIT_VK_in_write_clause15519 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_PLSQL_RESERVED_NOWAIT_in_write_clause15521 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000800000L,0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
	public static final BitSet FOLLOW_IMMEDIATE_VK_in_write_clause15526 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BATCH_VK_in_write_clause15528 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROLLBACK_VK_in_rollback_statement15567 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_WORK_VK_in_rollback_statement15569 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000020000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_TO_in_rollback_statement15591 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_savepoint_name_in_rollback_statement15593 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FORCE_VK_in_rollback_statement15614 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_CHAR_STRING_in_rollback_statement15616 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SAVEPOINT_VK_in_savepoint_statement15677 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_savepoint_name_in_savepoint_statement15679 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PIPE_ROW_in_pipe_row_statement15720 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_pipe_row_statement15722 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXPR_LIST_in_expression_list15762 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_expression_list15764 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_LOGIC_EXPR_in_expression15801 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression15803 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXPR_in_expression15830 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression15832 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_OR_in_expression_element15868 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element15870 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element15872 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_AND_in_expression_element15899 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element15901 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element15903 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NOT_in_expression_element15930 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element15932 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EQUALS_OP_in_expression_element15960 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_NOT_EQUAL_OP_in_expression_element15962 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_LESS_THAN_OP_in_expression_element15964 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_GREATER_THAN_OP_in_expression_element15966 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_LESS_THAN_OR_EQUALS_OP_in_expression_element15968 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_GREATER_THAN_OR_EQUALS_OP_in_expression_element15970 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element15973 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element15975 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NOT_NULL_in_expression_element16003 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16005 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NULL_in_expression_element16032 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16034 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NOT_NAN_in_expression_element16061 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16063 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NAN_in_expression_element16090 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16092 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NOT_PRESENT_in_expression_element16119 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16121 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_PRESENT_in_expression_element16148 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16150 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NOT_INFINITE_in_expression_element16177 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16179 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_INFINITE_in_expression_element16206 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16208 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NOT_A_SET_in_expression_element16235 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16237 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_A_SET_in_expression_element16264 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16266 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NOT_EMPTY_in_expression_element16293 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16295 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_EMPTY_in_expression_element16322 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16324 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_IS_NOT_OF_TYPE_in_expression_element16351 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16353 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_expression_element16355 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_IS_OF_TYPE_in_expression_element16383 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16385 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_expression_element16387 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_MEMBER_VK_in_expression_element16417 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SUBMULTISET_VK_in_expression_element16419 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16422 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16424 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NOT_IN_in_expression_element16452 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16454 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_in_elements_in_expression_element16456 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_IN_in_expression_element16483 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16485 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_in_elements_in_expression_element16487 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NOT_BETWEEN_in_expression_element16514 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16516 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16518 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16520 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_BETWEEN_in_expression_element16547 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16549 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16551 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16553 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NOT_LIKE_in_expression_element16580 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16582 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16584 = new BitSet(new long[]{0x00022C018C108148L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16586 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_LIKE_in_expression_element16615 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_LIKEC_VK_in_expression_element16617 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_LIKE2_VK_in_expression_element16619 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_LIKE4_VK_in_expression_element16621 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16624 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16626 = new BitSet(new long[]{0x00022C018C108148L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16628 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CONCATENATION_OP_in_expression_element16657 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16659 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16661 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLUS_SIGN_in_expression_element16688 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16690 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16692 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MINUS_SIGN_in_expression_element16719 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16721 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16723 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ASTERISK_in_expression_element16750 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16752 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16754 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SOLIDUS_in_expression_element16781 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16783 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16785 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MOD_VK_in_expression_element16812 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16814 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16816 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DIV_VK_in_expression_element16843 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16845 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16847 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PIPE_VK_in_expression_element16874 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16876 = new BitSet(new long[]{0x00022C018C108140L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16878 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_UNARY_OPERATOR_in_expression_element16906 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16908 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_PRIOR_in_expression_element16935 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16937 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NEW_VK_in_expression_element16964 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_expression_element16966 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DISTINCT_in_expression_element16993 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element16995 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_STANDARD_FUNCTION_in_expression_element17022 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_standard_function_in_expression_element17024 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SOME_VK_in_expression_element17052 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_EXISTS_in_expression_element17054 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ALL_in_expression_element17056 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ANY_in_expression_element17058 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element17061 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_VECTOR_EXPR_in_expression_element17088 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element17090 = new BitSet(new long[]{0x00022C018C108148L,0x612008D400008000L,0x0000080040123840L,0x0004000000000020L,0x000A000000000000L,0x0000000000001100L,0x0047FFE000001400L,0xA004001088280038L,0x0000041E00040001L,0x0020010000000000L,0x0000000002020080L,0x0000014040000000L,0x0000000004000040L});
	public static final BitSet FOLLOW_DATETIME_OP_in_expression_element17119 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element17121 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000020000L,0x0004000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_datetime_element_in_expression_element17123 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_model_expression_in_expression_element17149 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_KEEP_VK_in_expression_element17175 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element17177 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
	public static final BitSet FOLLOW_DENSE_RANK_VK_in_expression_element17179 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_FIRST_VK_in_expression_element17182 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_LAST_VK_in_expression_element17184 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_order_by_clause_in_expression_element17187 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_over_clause_in_expression_element17189 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DOT_ASTERISK_in_expression_element17218 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_tableview_name_in_expression_element17220 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PERCENT_FOUND_VK_in_expression_element17248 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PERCENT_NOTFOUND_VK_in_expression_element17250 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PERCENT_ROWCOUNT_VK_in_expression_element17252 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PERCENT_ISOPEN_VK_in_expression_element17254 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_cursor_name_in_expression_element17257 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_OUTER_JOIN_SIGN_in_expression_element17284 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_expression_element17286 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_case_statement_in_expression_element17313 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_constant_in_expression_element17338 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_general_element_in_expression_element17363 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subquery_in_expression_element17388 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_subquery_in_in_elements17422 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_list_in_in_elements17447 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_AT_VK_in_datetime_element17482 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_datetime_element17484 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_LOCAL_VK_in_datetime_element17487 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_TIME_VK_in_datetime_element17489 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_datetime_element17491 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_DAY_VK_in_datetime_element17519 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SECOND_VK_in_datetime_element17521 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_datetime_element17523 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_YEAR_VK_in_datetime_element17551 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_MONTH_VK_in_datetime_element17553 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_datetime_element17555 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MODEL_EXPRESSION_in_model_expression17591 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_element_in_model_expression17593 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0C00010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_model_expression_element_in_model_expression17595 = new BitSet(new long[]{0x0000000000000008L,0x0000008000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0C00010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ANY_in_model_expression_element17631 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_expression_in_model_expression_element17656 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FOR_SINGLE_COLUMN_in_model_expression_element17682 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_model_expression_element17684 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000020000042L,0x0000000000000000L,0x0200000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_for_single_column_element_in_model_expression_element17686 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000800L});
	public static final BitSet FOLLOW_for_like_part_in_model_expression_element17688 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FOR_MULTI_COLUMN_in_model_expression_element17716 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_column_name_in_model_expression_element17718 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000040L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_IN_in_model_expression_element17722 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_subquery_in_model_expression_element17725 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_list_in_model_expression_element17727 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_IN_in_for_single_column_element17766 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_list_in_for_single_column_element17768 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_FROM_in_for_single_column_element17795 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_for_single_column_element17797 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_TO_in_for_single_column_element17825 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_for_single_column_element17827 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_INCREMENT_VK_in_for_single_column_element17856 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_DECREMENT_VK_in_for_single_column_element17858 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_for_single_column_element17861 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_LIKE_in_for_like_part17898 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_for_like_part17900 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SIMPLE_CASE_in_case_statement17936 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_case_statement17938 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0100000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_case_statement17941 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_case_when_part_in_case_statement17943 = new BitSet(new long[]{0x0000000000000008L,0x0400000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_case_else_part_in_case_statement17946 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SEARCHED_CASE_in_case_statement17976 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_label_name_in_case_statement17978 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0100000000000000L});
	public static final BitSet FOLLOW_case_when_part_in_case_statement17981 = new BitSet(new long[]{0x0000000000000008L,0x0400000000000000L,0x0000001000000000L});
	public static final BitSet FOLLOW_case_else_part_in_case_statement17984 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WHEN_in_case_when_part18024 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_case_when_part18026 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000100000000L});
	public static final BitSet FOLLOW_seq_of_statements_in_case_when_part18029 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_case_when_part18031 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ELSE_in_case_else_part18068 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_seq_of_statements_in_case_else_part18071 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_case_else_part18073 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FUNCTION_ENABLING_OVER_in_standard_function18111 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_function_argument_in_standard_function18113 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_over_clause_in_standard_function18115 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FUNCTION_ENABLING_USING_in_standard_function18143 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_function_argument_in_standard_function18145 = new BitSet(new long[]{0x0800000000000008L});
	public static final BitSet FOLLOW_using_clause_in_standard_function18147 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COUNT_VK_in_standard_function18175 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ASTERISK_in_standard_function18179 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_expression_in_standard_function18183 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_over_clause_in_standard_function18187 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CAST_VK_in_standard_function18216 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_XMLCAST_VK_in_standard_function18218 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_subquery_in_standard_function18222 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_expression_in_standard_function18224 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_standard_function18227 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CHR_VK_in_standard_function18254 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18256 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L});
	public static final BitSet FOLLOW_NCHAR_CS_VK_in_standard_function18258 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COLLECT_VK_in_standard_function18285 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DISTINCT_in_standard_function18288 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_UNIQUE_in_standard_function18290 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
	public static final BitSet FOLLOW_column_name_in_standard_function18294 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_collect_order_by_part_in_standard_function18296 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FUNCTION_ENABLING_WITHIN_OR_OVER_in_standard_function18324 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_function_argument_in_standard_function18326 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_within_clause_in_standard_function18329 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_over_clause_in_standard_function18331 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
	public static final BitSet FOLLOW_DECOMPOSE_VK_in_standard_function18361 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18363 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000800000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_CANONICAL_VK_in_standard_function18366 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COMPATIBILITY_VK_in_standard_function18368 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXTRACT_VK_in_standard_function18398 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_REGULAR_ID_in_standard_function18400 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function18402 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_FIRST_VALUE_VK_in_standard_function18430 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_LAST_VALUE_VK_in_standard_function18432 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18435 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200004L});
	public static final BitSet FOLLOW_NULLS_VK_in_standard_function18437 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_over_clause_in_standard_function18440 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PREDICTION_FUNCTION_in_standard_function18468 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18470 = new BitSet(new long[]{0x0800000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_cost_matrix_clause_in_standard_function18473 = new BitSet(new long[]{0x0800000000000008L});
	public static final BitSet FOLLOW_using_clause_in_standard_function18476 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_TRANSLATE_VK_in_standard_function18504 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18506 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000200000000400L});
	public static final BitSet FOLLOW_CHAR_CS_VK_in_standard_function18509 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_NCHAR_CS_VK_in_standard_function18511 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function18515 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_TREAT_VK_in_standard_function18543 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18545 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_REF_VK_in_standard_function18547 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_type_spec_in_standard_function18550 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_TRIM_VK_in_standard_function18577 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_LEADING_VK_in_standard_function18580 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_TRAILING_VK_in_standard_function18582 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_BOTH_VK_in_standard_function18584 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function18588 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function18590 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLAGG_VK_in_standard_function18620 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18622 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_order_by_clause_in_standard_function18624 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLCOLATTVAL_VK_in_standard_function18653 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_XMLFOREST_VK_in_standard_function18655 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_xml_multiuse_expression_element_in_standard_function18658 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_XMLEXISTS_VK_in_standard_function18686 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18688 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_xml_passing_clause_in_standard_function18690 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLPARSE_VK_in_standard_function18718 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_DOCUMENT_VK_in_standard_function18721 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CONTENT_VK_in_standard_function18723 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function18726 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_WELLFORMED_VK_in_standard_function18728 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLQUERY_VK_in_standard_function18756 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18758 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L});
	public static final BitSet FOLLOW_xml_passing_clause_in_standard_function18760 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_standard_function18763 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLROOT_VK_in_standard_function18791 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_standard_function18793 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_xml_param_version_part_in_standard_function18795 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000020000000L});
	public static final BitSet FOLLOW_xmlroot_param_standalone_part_in_standard_function18797 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLTABLE_VK_in_standard_function18825 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_xml_namespaces_clause_in_standard_function18827 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function18830 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000080000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
	public static final BitSet FOLLOW_xml_passing_clause_in_standard_function18832 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
	public static final BitSet FOLLOW_xml_table_column_in_standard_function18835 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0008000000000000L});
	public static final BitSet FOLLOW_XMLELEMENT_VK_in_standard_function18863 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ENTITYESCAPING_VK_in_standard_function18878 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010020000000L,0x0000000000000000L,0x0000008000000400L});
	public static final BitSet FOLLOW_NOENTITYESCAPING_VK_in_standard_function18880 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010020000000L,0x0000000000000000L,0x0000008000000400L});
	public static final BitSet FOLLOW_NAME_VK_in_standard_function18897 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_EVALNAME_VK_in_standard_function18899 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function18903 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L});
	public static final BitSet FOLLOW_xml_attributes_clause_in_standard_function18917 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function18921 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0200000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_alias_in_standard_function18923 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_XMLPI_VK_in_standard_function18962 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_NAME_VK_in_standard_function18985 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0040000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_char_set_name_in_standard_function18987 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_standard_function18990 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_EVALNAME_VK_in_standard_function19013 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function19015 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function19051 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLSERIALIZE_VK_in_standard_function19088 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_DOCUMENT_VK_in_standard_function19107 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_CONTENT_VK_in_standard_function19109 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_standard_function19128 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000004000000L,0x0000000100200100L,0x0000020000000000L,0x0000000000000002L,0x0000000000000000L,0x0000000000001000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_type_spec_in_standard_function19130 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L,0x0000000000200100L,0x0000000000000000L,0x0000000000000002L,0x0000000000000000L,0x0000000000001000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_xmlserialize_param_enconding_part_in_standard_function19149 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200100L,0x0000000000000000L,0x0000000000000002L,0x0000000000000000L,0x0000000000001000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_xml_param_version_part_in_standard_function19168 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200100L,0x0000000000000000L,0x0000000000000002L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_xmlserialize_param_ident_part_in_standard_function19187 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
	public static final BitSet FOLLOW_HIDE_VK_in_standard_function19208 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_SHOW_VK_in_standard_function19210 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
	public static final BitSet FOLLOW_DEFAULTS_VK_in_standard_function19213 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_OVER_VK_in_over_clause19260 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_query_partition_clause_in_over_clause19262 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000040000L});
	public static final BitSet FOLLOW_order_by_clause_in_over_clause19266 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000080000001000L});
	public static final BitSet FOLLOW_windowing_clause_in_over_clause19268 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROWS_VK_in_windowing_clause19308 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_RANGE_VK_in_windowing_clause19310 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_BETWEEN_in_windowing_clause19331 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_windowing_elements_in_windowing_clause19333 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0010000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_windowing_elements_in_windowing_clause19335 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_windowing_elements_in_windowing_clause19355 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0010000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
	public static final BitSet FOLLOW_UNBOUNDED_VK_in_windowing_elements19415 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PRECEDING_VK_in_windowing_elements19417 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CURRENT_VK_in_windowing_elements19444 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ROW_VK_in_windowing_elements19446 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PRECEDING_VK_in_windowing_elements19474 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_FOLLOWING_VK_in_windowing_elements19476 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_windowing_elements19479 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PLSQL_NON_RESERVED_USING_in_using_clause19515 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_using_element_in_using_clause19517 = new BitSet(new long[]{0x0000000000000108L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_ELEMENT_in_using_element19554 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_SQL92_RESERVED_IN_in_using_element19556 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L,0x0000000000080000L});
	public static final BitSet FOLLOW_OUT_VK_in_using_element19559 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_using_element19562 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_alias_in_using_element19564 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ASTERISK_in_using_element19591 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_ORDER_in_collect_order_by_part19626 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_collect_order_by_part19628 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_WITHIN_VK_in_within_clause19664 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_order_by_clause_in_within_clause19666 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COST_VK_in_cost_matrix_clause19702 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PLSQL_NON_RESERVED_MODEL_in_cost_matrix_clause19721 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_AUTO_VK_in_cost_matrix_clause19723 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_cost_class_name_in_cost_matrix_clause19743 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L,0x0000020000000000L});
	public static final BitSet FOLLOW_expression_list_in_cost_matrix_clause19746 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PASSING_VK_in_xml_passing_clause19805 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_VALUE_VK_in_xml_passing_clause19807 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_xml_passing_clause19810 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0200000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_alias_in_xml_passing_clause19812 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_xml_passing_clause19816 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0200000000000000L});
	public static final BitSet FOLLOW_alias_in_xml_passing_clause19818 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XMLATTRIBUTES_VK_in_xml_attributes_clause19857 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ENTITYESCAPING_VK_in_xml_attributes_clause19872 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L,0x0000000000000000L,0x0002000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_NOENTITYESCAPING_VK_in_xml_attributes_clause19874 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L,0x0000000000000000L,0x0002000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_SCHEMACHECK_VK_in_xml_attributes_clause19891 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_NOSCHEMACHECK_VK_in_xml_attributes_clause19893 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_xml_multiuse_expression_element_in_xml_attributes_clause19909 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
	public static final BitSet FOLLOW_XMLNAMESPACES_VK_in_xml_namespaces_clause19955 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_xml_namespaces_clause19970 = new BitSet(new long[]{0x0000000000000008L,0x0020000000000000L,0x0200000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_alias_in_xml_namespaces_clause19972 = new BitSet(new long[]{0x0000000000000008L,0x0020000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_xml_general_default_part_in_xml_namespaces_clause19977 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XML_COLUMN_in_xml_table_column20023 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_xml_column_name_in_xml_table_column20025 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000200000000000L,0x0000000000000000L,0x0000000100000000L,0x0000020000000000L,0x0000000000020000L});
	public static final BitSet FOLLOW_ORDINALITY_VK_in_xml_table_column20028 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_type_spec_in_xml_table_column20030 = new BitSet(new long[]{0x0000000000000008L,0x0020000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_xml_table_column20032 = new BitSet(new long[]{0x0000000000000008L,0x0020000000000000L});
	public static final BitSet FOLLOW_xml_general_default_part_in_xml_table_column20035 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DEFAULT_in_xml_general_default_part20074 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_xml_general_default_part20076 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XML_ELEMENT_in_xml_multiuse_expression_element20112 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_xml_multiuse_expression_element20114 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0004000000000000L});
	public static final BitSet FOLLOW_xml_alias_in_xml_multiuse_expression_element20116 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XML_ALIAS_in_xml_alias20153 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ID_in_xml_alias20155 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_XML_ALIAS_in_xml_alias20182 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_EVALNAME_VK_in_xml_alias20185 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_xml_alias20187 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_VERSION_VK_in_xml_param_version_part20224 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_NO_VK_in_xml_param_version_part20227 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_VALUE_VK_in_xml_param_version_part20229 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_expression_in_xml_param_version_part20231 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_STANDALONE_VK_in_xmlroot_param_standalone_part20268 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_YES_VK_in_xmlroot_param_standalone_part20271 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NO_VK_in_xmlroot_param_standalone_part20273 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
	public static final BitSet FOLLOW_VALUE_VK_in_xmlroot_param_standalone_part20275 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ENCODING_VK_in_xmlserialize_param_enconding_part20313 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_xmlserialize_param_enconding_part20315 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NO_VK_in_xmlserialize_param_ident_part20350 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000200000L});
	public static final BitSet FOLLOW_INDENT_VK_in_xmlserialize_param_ident_part20352 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INDENT_VK_in_xmlserialize_param_ident_part20378 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_xmlserialize_param_ident_part20380 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SUBPARTITION_VK_in_partition_extension_clause20422 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_PARTITION_VK_in_partition_extension_clause20424 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_list_in_partition_extension_clause20427 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ALIAS_in_alias20463 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_alias20465 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_alias20468 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_WHERE_in_where_clause20504 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_where_clause20506 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SQL92_RESERVED_INTO_in_into_clause20542 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_general_element_in_into_clause20544 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0004000000000020L,0x0000000000000000L,0x0000000000000000L,0x0000000000001400L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_BULK_VK_in_into_clause20573 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_general_element_in_into_clause20575 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0004000000000020L,0x0000000000000000L,0x0000000000000000L,0x0000000000001400L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_XML_COLUMN_NAME_in_xml_column_name20617 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_xml_column_name20619 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_xml_column_name20622 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COST_CLASS_NAME_in_cost_class_name20658 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_cost_class_name20660 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_cost_class_name20663 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ATTRIBUTE_NAME_in_attribute_name20699 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_attribute_name20701 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_attribute_name20704 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SAVEPOINT_NAME_in_savepoint_name20740 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_savepoint_name20742 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_savepoint_name20745 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROLLBACK_SEGMENT_NAME_in_rollback_segment_name20781 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_rollback_segment_name20783 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_rollback_segment_name20786 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_TABLE_VAR_NAME_in_table_var_name20823 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_table_var_name20825 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_table_var_name20828 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_SCHEMA_NAME_in_schema_name20864 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_schema_name20866 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_schema_name20869 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ROUTINE_NAME_in_routine_name20905 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_routine_name20907 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_routine_name20910 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L,0x0000000000000080L});
	public static final BitSet FOLLOW_link_name_in_routine_name20913 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PACKAGE_NAME_in_package_name20950 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_package_name20952 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_package_name20955 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_IMPLEMENTATION_TYPE_NAME_in_implementation_type_name20992 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_implementation_type_name20994 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_implementation_type_name20997 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_PARAMETER_NAME_in_parameter_name21034 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_parameter_name21036 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_parameter_name21039 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_REFERENCE_MODEL_NAME_in_reference_model_name21075 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_reference_model_name21077 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_reference_model_name21080 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_MAIN_MODEL_NAME_in_main_model_name21116 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_main_model_name21118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_main_model_name21121 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_QUERY_NAME_in_query_name21157 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_query_name21159 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_query_name21162 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CONSTRAINT_NAME_in_constraint_name21198 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_constraint_name21200 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_constraint_name21203 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L,0x0000000000000080L});
	public static final BitSet FOLLOW_link_name_in_constraint_name21206 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_LABEL_NAME_in_label_name21243 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ID_in_label_name21245 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_TYPE_NAME_in_type_name21281 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ID_in_type_name21283 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_SEQUENCE_NAME_in_sequence_name21320 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ID_in_sequence_name21322 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_EXCEPTION_NAME_in_exception_name21359 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_exception_name21361 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_exception_name21364 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_FUNCTION_NAME_in_function_name21401 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_function_name21403 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_function_name21406 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_PROCEDURE_NAME_in_procedure_name21443 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_procedure_name21445 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_procedure_name21448 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_TRIGGER_NAME_in_trigger_name21485 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_trigger_name21487 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_trigger_name21490 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_HOSTED_VARIABLE_NAME_in_variable_name21527 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_variable_name21529 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_variable_name21532 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_VARIABLE_NAME_in_variable_name21560 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_variable_name21562 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_variable_name21565 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_INDEX_NAME_in_index_name21602 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_index_name21604 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_index_name21607 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CURSOR_NAME_in_cursor_name21643 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_cursor_name21645 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_cursor_name21648 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_RECORD_NAME_in_record_name21684 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_record_name21686 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_record_name21689 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COLLECTION_NAME_in_collection_name21725 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_collection_name21727 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_collection_name21730 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_LINK_NAME_in_link_name21767 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_link_name21769 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_link_name21772 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_COLUMN_NAME_in_column_name21808 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_column_name21810 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_column_name21813 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_TABLEVIEW_NAME_in_tableview_name21850 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_tableview_name21852 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_tableview_name21855 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L,0x0000000000000080L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_link_name_in_tableview_name21858 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000040000000L,0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
	public static final BitSet FOLLOW_partition_extension_clause_in_tableview_name21861 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CHAR_SET_NAME_in_char_set_name21898 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_ID_in_char_set_name21900 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ARGUMENTS_in_function_argument21941 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_argument_in_function_argument21943 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_ARGUMENT_in_argument21980 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_expression_in_argument21982 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000010000000L});
	public static final BitSet FOLLOW_parameter_name_in_argument21984 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_CUSTOM_TYPE_in_type_spec22022 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_type_name_in_type_spec22024 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000006000000000L,0x0000000000400000L});
	public static final BitSet FOLLOW_REF_VK_in_type_spec22026 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000006000000000L});
	public static final BitSet FOLLOW_PERCENT_ROWTYPE_VK_in_type_spec22030 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_PERCENT_TYPE_VK_in_type_spec22032 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_NATIVE_DATATYPE_in_type_spec22061 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_native_datatype_element_in_type_spec22063 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_type_precision_in_type_spec22065 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_TIME_VK_in_type_spec22069 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_LOCAL_VK_in_type_spec22071 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_INTERVAL_DATATYPE_in_type_spec22101 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_YEAR_VK_in_type_spec22104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_DAY_VK_in_type_spec22106 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000002000000000L,0x0000000000000000L,0x0080000000000000L});
	public static final BitSet FOLLOW_MONTH_VK_in_type_spec22110 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_SECOND_VK_in_type_spec22112 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_expression_in_type_spec22115 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L,0x0000000000000000L,0x0000000000000400L});
	public static final BitSet FOLLOW_PRECISION_in_type_precision22152 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_constant_in_type_precision22154 = new BitSet(new long[]{0x0000200008008048L,0x4020000000000000L,0x0000080040002000L,0x0200080000000000L,0x0008000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000008080000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L,0x1000000000000000L});
	public static final BitSet FOLLOW_constant_in_type_precision22156 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0200080000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_CHAR_VK_in_type_precision22160 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_BYTE_VK_in_type_precision22162 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x1000000000000000L});
	public static final BitSet FOLLOW_TIME_VK_in_type_precision22167 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
	public static final BitSet FOLLOW_LOCAL_VK_in_type_precision22169 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_BINARY_INTEGER_VK_in_native_datatype_element22207 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_PLS_INTEGER_VK_in_native_datatype_element22232 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NATURAL_VK_in_native_datatype_element22257 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_BINARY_FLOAT_VK_in_native_datatype_element22282 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_BINARY_DOUBLE_VK_in_native_datatype_element22307 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NATURALN_VK_in_native_datatype_element22332 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_POSITIVE_VK_in_native_datatype_element22357 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_POSITIVEN_VK_in_native_datatype_element22382 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SIGNTYPE_VK_in_native_datatype_element22407 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SIMPLE_INTEGER_VK_in_native_datatype_element22432 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NVARCHAR2_VK_in_native_datatype_element22457 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DEC_VK_in_native_datatype_element22482 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INTEGER_VK_in_native_datatype_element22507 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_INT_VK_in_native_datatype_element22532 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NUMERIC_VK_in_native_datatype_element22557 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SMALLINT_VK_in_native_datatype_element22582 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NUMBER_VK_in_native_datatype_element22607 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DECIMAL_VK_in_native_datatype_element22632 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DOUBLE_VK_in_native_datatype_element22658 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
	public static final BitSet FOLLOW_PRECISION_VK_in_native_datatype_element22660 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_FLOAT_VK_in_native_datatype_element22686 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_REAL_VK_in_native_datatype_element22711 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NCHAR_VK_in_native_datatype_element22736 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_LONG_VK_in_native_datatype_element22761 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
	public static final BitSet FOLLOW_RAW_VK_in_native_datatype_element22763 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHAR_VK_in_native_datatype_element22789 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHARACTER_VK_in_native_datatype_element22816 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VARCHAR2_VK_in_native_datatype_element22842 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_VARCHAR_VK_in_native_datatype_element22867 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_STRING_VK_in_native_datatype_element22892 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_RAW_VK_in_native_datatype_element22917 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_BOOLEAN_VK_in_native_datatype_element22942 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DATE_VK_in_native_datatype_element22967 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_ROWID_VK_in_native_datatype_element22992 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_UROWID_VK_in_native_datatype_element23017 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_YEAR_VK_in_native_datatype_element23042 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MONTH_VK_in_native_datatype_element23067 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DAY_VK_in_native_datatype_element23092 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_HOUR_VK_in_native_datatype_element23117 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MINUTE_VK_in_native_datatype_element23142 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SECOND_VK_in_native_datatype_element23167 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIMEZONE_HOUR_VK_in_native_datatype_element23192 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIMEZONE_MINUTE_VK_in_native_datatype_element23217 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIMEZONE_REGION_VK_in_native_datatype_element23242 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIMEZONE_ABBR_VK_in_native_datatype_element23267 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIMESTAMP_VK_in_native_datatype_element23292 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIMESTAMP_UNCONSTRAINED_VK_in_native_datatype_element23317 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIMESTAMP_TZ_UNCONSTRAINED_VK_in_native_datatype_element23342 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_TIMESTAMP_LTZ_UNCONSTRAINED_VK_in_native_datatype_element23367 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_YMINTERVAL_UNCONSTRAINED_VK_in_native_datatype_element23392 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DSINTERVAL_UNCONSTRAINED_VK_in_native_datatype_element23417 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_BFILE_VK_in_native_datatype_element23442 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_BLOB_VK_in_native_datatype_element23467 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CLOB_VK_in_native_datatype_element23492 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_NCLOB_VK_in_native_datatype_element23517 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MLSLABEL_VK_in_native_datatype_element23542 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CASCATED_ELEMENT_in_general_element23577 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_general_element_in_general_element23579 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0004000000000020L,0x0000000000000000L,0x0000000000000000L,0x0000000000001400L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
	public static final BitSet FOLLOW_HOSTED_VARIABLE_ROUTINE_CALL_in_general_element23607 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_routine_name_in_general_element23609 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_function_argument_in_general_element23611 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_HOSTED_VARIABLE_in_general_element23638 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_general_element23640 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_general_element23643 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ROUTINE_CALL_in_general_element23671 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_routine_name_in_general_element23673 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
	public static final BitSet FOLLOW_function_argument_in_general_element23675 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_ANY_ELEMENT_in_general_element23702 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_char_set_name_in_general_element23704 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_general_element23707 = new BitSet(new long[]{0x0000000000000008L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_UNSIGNED_INTEGER_in_constant23747 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MINUS_SIGN_in_constant23773 = new BitSet(new long[]{0x0000000000000004L});
	public static final BitSet FOLLOW_UNSIGNED_INTEGER_in_constant23775 = new BitSet(new long[]{0x0000000000000008L});
	public static final BitSet FOLLOW_EXACT_NUM_LIT_in_constant23801 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_APPROXIMATE_NUM_LIT_in_constant23826 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_CHAR_STRING_in_constant23851 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_NULL_in_constant23876 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_TRUE_in_constant23901 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_FALSE_in_constant23926 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_DBTIMEZONE_VK_in_constant23951 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SESSIONTIMEZONE_VK_in_constant23977 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MINVALUE_VK_in_constant24002 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_MAXVALUE_VK_in_constant24027 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_SQL92_RESERVED_DEFAULT_in_constant24052 = new BitSet(new long[]{0x0000000000000002L});
	public static final BitSet FOLLOW_char_set_name_in_id24088 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
	public static final BitSet FOLLOW_ID_in_id24091 = new BitSet(new long[]{0x0000000000000002L});
}
