group PLPGSQLPrinterTemplates;

create_function_body(
  is_create, is_replace, name_parts, arguments,
  return_type, add_clauses, is_pipelined, block
) ::= <<
<if (is_create)>create<if (is_replace)> or replace<endif> <endif>function <name_parts; separator="."><if (arguments)>
  (<arguments; separator=",\n">)<endif>
returns <return_type>
<add_clauses; separator=" ">
<if (is_pipelined)>pipelined<endif>

as $$
<block>;
$$
language plpgsql;
>>


case_statement_simple(expression, case_when_parts, case_else_part) ::= <<
case <expression>
  <case_when_parts; separator="\n"><if (case_else_part)>
  
  <case_else_part><endif>
end case
>>

case_statement_searched(case_when_parts, case_else_part) ::= <<
case
  <case_when_parts; separator="\n"><if (case_else_part)>
  
  <case_else_part><endif>
end case
>>

perform_statement(inner) ::= "perform <inner>"